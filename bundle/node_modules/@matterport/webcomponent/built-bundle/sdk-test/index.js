/*! For license information please see index.js.LICENSE.txt */
(()=>{"use strict";var e,t,n={551:(e,t,n)=>{var r=n(540),l=n(982);function a(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,o={};function s(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(o[e]=t,e=0;e<t.length;e++)i.add(t[e])}var u=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=Object.prototype.hasOwnProperty,p=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,f={},b={};function h(e,t,n,r,l,a,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=l,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=a,this.removeEmptyString=i}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new h(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new h(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new h(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new h(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new h(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new h(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new h(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new h(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new h(e,5,!1,e.toLowerCase(),null,!1,!1)}));var m=/[\-:]([a-z])/g;function v(e){return e[1].toUpperCase()}function y(e,t,n,r){var l=g.hasOwnProperty(t)?g[t]:null;(null!==l?0!==l.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,l,r)&&(n=null),r||null===l?function(e){return!!d.call(b,e)||!d.call(f,e)&&(p.test(e)?b[e]=!0:(f[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):l.mustUseProperty?e[l.propertyName]=null===n?3!==l.type&&"":n:(t=l.attributeName,r=l.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(l=l.type)||4===l&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(m,v);g[t]=new h(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(m,v);g[t]=new h(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(m,v);g[t]=new h(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new h(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new h("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new h(e,1,!1,e.toLowerCase(),null,!0,!0)}));var x=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,_=Symbol.for("react.element"),j=Symbol.for("react.portal"),k=Symbol.for("react.fragment"),w=Symbol.for("react.strict_mode"),E=Symbol.for("react.profiler"),T=Symbol.for("react.provider"),O=Symbol.for("react.context"),S=Symbol.for("react.forward_ref"),C=Symbol.for("react.suspense"),N=Symbol.for("react.suspense_list"),I=Symbol.for("react.memo"),R=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var P=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var A=Symbol.iterator;function L(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=A&&e[A]||e["@@iterator"])?e:null}var D,F=Object.assign;function M(e){if(void 0===D)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);D=t&&t[1]||""}return"\n"+D+e}var z=!1;function U(e,t){if(!e||z)return"";z=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(t){if(t&&r&&"string"==typeof t.stack){for(var l=t.stack.split("\n"),a=r.stack.split("\n"),i=l.length-1,o=a.length-1;1<=i&&0<=o&&l[i]!==a[o];)o--;for(;1<=i&&0<=o;i--,o--)if(l[i]!==a[o]){if(1!==i||1!==o)do{if(i--,0>--o||l[i]!==a[o]){var s="\n"+l[i].replace(" at new "," at ");return e.displayName&&s.includes("<anonymous>")&&(s=s.replace("<anonymous>",e.displayName)),s}}while(1<=i&&0<=o);break}}}finally{z=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?M(e):""}function B(e){switch(e.tag){case 5:return M(e.type);case 16:return M("Lazy");case 13:return M("Suspense");case 19:return M("SuspenseList");case 0:case 2:case 15:return e=U(e.type,!1);case 11:return e=U(e.type.render,!1);case 1:return e=U(e.type,!0);default:return""}}function V(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case k:return"Fragment";case j:return"Portal";case E:return"Profiler";case w:return"StrictMode";case C:return"Suspense";case N:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case O:return(e.displayName||"Context")+".Consumer";case T:return(e._context.displayName||"Context")+".Provider";case S:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case I:return null!==(t=e.displayName||null)?t:V(e.type)||"Memo";case R:t=e._payload,e=e._init;try{return V(e(t))}catch(e){}}return null}function H(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return V(t);case 8:return t===w?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function W(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function K(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function q(e){e._valueTracker||(e._valueTracker=function(e){var t=K(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var l=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return l.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function $(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=K(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function G(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Q(e,t){var n=t.checked;return F({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Y(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=W(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function X(e,t){null!=(t=t.checked)&&y(e,"checked",t,!1)}function J(e,t){X(e,t);var n=W(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,W(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Z(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&G(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,r){if(e=e.options,t){t={};for(var l=0;l<n.length;l++)t["$"+n[l]]=!0;for(n=0;n<e.length;n++)l=t.hasOwnProperty("$"+e[n].value),e[n].selected!==l&&(e[n].selected=l),l&&r&&(e[n].defaultSelected=!0)}else{for(n=""+W(n),t=null,l=0;l<e.length;l++){if(e[l].value===n)return e[l].selected=!0,void(r&&(e[l].defaultSelected=!0));null!==t||e[l].disabled||(t=e[l])}null!==t&&(t.selected=!0)}}function re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(a(91));return F({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function le(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(a(92));if(te(n)){if(1<n.length)throw Error(a(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:W(n)}}function ae(e,t){var n=W(t.value),r=W(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ie(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function oe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function se(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?oe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ce,ue,de=(ue=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return ue(e,t)}))}:ue);function pe(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var fe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},be=["Webkit","ms","Moz","O"];function he(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||fe.hasOwnProperty(e)&&fe[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),l=he(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,l):e[n]=l}}Object.keys(fe).forEach((function(e){be.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),fe[t]=fe[e]}))}));var me=F({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ve(e,t){if(t){if(me[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(a(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(a(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(a(62))}}function ye(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var xe=null;function _e(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var je=null,ke=null,we=null;function Ee(e){if(e=gl(e)){if("function"!=typeof je)throw Error(a(280));var t=e.stateNode;t&&(t=vl(t),je(e.stateNode,e.type,t))}}function Te(e){ke?we?we.push(e):we=[e]:ke=e}function Oe(){if(ke){var e=ke,t=we;if(we=ke=null,Ee(e),t)for(e=0;e<t.length;e++)Ee(t[e])}}function Se(e,t){return e(t)}function Ce(){}var Ne=!1;function Ie(e,t,n){if(Ne)return e(t,n);Ne=!0;try{return Se(e,t,n)}finally{Ne=!1,(null!==ke||null!==we)&&(Ce(),Oe())}}function Re(e,t){var n=e.stateNode;if(null===n)return null;var r=vl(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(a(231,t,typeof n));return n}var Pe=!1;if(u)try{var Ae={};Object.defineProperty(Ae,"passive",{get:function(){Pe=!0}}),window.addEventListener("test",Ae,Ae),window.removeEventListener("test",Ae,Ae)}catch(ue){Pe=!1}function Le(e,t,n,r,l,a,i,o,s){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var De=!1,Fe=null,Me=!1,ze=null,Ue={onError:function(e){De=!0,Fe=e}};function Be(e,t,n,r,l,a,i,o,s){De=!1,Fe=null,Le.apply(Ue,arguments)}function Ve(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{!!(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function He(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function We(e){if(Ve(e)!==e)throw Error(a(188))}function Ke(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ve(e)))throw Error(a(188));return t!==e?null:e}for(var n=e,r=t;;){var l=n.return;if(null===l)break;var i=l.alternate;if(null===i){if(null!==(r=l.return)){n=r;continue}break}if(l.child===i.child){for(i=l.child;i;){if(i===n)return We(l),e;if(i===r)return We(l),t;i=i.sibling}throw Error(a(188))}if(n.return!==r.return)n=l,r=i;else{for(var o=!1,s=l.child;s;){if(s===n){o=!0,n=l,r=i;break}if(s===r){o=!0,r=l,n=i;break}s=s.sibling}if(!o){for(s=i.child;s;){if(s===n){o=!0,n=i,r=l;break}if(s===r){o=!0,r=i,n=l;break}s=s.sibling}if(!o)throw Error(a(189))}}if(n.alternate!==r)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?e:t}(e))?qe(e):null}function qe(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=qe(e);if(null!==t)return t;e=e.sibling}return null}var $e=l.unstable_scheduleCallback,Ge=l.unstable_cancelCallback,Qe=l.unstable_shouldYield,Ye=l.unstable_requestPaint,Xe=l.unstable_now,Je=l.unstable_getCurrentPriorityLevel,Ze=l.unstable_ImmediatePriority,et=l.unstable_UserBlockingPriority,tt=l.unstable_NormalPriority,nt=l.unstable_LowPriority,rt=l.unstable_IdlePriority,lt=null,at=null;var it=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(ot(e)/st|0)|0},ot=Math.log,st=Math.LN2;var ct=64,ut=4194304;function dt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function pt(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,l=e.suspendedLanes,a=e.pingedLanes,i=268435455&n;if(0!==i){var o=i&~l;0!==o?r=dt(o):0!==(a&=i)&&(r=dt(a))}else 0!==(i=n&~l)?r=dt(i):0!==a&&(r=dt(a));if(0===r)return 0;if(0!==t&&t!==r&&!(t&l)&&((l=r&-r)>=(a=t&-t)||16===l&&4194240&a))return t;if(4&r&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)l=1<<(n=31-it(t)),r|=e[n],t&=~l;return r}function ft(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function bt(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function ht(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function gt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-it(t)]=n}function mt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-it(n),l=1<<r;l&t|e[r]&t&&(e[r]|=t),n&=~l}}var vt=0;function yt(e){return 1<(e&=-e)?4<e?268435455&e?16:536870912:4:1}var xt,_t,jt,kt,wt,Et=!1,Tt=[],Ot=null,St=null,Ct=null,Nt=new Map,It=new Map,Rt=[],Pt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function At(e,t){switch(e){case"focusin":case"focusout":Ot=null;break;case"dragenter":case"dragleave":St=null;break;case"mouseover":case"mouseout":Ct=null;break;case"pointerover":case"pointerout":Nt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":It.delete(t.pointerId)}}function Lt(e,t,n,r,l,a){return null===e||e.nativeEvent!==a?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:a,targetContainers:[l]},null!==t&&(null!==(t=gl(t))&&_t(t)),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==l&&-1===t.indexOf(l)&&t.push(l),e)}function Dt(e){var t=hl(e.target);if(null!==t){var n=Ve(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=He(n)))return e.blockedOn=t,void wt(e.priority,(function(){jt(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Ft(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=$t(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=gl(n))&&_t(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);xe=r,n.target.dispatchEvent(r),xe=null,t.shift()}return!0}function Mt(e,t,n){Ft(e)&&n.delete(t)}function zt(){Et=!1,null!==Ot&&Ft(Ot)&&(Ot=null),null!==St&&Ft(St)&&(St=null),null!==Ct&&Ft(Ct)&&(Ct=null),Nt.forEach(Mt),It.forEach(Mt)}function Ut(e,t){e.blockedOn===t&&(e.blockedOn=null,Et||(Et=!0,l.unstable_scheduleCallback(l.unstable_NormalPriority,zt)))}function Bt(e){function t(t){return Ut(t,e)}if(0<Tt.length){Ut(Tt[0],e);for(var n=1;n<Tt.length;n++){var r=Tt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Ot&&Ut(Ot,e),null!==St&&Ut(St,e),null!==Ct&&Ut(Ct,e),Nt.forEach(t),It.forEach(t),n=0;n<Rt.length;n++)(r=Rt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Rt.length&&null===(n=Rt[0]).blockedOn;)Dt(n),null===n.blockedOn&&Rt.shift()}var Vt=x.ReactCurrentBatchConfig;function Ht(e,t,n,r){var l=vt,a=Vt.transition;Vt.transition=null;try{vt=1,Kt(e,t,n,r)}finally{vt=l,Vt.transition=a}}function Wt(e,t,n,r){var l=vt,a=Vt.transition;Vt.transition=null;try{vt=4,Kt(e,t,n,r)}finally{vt=l,Vt.transition=a}}function Kt(e,t,n,r){var l=$t(e,t,n,r);if(null===l)Vr(e,t,r,qt,n),At(e,r);else if(function(e,t,n,r,l){switch(t){case"focusin":return Ot=Lt(Ot,e,t,n,r,l),!0;case"dragenter":return St=Lt(St,e,t,n,r,l),!0;case"mouseover":return Ct=Lt(Ct,e,t,n,r,l),!0;case"pointerover":var a=l.pointerId;return Nt.set(a,Lt(Nt.get(a)||null,e,t,n,r,l)),!0;case"gotpointercapture":return a=l.pointerId,It.set(a,Lt(It.get(a)||null,e,t,n,r,l)),!0}return!1}(l,e,t,n,r))r.stopPropagation();else if(At(e,r),4&t&&-1<Pt.indexOf(e)){for(;null!==l;){var a=gl(l);if(null!==a&&xt(a),null===(a=$t(e,t,n,r))&&Vr(e,t,r,qt,n),a===l)break;l=a}null!==l&&r.stopPropagation()}else Vr(e,t,r,null,n)}var qt=null;function $t(e,t,n,r){if(qt=null,null!==(e=hl(e=_e(r))))if(null===(t=Ve(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=He(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return qt=e,null}function Gt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Je()){case Ze:return 1;case et:return 4;case tt:case nt:return 16;case rt:return 536870912;default:return 16}default:return 16}}var Qt=null,Yt=null,Xt=null;function Jt(){if(Xt)return Xt;var e,t,n=Yt,r=n.length,l="value"in Qt?Qt.value:Qt.textContent,a=l.length;for(e=0;e<r&&n[e]===l[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===l[a-t];t++);return Xt=l.slice(e,1<t?1-t:void 0)}function Zt(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function en(){return!0}function tn(){return!1}function nn(e){function t(t,n,r,l,a){for(var i in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=l,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(l):l[i]);return this.isDefaultPrevented=(null!=l.defaultPrevented?l.defaultPrevented:!1===l.returnValue)?en:tn,this.isPropagationStopped=tn,this}return F(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=en)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=en)},persist:function(){},isPersistent:en}),t}var rn,ln,an,on={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},sn=nn(on),cn=F({},on,{view:0,detail:0}),un=nn(cn),dn=F({},cn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:kn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==an&&(an&&"mousemove"===e.type?(rn=e.screenX-an.screenX,ln=e.screenY-an.screenY):ln=rn=0,an=e),rn)},movementY:function(e){return"movementY"in e?e.movementY:ln}}),pn=nn(dn),fn=nn(F({},dn,{dataTransfer:0})),bn=nn(F({},cn,{relatedTarget:0})),hn=nn(F({},on,{animationName:0,elapsedTime:0,pseudoElement:0})),gn=F({},on,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),mn=nn(gn),vn=nn(F({},on,{data:0})),yn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},xn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},_n={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function jn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=_n[e])&&!!t[e]}function kn(){return jn}var wn=F({},cn,{key:function(e){if(e.key){var t=yn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Zt(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?xn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:kn,charCode:function(e){return"keypress"===e.type?Zt(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Zt(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),En=nn(wn),Tn=nn(F({},dn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),On=nn(F({},cn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:kn})),Sn=nn(F({},on,{propertyName:0,elapsedTime:0,pseudoElement:0})),Cn=F({},dn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Nn=nn(Cn),In=[9,13,27,32],Rn=u&&"CompositionEvent"in window,Pn=null;u&&"documentMode"in document&&(Pn=document.documentMode);var An=u&&"TextEvent"in window&&!Pn,Ln=u&&(!Rn||Pn&&8<Pn&&11>=Pn),Dn=String.fromCharCode(32),Fn=!1;function Mn(e,t){switch(e){case"keyup":return-1!==In.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function zn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Un=!1;var Bn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Bn[e.type]:"textarea"===t}function Hn(e,t,n,r){Te(r),0<(t=Wr(t,"onChange")).length&&(n=new sn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Wn=null,Kn=null;function qn(e){Dr(e,0)}function $n(e){if($(ml(e)))return e}function Gn(e,t){if("change"===e)return t}var Qn=!1;if(u){var Yn;if(u){var Xn="oninput"in document;if(!Xn){var Jn=document.createElement("div");Jn.setAttribute("oninput","return;"),Xn="function"==typeof Jn.oninput}Yn=Xn}else Yn=!1;Qn=Yn&&(!document.documentMode||9<document.documentMode)}function Zn(){Wn&&(Wn.detachEvent("onpropertychange",er),Kn=Wn=null)}function er(e){if("value"===e.propertyName&&$n(Kn)){var t=[];Hn(t,Kn,e,_e(e)),Ie(qn,t)}}function tr(e,t,n){"focusin"===e?(Zn(),Kn=n,(Wn=t).attachEvent("onpropertychange",er)):"focusout"===e&&Zn()}function nr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return $n(Kn)}function rr(e,t){if("click"===e)return $n(t)}function lr(e,t){if("input"===e||"change"===e)return $n(t)}var ar="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function ir(e,t){if(ar(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var l=n[r];if(!d.call(t,l)||!ar(e[l],t[l]))return!1}return!0}function or(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function sr(e,t){var n,r=or(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=or(r)}}function cr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?cr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function ur(){for(var e=window,t=G();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=G((e=t.contentWindow).document)}return t}function dr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function pr(e){var t=ur(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&cr(n.ownerDocument.documentElement,n)){if(null!==r&&dr(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var l=n.textContent.length,a=Math.min(r.start,l);r=void 0===r.end?a:Math.min(r.end,l),!e.extend&&a>r&&(l=r,r=a,a=l),l=sr(n,a);var i=sr(n,r);l&&i&&(1!==e.rangeCount||e.anchorNode!==l.node||e.anchorOffset!==l.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(l.node,l.offset),e.removeAllRanges(),a>r?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var fr=u&&"documentMode"in document&&11>=document.documentMode,br=null,hr=null,gr=null,mr=!1;function vr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;mr||null==br||br!==G(r)||("selectionStart"in(r=br)&&dr(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},gr&&ir(gr,r)||(gr=r,0<(r=Wr(hr,"onSelect")).length&&(t=new sn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=br)))}function yr(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var xr={animationend:yr("Animation","AnimationEnd"),animationiteration:yr("Animation","AnimationIteration"),animationstart:yr("Animation","AnimationStart"),transitionend:yr("Transition","TransitionEnd")},_r={},jr={};function kr(e){if(_r[e])return _r[e];if(!xr[e])return e;var t,n=xr[e];for(t in n)if(n.hasOwnProperty(t)&&t in jr)return _r[e]=n[t];return e}u&&(jr=document.createElement("div").style,"AnimationEvent"in window||(delete xr.animationend.animation,delete xr.animationiteration.animation,delete xr.animationstart.animation),"TransitionEvent"in window||delete xr.transitionend.transition);var wr=kr("animationend"),Er=kr("animationiteration"),Tr=kr("animationstart"),Or=kr("transitionend"),Sr=new Map,Cr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Nr(e,t){Sr.set(e,t),s(t,[e])}for(var Ir=0;Ir<Cr.length;Ir++){var Rr=Cr[Ir];Nr(Rr.toLowerCase(),"on"+(Rr[0].toUpperCase()+Rr.slice(1)))}Nr(wr,"onAnimationEnd"),Nr(Er,"onAnimationIteration"),Nr(Tr,"onAnimationStart"),Nr("dblclick","onDoubleClick"),Nr("focusin","onFocus"),Nr("focusout","onBlur"),Nr(Or,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Pr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ar=new Set("cancel close invalid load scroll toggle".split(" ").concat(Pr));function Lr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,l,i,o,s,c){if(Be.apply(this,arguments),De){if(!De)throw Error(a(198));var u=Fe;De=!1,Fe=null,Me||(Me=!0,ze=u)}}(r,t,void 0,e),e.currentTarget=null}function Dr(e,t){t=!!(4&t);for(var n=0;n<e.length;n++){var r=e[n],l=r.event;r=r.listeners;e:{var a=void 0;if(t)for(var i=r.length-1;0<=i;i--){var o=r[i],s=o.instance,c=o.currentTarget;if(o=o.listener,s!==a&&l.isPropagationStopped())break e;Lr(l,o,c),a=s}else for(i=0;i<r.length;i++){if(s=(o=r[i]).instance,c=o.currentTarget,o=o.listener,s!==a&&l.isPropagationStopped())break e;Lr(l,o,c),a=s}}}if(Me)throw e=ze,Me=!1,ze=null,e}function Fr(e,t){var n=t[pl];void 0===n&&(n=t[pl]=new Set);var r=e+"__bubble";n.has(r)||(Br(t,e,2,!1),n.add(r))}function Mr(e,t,n){var r=0;t&&(r|=4),Br(n,e,r,t)}var zr="_reactListening"+Math.random().toString(36).slice(2);function Ur(e){if(!e[zr]){e[zr]=!0,i.forEach((function(t){"selectionchange"!==t&&(Ar.has(t)||Mr(t,!1,e),Mr(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[zr]||(t[zr]=!0,Mr("selectionchange",!1,t))}}function Br(e,t,n,r){switch(Gt(t)){case 1:var l=Ht;break;case 4:l=Wt;break;default:l=Kt}n=l.bind(null,t,n,e),l=void 0,!Pe||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(l=!0),r?void 0!==l?e.addEventListener(t,n,{capture:!0,passive:l}):e.addEventListener(t,n,!0):void 0!==l?e.addEventListener(t,n,{passive:l}):e.addEventListener(t,n,!1)}function Vr(e,t,n,r,l){var a=r;if(!(1&t||2&t||null===r))e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var o=r.stateNode.containerInfo;if(o===l||8===o.nodeType&&o.parentNode===l)break;if(4===i)for(i=r.return;null!==i;){var s=i.tag;if((3===s||4===s)&&((s=i.stateNode.containerInfo)===l||8===s.nodeType&&s.parentNode===l))return;i=i.return}for(;null!==o;){if(null===(i=hl(o)))return;if(5===(s=i.tag)||6===s){r=a=i;continue e}o=o.parentNode}}r=r.return}Ie((function(){var r=a,l=_e(n),i=[];e:{var o=Sr.get(e);if(void 0!==o){var s=sn,c=e;switch(e){case"keypress":if(0===Zt(n))break e;case"keydown":case"keyup":s=En;break;case"focusin":c="focus",s=bn;break;case"focusout":c="blur",s=bn;break;case"beforeblur":case"afterblur":s=bn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":s=pn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":s=fn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":s=On;break;case wr:case Er:case Tr:s=hn;break;case Or:s=Sn;break;case"scroll":s=un;break;case"wheel":s=Nn;break;case"copy":case"cut":case"paste":s=mn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":s=Tn}var u=!!(4&t),d=!u&&"scroll"===e,p=u?null!==o?o+"Capture":null:o;u=[];for(var f,b=r;null!==b;){var h=(f=b).stateNode;if(5===f.tag&&null!==h&&(f=h,null!==p&&(null!=(h=Re(b,p))&&u.push(Hr(b,h,f)))),d)break;b=b.return}0<u.length&&(o=new s(o,c,null,n,l),i.push({event:o,listeners:u}))}}if(!(7&t)){if(s="mouseout"===e||"pointerout"===e,(!(o="mouseover"===e||"pointerover"===e)||n===xe||!(c=n.relatedTarget||n.fromElement)||!hl(c)&&!c[dl])&&(s||o)&&(o=l.window===l?l:(o=l.ownerDocument)?o.defaultView||o.parentWindow:window,s?(s=r,null!==(c=(c=n.relatedTarget||n.toElement)?hl(c):null)&&(c!==(d=Ve(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(s=null,c=r),s!==c)){if(u=pn,h="onMouseLeave",p="onMouseEnter",b="mouse","pointerout"!==e&&"pointerover"!==e||(u=Tn,h="onPointerLeave",p="onPointerEnter",b="pointer"),d=null==s?o:ml(s),f=null==c?o:ml(c),(o=new u(h,b+"leave",s,n,l)).target=d,o.relatedTarget=f,h=null,hl(l)===r&&((u=new u(p,b+"enter",c,n,l)).target=f,u.relatedTarget=d,h=u),d=h,s&&c)e:{for(p=c,b=0,f=u=s;f;f=Kr(f))b++;for(f=0,h=p;h;h=Kr(h))f++;for(;0<b-f;)u=Kr(u),b--;for(;0<f-b;)p=Kr(p),f--;for(;b--;){if(u===p||null!==p&&u===p.alternate)break e;u=Kr(u),p=Kr(p)}u=null}else u=null;null!==s&&qr(i,o,s,u,!1),null!==c&&null!==d&&qr(i,d,c,u,!0)}if("select"===(s=(o=r?ml(r):window).nodeName&&o.nodeName.toLowerCase())||"input"===s&&"file"===o.type)var g=Gn;else if(Vn(o))if(Qn)g=lr;else{g=nr;var m=tr}else(s=o.nodeName)&&"input"===s.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(g=rr);switch(g&&(g=g(e,r))?Hn(i,g,n,l):(m&&m(e,o,r),"focusout"===e&&(m=o._wrapperState)&&m.controlled&&"number"===o.type&&ee(o,"number",o.value)),m=r?ml(r):window,e){case"focusin":(Vn(m)||"true"===m.contentEditable)&&(br=m,hr=r,gr=null);break;case"focusout":gr=hr=br=null;break;case"mousedown":mr=!0;break;case"contextmenu":case"mouseup":case"dragend":mr=!1,vr(i,n,l);break;case"selectionchange":if(fr)break;case"keydown":case"keyup":vr(i,n,l)}var v;if(Rn)e:{switch(e){case"compositionstart":var y="onCompositionStart";break e;case"compositionend":y="onCompositionEnd";break e;case"compositionupdate":y="onCompositionUpdate";break e}y=void 0}else Un?Mn(e,n)&&(y="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(y="onCompositionStart");y&&(Ln&&"ko"!==n.locale&&(Un||"onCompositionStart"!==y?"onCompositionEnd"===y&&Un&&(v=Jt()):(Yt="value"in(Qt=l)?Qt.value:Qt.textContent,Un=!0)),0<(m=Wr(r,y)).length&&(y=new vn(y,e,null,n,l),i.push({event:y,listeners:m}),v?y.data=v:null!==(v=zn(n))&&(y.data=v))),(v=An?function(e,t){switch(e){case"compositionend":return zn(t);case"keypress":return 32!==t.which?null:(Fn=!0,Dn);case"textInput":return(e=t.data)===Dn&&Fn?null:e;default:return null}}(e,n):function(e,t){if(Un)return"compositionend"===e||!Rn&&Mn(e,t)?(e=Jt(),Xt=Yt=Qt=null,Un=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Ln&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(r=Wr(r,"onBeforeInput")).length&&(l=new vn("onBeforeInput","beforeinput",null,n,l),i.push({event:l,listeners:r}),l.data=v))}Dr(i,t)}))}function Hr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Wr(e,t){for(var n=t+"Capture",r=[];null!==e;){var l=e,a=l.stateNode;5===l.tag&&null!==a&&(l=a,null!=(a=Re(e,n))&&r.unshift(Hr(e,a,l)),null!=(a=Re(e,t))&&r.push(Hr(e,a,l))),e=e.return}return r}function Kr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function qr(e,t,n,r,l){for(var a=t._reactName,i=[];null!==n&&n!==r;){var o=n,s=o.alternate,c=o.stateNode;if(null!==s&&s===r)break;5===o.tag&&null!==c&&(o=c,l?null!=(s=Re(n,a))&&i.unshift(Hr(n,s,o)):l||null!=(s=Re(n,a))&&i.push(Hr(n,s,o))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}var $r=/\r\n?/g,Gr=/\u0000|\uFFFD/g;function Qr(e){return("string"==typeof e?e:""+e).replace($r,"\n").replace(Gr,"")}function Yr(e,t,n){if(t=Qr(t),Qr(e)!==t&&n)throw Error(a(425))}function Xr(){}var Jr=null;function Zr(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var el="function"==typeof setTimeout?setTimeout:void 0,tl="function"==typeof clearTimeout?clearTimeout:void 0,nl="function"==typeof Promise?Promise:void 0,rl="function"==typeof queueMicrotask?queueMicrotask:void 0!==nl?function(e){return nl.resolve(null).then(e).catch(ll)}:el;function ll(e){setTimeout((function(){throw e}))}function al(e,t){var n=t,r=0;do{var l=n.nextSibling;if(e.removeChild(n),l&&8===l.nodeType)if("/$"===(n=l.data)){if(0===r)return e.removeChild(l),void Bt(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=l}while(n);Bt(t)}function il(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ol(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var sl=Math.random().toString(36).slice(2),cl="__reactFiber$"+sl,ul="__reactProps$"+sl,dl="__reactContainer$"+sl,pl="__reactEvents$"+sl,fl="__reactListeners$"+sl,bl="__reactHandles$"+sl;function hl(e){var t=e[cl];if(t)return t;for(var n=e.parentNode;n;){if(t=n[dl]||n[cl]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ol(e);null!==e;){if(n=e[cl])return n;e=ol(e)}return t}n=(e=n).parentNode}return null}function gl(e){return!(e=e[cl]||e[dl])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ml(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function vl(e){return e[ul]||null}var yl=[],xl=-1;function _l(e){return{current:e}}function jl(e){0>xl||(e.current=yl[xl],yl[xl]=null,xl--)}function kl(e,t){xl++,yl[xl]=e.current,e.current=t}var wl={},El=_l(wl),Tl=_l(!1),Ol=wl;function Sl(e,t){var n=e.type.contextTypes;if(!n)return wl;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var l,a={};for(l in n)a[l]=t[l];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function Cl(e){return null!=(e=e.childContextTypes)}function Nl(){jl(Tl),jl(El)}function Il(e,t,n){if(El.current!==wl)throw Error(a(168));kl(El,t),kl(Tl,n)}function Rl(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var l in r=r.getChildContext())if(!(l in t))throw Error(a(108,H(e)||"Unknown",l));return F({},n,r)}function Pl(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||wl,Ol=El.current,kl(El,e),kl(Tl,Tl.current),!0}function Al(e,t,n){var r=e.stateNode;if(!r)throw Error(a(169));n?(e=Rl(e,t,Ol),r.__reactInternalMemoizedMergedChildContext=e,jl(Tl),jl(El),kl(El,e)):jl(Tl),kl(Tl,n)}var Ll=null,Dl=!1,Fl=!1;function Ml(e){null===Ll?Ll=[e]:Ll.push(e)}function zl(){if(!Fl&&null!==Ll){Fl=!0;var e=0,t=vt;try{var n=Ll;for(vt=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}Ll=null,Dl=!1}catch(t){throw null!==Ll&&(Ll=Ll.slice(e+1)),$e(Ze,zl),t}finally{vt=t,Fl=!1}}return null}var Ul=x.ReactCurrentBatchConfig;function Bl(e,t){if(e&&e.defaultProps){for(var n in t=F({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Vl=_l(null),Hl=null,Wl=null,Kl=null;function ql(){Kl=Wl=Hl=null}function $l(e){var t=Vl.current;jl(Vl),e._currentValue=t}function Gl(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function Ql(e,t){Hl=e,Kl=Wl=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(!!(e.lanes&t)&&(vo=!0),e.firstContext=null)}function Yl(e){var t=e._currentValue;if(Kl!==e)if(e={context:e,memoizedValue:t,next:null},null===Wl){if(null===Hl)throw Error(a(308));Wl=e,Hl.dependencies={lanes:0,firstContext:e}}else Wl=Wl.next=e;return t}var Xl=null,Jl=!1;function Zl(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function ea(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function ta(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function na(e,t){var n=e.updateQueue;null!==n&&(n=n.shared,null!==ys&&1&e.mode&&!(2&vs)?(null===(e=n.interleaved)?(t.next=t,null===Xl?Xl=[n]:Xl.push(n)):(t.next=e.next,e.next=t),n.interleaved=t):(null===(e=n.pending)?t.next=t:(t.next=e.next,e.next=t),n.pending=t))}function ra(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,mt(e,n)}}function la(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var l=null,a=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===a?l=a=i:a=a.next=i,n=n.next}while(null!==n);null===a?l=a=t:a=a.next=t}else l=a=t;return n={baseState:r.baseState,firstBaseUpdate:l,lastBaseUpdate:a,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function aa(e,t,n,r){var l=e.updateQueue;Jl=!1;var a=l.firstBaseUpdate,i=l.lastBaseUpdate,o=l.shared.pending;if(null!==o){l.shared.pending=null;var s=o,c=s.next;s.next=null,null===i?a=c:i.next=c,i=s;var u=e.alternate;null!==u&&((o=(u=u.updateQueue).lastBaseUpdate)!==i&&(null===o?u.firstBaseUpdate=c:o.next=c,u.lastBaseUpdate=s))}if(null!==a){var d=l.baseState;for(i=0,u=c=s=null,o=a;;){var p=o.lane,f=o.eventTime;if((r&p)===p){null!==u&&(u=u.next={eventTime:f,lane:0,tag:o.tag,payload:o.payload,callback:o.callback,next:null});e:{var b=e,h=o;switch(p=t,f=n,h.tag){case 1:if("function"==typeof(b=h.payload)){d=b.call(f,d,p);break e}d=b;break e;case 3:b.flags=-65537&b.flags|128;case 0:if(null==(p="function"==typeof(b=h.payload)?b.call(f,d,p):b))break e;d=F({},d,p);break e;case 2:Jl=!0}}null!==o.callback&&0!==o.lane&&(e.flags|=64,null===(p=l.effects)?l.effects=[o]:p.push(o))}else f={eventTime:f,lane:p,tag:o.tag,payload:o.payload,callback:o.callback,next:null},null===u?(c=u=f,s=d):u=u.next=f,i|=p;if(null===(o=o.next)){if(null===(o=l.shared.pending))break;o=(p=o).next,p.next=null,l.lastBaseUpdate=p,l.shared.pending=null}}if(null===u&&(s=d),l.baseState=s,l.firstBaseUpdate=c,l.lastBaseUpdate=u,null!==(t=l.shared.interleaved)){l=t;do{i|=l.lane,l=l.next}while(l!==t)}else null===a&&(l.shared.lanes=0);Ts|=i,e.lanes=i,e.memoizedState=d}}function ia(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],l=r.callback;if(null!==l){if(r.callback=null,r=n,"function"!=typeof l)throw Error(a(191,l));l.call(r)}}}var oa=(new r.Component).refs;function sa(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:F({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var ca={isMounted:function(e){return!!(e=e._reactInternals)&&Ve(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=Hs(),l=Ws(e),a=ta(r,l);a.payload=t,null!=n&&(a.callback=n),na(e,a),null!==(t=Ks(e,l,r))&&ra(t,e,l)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=Hs(),l=Ws(e),a=ta(r,l);a.tag=1,a.payload=t,null!=n&&(a.callback=n),na(e,a),null!==(t=Ks(e,l,r))&&ra(t,e,l)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=Hs(),r=Ws(e),l=ta(n,r);l.tag=2,null!=t&&(l.callback=t),na(e,l),null!==(t=Ks(e,r,n))&&ra(t,e,r)}};function ua(e,t,n,r,l,a,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,i):!t.prototype||!t.prototype.isPureReactComponent||(!ir(n,r)||!ir(l,a))}function da(e,t,n){var r=!1,l=wl,a=t.contextType;return"object"==typeof a&&null!==a?a=Yl(a):(l=Cl(t)?Ol:El.current,a=(r=null!=(r=t.contextTypes))?Sl(e,l):wl),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ca,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=l,e.__reactInternalMemoizedMaskedChildContext=a),t}function pa(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ca.enqueueReplaceState(t,t.state,null)}function fa(e,t,n,r){var l=e.stateNode;l.props=n,l.state=e.memoizedState,l.refs=oa,Zl(e);var a=t.contextType;"object"==typeof a&&null!==a?l.context=Yl(a):(a=Cl(t)?Ol:El.current,l.context=Sl(e,a)),l.state=e.memoizedState,"function"==typeof(a=t.getDerivedStateFromProps)&&(sa(e,t,a,n),l.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof l.getSnapshotBeforeUpdate||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||(t=l.state,"function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount(),t!==l.state&&ca.enqueueReplaceState(l,l.state,null),aa(e,n,l,r),l.state=e.memoizedState),"function"==typeof l.componentDidMount&&(e.flags|=4194308)}var ba=[],ha=0,ga=null,ma=0,va=[],ya=0,xa=null,_a=1,ja="";function ka(e,t){ba[ha++]=ma,ba[ha++]=ga,ga=e,ma=t}function wa(e,t,n){va[ya++]=_a,va[ya++]=ja,va[ya++]=xa,xa=e;var r=_a;e=ja;var l=32-it(r)-1;r&=~(1<<l),n+=1;var a=32-it(t)+l;if(30<a){var i=l-l%5;a=(r&(1<<i)-1).toString(32),r>>=i,l-=i,_a=1<<32-it(t)+l|n<<l|r,ja=a+e}else _a=1<<a|n<<l|r,ja=e}function Ea(e){null!==e.return&&(ka(e,1),wa(e,1,0))}function Ta(e){for(;e===ga;)ga=ba[--ha],ba[ha]=null,ma=ba[--ha],ba[ha]=null;for(;e===xa;)xa=va[--ya],va[ya]=null,ja=va[--ya],va[ya]=null,_a=va[--ya],va[ya]=null}var Oa=null,Sa=null,Ca=!1,Na=null;function Ia(e,t){var n=_c(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function Ra(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,Oa=e,Sa=il(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,Oa=e,Sa=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==xa?{id:_a,overflow:ja}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=_c(18,null,null,0)).stateNode=t,n.return=e,e.child=n,Oa=e,Sa=null,!0);default:return!1}}function Pa(e){return!(!(1&e.mode)||128&e.flags)}function Aa(e){if(Ca){var t=Sa;if(t){var n=t;if(!Ra(e,t)){if(Pa(e))throw Error(a(418));t=il(n.nextSibling);var r=Oa;t&&Ra(e,t)?Ia(r,n):(e.flags=-4097&e.flags|2,Ca=!1,Oa=e)}}else{if(Pa(e))throw Error(a(418));e.flags=-4097&e.flags|2,Ca=!1,Oa=e}}}function La(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Oa=e}function Da(e){if(e!==Oa)return!1;if(!Ca)return La(e),Ca=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!Zr(e.type,e.memoizedProps)),t&&(t=Sa)){if(Pa(e)){for(e=Sa;e;)e=il(e.nextSibling);throw Error(a(418))}for(;t;)Ia(e,t),t=il(t.nextSibling)}if(La(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Sa=il(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Sa=null}}else Sa=Oa?il(e.stateNode.nextSibling):null;return!0}function Fa(){Sa=Oa=null,Ca=!1}function Ma(e){null===Na?Na=[e]:Na.push(e)}function za(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var r=n.stateNode}if(!r)throw Error(a(147,e));var l=r,i=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===i?t.ref:(t=function(e){var t=l.refs;t===oa&&(t=l.refs={}),null===e?delete t[i]:t[i]=e},t._stringRef=i,t)}if("string"!=typeof e)throw Error(a(284));if(!n._owner)throw Error(a(290,e))}return e}function Ua(e,t){throw e=Object.prototype.toString.call(t),Error(a(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Ba(e){return(0,e._init)(e._payload)}function Va(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function l(e,t){return(e=kc(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function o(t){return e&&null===t.alternate&&(t.flags|=2),t}function s(e,t,n,r){return null===t||6!==t.tag?((t=Oc(n,e.mode,r)).return=e,t):((t=l(t,n)).return=e,t)}function c(e,t,n,r){var a=n.type;return a===k?d(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===a||"object"==typeof a&&null!==a&&a.$$typeof===R&&Ba(a)===t.type)?((r=l(t,n.props)).ref=za(e,t,n),r.return=e,r):((r=wc(n.type,n.key,n.props,null,e.mode,r)).ref=za(e,t,n),r.return=e,r)}function u(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Sc(n,e.mode,r)).return=e,t):((t=l(t,n.children||[])).return=e,t)}function d(e,t,n,r,a){return null===t||7!==t.tag?((t=Ec(n,e.mode,r,a)).return=e,t):((t=l(t,n)).return=e,t)}function p(e,t,n){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=Oc(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case _:return(n=wc(t.type,t.key,t.props,null,e.mode,n)).ref=za(e,null,t),n.return=e,n;case j:return(t=Sc(t,e.mode,n)).return=e,t;case R:return p(e,(0,t._init)(t._payload),n)}if(te(t)||L(t))return(t=Ec(t,e.mode,n,null)).return=e,t;Ua(e,t)}return null}function f(e,t,n,r){var l=null!==t?t.key:null;if("string"==typeof n&&""!==n||"number"==typeof n)return null!==l?null:s(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case _:return n.key===l?c(e,t,n,r):null;case j:return n.key===l?u(e,t,n,r):null;case R:return f(e,t,(l=n._init)(n._payload),r)}if(te(n)||L(n))return null!==l?null:d(e,t,n,r,null);Ua(e,n)}return null}function b(e,t,n,r,l){if("string"==typeof r&&""!==r||"number"==typeof r)return s(t,e=e.get(n)||null,""+r,l);if("object"==typeof r&&null!==r){switch(r.$$typeof){case _:return c(t,e=e.get(null===r.key?n:r.key)||null,r,l);case j:return u(t,e=e.get(null===r.key?n:r.key)||null,r,l);case R:return b(e,t,n,(0,r._init)(r._payload),l)}if(te(r)||L(r))return d(t,e=e.get(n)||null,r,l,null);Ua(t,r)}return null}function h(l,a,o,s){for(var c=null,u=null,d=a,h=a=0,g=null;null!==d&&h<o.length;h++){d.index>h?(g=d,d=null):g=d.sibling;var m=f(l,d,o[h],s);if(null===m){null===d&&(d=g);break}e&&d&&null===m.alternate&&t(l,d),a=i(m,a,h),null===u?c=m:u.sibling=m,u=m,d=g}if(h===o.length)return n(l,d),Ca&&ka(l,h),c;if(null===d){for(;h<o.length;h++)null!==(d=p(l,o[h],s))&&(a=i(d,a,h),null===u?c=d:u.sibling=d,u=d);return Ca&&ka(l,h),c}for(d=r(l,d);h<o.length;h++)null!==(g=b(d,l,h,o[h],s))&&(e&&null!==g.alternate&&d.delete(null===g.key?h:g.key),a=i(g,a,h),null===u?c=g:u.sibling=g,u=g);return e&&d.forEach((function(e){return t(l,e)})),Ca&&ka(l,h),c}function g(l,o,s,c){var u=L(s);if("function"!=typeof u)throw Error(a(150));if(null==(s=u.call(s)))throw Error(a(151));for(var d=u=null,h=o,g=o=0,m=null,v=s.next();null!==h&&!v.done;g++,v=s.next()){h.index>g?(m=h,h=null):m=h.sibling;var y=f(l,h,v.value,c);if(null===y){null===h&&(h=m);break}e&&h&&null===y.alternate&&t(l,h),o=i(y,o,g),null===d?u=y:d.sibling=y,d=y,h=m}if(v.done)return n(l,h),Ca&&ka(l,g),u;if(null===h){for(;!v.done;g++,v=s.next())null!==(v=p(l,v.value,c))&&(o=i(v,o,g),null===d?u=v:d.sibling=v,d=v);return Ca&&ka(l,g),u}for(h=r(l,h);!v.done;g++,v=s.next())null!==(v=b(h,l,g,v.value,c))&&(e&&null!==v.alternate&&h.delete(null===v.key?g:v.key),o=i(v,o,g),null===d?u=v:d.sibling=v,d=v);return e&&h.forEach((function(e){return t(l,e)})),Ca&&ka(l,g),u}return function e(r,a,i,s){if("object"==typeof i&&null!==i&&i.type===k&&null===i.key&&(i=i.props.children),"object"==typeof i&&null!==i){switch(i.$$typeof){case _:e:{for(var c=i.key,u=a;null!==u;){if(u.key===c){if((c=i.type)===k){if(7===u.tag){n(r,u.sibling),(a=l(u,i.props.children)).return=r,r=a;break e}}else if(u.elementType===c||"object"==typeof c&&null!==c&&c.$$typeof===R&&Ba(c)===u.type){n(r,u.sibling),(a=l(u,i.props)).ref=za(r,u,i),a.return=r,r=a;break e}n(r,u);break}t(r,u),u=u.sibling}i.type===k?((a=Ec(i.props.children,r.mode,s,i.key)).return=r,r=a):((s=wc(i.type,i.key,i.props,null,r.mode,s)).ref=za(r,a,i),s.return=r,r=s)}return o(r);case j:e:{for(u=i.key;null!==a;){if(a.key===u){if(4===a.tag&&a.stateNode.containerInfo===i.containerInfo&&a.stateNode.implementation===i.implementation){n(r,a.sibling),(a=l(a,i.children||[])).return=r,r=a;break e}n(r,a);break}t(r,a),a=a.sibling}(a=Sc(i,r.mode,s)).return=r,r=a}return o(r);case R:return e(r,a,(u=i._init)(i._payload),s)}if(te(i))return h(r,a,i,s);if(L(i))return g(r,a,i,s);Ua(r,i)}return"string"==typeof i&&""!==i||"number"==typeof i?(i=""+i,null!==a&&6===a.tag?(n(r,a.sibling),(a=l(a,i)).return=r,r=a):(n(r,a),(a=Oc(i,r.mode,s)).return=r,r=a),o(r)):n(r,a)}}var Ha=Va(!0),Wa=Va(!1),Ka={},qa=_l(Ka),$a=_l(Ka),Ga=_l(Ka);function Qa(e){if(e===Ka)throw Error(a(174));return e}function Ya(e,t){switch(kl(Ga,t),kl($a,e),kl(qa,Ka),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:se(null,"");break;default:t=se(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}jl(qa),kl(qa,t)}function Xa(){jl(qa),jl($a),jl(Ga)}function Ja(e){Qa(Ga.current);var t=Qa(qa.current),n=se(t,e.type);t!==n&&(kl($a,e),kl(qa,n))}function Za(e){$a.current===e&&(jl(qa),jl($a))}var ei=_l(0);function ti(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(128&t.flags)return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var ni=[];function ri(){for(var e=0;e<ni.length;e++)ni[e]._workInProgressVersionPrimary=null;ni.length=0}var li=x.ReactCurrentDispatcher,ai=x.ReactCurrentBatchConfig,ii=0,oi=null,si=null,ci=null,ui=!1,di=!1,pi=0,fi=0;function bi(){throw Error(a(321))}function hi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ar(e[n],t[n]))return!1;return!0}function gi(e,t,n,r,l,i){if(ii=i,oi=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,li.current=null===e||null===e.memoizedState?Ji:Zi,e=n(r,l),di){i=0;do{if(di=!1,pi=0,25<=i)throw Error(a(301));i+=1,ci=si=null,t.updateQueue=null,li.current=eo,e=n(r,l)}while(di)}if(li.current=Xi,t=null!==si&&null!==si.next,ii=0,ci=si=oi=null,ui=!1,t)throw Error(a(300));return e}function mi(){var e=0!==pi;return pi=0,e}function vi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===ci?oi.memoizedState=ci=e:ci=ci.next=e,ci}function yi(){if(null===si){var e=oi.alternate;e=null!==e?e.memoizedState:null}else e=si.next;var t=null===ci?oi.memoizedState:ci.next;if(null!==t)ci=t,si=e;else{if(null===e)throw Error(a(310));e={memoizedState:(si=e).memoizedState,baseState:si.baseState,baseQueue:si.baseQueue,queue:si.queue,next:null},null===ci?oi.memoizedState=ci=e:ci=ci.next=e}return ci}function xi(e,t){return"function"==typeof t?t(e):t}function _i(e){var t=yi(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=si,l=r.baseQueue,i=n.pending;if(null!==i){if(null!==l){var o=l.next;l.next=i.next,i.next=o}r.baseQueue=l=i,n.pending=null}if(null!==l){i=l.next,r=r.baseState;var s=o=null,c=null,u=i;do{var d=u.lane;if((ii&d)===d)null!==c&&(c=c.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),r=u.hasEagerState?u.eagerState:e(r,u.action);else{var p={lane:d,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===c?(s=c=p,o=r):c=c.next=p,oi.lanes|=d,Ts|=d}u=u.next}while(null!==u&&u!==i);null===c?o=r:c.next=s,ar(r,t.memoizedState)||(vo=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=c,n.lastRenderedState=r}if(null!==(e=n.interleaved)){l=e;do{i=l.lane,oi.lanes|=i,Ts|=i,l=l.next}while(l!==e)}else null===l&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function ji(e){var t=yi(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=n.dispatch,l=n.pending,i=t.memoizedState;if(null!==l){n.pending=null;var o=l=l.next;do{i=e(i,o.action),o=o.next}while(o!==l);ar(i,t.memoizedState)||(vo=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function ki(){}function wi(e,t){var n=oi,r=yi(),l=t(),i=!ar(r.memoizedState,l);if(i&&(r.memoizedState=l,vo=!0),r=r.queue,Li(Oi.bind(null,n,r,e),[e]),r.getSnapshot!==t||i||null!==ci&&1&ci.memoizedState.tag){if(n.flags|=2048,Ni(9,Ti.bind(null,n,r,l,t),void 0,null),null===ys)throw Error(a(349));30&ii||Ei(n,t,l)}return l}function Ei(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=oi.updateQueue)?(t={lastEffect:null,stores:null},oi.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Ti(e,t,n,r){t.value=n,t.getSnapshot=r,Si(t)&&Ks(e,1,-1)}function Oi(e,t,n){return n((function(){Si(t)&&Ks(e,1,-1)}))}function Si(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!ar(e,n)}catch(e){return!0}}function Ci(e){var t=vi();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:xi,lastRenderedState:e},t.queue=e,e=e.dispatch=qi.bind(null,oi,e),[t.memoizedState,e]}function Ni(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=oi.updateQueue)?(t={lastEffect:null,stores:null},oi.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function Ii(){return yi().memoizedState}function Ri(e,t,n,r){var l=vi();oi.flags|=e,l.memoizedState=Ni(1|t,n,void 0,void 0===r?null:r)}function Pi(e,t,n,r){var l=yi();r=void 0===r?null:r;var a=void 0;if(null!==si){var i=si.memoizedState;if(a=i.destroy,null!==r&&hi(r,i.deps))return void(l.memoizedState=Ni(t,n,a,r))}oi.flags|=e,l.memoizedState=Ni(1|t,n,a,r)}function Ai(e,t){return Ri(8390656,8,e,t)}function Li(e,t){return Pi(2048,8,e,t)}function Di(e,t){return Pi(4,2,e,t)}function Fi(e,t){return Pi(4,4,e,t)}function Mi(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function zi(e,t,n){return n=null!=n?n.concat([e]):null,Pi(4,4,Mi.bind(null,t,e),n)}function Ui(){}function Bi(e,t){var n=yi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&hi(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Vi(e,t){var n=yi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&hi(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Hi(e,t){var n=vt;vt=0!==n&&4>n?n:4,e(!0);var r=ai.transition;ai.transition={};try{e(!1),t()}finally{vt=n,ai.transition=r}}function Wi(){return yi().memoizedState}function Ki(e,t,n){var r=Ws(e);n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},$i(e)?Gi(t,n):(Qi(e,t,n),null!==(e=Ks(e,r,n=Hs()))&&Yi(e,t,r))}function qi(e,t,n){var r=Ws(e),l={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if($i(e))Gi(t,l);else{Qi(e,t,l);var a=e.alternate;if(0===e.lanes&&(null===a||0===a.lanes)&&null!==(a=t.lastRenderedReducer))try{var i=t.lastRenderedState,o=a(i,n);if(l.hasEagerState=!0,l.eagerState=o,ar(o,i))return}catch(e){}null!==(e=Ks(e,r,n=Hs()))&&Yi(e,t,r)}}function $i(e){var t=e.alternate;return e===oi||null!==t&&t===oi}function Gi(e,t){di=ui=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Qi(e,t,n){null!==ys&&1&e.mode&&!(2&vs)?(null===(e=t.interleaved)?(n.next=n,null===Xl?Xl=[t]:Xl.push(t)):(n.next=e.next,e.next=n),t.interleaved=n):(null===(e=t.pending)?n.next=n:(n.next=e.next,e.next=n),t.pending=n)}function Yi(e,t,n){if(4194240&n){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,mt(e,n)}}var Xi={readContext:Yl,useCallback:bi,useContext:bi,useEffect:bi,useImperativeHandle:bi,useInsertionEffect:bi,useLayoutEffect:bi,useMemo:bi,useReducer:bi,useRef:bi,useState:bi,useDebugValue:bi,useDeferredValue:bi,useTransition:bi,useMutableSource:bi,useSyncExternalStore:bi,useId:bi,unstable_isNewReconciler:!1},Ji={readContext:Yl,useCallback:function(e,t){return vi().memoizedState=[e,void 0===t?null:t],e},useContext:Yl,useEffect:Ai,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Ri(4194308,4,Mi.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Ri(4194308,4,e,t)},useInsertionEffect:function(e,t){return Ri(4,2,e,t)},useMemo:function(e,t){var n=vi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=vi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=Ki.bind(null,oi,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},vi().memoizedState=e},useState:Ci,useDebugValue:Ui,useDeferredValue:function(e){var t=Ci(e),n=t[0],r=t[1];return Ai((function(){var t=ai.transition;ai.transition={};try{r(e)}finally{ai.transition=t}}),[e]),n},useTransition:function(){var e=Ci(!1),t=e[0];return e=Hi.bind(null,e[1]),vi().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=oi,l=vi();if(Ca){if(void 0===n)throw Error(a(407));n=n()}else{if(n=t(),null===ys)throw Error(a(349));30&ii||Ei(r,t,n)}l.memoizedState=n;var i={value:n,getSnapshot:t};return l.queue=i,Ai(Oi.bind(null,r,i,e),[e]),r.flags|=2048,Ni(9,Ti.bind(null,r,i,n,t),void 0,null),n},useId:function(){var e=vi(),t=ys.identifierPrefix;if(Ca){var n=ja;t=":"+t+"R"+(n=(_a&~(1<<32-it(_a)-1)).toString(32)+n),0<(n=pi++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=fi++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},Zi={readContext:Yl,useCallback:Bi,useContext:Yl,useEffect:Li,useImperativeHandle:zi,useInsertionEffect:Di,useLayoutEffect:Fi,useMemo:Vi,useReducer:_i,useRef:Ii,useState:function(){return _i(xi)},useDebugValue:Ui,useDeferredValue:function(e){var t=_i(xi),n=t[0],r=t[1];return Li((function(){var t=ai.transition;ai.transition={};try{r(e)}finally{ai.transition=t}}),[e]),n},useTransition:function(){return[_i(xi)[0],yi().memoizedState]},useMutableSource:ki,useSyncExternalStore:wi,useId:Wi,unstable_isNewReconciler:!1},eo={readContext:Yl,useCallback:Bi,useContext:Yl,useEffect:Li,useImperativeHandle:zi,useInsertionEffect:Di,useLayoutEffect:Fi,useMemo:Vi,useReducer:ji,useRef:Ii,useState:function(){return ji(xi)},useDebugValue:Ui,useDeferredValue:function(e){var t=ji(xi),n=t[0],r=t[1];return Li((function(){var t=ai.transition;ai.transition={};try{r(e)}finally{ai.transition=t}}),[e]),n},useTransition:function(){return[ji(xi)[0],yi().memoizedState]},useMutableSource:ki,useSyncExternalStore:wi,useId:Wi,unstable_isNewReconciler:!1};function to(e,t){try{var n="",r=t;do{n+=B(r),r=r.return}while(r);var l=n}catch(e){l="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:l}}function no(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}var ro,lo,ao,io,oo="function"==typeof WeakMap?WeakMap:Map;function so(e,t,n){(n=ta(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Ps||(Ps=!0,As=r),no(0,t)},n}function co(e,t,n){(n=ta(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var l=t.value;n.payload=function(){return r(l)},n.callback=function(){no(0,t)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){no(0,t),"function"!=typeof r&&(null===Ls?Ls=new Set([this]):Ls.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function uo(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new oo;var l=new Set;r.set(t,l)}else void 0===(l=r.get(t))&&(l=new Set,r.set(t,l));l.has(n)||(l.add(n),e=hc.bind(null,e,t,n),t.then(e,e))}function po(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function fo(e,t,n,r,l){return 1&e.mode?(e.flags|=65536,e.lanes=l,e):(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=ta(-1,1)).tag=2,na(n,t))),n.lanes|=1),e)}function bo(e,t){if(!Ca)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ho(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var l=e.child;null!==l;)n|=l.lanes|l.childLanes,r|=14680064&l.subtreeFlags,r|=14680064&l.flags,l.return=e,l=l.sibling;else for(l=e.child;null!==l;)n|=l.lanes|l.childLanes,r|=l.subtreeFlags,r|=l.flags,l.return=e,l=l.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function go(e,t,n){var r=t.pendingProps;switch(Ta(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return ho(t),null;case 1:case 17:return Cl(t.type)&&Nl(),ho(t),null;case 3:return r=t.stateNode,Xa(),jl(Tl),jl(El),ri(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Da(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&!(256&t.flags)||(t.flags|=1024,null!==Na&&(Ys(Na),Na=null))),lo(e,t),ho(t),null;case 5:Za(t);var l=Qa(Ga.current);if(n=t.type,null!==e&&null!=t.stateNode)ao(e,t,n,r,l),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(a(166));return ho(t),null}if(e=Qa(qa.current),Da(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[cl]=t,r[ul]=i,e=!!(1&t.mode),n){case"dialog":Fr("cancel",r),Fr("close",r);break;case"iframe":case"object":case"embed":Fr("load",r);break;case"video":case"audio":for(l=0;l<Pr.length;l++)Fr(Pr[l],r);break;case"source":Fr("error",r);break;case"img":case"image":case"link":Fr("error",r),Fr("load",r);break;case"details":Fr("toggle",r);break;case"input":Y(r,i),Fr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Fr("invalid",r);break;case"textarea":le(r,i),Fr("invalid",r)}for(var s in ve(n,i),l=null,i)if(i.hasOwnProperty(s)){var c=i[s];"children"===s?"string"==typeof c?r.textContent!==c&&(Yr(r.textContent,c,e),l=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(Yr(r.textContent,c,e),l=["children",""+c]):o.hasOwnProperty(s)&&null!=c&&"onScroll"===s&&Fr("scroll",r)}switch(n){case"input":q(r),Z(r,i,!0);break;case"textarea":q(r),ie(r);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(r.onclick=Xr)}r=l,t.updateQueue=r,null!==r&&(t.flags|=4)}else{s=9===l.nodeType?l:l.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=oe(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=s.createElement(n,{is:r.is}):(e=s.createElement(n),"select"===n&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,n),e[cl]=t,e[ul]=r,ro(e,t,!1,!1),t.stateNode=e;e:{switch(s=ye(n,r),n){case"dialog":Fr("cancel",e),Fr("close",e),l=r;break;case"iframe":case"object":case"embed":Fr("load",e),l=r;break;case"video":case"audio":for(l=0;l<Pr.length;l++)Fr(Pr[l],e);l=r;break;case"source":Fr("error",e),l=r;break;case"img":case"image":case"link":Fr("error",e),Fr("load",e),l=r;break;case"details":Fr("toggle",e),l=r;break;case"input":Y(e,r),l=Q(e,r),Fr("invalid",e);break;case"option":default:l=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},l=F({},r,{value:void 0}),Fr("invalid",e);break;case"textarea":le(e,r),l=re(e,r),Fr("invalid",e)}for(i in ve(n,l),c=l)if(c.hasOwnProperty(i)){var u=c[i];"style"===i?ge(e,u):"dangerouslySetInnerHTML"===i?null!=(u=u?u.__html:void 0)&&de(e,u):"children"===i?"string"==typeof u?("textarea"!==n||""!==u)&&pe(e,u):"number"==typeof u&&pe(e,""+u):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(o.hasOwnProperty(i)?null!=u&&"onScroll"===i&&Fr("scroll",e):null!=u&&y(e,i,u,s))}switch(n){case"input":q(e),Z(e,r,!1);break;case"textarea":q(e),ie(e);break;case"option":null!=r.value&&e.setAttribute("value",""+W(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?ne(e,!!r.multiple,i,!1):null!=r.defaultValue&&ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof l.onClick&&(e.onclick=Xr)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return ho(t),null;case 6:if(e&&null!=t.stateNode)io(e,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(a(166));if(n=Qa(Ga.current),Qa(qa.current),Da(t)){if(r=t.stateNode,n=t.memoizedProps,r[cl]=t,(i=r.nodeValue!==n)&&null!==(e=Oa))switch(s=!!(1&e.mode),e.tag){case 3:Yr(r.nodeValue,n,s);break;case 5:!0!==e.memoizedProps[void 0]&&Yr(r.nodeValue,n,s)}i&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[cl]=t,t.stateNode=r}return ho(t),null;case 13:if(jl(ei),r=t.memoizedState,Ca&&null!==Sa&&1&t.mode&&!(128&t.flags)){for(r=Sa;r;)r=il(r.nextSibling);return Fa(),t.flags|=98560,t}if(null!==r&&null!==r.dehydrated){if(r=Da(t),null===e){if(!r)throw Error(a(318));if(!(r=null!==(r=t.memoizedState)?r.dehydrated:null))throw Error(a(317));r[cl]=t}else Fa(),!(128&t.flags)&&(t.memoizedState=null),t.flags|=4;return ho(t),null}return null!==Na&&(Ys(Na),Na=null),128&t.flags?(t.lanes=n,t):(r=null!==r,n=!1,null===e?Da(t):n=null!==e.memoizedState,r&&!n&&(t.child.flags|=8192,1&t.mode&&(null===e||1&ei.current?0===ws&&(ws=3):ac())),null!==t.updateQueue&&(t.flags|=4),ho(t),null);case 4:return Xa(),lo(e,t),null===e&&Ur(t.stateNode.containerInfo),ho(t),null;case 10:return $l(t.type._context),ho(t),null;case 19:if(jl(ei),null===(i=t.memoizedState))return ho(t),null;if(r=!!(128&t.flags),null===(s=i.rendering))if(r)bo(i,!1);else{if(0!==ws||null!==e&&128&e.flags)for(e=t.child;null!==e;){if(null!==(s=ti(e))){for(t.flags|=128,bo(i,!1),null!==(r=s.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(i=n).flags&=14680066,null===(s=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=s.childLanes,i.lanes=s.lanes,i.child=s.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=s.memoizedProps,i.memoizedState=s.memoizedState,i.updateQueue=s.updateQueue,i.type=s.type,e=s.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return kl(ei,1&ei.current|2),t.child}e=e.sibling}null!==i.tail&&Xe()>Rs&&(t.flags|=128,r=!0,bo(i,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=ti(s))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),bo(i,!0),null===i.tail&&"hidden"===i.tailMode&&!s.alternate&&!Ca)return ho(t),null}else 2*Xe()-i.renderingStartTime>Rs&&1073741824!==n&&(t.flags|=128,r=!0,bo(i,!1),t.lanes=4194304);i.isBackwards?(s.sibling=t.child,t.child=s):(null!==(n=i.last)?n.sibling=s:t.child=s,i.last=s)}return null!==i.tail?(t=i.tail,i.rendering=t,i.tail=t.sibling,i.renderingStartTime=Xe(),t.sibling=null,n=ei.current,kl(ei,r?1&n|2:1&n),t):(ho(t),null);case 22:case 23:return tc(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&1&t.mode?!!(1073741824&js)&&(ho(t),6&t.subtreeFlags&&(t.flags|=8192)):ho(t),null;case 24:case 25:return null}throw Error(a(156,t.tag))}ro=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},lo=function(){},ao=function(e,t,n,r){var l=e.memoizedProps;if(l!==r){e=t.stateNode,Qa(qa.current);var a,i=null;switch(n){case"input":l=Q(e,l),r=Q(e,r),i=[];break;case"select":l=F({},l,{value:void 0}),r=F({},r,{value:void 0}),i=[];break;case"textarea":l=re(e,l),r=re(e,r),i=[];break;default:"function"!=typeof l.onClick&&"function"==typeof r.onClick&&(e.onclick=Xr)}for(u in ve(n,r),n=null,l)if(!r.hasOwnProperty(u)&&l.hasOwnProperty(u)&&null!=l[u])if("style"===u){var s=l[u];for(a in s)s.hasOwnProperty(a)&&(n||(n={}),n[a]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(o.hasOwnProperty(u)?i||(i=[]):(i=i||[]).push(u,null));for(u in r){var c=r[u];if(s=null!=l?l[u]:void 0,r.hasOwnProperty(u)&&c!==s&&(null!=c||null!=s))if("style"===u)if(s){for(a in s)!s.hasOwnProperty(a)||c&&c.hasOwnProperty(a)||(n||(n={}),n[a]="");for(a in c)c.hasOwnProperty(a)&&s[a]!==c[a]&&(n||(n={}),n[a]=c[a])}else n||(i||(i=[]),i.push(u,n)),n=c;else"dangerouslySetInnerHTML"===u?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(i=i||[]).push(u,c)):"children"===u?"string"!=typeof c&&"number"!=typeof c||(i=i||[]).push(u,""+c):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(o.hasOwnProperty(u)?(null!=c&&"onScroll"===u&&Fr("scroll",e),i||s===c||(i=[])):(i=i||[]).push(u,c))}n&&(i=i||[]).push("style",n);var u=i;(t.updateQueue=u)&&(t.flags|=4)}},io=function(e,t,n,r){n!==r&&(t.flags|=4)};var mo=x.ReactCurrentOwner,vo=!1;function yo(e,t,n,r){t.child=null===e?Wa(t,null,n,r):Ha(t,e.child,n,r)}function xo(e,t,n,r,l){n=n.render;var a=t.ref;return Ql(t,l),r=gi(e,t,n,r,a,l),n=mi(),null===e||vo?(Ca&&n&&Ea(t),t.flags|=1,yo(e,t,r,l),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~l,Uo(e,t,l))}function _o(e,t,n,r,l){if(null===e){var a=n.type;return"function"!=typeof a||jc(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=wc(n.type,null,r,t,t.mode,l)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,jo(e,t,a,r,l))}if(a=e.child,!(e.lanes&l)){var i=a.memoizedProps;if((n=null!==(n=n.compare)?n:ir)(i,r)&&e.ref===t.ref)return Uo(e,t,l)}return t.flags|=1,(e=kc(a,r)).ref=t.ref,e.return=t,t.child=e}function jo(e,t,n,r,l){if(null!==e&&ir(e.memoizedProps,r)&&e.ref===t.ref){if(vo=!1,!(e.lanes&l))return t.lanes=e.lanes,Uo(e,t,l);131072&e.flags&&(vo=!0)}return Eo(e,t,n,r,l)}function ko(e,t,n){var r=t.pendingProps,l=r.children,a=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(1&t.mode){if(!(1073741824&n))return e=null!==a?a.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null},t.updateQueue=null,kl(ks,js),js|=e,null;t.memoizedState={baseLanes:0,cachePool:null},r=null!==a?a.baseLanes:n,kl(ks,js),js|=r}else t.memoizedState={baseLanes:0,cachePool:null},kl(ks,js),js|=n;else null!==a?(r=a.baseLanes|n,t.memoizedState=null):r=n,kl(ks,js),js|=r;return yo(e,t,l,n),t.child}function wo(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Eo(e,t,n,r,l){var a=Cl(n)?Ol:El.current;return a=Sl(t,a),Ql(t,l),n=gi(e,t,n,r,a,l),r=mi(),null===e||vo?(Ca&&r&&Ea(t),t.flags|=1,yo(e,t,n,l),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~l,Uo(e,t,l))}function To(e,t,n,r,l){if(Cl(n)){var a=!0;Pl(t)}else a=!1;if(Ql(t,l),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),da(t,n,r),fa(t,n,r,l),r=!0;else if(null===e){var i=t.stateNode,o=t.memoizedProps;i.props=o;var s=i.context,c=n.contextType;"object"==typeof c&&null!==c?c=Yl(c):c=Sl(t,c=Cl(n)?Ol:El.current);var u=n.getDerivedStateFromProps,d="function"==typeof u||"function"==typeof i.getSnapshotBeforeUpdate;d||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(o!==r||s!==c)&&pa(t,i,r,c),Jl=!1;var p=t.memoizedState;i.state=p,aa(t,r,i,l),s=t.memoizedState,o!==r||p!==s||Tl.current||Jl?("function"==typeof u&&(sa(t,n,u,r),s=t.memoizedState),(o=Jl||ua(t,n,o,r,p,s,c))?(d||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4194308)):("function"==typeof i.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=s),i.props=r,i.state=s,i.context=c,r=o):("function"==typeof i.componentDidMount&&(t.flags|=4194308),r=!1)}else{i=t.stateNode,ea(e,t),o=t.memoizedProps,c=t.type===t.elementType?o:Bl(t.type,o),i.props=c,d=t.pendingProps,p=i.context,"object"==typeof(s=n.contextType)&&null!==s?s=Yl(s):s=Sl(t,s=Cl(n)?Ol:El.current);var f=n.getDerivedStateFromProps;(u="function"==typeof f||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(o!==d||p!==s)&&pa(t,i,r,s),Jl=!1,p=t.memoizedState,i.state=p,aa(t,r,i,l);var b=t.memoizedState;o!==d||p!==b||Tl.current||Jl?("function"==typeof f&&(sa(t,n,f,r),b=t.memoizedState),(c=Jl||ua(t,n,c,r,p,b,s)||!1)?(u||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,b,s),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,b,s)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof i.componentDidUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=b),i.props=r,i.state=b,i.context=s,r=c):("function"!=typeof i.componentDidUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),r=!1)}return Oo(e,t,n,r,a,l)}function Oo(e,t,n,r,l,a){wo(e,t);var i=!!(128&t.flags);if(!r&&!i)return l&&Al(t,n,!1),Uo(e,t,a);r=t.stateNode,mo.current=t;var o=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=Ha(t,e.child,null,a),t.child=Ha(t,null,o,a)):yo(e,t,o,a),t.memoizedState=r.state,l&&Al(t,n,!0),t.child}function So(e){var t=e.stateNode;t.pendingContext?Il(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Il(0,t.context,!1),Ya(e,t.containerInfo)}function Co(e,t,n,r,l){return Fa(),Ma(l),t.flags|=256,yo(e,t,n,r),t.child}var No={dehydrated:null,treeContext:null,retryLane:0};function Io(e){return{baseLanes:e,cachePool:null}}function Ro(e,t,n){var r,l=t.pendingProps,i=ei.current,o=!1,s=!!(128&t.flags);if((r=s)||(r=(null===e||null!==e.memoizedState)&&!!(2&i)),r?(o=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(i|=1),kl(ei,1&i),null===e)return Aa(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(1&t.mode?"$!"===e.data?t.lanes=8:t.lanes=1073741824:t.lanes=1,null):(i=l.children,e=l.fallback,o?(l=t.mode,o=t.child,i={mode:"hidden",children:i},1&l||null===o?o=Tc(i,l,0,null):(o.childLanes=0,o.pendingProps=i),e=Ec(e,l,n,null),o.return=t,e.return=t,o.sibling=e,t.child=o,t.child.memoizedState=Io(n),t.memoizedState=No,e):Po(t,i));if(null!==(i=e.memoizedState)){if(null!==(r=i.dehydrated)){if(s)return 256&t.flags?(t.flags&=-257,Do(e,t,n,Error(a(422)))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=l.fallback,i=t.mode,l=Tc({mode:"visible",children:l.children},i,0,null),(o=Ec(o,i,n,null)).flags|=2,l.return=t,o.return=t,l.sibling=o,t.child=l,1&t.mode&&Ha(t,e.child,null,n),t.child.memoizedState=Io(n),t.memoizedState=No,o);if(1&t.mode)if("$!"===r.data)t=Do(e,t,n,Error(a(419)));else if(l=!!(n&e.childLanes),vo||l){if(null!==(l=ys)){switch(n&-n){case 4:o=2;break;case 16:o=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:o=32;break;case 536870912:o=268435456;break;default:o=0}0!==(l=o&(l.suspendedLanes|n)?0:o)&&l!==i.retryLane&&(i.retryLane=l,Ks(e,l,-1))}ac(),t=Do(e,t,n,Error(a(421)))}else"$?"===r.data?(t.flags|=128,t.child=e.child,t=mc.bind(null,e),r._reactRetry=t,t=null):(n=i.treeContext,Sa=il(r.nextSibling),Oa=t,Ca=!0,Na=null,null!==n&&(va[ya++]=_a,va[ya++]=ja,va[ya++]=xa,_a=n.id,ja=n.overflow,xa=t),(t=Po(t,t.pendingProps.children)).flags|=4096);else t=Do(e,t,n,null);return t}return o?(l=Lo(e,t,l.children,l.fallback,n),o=t.child,i=e.child.memoizedState,o.memoizedState=null===i?Io(n):{baseLanes:i.baseLanes|n,cachePool:null},o.childLanes=e.childLanes&~n,t.memoizedState=No,l):(n=Ao(e,t,l.children,n),t.memoizedState=null,n)}return o?(l=Lo(e,t,l.children,l.fallback,n),o=t.child,i=e.child.memoizedState,o.memoizedState=null===i?Io(n):{baseLanes:i.baseLanes|n,cachePool:null},o.childLanes=e.childLanes&~n,t.memoizedState=No,l):(n=Ao(e,t,l.children,n),t.memoizedState=null,n)}function Po(e,t){return(t=Tc({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Ao(e,t,n,r){var l=e.child;return e=l.sibling,n=kc(l,{mode:"visible",children:n}),!(1&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(null===(r=t.deletions)?(t.deletions=[e],t.flags|=16):r.push(e)),t.child=n}function Lo(e,t,n,r,l){var a=t.mode,i=(e=e.child).sibling,o={mode:"hidden",children:n};return 1&a||t.child===e?(n=kc(e,o)).subtreeFlags=14680064&e.subtreeFlags:((n=t.child).childLanes=0,n.pendingProps=o,t.deletions=null),null!==i?r=kc(i,r):(r=Ec(r,a,l,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}function Do(e,t,n,r){return null!==r&&Ma(r),Ha(t,e.child,null,n),(e=Po(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Fo(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),Gl(e.return,t,n)}function Mo(e,t,n,r,l){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:l}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=n,a.tailMode=l)}function zo(e,t,n){var r=t.pendingProps,l=r.revealOrder,a=r.tail;if(yo(e,t,r.children,n),2&(r=ei.current))r=1&r|2,t.flags|=128;else{if(null!==e&&128&e.flags)e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Fo(e,n,t);else if(19===e.tag)Fo(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(kl(ei,r),1&t.mode)switch(l){case"forwards":for(n=t.child,l=null;null!==n;)null!==(e=n.alternate)&&null===ti(e)&&(l=n),n=n.sibling;null===(n=l)?(l=t.child,t.child=null):(l=n.sibling,n.sibling=null),Mo(t,!1,l,n,a);break;case"backwards":for(n=null,l=t.child,t.child=null;null!==l;){if(null!==(e=l.alternate)&&null===ti(e)){t.child=l;break}e=l.sibling,l.sibling=n,n=l,l=e}Mo(t,!0,n,null,a);break;case"together":Mo(t,!1,null,null,void 0);break;default:t.memoizedState=null}else t.memoizedState=null;return t.child}function Uo(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ts|=t.lanes,!(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(a(153));if(null!==t.child){for(n=kc(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=kc(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Bo(e,t){switch(Ta(t),t.tag){case 1:return Cl(t.type)&&Nl(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return Xa(),jl(Tl),jl(El),ri(),65536&(e=t.flags)&&!(128&e)?(t.flags=-65537&e|128,t):null;case 5:return Za(t),null;case 13:if(jl(ei),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(a(340));Fa()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return jl(ei),null;case 4:return Xa(),null;case 10:return $l(t.type._context),null;case 22:case 23:return tc(),null;default:return null}}var Vo=!1,Ho=!1,Wo="function"==typeof WeakSet?WeakSet:Set,Ko=null;function qo(e,t){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){bc(e,t,n)}else n.current=null}function $o(e,t,n){try{n()}catch(n){bc(e,t,n)}}var Go=!1;function Qo(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var l=r=r.next;do{if((l.tag&e)===e){var a=l.destroy;l.destroy=void 0,void 0!==a&&$o(t,n,a)}l=l.next}while(l!==r)}}function Yo(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function Xo(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"==typeof t?t(e):t.current=e}}function Jo(e,t,n){if(at&&"function"==typeof at.onCommitFiberUnmount)try{at.onCommitFiberUnmount(lt,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e=e.next;do{var l=r,a=l.destroy;l=l.tag,void 0!==a&&(2&l||4&l)&&$o(t,n,a),r=r.next}while(r!==e)}break;case 1:if(qo(t,n),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){bc(t,n,e)}break;case 5:qo(t,n);break;case 4:as(e,t,n)}}function Zo(e){var t=e.alternate;null!==t&&(e.alternate=null,Zo(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[cl],delete t[ul],delete t[pl],delete t[fl],delete t[bl])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function es(e){return 5===e.tag||3===e.tag||4===e.tag}function ts(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||es(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ns(e){e:{for(var t=e.return;null!==t;){if(es(t))break e;t=t.return}throw Error(a(160))}var n=t;switch(n.tag){case 5:t=n.stateNode,32&n.flags&&(pe(t,""),n.flags&=-33),ls(e,n=ts(e),t);break;case 3:case 4:t=n.stateNode.containerInfo,rs(e,n=ts(e),t);break;default:throw Error(a(161))}}function rs(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Xr));else if(4!==r&&null!==(e=e.child))for(rs(e,t,n),e=e.sibling;null!==e;)rs(e,t,n),e=e.sibling}function ls(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(ls(e,t,n),e=e.sibling;null!==e;)ls(e,t,n),e=e.sibling}function as(e,t,n){for(var r,l,i=t,o=!1;;){if(!o){o=i.return;e:for(;;){if(null===o)throw Error(a(160));switch(r=o.stateNode,o.tag){case 5:l=!1;break e;case 3:case 4:r=r.containerInfo,l=!0;break e}o=o.return}o=!0}if(5===i.tag||6===i.tag){e:for(var s=e,c=i,u=n,d=c;;)if(Jo(s,d,u),null!==d.child&&4!==d.tag)d.child.return=d,d=d.child;else{if(d===c)break e;for(;null===d.sibling;){if(null===d.return||d.return===c)break e;d=d.return}d.sibling.return=d.return,d=d.sibling}l?(s=r,c=i.stateNode,8===s.nodeType?s.parentNode.removeChild(c):s.removeChild(c)):r.removeChild(i.stateNode)}else if(18===i.tag)l?(s=r,c=i.stateNode,8===s.nodeType?al(s.parentNode,c):1===s.nodeType&&al(s,c),Bt(s)):al(r,i.stateNode);else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,l=!0,i.child.return=i,i=i.child;continue}}else if(Jo(e,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(o=!1)}i.sibling.return=i.return,i=i.sibling}}function is(e,t){switch(t.tag){case 0:case 11:case 14:case 15:return Qo(3,t,t.return),Yo(3,t),void Qo(5,t,t.return);case 1:case 12:case 17:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,l=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for("input"===e&&"radio"===r.type&&null!=r.name&&X(n,r),ye(e,l),t=ye(e,r),l=0;l<i.length;l+=2){var o=i[l],s=i[l+1];"style"===o?ge(n,s):"dangerouslySetInnerHTML"===o?de(n,s):"children"===o?pe(n,s):y(n,o,s,t)}switch(e){case"input":J(n,r);break;case"textarea":ae(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(i=r.value)?ne(n,!!r.multiple,i,!1):e!==!!r.multiple&&(null!=r.defaultValue?ne(n,!!r.multiple,r.defaultValue,!0):ne(n,!!r.multiple,r.multiple?[]:"",!1))}n[ul]=r}}return;case 6:if(null===t.stateNode)throw Error(a(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void(null!==e&&e.memoizedState.isDehydrated&&Bt(t.stateNode.containerInfo));case 13:case 19:return void os(t)}throw Error(a(163))}function os(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Wo),t.forEach((function(t){var r=vc.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function ss(e,t,n){Ko=e,cs(e,t,n)}function cs(e,t,n){for(var r=!!(1&e.mode);null!==Ko;){var l=Ko,a=l.child;if(22===l.tag&&r){var i=null!==l.memoizedState||Vo;if(!i){var o=l.alternate,s=null!==o&&null!==o.memoizedState||Ho;o=Vo;var c=Ho;if(Vo=i,(Ho=s)&&!c)for(Ko=l;null!==Ko;)s=(i=Ko).child,22===i.tag&&null!==i.memoizedState?ps(l):null!==s?(s.return=i,Ko=s):ps(l);for(;null!==a;)Ko=a,cs(a,t,n),a=a.sibling;Ko=l,Vo=o,Ho=c}us(e)}else 8772&l.subtreeFlags&&null!==a?(a.return=l,Ko=a):us(e)}}function us(e){for(;null!==Ko;){var t=Ko;if(8772&t.flags){var n=t.alternate;try{if(8772&t.flags)switch(t.tag){case 0:case 11:case 15:Ho||Yo(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!Ho)if(null===n)r.componentDidMount();else{var l=t.elementType===t.type?n.memoizedProps:Bl(t.type,n.memoizedProps);r.componentDidUpdate(l,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var i=t.updateQueue;null!==i&&ia(t,i,r);break;case 3:var o=t.updateQueue;if(null!==o){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}ia(t,o,n)}break;case 5:var s=t.stateNode;if(null===n&&4&t.flags){n=s;var c=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&n.focus();break;case"img":c.src&&(n.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:break;case 13:if(null===t.memoizedState){var u=t.alternate;if(null!==u){var d=u.memoizedState;if(null!==d){var p=d.dehydrated;null!==p&&Bt(p)}}}break;default:throw Error(a(163))}Ho||512&t.flags&&Xo(t)}catch(e){bc(t,t.return,e)}}if(t===e){Ko=null;break}if(null!==(n=t.sibling)){n.return=t.return,Ko=n;break}Ko=t.return}}function ds(e){for(;null!==Ko;){var t=Ko;if(t===e){Ko=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Ko=n;break}Ko=t.return}}function ps(e){for(;null!==Ko;){var t=Ko;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{Yo(4,t)}catch(e){bc(t,n,e)}break;case 1:var r=t.stateNode;if("function"==typeof r.componentDidMount){var l=t.return;try{r.componentDidMount()}catch(e){bc(t,l,e)}}var a=t.return;try{Xo(t)}catch(e){bc(t,a,e)}break;case 5:var i=t.return;try{Xo(t)}catch(e){bc(t,i,e)}}}catch(e){bc(t,t.return,e)}if(t===e){Ko=null;break}var o=t.sibling;if(null!==o){o.return=t.return,Ko=o;break}Ko=t.return}}var fs,bs=Math.ceil,hs=x.ReactCurrentDispatcher,gs=x.ReactCurrentOwner,ms=x.ReactCurrentBatchConfig,vs=0,ys=null,xs=null,_s=0,js=0,ks=_l(0),ws=0,Es=null,Ts=0,Os=0,Ss=0,Cs=null,Ns=null,Is=0,Rs=1/0,Ps=!1,As=null,Ls=null,Ds=!1,Fs=null,Ms=0,zs=0,Us=null,Bs=-1,Vs=0;function Hs(){return 6&vs?Xe():-1!==Bs?Bs:Bs=Xe()}function Ws(e){return 1&e.mode?2&vs&&0!==_s?_s&-_s:null!==Ul.transition?(0===Vs&&(e=ct,!(4194240&(ct<<=1))&&(ct=64),Vs=e),Vs):0!==(e=vt)?e:e=void 0===(e=window.event)?16:Gt(e.type):1}function Ks(e,t,n){if(50<zs)throw zs=0,Us=null,Error(a(185));var r=qs(e,t);return null===r?null:(gt(r,t,n),2&vs&&r===ys||(r===ys&&(!(2&vs)&&(Os|=t),4===ws&&Xs(r,_s)),$s(r,n),1===t&&0===vs&&!(1&e.mode)&&(Rs=Xe()+500,Dl&&zl())),r)}function qs(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function $s(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,l=e.expirationTimes,a=e.pendingLanes;0<a;){var i=31-it(a),o=1<<i,s=l[i];-1===s?o&n&&!(o&r)||(l[i]=ft(o,t)):s<=t&&(e.expiredLanes|=o),a&=~o}}(e,t);var r=pt(e,e===ys?_s:0);if(0===r)null!==n&&Ge(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&Ge(n),1===t)0===e.tag?function(e){Dl=!0,Ml(e)}(Js.bind(null,e)):Ml(Js.bind(null,e)),rl((function(){0===vs&&zl()})),n=null;else{switch(yt(r)){case 1:n=Ze;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=rt}n=yc(n,Gs.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function Gs(e,t){if(Bs=-1,Vs=0,6&vs)throw Error(a(327));var n=e.callbackNode;if(pc()&&e.callbackNode!==n)return null;var r=pt(e,e===ys?_s:0);if(0===r)return null;if(30&r||r&e.expiredLanes||t)t=ic(e,r);else{t=r;var l=vs;vs|=2;var i=lc();for(ys===e&&_s===t||(Rs=Xe()+500,nc(e,t));;)try{sc();break}catch(t){rc(e,t)}ql(),hs.current=i,vs=l,null!==xs?t=0:(ys=null,_s=0,t=ws)}if(0!==t){if(2===t&&(0!==(l=bt(e))&&(r=l,t=Qs(e,l))),1===t)throw n=Es,nc(e,0),Xs(e,r),$s(e,Xe()),n;if(6===t)Xs(e,r);else{if(l=e.current.alternate,!(30&r||function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var l=n[r],a=l.getSnapshot;l=l.value;try{if(!ar(a(),l))return!1}catch(e){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(l)||(t=ic(e,r),2===t&&(i=bt(e),0!==i&&(r=i,t=Qs(e,i))),1!==t)))throw n=Es,nc(e,0),Xs(e,r),$s(e,Xe()),n;switch(e.finishedWork=l,e.finishedLanes=r,t){case 0:case 1:throw Error(a(345));case 2:case 5:dc(e,Ns);break;case 3:if(Xs(e,r),(130023424&r)===r&&10<(t=Is+500-Xe())){if(0!==pt(e,0))break;if(((l=e.suspendedLanes)&r)!==r){Hs(),e.pingedLanes|=e.suspendedLanes&l;break}e.timeoutHandle=el(dc.bind(null,e,Ns),t);break}dc(e,Ns);break;case 4:if(Xs(e,r),(4194240&r)===r)break;for(t=e.eventTimes,l=-1;0<r;){var o=31-it(r);i=1<<o,(o=t[o])>l&&(l=o),r&=~i}if(r=l,10<(r=(120>(r=Xe()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*bs(r/1960))-r)){e.timeoutHandle=el(dc.bind(null,e,Ns),r);break}dc(e,Ns);break;default:throw Error(a(329))}}}return $s(e,Xe()),e.callbackNode===n?Gs.bind(null,e):null}function Qs(e,t){var n=Cs;return e.current.memoizedState.isDehydrated&&(nc(e,t).flags|=256),2!==(e=ic(e,t))&&(t=Ns,Ns=n,null!==t&&Ys(t)),e}function Ys(e){null===Ns?Ns=e:Ns.push.apply(Ns,e)}function Xs(e,t){for(t&=~Ss,t&=~Os,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-it(t),r=1<<n;e[n]=-1,t&=~r}}function Js(e){if(6&vs)throw Error(a(327));pc();var t=pt(e,0);if(!(1&t))return $s(e,Xe()),null;var n=ic(e,t);if(0!==e.tag&&2===n){var r=bt(e);0!==r&&(t=r,n=Qs(e,r))}if(1===n)throw n=Es,nc(e,0),Xs(e,t),$s(e,Xe()),n;if(6===n)throw Error(a(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,dc(e,Ns),$s(e,Xe()),null}function Zs(e,t){var n=vs;vs|=1;try{return e(t)}finally{0===(vs=n)&&(Rs=Xe()+500,Dl&&zl())}}function ec(e){null!==Fs&&0===Fs.tag&&!(6&vs)&&pc();var t=vs;vs|=1;var n=ms.transition,r=vt;try{if(ms.transition=null,vt=1,e)return e()}finally{vt=r,ms.transition=n,!(6&(vs=t))&&zl()}}function tc(){js=ks.current,jl(ks)}function nc(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,tl(n)),null!==xs)for(n=xs.return;null!==n;){var r=n;switch(Ta(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&Nl();break;case 3:Xa(),jl(Tl),jl(El),ri();break;case 5:Za(r);break;case 4:Xa();break;case 13:case 19:jl(ei);break;case 10:$l(r.type._context);break;case 22:case 23:tc()}n=n.return}if(ys=e,xs=e=kc(e.current,null),_s=js=t,ws=0,Es=null,Ss=Os=Ts=0,Ns=Cs=null,null!==Xl){for(t=0;t<Xl.length;t++)if(null!==(r=(n=Xl[t]).interleaved)){n.interleaved=null;var l=r.next,a=n.pending;if(null!==a){var i=a.next;a.next=l,r.next=i}n.pending=r}Xl=null}return e}function rc(e,t){for(;;){var n=xs;try{if(ql(),li.current=Xi,ui){for(var r=oi.memoizedState;null!==r;){var l=r.queue;null!==l&&(l.pending=null),r=r.next}ui=!1}if(ii=0,ci=si=oi=null,di=!1,pi=0,gs.current=null,null===n||null===n.return){ws=1,Es=t,xs=null;break}e:{var i=e,o=n.return,s=n,c=t;if(t=_s,s.flags|=32768,null!==c&&"object"==typeof c&&"function"==typeof c.then){var u=c,d=s,p=d.tag;if(!(1&d.mode||0!==p&&11!==p&&15!==p)){var f=d.alternate;f?(d.updateQueue=f.updateQueue,d.memoizedState=f.memoizedState,d.lanes=f.lanes):(d.updateQueue=null,d.memoizedState=null)}var b=po(o);if(null!==b){b.flags&=-257,fo(b,o,s,0,t),1&b.mode&&uo(i,u,t),c=u;var h=(t=b).updateQueue;if(null===h){var g=new Set;g.add(c),t.updateQueue=g}else h.add(c);break e}if(!(1&t)){uo(i,u,t),ac();break e}c=Error(a(426))}else if(Ca&&1&s.mode){var m=po(o);if(null!==m){!(65536&m.flags)&&(m.flags|=256),fo(m,o,s,0,t),Ma(c);break e}}i=c,4!==ws&&(ws=2),null===Cs?Cs=[i]:Cs.push(i),c=to(c,s),s=o;do{switch(s.tag){case 3:s.flags|=65536,t&=-t,s.lanes|=t,la(s,so(0,c,t));break e;case 1:i=c;var v=s.type,y=s.stateNode;if(!(128&s.flags||"function"!=typeof v.getDerivedStateFromError&&(null===y||"function"!=typeof y.componentDidCatch||null!==Ls&&Ls.has(y)))){s.flags|=65536,t&=-t,s.lanes|=t,la(s,co(s,i,t));break e}}s=s.return}while(null!==s)}uc(n)}catch(e){t=e,xs===n&&null!==n&&(xs=n=n.return);continue}break}}function lc(){var e=hs.current;return hs.current=Xi,null===e?Xi:e}function ac(){0!==ws&&3!==ws&&2!==ws||(ws=4),null===ys||!(268435455&Ts)&&!(268435455&Os)||Xs(ys,_s)}function ic(e,t){var n=vs;vs|=2;var r=lc();for(ys===e&&_s===t||nc(e,t);;)try{oc();break}catch(t){rc(e,t)}if(ql(),vs=n,hs.current=r,null!==xs)throw Error(a(261));return ys=null,_s=0,ws}function oc(){for(;null!==xs;)cc(xs)}function sc(){for(;null!==xs&&!Qe();)cc(xs)}function cc(e){var t=fs(e.alternate,e,js);e.memoizedProps=e.pendingProps,null===t?uc(e):xs=t,gs.current=null}function uc(e){var t=e;do{var n=t.alternate;if(e=t.return,32768&t.flags){if(null!==(n=Bo(n,t)))return n.flags&=32767,void(xs=n);if(null===e)return ws=6,void(xs=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}else if(null!==(n=go(n,t,js)))return void(xs=n);if(null!==(t=t.sibling))return void(xs=t);xs=t=e}while(null!==t);0===ws&&(ws=5)}function dc(e,t){var n=vt,r=ms.transition;try{ms.transition=null,vt=1,function(e,t,n){do{pc()}while(null!==Fs);if(6&vs)throw Error(a(327));var r=e.finishedWork,l=e.finishedLanes;if(null===r)return null;if(e.finishedWork=null,e.finishedLanes=0,r===e.current)throw Error(a(177));e.callbackNode=null,e.callbackPriority=0;var i=r.lanes|r.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var l=31-it(n),a=1<<l;t[l]=0,r[l]=-1,e[l]=-1,n&=~a}}(e,i),e===ys&&(xs=ys=null,_s=0),!(2064&r.subtreeFlags)&&!(2064&r.flags)||Ds||(Ds=!0,yc(tt,(function(){return pc(),null}))),i=!!(15990&r.flags),!!(15990&r.subtreeFlags)||i){i=ms.transition,ms.transition=null;var o=vt;vt=1;var s=vs;vs|=4,gs.current=null,function(e,t){if(dr(e=ur())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var l=r.anchorOffset,i=r.focusNode;r=r.focusOffset;try{n.nodeType,i.nodeType}catch(e){n=null;break e}var o=0,s=-1,c=-1,u=0,d=0,p=e,f=null;t:for(;;){for(var b;p!==n||0!==l&&3!==p.nodeType||(s=o+l),p!==i||0!==r&&3!==p.nodeType||(c=o+r),3===p.nodeType&&(o+=p.nodeValue.length),null!==(b=p.firstChild);)f=p,p=b;for(;;){if(p===e)break t;if(f===n&&++u===l&&(s=o),f===i&&++d===r&&(c=o),null!==(b=p.nextSibling))break;f=(p=f).parentNode}p=b}n=-1===s||-1===c?null:{start:s,end:c}}else n=null}n=n||{start:0,end:0}}else n=null;for(Jr={focusedElem:e,selectionRange:n},Ko=t;null!==Ko;)if(e=(t=Ko).child,1028&t.subtreeFlags&&null!==e)e.return=t,Ko=e;else for(;null!==Ko;){t=Ko;try{var h=t.alternate;if(1024&t.flags)switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==h){var g=h.memoizedProps,m=h.memoizedState,v=t.stateNode,y=v.getSnapshotBeforeUpdate(t.elementType===t.type?g:Bl(t.type,g),m);v.__reactInternalSnapshotBeforeUpdate=y}break;case 3:var x=t.stateNode.containerInfo;if(1===x.nodeType)x.textContent="";else if(9===x.nodeType){var _=x.body;null!=_&&(_.textContent="")}break;default:throw Error(a(163))}}catch(e){bc(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,Ko=e;break}Ko=t.return}h=Go,Go=!1}(e,r),function(e,t){for(Ko=t;null!==Ko;){var n=(t=Ko).deletions;if(null!==n)for(var r=0;r<n.length;r++){var l=n[r];try{as(e,l,t);var a=l.alternate;null!==a&&(a.return=null),l.return=null}catch(e){bc(l,t,e)}}if(n=t.child,12854&t.subtreeFlags&&null!==n)n.return=t,Ko=n;else for(;null!==Ko;){t=Ko;try{var i=t.flags;if(32&i&&pe(t.stateNode,""),512&i){var o=t.alternate;if(null!==o){var s=o.ref;null!==s&&("function"==typeof s?s(null):s.current=null)}}if(8192&i)switch(t.tag){case 13:if(null!==t.memoizedState){var c=t.alternate;null!==c&&null!==c.memoizedState||(Is=Xe())}break;case 22:var u=null!==t.memoizedState,d=t.alternate,p=null!==d&&null!==d.memoizedState;e:{l=u;for(var f=null,b=r=n=t;;){if(5===b.tag){if(null===f){f=b;var h=b.stateNode;if(l){var g=h.style;"function"==typeof g.setProperty?g.setProperty("display","none","important"):g.display="none"}else{var m=b.stateNode,v=b.memoizedProps.style,y=null!=v&&v.hasOwnProperty("display")?v.display:null;m.style.display=he("display",y)}}}else if(6===b.tag)null===f&&(b.stateNode.nodeValue=l?"":b.memoizedProps);else if((22!==b.tag&&23!==b.tag||null===b.memoizedState||b===r)&&null!==b.child){b.child.return=b,b=b.child;continue}if(b===r)break;for(;null===b.sibling;){if(null===b.return||b.return===r)break e;f===b&&(f=null),b=b.return}f===b&&(f=null),b.sibling.return=b.return,b=b.sibling}}if(u&&!p&&1&n.mode){Ko=n;for(var x=n.child;null!==x;){for(n=Ko=x;null!==Ko;){var _=(r=Ko).child;switch(r.tag){case 0:case 11:case 14:case 15:Qo(4,r,r.return);break;case 1:qo(r,r.return);var j=r.stateNode;if("function"==typeof j.componentWillUnmount){var k=r.return;try{j.props=r.memoizedProps,j.state=r.memoizedState,j.componentWillUnmount()}catch(e){bc(r,k,e)}}break;case 5:qo(r,r.return);break;case 22:if(null!==r.memoizedState){ds(n);continue}}null!==_?(_.return=r,Ko=_):ds(n)}x=x.sibling}}}switch(4102&i){case 2:ns(t),t.flags&=-3;break;case 6:ns(t),t.flags&=-3,is(t.alternate,t);break;case 4096:t.flags&=-4097;break;case 4100:t.flags&=-4097,is(t.alternate,t);break;case 4:is(t.alternate,t)}}catch(e){bc(t,t.return,e)}if(null!==(n=t.sibling)){n.return=t.return,Ko=n;break}Ko=t.return}}}(e,r),pr(Jr),Jr=null,e.current=r,ss(r,e,l),Ye(),vs=s,vt=o,ms.transition=i}else e.current=r;if(Ds&&(Ds=!1,Fs=e,Ms=l),i=e.pendingLanes,0===i&&(Ls=null),function(e){if(at&&"function"==typeof at.onCommitFiberRoot)try{at.onCommitFiberRoot(lt,e,void 0,!(128&~e.current.flags))}catch(e){}}(r.stateNode),$s(e,Xe()),null!==t)for(n=e.onRecoverableError,r=0;r<t.length;r++)n(t[r]);if(Ps)throw Ps=!1,e=As,As=null,e;!!(1&Ms)&&0!==e.tag&&pc(),i=e.pendingLanes,1&i?e===Us?zs++:(zs=0,Us=e):zs=0,zl()}(e,t,n)}finally{ms.transition=r,vt=n}return null}function pc(){if(null!==Fs){var e=yt(Ms),t=ms.transition,n=vt;try{if(ms.transition=null,vt=16>e?16:e,null===Fs)var r=!1;else{if(e=Fs,Fs=null,Ms=0,6&vs)throw Error(a(331));var l=vs;for(vs|=4,Ko=e.current;null!==Ko;){var i=Ko,o=i.child;if(16&Ko.flags){var s=i.deletions;if(null!==s){for(var c=0;c<s.length;c++){var u=s[c];for(Ko=u;null!==Ko;){var d=Ko;switch(d.tag){case 0:case 11:case 15:Qo(8,d,i)}var p=d.child;if(null!==p)p.return=d,Ko=p;else for(;null!==Ko;){var f=(d=Ko).sibling,b=d.return;if(Zo(d),d===u){Ko=null;break}if(null!==f){f.return=b,Ko=f;break}Ko=b}}}var h=i.alternate;if(null!==h){var g=h.child;if(null!==g){h.child=null;do{var m=g.sibling;g.sibling=null,g=m}while(null!==g)}}Ko=i}}if(2064&i.subtreeFlags&&null!==o)o.return=i,Ko=o;else e:for(;null!==Ko;){if(2048&(i=Ko).flags)switch(i.tag){case 0:case 11:case 15:Qo(9,i,i.return)}var v=i.sibling;if(null!==v){v.return=i.return,Ko=v;break e}Ko=i.return}}var y=e.current;for(Ko=y;null!==Ko;){var x=(o=Ko).child;if(2064&o.subtreeFlags&&null!==x)x.return=o,Ko=x;else e:for(o=y;null!==Ko;){if(2048&(s=Ko).flags)try{switch(s.tag){case 0:case 11:case 15:Yo(9,s)}}catch(e){bc(s,s.return,e)}if(s===o){Ko=null;break e}var _=s.sibling;if(null!==_){_.return=s.return,Ko=_;break e}Ko=s.return}}if(vs=l,zl(),at&&"function"==typeof at.onPostCommitFiberRoot)try{at.onPostCommitFiberRoot(lt,e)}catch(e){}r=!0}return r}finally{vt=n,ms.transition=t}}return!1}function fc(e,t,n){na(e,t=so(0,t=to(n,t),1)),t=Hs(),null!==(e=qs(e,1))&&(gt(e,1,t),$s(e,t))}function bc(e,t,n){if(3===e.tag)fc(e,e,n);else for(;null!==t;){if(3===t.tag){fc(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Ls||!Ls.has(r))){na(t,e=co(t,e=to(n,e),1)),e=Hs(),null!==(t=qs(t,1))&&(gt(t,1,e),$s(t,e));break}}t=t.return}}function hc(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=Hs(),e.pingedLanes|=e.suspendedLanes&n,ys===e&&(_s&n)===n&&(4===ws||3===ws&&(130023424&_s)===_s&&500>Xe()-Is?nc(e,0):Ss|=n),$s(e,t)}function gc(e,t){0===t&&(1&e.mode?(t=ut,!(130023424&(ut<<=1))&&(ut=4194304)):t=1);var n=Hs();null!==(e=qs(e,t))&&(gt(e,t,n),$s(e,n))}function mc(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),gc(e,n)}function vc(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,l=e.memoizedState;null!==l&&(n=l.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(a(314))}null!==r&&r.delete(t),gc(e,n)}function yc(e,t){return $e(e,t)}function xc(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function _c(e,t,n,r){return new xc(e,t,n,r)}function jc(e){return!(!(e=e.prototype)||!e.isReactComponent)}function kc(e,t){var n=e.alternate;return null===n?((n=_c(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function wc(e,t,n,r,l,i){var o=2;if(r=e,"function"==typeof e)jc(e)&&(o=1);else if("string"==typeof e)o=5;else e:switch(e){case k:return Ec(n.children,l,i,t);case w:o=8,l|=8;break;case E:return(e=_c(12,n,t,2|l)).elementType=E,e.lanes=i,e;case C:return(e=_c(13,n,t,l)).elementType=C,e.lanes=i,e;case N:return(e=_c(19,n,t,l)).elementType=N,e.lanes=i,e;case P:return Tc(n,l,i,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case T:o=10;break e;case O:o=9;break e;case S:o=11;break e;case I:o=14;break e;case R:o=16,r=null;break e}throw Error(a(130,null==e?e:typeof e,""))}return(t=_c(o,n,t,l)).elementType=e,t.type=r,t.lanes=i,t}function Ec(e,t,n,r){return(e=_c(7,e,r,t)).lanes=n,e}function Tc(e,t,n,r){return(e=_c(22,e,r,t)).elementType=P,e.lanes=n,e.stateNode={},e}function Oc(e,t,n){return(e=_c(6,e,null,t)).lanes=n,e}function Sc(e,t,n){return(t=_c(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Cc(e,t,n,r,l){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=ht(0),this.expirationTimes=ht(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=ht(0),this.identifierPrefix=r,this.onRecoverableError=l,this.mutableSourceEagerHydrationData=null}function Nc(e,t,n,r,l,a,i,o,s){return e=new Cc(e,t,n,o,s),1===t?(t=1,!0===a&&(t|=8)):t=0,a=_c(3,null,null,t),e.current=a,a.stateNode=e,a.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null},Zl(a),e}function Ic(e){if(!e)return wl;e:{if(Ve(e=e._reactInternals)!==e||1!==e.tag)throw Error(a(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Cl(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(a(171))}if(1===e.tag){var n=e.type;if(Cl(n))return Rl(e,n,t)}return t}function Rc(e,t,n,r,l,a,i,o,s){return(e=Nc(n,r,!0,e,0,a,0,o,s)).context=Ic(null),n=e.current,(a=ta(r=Hs(),l=Ws(n))).callback=null!=t?t:null,na(n,a),e.current.lanes=l,gt(e,l,r),$s(e,r),e}function Pc(e,t,n,r){var l=t.current,a=Hs(),i=Ws(l);return n=Ic(n),null===t.context?t.context=n:t.pendingContext=n,(t=ta(a,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),na(l,t),null!==(e=Ks(l,i,a))&&ra(e,l,i),i}function Ac(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Lc(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Dc(e,t){Lc(e,t),(e=e.alternate)&&Lc(e,t)}fs=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Tl.current)vo=!0;else{if(!(e.lanes&n||128&t.flags))return vo=!1,function(e,t,n){switch(t.tag){case 3:So(t),Fa();break;case 5:Ja(t);break;case 1:Cl(t.type)&&Pl(t);break;case 4:Ya(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,l=t.memoizedProps.value;kl(Vl,r._currentValue),r._currentValue=l;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(kl(ei,1&ei.current),t.flags|=128,null):n&t.child.childLanes?Ro(e,t,n):(kl(ei,1&ei.current),null!==(e=Uo(e,t,n))?e.sibling:null);kl(ei,1&ei.current);break;case 19:if(r=!!(n&t.childLanes),128&e.flags){if(r)return zo(e,t,n);t.flags|=128}if(null!==(l=t.memoizedState)&&(l.rendering=null,l.tail=null,l.lastEffect=null),kl(ei,ei.current),r)break;return null;case 22:case 23:return t.lanes=0,ko(e,t,n)}return Uo(e,t,n)}(e,t,n);vo=!!(131072&e.flags)}else vo=!1,Ca&&1048576&t.flags&&wa(t,ma,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps;var l=Sl(t,El.current);Ql(t,n),l=gi(null,t,r,e,l,n);var i=mi();return t.flags|=1,"object"==typeof l&&null!==l&&"function"==typeof l.render&&void 0===l.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Cl(r)?(i=!0,Pl(t)):i=!1,t.memoizedState=null!==l.state&&void 0!==l.state?l.state:null,Zl(t),l.updater=ca,t.stateNode=l,l._reactInternals=t,fa(t,r,e,n),t=Oo(null,t,r,!0,i,n)):(t.tag=0,Ca&&i&&Ea(t),yo(null,t,l,n),t=t.child),t;case 16:r=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,r=(l=r._init)(r._payload),t.type=r,l=t.tag=function(e){if("function"==typeof e)return jc(e)?1:0;if(null!=e){if((e=e.$$typeof)===S)return 11;if(e===I)return 14}return 2}(r),e=Bl(r,e),l){case 0:t=Eo(null,t,r,e,n);break e;case 1:t=To(null,t,r,e,n);break e;case 11:t=xo(null,t,r,e,n);break e;case 14:t=_o(null,t,r,Bl(r.type,e),n);break e}throw Error(a(306,r,""))}return t;case 0:return r=t.type,l=t.pendingProps,Eo(e,t,r,l=t.elementType===r?l:Bl(r,l),n);case 1:return r=t.type,l=t.pendingProps,To(e,t,r,l=t.elementType===r?l:Bl(r,l),n);case 3:e:{if(So(t),null===e)throw Error(a(387));r=t.pendingProps,l=(i=t.memoizedState).element,ea(e,t),aa(t,r,null,n);var o=t.memoizedState;if(r=o.element,i.isDehydrated){if(i={element:r,isDehydrated:!1,cache:o.cache,transitions:o.transitions},t.updateQueue.baseState=i,t.memoizedState=i,256&t.flags){t=Co(e,t,r,n,l=Error(a(423)));break e}if(r!==l){t=Co(e,t,r,n,l=Error(a(424)));break e}for(Sa=il(t.stateNode.containerInfo.firstChild),Oa=t,Ca=!0,Na=null,n=Wa(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(Fa(),r===l){t=Uo(e,t,n);break e}yo(e,t,r,n)}t=t.child}return t;case 5:return Ja(t),null===e&&Aa(t),r=t.type,l=t.pendingProps,i=null!==e?e.memoizedProps:null,o=l.children,Zr(r,l)?o=null:null!==i&&Zr(r,i)&&(t.flags|=32),wo(e,t),yo(e,t,o,n),t.child;case 6:return null===e&&Aa(t),null;case 13:return Ro(e,t,n);case 4:return Ya(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Ha(t,null,r,n):yo(e,t,r,n),t.child;case 11:return r=t.type,l=t.pendingProps,xo(e,t,r,l=t.elementType===r?l:Bl(r,l),n);case 7:return yo(e,t,t.pendingProps,n),t.child;case 8:case 12:return yo(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,l=t.pendingProps,i=t.memoizedProps,o=l.value,kl(Vl,r._currentValue),r._currentValue=o,null!==i)if(ar(i.value,o)){if(i.children===l.children&&!Tl.current){t=Uo(e,t,n);break e}}else for(null!==(i=t.child)&&(i.return=t);null!==i;){var s=i.dependencies;if(null!==s){o=i.child;for(var c=s.firstContext;null!==c;){if(c.context===r){if(1===i.tag){(c=ta(-1,n&-n)).tag=2;var u=i.updateQueue;if(null!==u){var d=(u=u.shared).pending;null===d?c.next=c:(c.next=d.next,d.next=c),u.pending=c}}i.lanes|=n,null!==(c=i.alternate)&&(c.lanes|=n),Gl(i.return,n,t),s.lanes|=n;break}c=c.next}}else if(10===i.tag)o=i.type===t.type?null:i.child;else if(18===i.tag){if(null===(o=i.return))throw Error(a(341));o.lanes|=n,null!==(s=o.alternate)&&(s.lanes|=n),Gl(o,n,t),o=i.sibling}else o=i.child;if(null!==o)o.return=i;else for(o=i;null!==o;){if(o===t){o=null;break}if(null!==(i=o.sibling)){i.return=o.return,o=i;break}o=o.return}i=o}yo(e,t,l.children,n),t=t.child}return t;case 9:return l=t.type,r=t.pendingProps.children,Ql(t,n),r=r(l=Yl(l)),t.flags|=1,yo(e,t,r,n),t.child;case 14:return l=Bl(r=t.type,t.pendingProps),_o(e,t,r,l=Bl(r.type,l),n);case 15:return jo(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,l=t.pendingProps,l=t.elementType===r?l:Bl(r,l),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,Cl(r)?(e=!0,Pl(t)):e=!1,Ql(t,n),da(t,r,l),fa(t,r,l,n),Oo(null,t,r,!0,e,n);case 19:return zo(e,t,n);case 22:return ko(e,t,n)}throw Error(a(156,t.tag))};var Fc="function"==typeof reportError?reportError:function(e){console.error(e)};function Mc(e){this._internalRoot=e}function zc(e){this._internalRoot=e}function Uc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Bc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Vc(){}function Hc(e,t,n,r,l){var a=n._reactRootContainer;if(a){var i=a;if("function"==typeof l){var o=l;l=function(){var e=Ac(i);o.call(e)}}Pc(t,i,e,l)}else i=function(e,t,n,r,l){if(l){if("function"==typeof r){var a=r;r=function(){var e=Ac(i);a.call(e)}}var i=Rc(t,r,e,0,null,!1,0,"",Vc);return e._reactRootContainer=i,e[dl]=i.current,Ur(8===e.nodeType?e.parentNode:e),ec(),i}for(;l=e.lastChild;)e.removeChild(l);if("function"==typeof r){var o=r;r=function(){var e=Ac(s);o.call(e)}}var s=Nc(e,0,!1,null,0,!1,0,"",Vc);return e._reactRootContainer=s,e[dl]=s.current,Ur(8===e.nodeType?e.parentNode:e),ec((function(){Pc(t,s,n,r)})),s}(n,t,e,l,r);return Ac(i)}zc.prototype.render=Mc.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(a(409));Pc(e,t,null,null)},zc.prototype.unmount=Mc.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;ec((function(){Pc(null,e,null,null)})),t[dl]=null}},zc.prototype.unstable_scheduleHydration=function(e){if(e){var t=kt();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Rt.length&&0!==t&&t<Rt[n].priority;n++);Rt.splice(n,0,e),0===n&&Dt(e)}},xt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=dt(t.pendingLanes);0!==n&&(mt(t,1|n),$s(t,Xe()),!(6&vs)&&(Rs=Xe()+500,zl()))}break;case 13:var r=Hs();ec((function(){return Ks(e,1,r)})),Dc(e,1)}},_t=function(e){13===e.tag&&(Ks(e,134217728,Hs()),Dc(e,134217728))},jt=function(e){if(13===e.tag){var t=Hs(),n=Ws(e);Ks(e,n,t),Dc(e,n)}},kt=function(){return vt},wt=function(e,t){var n=vt;try{return vt=e,t()}finally{vt=n}},je=function(e,t,n){switch(t){case"input":if(J(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var l=vl(r);if(!l)throw Error(a(90));$(r),J(r,l)}}}break;case"textarea":ae(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Se=Zs,Ce=ec;var Wc={usingClientEntryPoint:!1,Events:[gl,ml,vl,Te,Oe,Zs]},Kc={findFiberByHostInstance:hl,bundleType:0,version:"18.0.0-fc46dba67-20220329",rendererPackageName:"react-dom"},qc={bundleType:Kc.bundleType,version:Kc.version,rendererPackageName:Kc.rendererPackageName,rendererConfig:Kc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:x.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ke(e))?null:e.stateNode},findFiberByHostInstance:Kc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var $c=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!$c.isDisabled&&$c.supportsFiber)try{lt=$c.inject(qc),at=$c}catch(ue){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Wc,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Uc(t))throw Error(a(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:j,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Uc(e))throw Error(a(299));var n=!1,r="",l=Fc;return null!=t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onRecoverableError&&(l=t.onRecoverableError)),t=Nc(e,1,!1,null,0,n,0,r,l),e[dl]=t.current,Ur(8===e.nodeType?e.parentNode:e),new Mc(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(a(188));throw e=Object.keys(e).join(","),Error(a(268,e))}return e=null===(e=Ke(t))?null:e.stateNode},t.flushSync=function(e){return ec(e)},t.hydrate=function(e,t,n){if(!Bc(t))throw Error(a(200));return Hc(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Uc(e))throw Error(a(405));var r=null!=n&&n.hydratedSources||null,l=!1,i="",o=Fc;if(null!=n&&(!0===n.unstable_strictMode&&(l=!0),void 0!==n.identifierPrefix&&(i=n.identifierPrefix),void 0!==n.onRecoverableError&&(o=n.onRecoverableError)),t=Rc(t,null,e,1,null!=n?n:null,l,0,i,o),e[dl]=t.current,Ur(e),r)for(e=0;e<r.length;e++)l=(l=(n=r[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,l]:t.mutableSourceEagerHydrationData.push(n,l);return new zc(t)},t.render=function(e,t,n){if(!Bc(t))throw Error(a(200));return Hc(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Bc(e))throw Error(a(40));return!!e._reactRootContainer&&(ec((function(){Hc(null,null,e,!1,(function(){e._reactRootContainer=null,e[dl]=null}))})),!0)},t.unstable_batchedUpdates=Zs,t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Bc(n))throw Error(a(200));if(null==e||void 0===e._reactInternals)throw Error(a(38));return Hc(e,t,n,!1,r)},t.version="18.0.0-fc46dba67-20220329"},338:(e,t,n)=>{var r=n(961);t.H=r.createRoot,r.hydrateRoot},961:(e,t,n)=>{!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(551)},20:(e,t,n)=>{var r=n(540),l=Symbol.for("react.element"),a=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,o=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,s={key:!0,ref:!0,__self:!0,__source:!0};function c(e,t,n){var r,a={},c=null,u=null;for(r in void 0!==n&&(c=""+n),void 0!==t.key&&(c=""+t.key),void 0!==t.ref&&(u=t.ref),t)i.call(t,r)&&!s.hasOwnProperty(r)&&(a[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps)void 0===a[r]&&(a[r]=t[r]);return{$$typeof:l,type:e,key:c,ref:u,props:a,_owner:o.current}}t.Fragment=a,t.jsx=c,t.jsxs=c},287:(e,t)=>{var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),l=Symbol.for("react.fragment"),a=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),o=Symbol.for("react.provider"),s=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),p=Symbol.for("react.lazy"),f=Symbol.iterator;var b={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},h=Object.assign,g={};function m(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||b}function v(){}function y(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||b}m.prototype.isReactComponent={},m.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},m.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=m.prototype;var x=y.prototype=new v;x.constructor=y,h(x,m.prototype),x.isPureReactComponent=!0;var _=Array.isArray,j=Object.prototype.hasOwnProperty,k={current:null},w={key:!0,ref:!0,__self:!0,__source:!0};function E(e,t,r){var l,a={},i=null,o=null;if(null!=t)for(l in void 0!==t.ref&&(o=t.ref),void 0!==t.key&&(i=""+t.key),t)j.call(t,l)&&!w.hasOwnProperty(l)&&(a[l]=t[l]);var s=arguments.length-2;if(1===s)a.children=r;else if(1<s){for(var c=Array(s),u=0;u<s;u++)c[u]=arguments[u+2];a.children=c}if(e&&e.defaultProps)for(l in s=e.defaultProps)void 0===a[l]&&(a[l]=s[l]);return{$$typeof:n,type:e,key:i,ref:o,props:a,_owner:k.current}}function T(e){return"object"==typeof e&&null!==e&&e.$$typeof===n}var O=/\/+/g;function S(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function C(e,t,l,a,i){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var s=!1;if(null===e)s=!0;else switch(o){case"string":case"number":s=!0;break;case"object":switch(e.$$typeof){case n:case r:s=!0}}if(s)return i=i(s=e),e=""===a?"."+S(s,0):a,_(i)?(l="",null!=e&&(l=e.replace(O,"$&/")+"/"),C(i,t,l,"",(function(e){return e}))):null!=i&&(T(i)&&(i=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,l+(!i.key||s&&s.key===i.key?"":(""+i.key).replace(O,"$&/")+"/")+e)),t.push(i)),1;if(s=0,a=""===a?".":a+":",_(e))for(var c=0;c<e.length;c++){var u=a+S(o=e[c],c);s+=C(o,t,l,u,i)}else if(u=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=f&&e[f]||e["@@iterator"])?e:null}(e),"function"==typeof u)for(e=u.call(e),c=0;!(o=e.next()).done;)s+=C(o=o.value,t,l,u=a+S(o,c++),i);else if("object"===o)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return s}function N(e,t,n){if(null==e)return e;var r=[],l=0;return C(e,r,"","",(function(e){return t.call(n,e,l++)})),r}function I(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var R={current:null},P={transition:null},A={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:P,ReactCurrentOwner:k};t.Children={map:N,forEach:function(e,t,n){N(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return N(e,(function(){t++})),t},toArray:function(e){return N(e,(function(e){return e}))||[]},only:function(e){if(!T(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=m,t.Fragment=l,t.Profiler=i,t.PureComponent=y,t.StrictMode=a,t.Suspense=u,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=A,t.cloneElement=function(e,t,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var l=h({},e.props),a=e.key,i=e.ref,o=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,o=k.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in t)j.call(t,c)&&!w.hasOwnProperty(c)&&(l[c]=void 0===t[c]&&void 0!==s?s[c]:t[c])}var c=arguments.length-2;if(1===c)l.children=r;else if(1<c){s=Array(c);for(var u=0;u<c;u++)s[u]=arguments[u+2];l.children=s}return{$$typeof:n,type:e.type,key:a,ref:i,props:l,_owner:o}},t.createContext=function(e){return(e={$$typeof:s,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:o,_context:e},e.Consumer=e},t.createElement=E,t.createFactory=function(e){var t=E.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:c,render:e}},t.isValidElement=T,t.lazy=function(e){return{$$typeof:p,_payload:{_status:-1,_result:e},_init:I}},t.memo=function(e,t){return{$$typeof:d,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=P.transition;P.transition={};try{e()}finally{P.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return R.current.useCallback(e,t)},t.useContext=function(e){return R.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return R.current.useDeferredValue(e)},t.useEffect=function(e,t){return R.current.useEffect(e,t)},t.useId=function(){return R.current.useId()},t.useImperativeHandle=function(e,t,n){return R.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return R.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return R.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return R.current.useMemo(e,t)},t.useReducer=function(e,t,n){return R.current.useReducer(e,t,n)},t.useRef=function(e){return R.current.useRef(e)},t.useState=function(e){return R.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return R.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return R.current.useTransition()},t.version="18.0.0-fc46dba67-20220329"},540:(e,t,n)=>{e.exports=n(287)},848:(e,t,n)=>{e.exports=n(20)},463:(e,t)=>{function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,l=e[r];if(!(0<a(l,t)))break e;e[r]=t,e[n]=l,n=r}}function r(e){return 0===e.length?null:e[0]}function l(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,l=e.length,i=l>>>1;r<i;){var o=2*(r+1)-1,s=e[o],c=o+1,u=e[c];if(0>a(s,n))c<l&&0>a(u,s)?(e[r]=u,e[c]=n,r=c):(e[r]=s,e[o]=n,r=o);else{if(!(c<l&&0>a(u,n)))break e;e[r]=u,e[c]=n,r=c}}}return t}function a(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var o=Date,s=o.now();t.unstable_now=function(){return o.now()-s}}var c=[],u=[],d=1,p=null,f=3,b=!1,h=!1,g=!1,m="function"==typeof setTimeout?setTimeout:null,v="function"==typeof clearTimeout?clearTimeout:null,y="undefined"!=typeof setImmediate?setImmediate:null;function x(e){for(var t=r(u);null!==t;){if(null===t.callback)l(u);else{if(!(t.startTime<=e))break;l(u),t.sortIndex=t.expirationTime,n(c,t)}t=r(u)}}function _(e){if(g=!1,x(e),!h)if(null!==r(c))h=!0,P(j);else{var t=r(u);null!==t&&A(_,t.startTime-e)}}function j(e,n){h=!1,g&&(g=!1,v(T),T=-1),b=!0;var a=f;try{for(x(n),p=r(c);null!==p&&(!(p.expirationTime>n)||e&&!C());){var i=p.callback;if("function"==typeof i){p.callback=null,f=p.priorityLevel;var o=i(p.expirationTime<=n);n=t.unstable_now(),"function"==typeof o?p.callback=o:p===r(c)&&l(c),x(n)}else l(c);p=r(c)}if(null!==p)var s=!0;else{var d=r(u);null!==d&&A(_,d.startTime-n),s=!1}return s}finally{p=null,f=a,b=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var k,w=!1,E=null,T=-1,O=5,S=-1;function C(){return!(t.unstable_now()-S<O)}function N(){if(null!==E){var e=t.unstable_now();S=e;var n=!0;try{n=E(!0,e)}finally{n?k():(w=!1,E=null)}}else w=!1}if("function"==typeof y)k=function(){y(N)};else if("undefined"!=typeof MessageChannel){var I=new MessageChannel,R=I.port2;I.port1.onmessage=N,k=function(){R.postMessage(null)}}else k=function(){m(N,0)};function P(e){E=e,w||(w=!0,k())}function A(e,n){T=m((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){h||b||(h=!0,P(j))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):O=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return f},t.unstable_getFirstCallbackNode=function(){return r(c)},t.unstable_next=function(e){switch(f){case 1:case 2:case 3:var t=3;break;default:t=f}var n=f;f=t;try{return e()}finally{f=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=f;f=e;try{return t()}finally{f=n}},t.unstable_scheduleCallback=function(e,l,a){var i=t.unstable_now();switch("object"==typeof a&&null!==a?a="number"==typeof(a=a.delay)&&0<a?i+a:i:a=i,e){case 1:var o=-1;break;case 2:o=250;break;case 5:o=1073741823;break;case 4:o=1e4;break;default:o=5e3}return e={id:d++,callback:l,priorityLevel:e,startTime:a,expirationTime:o=a+o,sortIndex:-1},a>i?(e.sortIndex=a,n(u,e),null===r(c)&&e===r(u)&&(g?(v(T),T=-1):g=!0,A(_,a-i))):(e.sortIndex=o,n(c,e),h||b||(h=!0,P(j))),e},t.unstable_shouldYield=C,t.unstable_wrapCallback=function(e){var t=f;return function(){var n=f;f=t;try{return e.apply(this,arguments)}finally{f=n}}}},982:(e,t,n)=>{e.exports=n(463)},505:(e,t,n)=>{n.d(t,{o:()=>l});var r=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};class l{constructor(){this.libraryCache=new Map}load(e,t){const n=this.libraryCache.get(e)||new a(e,t);return this.libraryCache.set(e,n),n.library}}class a{constructor(e,t){this._libraryPromise=new Promise(((e,t)=>{this.libraryResolver=e,this.libraryRejecter=t})),this.fetch(e,t)}fetch(e,t){return r(this,void 0,void 0,(function*(){try{const n=yield import(e),r=Object.assign({},n);if(t&&t in window){const e=window[t]||{};Object.assign(r,e),delete window[t]}this.libraryResolver(r)}catch(e){this.libraryRejecter(e)}}))}get library(){return this._libraryPromise}}}},r={};function l(e){var t=r[e];if(void 0!==t)return t.exports;var a=r[e]={exports:{}};return n[e](a,a.exports,l),a.exports}l.m=n,l.d=(e,t)=>{for(var n in t)l.o(t,n)&&!l.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},l.f={},l.e=e=>Promise.all(Object.keys(l.f).reduce(((t,n)=>(l.f[n](e,t),t)),[])),l.u=e=>e+".index.js",l.miniCssF=e=>{},l.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),l.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="mp_webgl:",l.l=(n,r,a,i)=>{if(e[n])e[n].push(r);else{var o,s;if(void 0!==a)for(var c=document.getElementsByTagName("script"),u=0;u<c.length;u++){var d=c[u];if(d.getAttribute("src")==n||d.getAttribute("data-webpack")==t+a){o=d;break}}o||(s=!0,(o=document.createElement("script")).charset="utf-8",o.timeout=120,l.nc&&o.setAttribute("nonce",l.nc),o.setAttribute("data-webpack",t+a),o.src=n),e[n]=[r];var p=(t,r)=>{o.onerror=o.onload=null,clearTimeout(f);var l=e[n];if(delete e[n],o.parentNode&&o.parentNode.removeChild(o),l&&l.forEach((e=>e(r))),t)return t(r)},f=setTimeout(p.bind(null,void 0,{type:"timeout",target:o}),12e4);o.onerror=p.bind(null,o.onerror),o.onload=p.bind(null,o.onload),s&&document.head.appendChild(o)}},l.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;l.g.importScripts&&(e=l.g.location+"");var t=l.g.document;if(!e&&t&&(t.currentScript&&"SCRIPT"===t.currentScript.tagName.toUpperCase()&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");if(n.length)for(var r=n.length-1;r>-1&&(!e||!/^http(s?):/.test(e));)e=n[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),l.p=e})(),(()=>{var e={285:0};l.f.j=(t,n)=>{var r=l.o(e,t)?e[t]:void 0;if(0!==r)if(r)n.push(r[2]);else{var a=new Promise(((n,l)=>r=e[t]=[n,l]));n.push(r[2]=a);var i=l.p+l.u(t),o=new Error;l.l(i,(n=>{if(l.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var a=n&&("load"===n.type?"missing":n.type),i=n&&n.target&&n.target.src;o.message="Loading chunk "+t+" failed.\n("+a+": "+i+")",o.name="ChunkLoadError",o.type=a,o.request=i,r[1](o)}}),"chunk-"+t,t)}};var t=(t,n)=>{var r,a,[i,o,s]=n,c=0;if(i.some((t=>0!==e[t]))){for(r in o)l.o(o,r)&&(l.m[r]=o[r]);if(s)s(l)}for(t&&t(n);c<i.length;c++)a=i[c],l.o(e,a)&&e[a]&&e[a][0](),e[a]=0},n=self.webpackChunkmp_webgl=self.webpackChunkmp_webgl||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})();var a=document.getElementById("status");function i(e,t){var n=t||"";a.className="Error: "===e?"error":"",document.querySelector("#status span").textContent=e+t,"Error: "===e&&console.warn(n)}function o(e){i("Error: ",e)}function s(e){i("OK: ",e)}function c(){i("Working ...")}function u(e){for(;e.lastChild;)e.removeChild(e.lastChild)}function d(e,t){console.log("SHOWCASE IS CONNECTED"),function(e){const t=document.getElementById("mattertag-selector");(function(e,t){var n={},r=document.getElementById("tag-lock-bb"),l=document.getElementById("tag-lock-nav");function a(){var e=n[t.value];return e||(e={billboard:!0,navigation:!0}),n[t.value]=e,e}function i(){var n=a();n.billboard=r.checked,n.navigation=l.checked,e.Mattertag.preventAction(t.value,{opening:!n.billboard,navigating:!n.navigation})}t.addEventListener("change",(function(){var e=a();r.checked=e.billboard,l.checked=e.navigation})),r.addEventListener("change",i),l.addEventListener("change",i)})(e,t),document.getElementById("tag-add").addEventListener("click",function(){const t=document.getElementById("tag-add-title"),n=document.getElementById("tag-add-desc"),r=document.getElementById("tag-add-pos-x"),l=document.getElementById("tag-add-pos-y"),a=document.getElementById("tag-add-pos-z"),i=document.getElementById("tag-add-norm-x"),o=document.getElementById("tag-add-norm-y"),s=document.getElementById("tag-add-norm-z"),c=document.getElementById("tag-add-mtype"),u=document.getElementById("tag-add-msrc");return function(){e.Mattertag.add({label:t.value,description:n.value,anchorPosition:{x:parseFloat(r.value),y:parseFloat(l.value),z:parseFloat(a.value)},stemVector:{x:parseFloat(i.value),y:parseFloat(o.value),z:parseFloat(s.value)},media:""===c.value?void 0:{type:c.value,src:u.value}})}}()),document.getElementById("tag-move").addEventListener("click",function(){const n=document.getElementById("tag-move-pos-x"),r=document.getElementById("tag-move-pos-y"),l=document.getElementById("tag-move-pos-z"),a=document.getElementById("tag-move-norm-x"),i=document.getElementById("tag-move-norm-y"),o=document.getElementById("tag-move-norm-z");return function(){e.Mattertag.editPosition(t.value,{anchorPosition:{x:parseFloat(n.value),y:parseFloat(r.value),z:parseFloat(l.value)},stemVector:{x:parseFloat(a.value),y:parseFloat(i.value),z:parseFloat(o.value)}})}}()),document.getElementById("mattertag-remove").addEventListener("click",(function(){e.Mattertag.remove(t.value)}));var n=document.getElementsByClassName("mtag-media-type");for(const t of n){u(t);var r=document.createElement("option");for(var l in r.value="",r.text="(select)",t.appendChild(r),e.Mattertag.MediaType){var a=document.createElement("option");a.value=e.Mattertag.MediaType[l],a.text=l,t.appendChild(a)}}document.getElementById("mattertag-edit").addEventListener("click",(p=document.getElementById("tag-edit-title"),f=document.getElementById("tag-edit-media"),b=document.getElementById("tag-edit-desc"),h=document.getElementById("tag-edit-mediatype"),function(){c(),e.Mattertag.editBillboard(t.value,{label:p.value||void 0,description:b.value||void 0,media:""!==h.value?{src:f.value,type:h.value}:void 0}).then((function(){s(`edited [${t.options[t.selectedIndex].innerText}], (SID=${t.value})`)}),(function(e){o(e)}))})),document.getElementById("tag-edit-color").addEventListener("click",function(){const n=document.getElementById("tag-color-r"),r=document.getElementById("tag-color-g"),l=document.getElementById("tag-color-b");return function(){e.Mattertag.editColor(t.value,{r:parseFloat(n.value),g:parseFloat(r.value),b:parseFloat(l.value)})}}()),document.getElementById("tag-edit-stem").addEventListener("click",function(){const n=document.getElementById("stem-height"),r=document.getElementById("stem-visible");return function(){const l=parseFloat(n.value),a=r.checked;e.Mattertag.editStem(t.value,{stemHeight:l,stemVisible:a})}}()),document.getElementById("mattertag-opacity-edit").addEventListener("click",function(){const n=document.getElementById("mattertag-opacity");return function(){e.Mattertag.editOpacity(t.value,parseFloat(n.value))}}()),document.getElementById("injectHTML").addEventListener("click",function(){const n=document.getElementById("mattertag-html-w"),r=document.getElementById("mattertag-html-h"),l=document.getElementById("injectedHTML");return function(){e.Mattertag.injectHTML(t.value,l.value,{globalVariableMap:{on:"on",off:"off",send:"send",tag:"tag"},size:{w:n.value||0,h:r.value||0}}).then((function(e){function t(){let e="";for(let t=0;t<6;++t)e+=Math.floor(16*Math.random()).toString(16);return"#"+e}e.on("click",(function(n){console.log("page received",n);const r=t();e.send("update.button",r,r.toString())}))}))}}()),document.getElementById("navigateToTag").addEventListener("click",(i=document.getElementById("mattertag-navigation-type"),d=document.getElementById("mattertag-navigation-force"),function(){c(),e.Mattertag.navigateToTag(t.value,e.Mattertag.Transition[i.value],d.checked).then((function(e){s("moved to ["+t.options[t.selectedIndex].innerText+"], (SID="+t.value+")")}),(function(e){o(e)}))}));var i,d;var p,f,b,h}(e);const n={},r=document.getElementsByClassName("sweep-selector");var l;[].slice.call(r).forEach((function(t){u(t),e.Sweep.data.subscribe({onAdded(e,t){n[e]=t},onRemoved(e){delete n[e]},onCollectionUpdated(e){if(!t.hasChildNodes())for(const r in e){var n=document.createElement("option");n.value=r,n.text=r,t.appendChild(n)}}})}));var a,i,d,p,f,b,h,g,m,v,y,x={};e.Mattertag.data.subscribe({onCollectionUpdated(e){x=e}}),e.on(e.Model.Event.MODEL_LOADED,(function(e){s("Model successfully loaded")})).on(e.Mode.Event.CHANGE_START,(function(e,t){s("moved to mode: "+t+" from "+e)})).on(e.Camera.Event.MOVE,(function(e){l=e})).on(e.Mattertag.Event.CLICK,(function(n){var r=x[n],a={},i={};e.Mattertag.getDiscPosition(r,a),e.Conversion.worldToScreen(a,l,{w:t.clientWidth,h:t.clientHeight},i),console.log("clicked",n),console.log("with a world position of",a),console.log("and a screen position of",i)})),[].slice.call(document.querySelectorAll(".navButton")).forEach((function(t){t.addEventListener("click",(function(t){var n=this.getAttribute("data-direction");c(),e.Camera.moveInDirection(e.Camera.Direction[n]).then((function(e){s(e)}),(function(e){o(e)}))}))})),document.getElementById("pan").addEventListener("click",(a=document.getElementById("positionX"),i=document.getElementById("positionZ"),function(t){c(),e.Camera.pan({x:parseFloat(a.value)||0,z:parseFloat(i.value)||0}).then((function(e){s("Camera.pan complete")}),(function(e){o(e)}))})),[document.getElementById("tiltUp"),document.getElementById("tiltDown"),document.getElementById("rotateLeft"),document.getElementById("rotateRight")].forEach((function(t){var n=document.getElementById("rotation");t.addEventListener("click",(function(t){var r=this.getAttribute("data-direction");c(),e.Camera.rotateInDirection(e.Camera.Direction[r],parseFloat(n.value)).then((function(e){s("Rotation complete: ")}),(function(e){o(e)}))}))})),e.Camera.rotateInDirection=function(t,n){return e.Camera.rotate(t===e.Camera.Direction.RIGHT?n:t===e.Camera.Direction.LEFT?-n:0,t===e.Camera.Direction.UP?n:t===e.Camera.Direction.DOWN?-n:0)},document.getElementById("freeRotate").addEventListener("click",(d=document.getElementById("rotationX"),p=document.getElementById("rotationY"),f=document.getElementById("rotationSpeed"),function(t){var n=d.value||0,r=p.value||0;c(),e.Camera.rotate(parseFloat(n),parseFloat(r),{speed:parseFloat(f.value)}).then((function(e){s("Free rotation complete:")}),(function(e){o(e)}))})),document.getElementById("orient").addEventListener("click",function(){var t=document.getElementById("rotationX"),n=document.getElementById("rotationY"),r=document.getElementById("rotationSpeed");return function(l){var a=t.value||0,i=n.value||0;c(),e.Camera.setRotation({x:parseFloat(a),y:parseFloat(i)},{speed:parseFloat(r.value)}).then((function(e){s(" Orient complete: ")}),(function(e){o(e)}))}}()),[].slice.call(document.querySelectorAll(".modeButton")).forEach((function(t){t.addEventListener("click",(function(t){var n=document.getElementById("modeStyles"),r=e.Mode.TransitionType[n.value],l=this.getAttribute("id");c(),e.Mode.moveTo(e.Mode.Mode[l],{transition:r}).then((function(e){s(e)}),(function(e){o(e)}))}))})),document.getElementById("moveToSweep").addEventListener("click",(b=document.getElementById("sweepIds"),h=document.getElementById("flyStyles"),g=document.getElementById("sweepRotationX"),m=document.getElementById("sweepRotationY"),v=document.getElementById("sweepTransitionTime"),function(t){var n=b.value,r=e.Sweep.Transition[h.value],l={x:g.value||0,y:m.value||0},a=v.value;c(),e.Sweep.moveTo(n,{rotation:l,transition:r,transitionTime:a}).then((function(e){s("moved to sweep "+e)}),(function(e){o(e)}))})),document.getElementById("screenshot").addEventListener("click",(y=document.getElementById("screenshot-preview"),function(t){e.Renderer.takeScreenShot(void 0,{mattertags:!1}).then((function(e){y.setAttribute("src",e)}))})),document.getElementById("equirectangle").addEventListener("click",function(){var t=document.getElementById("screenshot-preview");return function(n){e.Renderer.takeEquirectangular().then((function(e){t.setAttribute("src",e)}))}}()),e.Sweep.current.subscribe((function(e){""===e.sid?console.log("Not currently stationed at a sweep position"):console.log(e)})),function(e){e.Mattertag.data.subscribe(function(){var e=[].slice.call(document.getElementsByClassName("mattertag-selector"));e.forEach((function(e){for(;e.lastChild;)e.removeChild(e.lastChild)}));var t={};function n(e){var t=document.createElement("option");return t.value=e.sid,t.text=e.label||"(no label)",t}return{onAdded(r,l){e.forEach((function(e){var a=n(l);t[r]=t[r]||[],t[r].push(a);let i=e.firstChild;for(;i&&a.text.localeCompare(i.text)>0;)i=i.nextSibling;e.insertBefore(a,i)}))},onRemoved(e){(t[e]||[]).forEach((function(e){e.parentElement.removeChild(e)})),delete t[e]},onUpdated(e,n){(t[e]||[]).forEach((function(e){e.text=n.label}))}}}())}(e);var _,j,k=null;document.getElementById("getPointer").addEventListener("click",(function(){var t=document.getElementById("pointer");k?(k.cancel(),k=null):k=e.Pointer.intersection.subscribe((function(e){t.innerText=JSON.stringify(e)}))})),e.Camera.zoom.subscribe((_=document.getElementById("current-zoom-level"),function(e){_.innerText=e.level.toFixed(5)})),document.getElementById("zoom-by").addEventListener("click",(j=document.getElementById("zoom-by-val"),function(){e.Camera.zoomBy(j.value).then((function(e){s("Zoomed by "+j.value+" to "+e)}))})),document.getElementById("zoom-to").addEventListener("click",function(){var t=document.getElementById("zoom-to-val");return function(){e.Camera.zoomTo(t.value).then((function(e){s("Zoomed to "+e)}))}}()),document.getElementById("zoom-reset").addEventListener("click",(function(){e.Camera.zoomReset().then((function(){s("reset zoom")}))})),function(e,t){var n=document.getElementById("sweep-enable-selector"),r={},l=document.getElementById("sweep-enable");function a(){r[n.value]=l.checked,l.checked?e.Sweep.enable(n.value):e.Sweep.disable(n.value)}n.addEventListener("change",(function(){var e=t[n.value].enabled;l.checked=e})),l.addEventListener("change",a)}(e,n)}var p=l(848);const f={overflowY:"auto"};function b(e){return(0,p.jsxs)("div",Object.assign({style:f,className:"controlPanel"},{children:[(0,p.jsx)("div",Object.assign({className:"controlPanelHeader"},{children:e.header})),e.children]}))}var h=l(540),g=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};function m(e){const t=(0,h.useRef)(null),[n,r]=(0,h.useState)(""),l=(0,h.useCallback)((()=>g(this,void 0,void 0,(function*(){if(t.current){const n=yield e.sdk.API.getViews(t.current.value);r(`views: ${JSON.stringify(n)}`)}}))),[e.sdk.API]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({htmlFor:"space-id"},{children:"spaceId: "})),(0,p.jsx)("input",{ref:t,id:"space-id",type:"string"})]}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({onClick:l},{children:"Register"}))}),(0,p.jsx)("textarea",{style:{width:"100%",height:"80%"},readOnly:!0,value:n})]})}function v(e){return(0,p.jsx)(p.Fragment,{children:(0,p.jsx)(b,Object.assign({header:"API - getViews"},{children:(0,p.jsx)(m,{sdk:e.sdk})}))})}const y={height:50};function x(e){const[t,n]=(0,h.useState)(""),[r,l]=(0,h.useState)(!1),a=(0,h.useRef)(null),i=(0,h.useCallback)((t=>{const{currentTarget:r}=t;r.checked?a.current=e.observable.subscribe({onChanged(e){if(null===e||"object"!=typeof e||Array.isArray(e))n(JSON.stringify(e));else{const t=Object.assign({},e);for(const n of Object.keys(t)){const r=e[n];r instanceof Set&&(t[n]=[...r.values()])}n(JSON.stringify(t))}}}):(a.current.cancel(),a.current=null,n("")),l(r.checked)}),[e.observable]),o=r?t:"not subbed";return(0,p.jsxs)("div",{children:[(0,p.jsxs)("div",{children:["Observable: ",e.name]}),(0,p.jsxs)("div",{children:["subscribe: ",(0,p.jsx)("input",{type:"checkbox",onChange:i})]}),(0,p.jsx)("div",{children:(0,p.jsx)("textarea",{rows:3,style:y,readOnly:!0,value:o,disabled:!r})})]})}function _(e){const t=(0,h.useRef)(null),n=(0,h.useRef)(null),r=(0,h.useRef)(null),l=(0,h.useRef)(null),[a,i]=(0,h.useState)(""),o=(0,h.useCallback)((()=>{var a,o,s,c,u;if(null===(a=t.current)||void 0===a?void 0:a.value){let a;try{a=JSON.parse(null===(o=t.current)||void 0===o?void 0:o.value)}catch(e){return void i(e)}e.sdk.App.track((null===(s=n.current)||void 0===s?void 0:s.value)||"testEvent",{version:(null===(c=r.current)||void 0===c?void 0:c.valueAsNumber)||1,alwaysTrack:null===(u=l.current)||void 0===u?void 0:u.checked,records:a})}}),[e.sdk.App,i]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({htmlFor:"app-eventtype"},{children:"eventType: "})),(0,p.jsx)("input",{ref:n,className:"small-input",id:"app-eventtype",defaultValue:"testEvent",type:"string"})]}),(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({htmlFor:"app-version"},{children:"eventType: "})),(0,p.jsx)("input",{ref:r,className:"small-input",id:"app-version",defaultValue:"1",step:"1",type:"number"})]}),(0,p.jsx)("textarea",{style:{height:"7em"},ref:t,defaultValue:""}),(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({htmlFor:"alwaysTrack"},{children:"alwaysTrack: "})),(0,p.jsx)("input",{ref:l,className:"small-input",id:"alwaysTrack",defaultChecked:!0,type:"checkbox"})]}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({onClick:o},{children:"Track It"}))}),(0,p.jsx)("div",Object.assign({id:"settings-get-message"},{children:a}))]})}function j(e){return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)(b,Object.assign({header:"App.features"},{children:(0,p.jsx)(x,{observable:e.sdk.App.features,name:"Features"})})),(0,p.jsx)(b,Object.assign({header:"App.track"},{children:(0,p.jsx)(_,{sdk:e.sdk})}))]})}var k=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};function w(e){const[t,n]=(0,h.useState)(""),r=(0,h.useCallback)((()=>k(this,void 0,void 0,(function*(){const t=yield e.sdk.App.Locale.getLanguageCode();n(`value:${t}`)}))),[e.sdk.App.Locale]);return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)("button",Object.assign({onClick:r},{children:"get"})),t]})}var E=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};function T(e){const[t,n]=(0,h.useState)(""),r=(0,h.useRef)(null),l=(0,h.useCallback)((()=>E(this,void 0,void 0,(function*(){var t;const l=yield e.sdk.App.Locale.getT();if(null===(t=r.current)||void 0===t?void 0:t.value){const e=l(r.current.value);n(`value: ${e}`)}}))),[e.sdk.App.Locale]);return(0,p.jsxs)("div",{children:[(0,p.jsx)("input",{ref:r,defaultValue:"EXPLORE_3D_SPACE"}),(0,p.jsx)("button",Object.assign({onClick:l},{children:"t"})),(0,p.jsx)("br",{}),t]})}function O(e){return(0,p.jsx)(p.Fragment,{children:(0,p.jsxs)(b,Object.assign({header:"App.Locale"},{children:[(0,p.jsx)(w,{sdk:e.sdk}),(0,p.jsx)(T,{sdk:e.sdk})]}))})}function S(e){(0,h.useEffect)((()=>e()),[])}function C({collection:e,onChanged:t,filter:n,sort:r,optionLabel:l,hoverLabel:a}){const[i,o]=(0,h.useState)(new Map),[s,c]=(0,h.useState)(""),u=(0,h.useRef)(null),d=(0,h.useCallback)((e=>{if(c(e.currentTarget.value),t){const n=e.target.value;t(n,i.get(n))}}),[i,t]);S((()=>{const r=e.subscribe({onAdded(e,t){n&&!n(t)||i.set(e,t)},onRemoved(e){i.delete(e)},onUpdated(e,t){!n||n(t)?i.set(e,t):i.delete(e)},onCollectionUpdated(e){const n=e[s]?s:Object.keys(e)[0];t&&(n?t(n,i.get(n)):t("",void 0)),o(new Map(i)),c(void 0!==n?n:"")}});return()=>{r.cancel()}}));const f=[...i.entries()].sort((([,e],[,t])=>r?r(e,t):0));return(0,p.jsx)("select",Object.assign({ref:u,className:"collection-selector",onChange:d,value:s},{children:f.length>0?(b=f,b.map((([e,t])=>(0,p.jsx)("option",Object.assign({value:e,title:null==a?void 0:a(t)},{children:l?l(t):e}),e)))):(0,p.jsx)("option",Object.assign({value:""},{children:"(no values)"}))}));var b}function N(e){const[t,n]=(0,h.useState)(),r=(0,h.useCallback)(((t,r)=>{var l,a;if(r){const l=Object.assign({},r);(e.additionalProperties||[]).forEach((function(e){l[e]=r[e]})),n(l),null===(a=e.onChanged)||void 0===a||a.call(e,t,r)}else n(null),null===(l=e.onChanged)||void 0===l||l.call(e,"",void 0)}),[e]);return(0,p.jsxs)(b,Object.assign({header:`${e.label} - Selector`},{children:[(0,p.jsxs)("div",{children:[e.label+":",(0,p.jsx)(C,{collection:e.collection,onChanged:r,sort:e.sort,optionLabel:e.optionLabel,hoverLabel:e.hoverLabel})]}),(0,p.jsx)("div",{children:(0,p.jsx)("textarea",{style:{width:"100%",height:"80%"},readOnly:!0,value:t?function(t){const n=Object.assign({},t);if(e.propertyTransforms){const r=e.propertyTransforms;for(const[e,l]of Object.entries(r))n[e]=l(t[e])}return JSON.stringify(n,null,"  ")}(t):""})})]}))}var I=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};function R(e){const t=(0,h.useRef)(null),n=(0,h.useRef)(null),r=(0,h.useCallback)(((t,n)=>I(this,void 0,void 0,(function*(){yield e.sdk.Asset.registerTexture(t,n),e.onRegister(t,n)}))),[e]),l=(0,h.useCallback)((()=>I(this,void 0,void 0,(function*(){t.current&&n.current&&r(t.current.value,n.current.value)}))),[r]);return S((()=>{const e={Chrome:"images/chrome.png",Firefox:"images/firefox.png",Edge:"images/edge.png",RedKeySVG:"images/"+encodeURIComponent("management+permissions-simple_w.svg"),RedPinPNG:"images/360_placement_pin_mask.png",UVGridJPG:"images/uv_grid_opengl.jpg"};for(const t in e)r(t,e[t])})),(0,p.jsxs)(h.Fragment,{children:[(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({htmlFor:"asset-id"},{children:"id: "})),(0,p.jsx)("input",{ref:t,className:"small-input",id:"asset-id",type:"string"})]}),(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({htmlFor:"asset-src"},{children:"src: "})),(0,p.jsx)("input",{ref:n,className:"small-input",id:"asset-src",type:"string"})]}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({id:"asset-register",onClick:l},{children:"Register"}))})]})}const P=new class{constructor(){this.observers=new Set,this.assets={*[Symbol.iterator](){for(const e in this.assets)yield[e,this.assets[e]]}}}subscribe(e){return this.observers.add(e),{cancel:()=>{this.observers.delete(e)}}}waitUntil(e){return new Promise((t=>{const n={onCollectionUpdated(n){("function"==typeof e?e:e.waitUntil.bind(e))(n)&&(this.observers.delete(this),t(n))}};this.observers.add(n)}))}add(e,t){var n,r;this.assets[e]=t;for(const l of this.observers)null===(n=l.onAdded)||void 0===n||n.call(l,e,t,this.assets),null===(r=l.onCollectionUpdated)||void 0===r||r.call(l,this.assets)}};function A(e){const t=(0,h.useCallback)(((t,n)=>{e.setAssets((e=>Object.assign(Object.assign({},e),{[t]:n}))),P.add(t,{id:t,src:n})}),[e]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsx)(N,{collection:P,label:"Asset",onChanged:e.setSelectedAsset}),(0,p.jsx)(b,Object.assign({header:"Asset - Register"},{children:(0,p.jsx)(R,{sdk:e.sdk,onRegister:t})}))]})}function L(e){return(0,p.jsx)(p.Fragment,{children:(0,p.jsx)(b,Object.assign({header:"Camera - Pose"},{children:(0,p.jsx)(x,{observable:e.sdk.Camera.pose,name:"Camera.pose"})}))})}var D,F,M,z,U,B,V,H,W,K,q,$,G,Q,Y,X,J,Z,ee,te,ne,re,le,ae,ie,oe,se,ce,ue=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};function de(e){const[t,n]=(0,h.useState)(""),r=(0,h.useRef)(null),l=(0,h.useRef)(null),a=(0,h.useRef)(null),i=(0,h.useCallback)((t=>{!function(){var t,i,o;ue(this,void 0,void 0,(function*(){if(!r.current||!l.current||!a.current)return;const s=e.sdk,c=null===(t=r.current)||void 0===t?void 0:t.value,u=null===(i=l.current)||void 0===i?void 0:i.value,d=null===(o=a.current)||void 0===o?void 0:o.value;if(!c||!u||!d)return;let p=null;yield s.Camera.pose.waitUntil((function(e){return p=e,!0}));const f=document.getElementById("showcase"),b={w:f.clientWidth,h:f.clientHeight};try{const t=yield e.sdk.Conversion.worldToScreen({x:parseFloat(c),y:parseFloat(u),z:parseFloat(d)},p,b);t.x=Math.trunc(t.x),t.y=Math.trunc(t.y),n(`success x:${t.x} y:${t.y}`)}catch(e){n("error")}}))}()}),[e.sdk]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsxs)("tr",{children:[(0,p.jsx)("td",{children:(0,p.jsx)("button",Object.assign({onClick:i},{children:"worldToScreen"}))}),(0,p.jsx)("td",{children:(0,p.jsx)("input",{type:"text",id:"conversion-worldtoscreen-x",className:"small-input",placeholder:"x",ref:r})}),(0,p.jsx)("td",{children:(0,p.jsx)("input",{type:"text",id:"conversion-worldtoscreen-y",className:"small-input",placeholder:"y",ref:l})}),(0,p.jsx)("td",{children:(0,p.jsx)("input",{type:"text",id:"conversion-worldtoscreen-z",className:"small-input",placeholder:"z",ref:a})})]}),(0,p.jsx)("tr",{children:(0,p.jsx)("td",Object.assign({colSpan:3},{children:(0,p.jsx)("div",Object.assign({id:"settings-update-message"},{children:t}))}))})]})}function pe({sdk:e}){const[t,n]=(0,h.useState)((0,p.jsx)(p.Fragment,{})),[r,l]=(0,h.useState)("Coordinates"),[a,i]=(0,h.useState)("TO_SDK"),o=(0,h.useRef)(null),s=(0,h.useRef)(null),c=(0,h.useRef)(null),u=(0,h.useRef)(null),d=(0,h.useCallback)((()=>{var t,l,i,d;const f=null===(t=o.current)||void 0===t?void 0:t.value,b=null===(l=s.current)||void 0===l?void 0:l.value,h=null===(i=c.current)||void 0===i?void 0:i.value,g=null===(d=u.current)||void 0===d?void 0:d.value,m=z.TransformType[r][a];let v;if("SweepRotation"===r||"CameraRotation"===r){const t={x:Number(f),y:Number(b),z:Number(h),w:Number(g)};v=e.Conversion.basisChange(t,m)}else{const t={x:Number(f),y:Number(b),z:Number(h)};v=e.Conversion.basisChange(t,m)}if(v)return n((0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)("td",{children:v.x.toFixed(2)}),(0,p.jsx)("td",{children:v.y.toFixed(2)}),(0,p.jsx)("td",{children:v.z.toFixed(2)}),(0,p.jsx)("td",{children:"w"in v&&"number"==typeof v.w?v.w.toFixed(2):""})]}))}),[a,r,e]),f=(0,h.useCallback)((e=>{i(e)}),[]);return(0,p.jsx)("table",{children:(0,p.jsxs)("tbody",{children:[(0,p.jsxs)("tr",{children:[(0,p.jsx)("td",{children:(0,p.jsx)("input",{type:"text",defaultValue:"0",id:"conversion-x",className:"small-input",placeholder:"x",ref:o})}),(0,p.jsx)("td",{children:(0,p.jsx)("input",{type:"text",defaultValue:"0",id:"conversion-y",className:"small-input",placeholder:"y",ref:s})}),(0,p.jsx)("td",{children:(0,p.jsx)("input",{type:"text",defaultValue:"0",id:"conversion-z",className:"small-input",placeholder:"z",ref:c})}),(0,p.jsx)("td",{children:(0,p.jsx)("input",{type:"text",defaultValue:"0",id:"conversion-w",className:"small-input",placeholder:"w",ref:u})})]}),(0,p.jsx)("tr",{children:(0,p.jsxs)("td",Object.assign({colSpan:4},{children:[(0,p.jsx)("select",Object.assign({onChange:e=>l(e.target.value),defaultValue:r},{children:Object.keys(z.TransformType).map((e=>(0,p.jsx)("option",Object.assign({value:e},{children:e}),e)))})),r?(0,p.jsx)("select",Object.assign({onChange:e=>f(e.target.value),defaultValue:a},{children:r&&Object.keys(z.TransformType[r]).map((e=>(0,p.jsx)("option",Object.assign({value:e},{children:e}),e)))})):(0,p.jsx)(p.Fragment,{})]}))}),(0,p.jsx)("tr",{children:(0,p.jsx)("td",Object.assign({colSpan:4},{children:(0,p.jsx)("button",Object.assign({onClick:d},{children:"basisChange"}))}))}),(0,p.jsx)("tr",{children:t})]})})}function fe(e){return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)(b,Object.assign({header:"Conversion.basisChange"},{children:(0,p.jsx)(pe,{sdk:e.sdk})})),(0,p.jsx)(b,Object.assign({header:"Conversion.worldToScreen"},{children:(0,p.jsx)(de,{sdk:e.sdk})}))]})}!function(e){let t,n,r,l;!function(e){e.PHASE_CHANGE="application.phasechange"}(t=e.Event||(e.Event={})),function(e){e.UNINITIALIZED="appphase.uninitialized",e.WAITING="appphase.waiting",e.LOADING="appphase.loading",e.STARTING="appphase.starting",e.PLAYING="appphase.playing",e.ERROR="appphase.error"}(n=e.Phase||(e.Phase={})),function(e){e.UNKNOWN="application.unknown",e.WEBVR="application.webvr",e.SHOWCASE="application.showcase",e.WORKSHOP="application.workshop"}(r=e.Application||(e.Application={})),function(e){e.RoomBounds="feature.roombounds",e.Defurnish="feature.defurnish"}(l=e.Feature||(e.Feature={}))}(D||(D={})),function(e){let t,n,r;!function(e){e.IMAGE="image",e.PDF="pdf",e.VIDEO="video",e.RICH="rich",e.ZIP="zip",e.TEXT="text",e.AUDIO="audio",e.MODEL="model",e.APPLICATION="application"}(t=e.MediaType||(e.MediaType={})),function(e){e.EXTERNAL="external",e.UPLOAD="upload",e.SANDBOX="sandbox"}(n=e.AttachmentCategory||(e.AttachmentCategory={})),function(e){e.COMMENT="comment",e.MATTERTAG="mattertag"}(r=e.ParentType||(e.ParentType={}))}(F||(F={})),function(e){let t,n;!function(e){e.MOVE="camera.move"}(t=e.Event||(e.Event={})),function(e){e.FORWARD="FORWARD",e.LEFT="LEFT",e.RIGHT="RIGHT",e.BACK="BACK",e.UP="UP",e.DOWN="DOWN"}(n=e.Direction||(e.Direction={}))}(M||(M={})),function(e){let t;!function(e){let t,n,r;!function(e){e.TO_API="coordinatesToAPI",e.TO_SDK="coordinatesToSDK"}(t=e.Coordinates||(e.Coordinates={})),function(e){e.TO_API="sweepRotationToAPI",e.TO_SDK="sweepRotationToSDK"}(n=e.SweepRotation||(e.SweepRotation={})),function(e){e.TO_API="cameraRotationToAPI",e.TO_SDK="cameraRotationToSDK"}(r=e.CameraRotation||(e.CameraRotation={}))}(t=e.TransformType||(e.TransformType={}))}(z||(z={})),function(e){let t;!function(e){e.CHANGE_START="floors.changestart",e.CHANGE_END="floors.changeend"}(t=e.Event||(e.Event={}))}(U||(U={})),function(e){let t;!function(e){e.SUCCESS="astar.status.success",e.NO_PATH="astar.status.no_path",e.TIMEOUT="astar.status.timeout",e.NO_START_VERTEX="astar.status.no_start",e.NO_END_VERTEX="astar.status.no_end"}(t=e.AStarStatus||(e.AStarStatus={}))}(B||(B={})),function(e){let t;!function(e){e.POSITION_UPDATED="label.positionupdated"}(t=e.Event||(e.Event={}))}(V||(V={})),function(e){let t,n,r;!function(e){e.WINDOW="link.creationpolicy.window",e.REFERRER="link.creationpolicy.referrer",e.MATTERPORT="link.creationpolicy.matterport"}(t=e.CreationPolicy||(e.CreationPolicy={})),function(e){e.DEFAULT="link.openpolicy.default",e.NEW_WINDOW="link.openpolicy.newwindow",e.SAME_FRAME="link.openpolicy.sameframe",e.CURRENT_WINDOW="link.openpolicy.current"}(n=e.OpenPolicy||(e.OpenPolicy={})),function(e){e.DEFAULT="link.destination.default",e.MATTERPORT="link.destination.matterport"}(r=e.DestinationPolicy||(e.DestinationPolicy={}))}(H||(H={})),function(e){let t,n,r,l,a;!function(e){e.INSTANT="transition.instant",e.FLY="transition.fly",e.FADEOUT="transition.fade"}(t=e.Transition||(e.Transition={})),function(e){e.NAVIGATION="tag.link.nav",e.MODEL="tag.link.model",e.EXT_LINK="tag.link.ext"}(n=e.LinkType||(e.LinkType={})),function(e){e.NONE="tag.chunk.none",e.TEXT="tag.chunk.text",e.LINK="tag.chunk.link"}(r=e.DescriptionChunkType||(e.DescriptionChunkType={})),function(e){e.HOVER="tag.hover",e.CLICK="tag.click",e.LINK_OPEN="tag.linkopen"}(l=e.Event||(e.Event={})),function(e){e.NONE="mattertag.media.none",e.PHOTO="mattertag.media.photo",e.VIDEO="mattertag.media.video",e.RICH="mattertag.media.rich"}(a=e.MediaType||(e.MediaType={}))}(W||(W={})),function(e){let t,n,r;!function(e){e.INSIDE="mode.inside",e.OUTSIDE="mode.outside",e.DOLLHOUSE="mode.dollhouse",e.FLOORPLAN="mode.floorplan",e.TRANSITIONING="mode.transitioning"}(t=e.Mode||(e.Mode={})),function(e){e.CHANGE_START="viewmode.changestart",e.CHANGE_END="viewmode.changeend"}(n=e.Event||(e.Event={})),function(e){e.INSTANT="transition.instant",e.FLY="transition.fly",e.FADEOUT="transition.fade"}(r=e.TransitionType||(e.TransitionType={}))}(K||(K={})),function(e){let t;!function(e){e.MODEL_LOADED="model.loaded"}(t=e.Event||(e.Event={}))}(q||(q={})),function(e){let t;!function(e){e.NONE="intersectedobject.none",e.MODEL="intersectedobject.model",e.TAG="intersectedobject.tag",e.SWEEP="intersectedobject.sweep",e.UNKNOWN="intersectedobject.unknown"}(t=e.Colliders||(e.Colliders={}))}($||($={})),G||(G={}),function(e){let t,n;!function(e){e.CAMERA="sensor.sensortype.camera"}(t=e.SensorType||(e.SensorType={})),function(e){e.SPHERE="sensor.sourcetype.sphere",e.BOX="sensor.sourcetype.box",e.CYLINDER="sensor.sourcetype.cylinder"}(n=e.SourceType||(e.SourceType={}))}(Q||(Q={})),function(e){let t,n,r,l;!function(e){e.ENTER="sweep.enter",e.EXIT="sweep.exit"}(t=e.Event||(e.Event={})),function(e){e.INSTANT="transition.instant",e.FLY="transition.fly",e.FADEOUT="transition.fade"}(n=e.Transition||(e.Transition={})),function(e){e.ALIGNED="aligned",e.UNALIGNED="unaligned"}(r=e.Alignment||(e.Alignment={})),function(e){e.UNPLACED="unplaced",e.AUTO="auto",e.MANUAL="manual"}(l=e.Placement||(e.Placement={}))}(Y||(Y={})),function(e){let t;!function(e){e.UNKNOWN="tag.attachment.unknown",e.APPLICATION="tag.attachment.application",e.AUDIO="tag.attachment.audio",e.IMAGE="tag.attachment.image",e.MODEL="tag.attachment.model",e.PDF="tag.attachment.pdf",e.RICH="tag.attachment.rich",e.TEXT="tag.attachment.text",e.VIDEO="tag.attachment.video",e.ZIP="tag.attachment.zip",e.SANDBOX="tag.attachment.sandbox"}(t=e.AttachmentType||(e.AttachmentType={}))}(X||(X={})),function(e){let t,n;!function(e){e.STARTED="tour.started",e.STOPPED="tour.stopped",e.ENDED="tour.ended",e.STEPPED="tour.stepped"}(t=e.Event||(e.Event={})),function(e){e.INACTIVE="tour.inactive",e.ACTIVE="tour.active",e.STOP_SCHEDULED="tour.stopscheduled"}(n=e.PlayState||(e.PlayState={}))}(J||(J={})),function(e){let t,n;!function(e){e.BASE="viewtype.base",e.LAYERED_BASE="viewtype.layeredbase",e.USER="viewtype.user",e.DEFURNISH="viewtype.defurnish",e.OTHER="viewtype.other"}(t=e.ViewType||(e.ViewType={})),function(e){e.BASE="layertype.base",e.VIEW_DATA="layertype.viewdata",e.USER="layertype.user",e.IN_MEMORY="layertype.inmemory",e.OTHER="layertype.other"}(n=e.LayerType||(e.LayerType={}))}(Z||(Z={})),function(e){let t,n,r;!function(e){e.OBJ_LOADER="mp.objLoader",e.FBX_LOADER="mp.fbxLoader",e.DAE_LOADER="mp.daeLoader",e.GLTF_LOADER="mp.gltfLoader",e.SCROLLING_TUBE="mp.scrollingTube",e.TRANSFORM_CONTROLS="mp.transformControls",e.LIGHTS_COMPONENT="mp.lights",e.POINT_LIGHT="mp.pointLight",e.DIRECTIONAL_LIGHT="mp.directionalLight",e.AMBIENT_LIGHT="mp.ambientLight",e.CAMERA="mp.camera",e.INPUT="mp.input",e.XR="mp.xr"}(t=e.Component||(e.Component={})),function(e){e.CLICK="INTERACTION.CLICK",e.HOVER="INTERACTION.HOVER",e.DRAG="INTERACTION.DRAG",e.DRAG_BEGIN="INTERACTION.DRAG_BEGIN",e.DRAG_END="INTERACTION.DRAG_END",e.POINTER_MOVE="INTERACTION.POINTER_MOVE",e.POINTER_BUTTON="INTERACTION.POINTER_BUTTON",e.SCROLL="INTERACTION.SCROLL",e.KEY="INTERACTION.KEY",e.LONG_PRESS_START="INTERACTION.LONG_PRESS_START",e.LONG_PRESS_END="INTERACTION.LONG_PRESS_END",e.MULTI_SWIPE="INTERACTION.MULTI_SWIPE",e.MULTI_SWIPE_END="INTERACTION.MULTI_SWIPE_END",e.PINCH="INTERACTION.PINCH",e.PINCH_END="INTERACTION.PINCH_END",e.ROTATE="INTERACTION.ROTATE",e.ROTATE_END="INTERACTION.ROTATE_END"}(n=e.InteractionType||(e.InteractionType={})),function(e){e.INPUT="input",e.OUTPUT="output",e.EVENT="event",e.EMIT="emit"}(r=e.PathType||(e.PathType={}))}(ee||(ee={})),function(e){let t;!function(e){e.ON="on",e.OFF="off"}(t=e.Visibility||(e.Visibility={}))}(te||(te={})),(re=ne||(ne={}))[re.BACKSPACE=8]="BACKSPACE",re[re.TAB=9]="TAB",re[re.RETURN=13]="RETURN",re[re.SHIFT=16]="SHIFT",re[re.CONTROL=17]="CONTROL",re[re.ALT=18]="ALT",re[re.ESCAPE=27]="ESCAPE",re[re.SPACE=32]="SPACE",re[re.HASH=35]="HASH",re[re.LEFTARROW=37]="LEFTARROW",re[re.UPARROW=38]="UPARROW",re[re.RIGHTARROW=39]="RIGHTARROW",re[re.DOWNARROW=40]="DOWNARROW",re[re.DELETE=46]="DELETE",re[re.ZERO=48]="ZERO",re[re.ONE=49]="ONE",re[re.TWO=50]="TWO",re[re.THREE=51]="THREE",re[re.FOUR=52]="FOUR",re[re.FIVE=53]="FIVE",re[re.SIX=54]="SIX",re[re.SEVEN=55]="SEVEN",re[re.EIGHT=56]="EIGHT",re[re.NINE=57]="NINE",re[re.AT=64]="AT",re[re.A=65]="A",re[re.B=66]="B",re[re.C=67]="C",re[re.D=68]="D",re[re.E=69]="E",re[re.F=70]="F",re[re.G=71]="G",re[re.H=72]="H",re[re.I=73]="I",re[re.J=74]="J",re[re.K=75]="K",re[re.L=76]="L",re[re.M=77]="M",re[re.N=78]="N",re[re.O=79]="O",re[re.P=80]="P",re[re.Q=81]="Q",re[re.R=82]="R",re[re.S=83]="S",re[re.T=84]="T",re[re.U=85]="U",re[re.V=86]="V",re[re.W=87]="W",re[re.X=88]="X",re[re.Y=89]="Y",re[re.Z=90]="Z",re[re.L_META=91]="L_META",re[re.R_META=93]="R_META",re[re.SEMICOLON=186]="SEMICOLON",re[re.PLUSEQUALS=187]="PLUSEQUALS",re[re.COMMA=188]="COMMA",re[re.DASHUNDERSCORE=189]="DASHUNDERSCORE",re[re.PERIOD=190]="PERIOD",re[re.OPENBRACKET=219]="OPENBRACKET",(ae=le||(le={}))[ae.DOWN=0]="DOWN",ae[ae.PRESSED=1]="PRESSED",ae[ae.UP=2]="UP",(oe=ie||(ie={}))[oe.PRIMARY=0]="PRIMARY",oe[oe.MIDDLE=1]="MIDDLE",oe[oe.SECONDARY=2]="SECONDARY",oe[oe.BACK=3]="BACK",oe[oe.FORWARD=4]="FORWARD",oe[oe.COUNT=5]="COUNT",(ce=se||(se={}))[ce.NONE=0]="NONE",ce[ce.PRIMARY=1]="PRIMARY",ce[ce.SECONDARY=4]="SECONDARY",ce[ce.MIDDLE=2]="MIDDLE",ce[ce.BACK=8]="BACK",ce[ce.FORWARD=16]="FORWARD",ce[ce.ALL=31]="ALL";var be=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};const he={height:50};function ge(e){const[t,n]=(0,h.useState)(null),r=(0,h.useCallback)((()=>be(this,void 0,void 0,(function*(){const t=yield e.sdk.Floor.getData();n(t)}))),[e.sdk.Floor]),l=JSON.stringify(t);return(0,p.jsxs)("tr",{children:[(0,p.jsx)("td",Object.assign({colSpan:1},{children:(0,p.jsx)("button",Object.assign({onClick:r},{children:"getData"}))})),(0,p.jsx)("td",Object.assign({colSpan:2},{children:(0,p.jsx)("textarea",{rows:3,style:he,value:l,readOnly:!0})}))]})}var me=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};function ve(e){const[t,n]=(0,h.useState)(""),[r,l]=(0,h.useState)(!1),a=(0,h.useRef)(null),i=(0,h.useRef)(null),o=(0,h.useCallback)((t=>me(this,void 0,void 0,(function*(){if(!a.current||!i.current)return;let t;try{const n=parseInt(a.current.value,10);let l;if(r)l=yield e.sdk.Floor.moveTo(n);else{const t=i.current.checked;l=yield e.sdk.Floor.moveTo(n,t)}t=`Moved to floor index ${l}`}catch(e){t=`Error ${e}`}n(t)}))),[r,e.sdk]),s=(0,h.useCallback)((()=>{l(!0)}),[]),c=r?"Move camera(set)":"Move camera(unset)";return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsxs)("tr",{children:[(0,p.jsx)("td",Object.assign({colSpan:1},{children:(0,p.jsx)("button",Object.assign({onClick:o},{children:"moveTo"}))})),(0,p.jsx)("td",Object.assign({colSpan:1},{children:(0,p.jsx)("input",{type:"number",id:"floor-moveto-index",className:"small-input",placeholder:"index",ref:a})})),(0,p.jsxs)("td",Object.assign({colSpan:1},{children:[(0,p.jsx)("div",{children:c}),(0,p.jsx)("input",{id:"floor-moveto-movecamera",type:"checkbox",ref:i,defaultChecked:!0,onChange:s})]}))]}),(0,p.jsx)("tr",{children:(0,p.jsx)("td",Object.assign({colSpan:2},{children:(0,p.jsx)("div",Object.assign({id:"settings-get-message"},{children:t}))}))})]})}var ye=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};function xe(e){const t=(0,h.useCallback)((t=>ye(this,void 0,void 0,(function*(){yield e.sdk.Floor.showAll()}))),[e.sdk.Floor]);return(0,p.jsx)("tr",{children:(0,p.jsx)("td",Object.assign({colSpan:1},{children:(0,p.jsx)("button",Object.assign({onClick:t},{children:"showAll"}))}))})}const _e={height:5};function je(){return(0,p.jsx)("tr",{style:_e})}const ke={width:"200px",borderWidth:1,borderStyle:"solid",borderColor:"lightgray"},we={maxWidth:20},Ee={padding:2,height:"50%",overflow:"scroll"},Te={backgroundColor:"rgba(239, 239, 239, 0.3)"};function Oe(e){const[t,n]=(0,h.useState)([]),[r,l]=(0,h.useState)(!1),a=(0,h.useCallback)((()=>n([])),[]),i=(0,h.useRef)(null);(0,h.useRef)().current=t;const o=(0,h.useCallback)((function(){const t=function(e,t,r){const l={checked:!1,type:e,payload:t};n((e=>[...e,l]))};return e.collection.subscribe({onAdded:(e,n)=>{t("onAdded",n)},onRemoved:(e,n)=>{t("onRemoved",n)},onUpdated:(e,n)=>{t("onUpdated",n)},onCollectionUpdated:e=>{t("onCollectionUpdated",e)}})}),[e.collection]),s=(0,h.useCallback)((e=>{const{currentTarget:t}=e;t.checked?(n([]),i.current=o()):(i.current.cancel(),i.current=null),l(t.checked)}),[o]),c=(0,h.useCallback)((function(e){const r=parseInt(e.currentTarget.value,10),l=[...t];l[r].checked=e.currentTarget.checked,n(l)}),[t]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsxs)("div",{children:["Collection: ",e.name]}),(0,p.jsxs)("div",{children:["subscribe: ",(0,p.jsx)("input",{type:"checkbox",onChange:s}),(0,p.jsx)("span",Object.assign({style:{float:"right"}},{children:(0,p.jsx)("button",Object.assign({onClick:a},{children:"Clear"}))}))]}),(0,p.jsx)("div",Object.assign({style:r?Object.assign({},ke):Object.assign(Object.assign({},ke),Te)},{children:(0,p.jsx)("ol",Object.assign({style:Ee},{children:t.map((function(e,t){return(0,p.jsxs)("li",{children:[(0,p.jsx)("input",{type:"checkbox",value:t,onChange:c,style:we}),e.type,(0,p.jsx)("textarea",{rows:3,style:(n=e.checked,{height:32,display:n?"block":"none"}),defaultValue:JSON.stringify(e.payload)})]},t);var n}))}))}))]})}const Se={width:"200px",borderWidth:1,borderStyle:"solid",borderColor:"lightgray"},Ce={maxWidth:20},Ne={padding:2,height:"50%",overflow:"scroll"},Ie={backgroundColor:"rgba(239, 239, 239, 0.3)"};function Re(e){const[t,n]=(0,h.useState)([]),[r,l]=(0,h.useState)(!1),a=(0,h.useCallback)((()=>n([])),[]),i=(0,h.useRef)(null),o=(0,h.useCallback)((function(){function r(e){return function(...r){const l=[];for(const e of r)"object"==typeof e?l.push(JSON.stringify(e)):l.push(e);t.push({checked:!1,type:e,data:l.join(",")}),n([...t])}}const l=Object.values(e.events).map((e=>[e,r(e)]));for(const[t,n]of l)e.sdk.on(t,n);return{cancel(){for(const t of Object.values(e.events))e.sdk.off(t,r)}}}),[t,e.events,e.sdk]),s=(0,h.useCallback)((e=>{const{currentTarget:t}=e;t.checked?(n([]),i.current=o()):(i.current.cancel(),i.current=null),l(t.checked)}),[o]),c=(0,h.useCallback)((function(e){const r=parseInt(e.currentTarget.value,10),l=[...t];l[r].checked=e.currentTarget.checked,n(l)}),[t]);return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsxs)("div",{children:["subscribe: ",(0,p.jsx)("input",{type:"checkbox",onChange:s}),(0,p.jsx)("span",Object.assign({style:{float:"right"}},{children:(0,p.jsx)("button",Object.assign({onClick:a},{children:"Clear"}))}))]}),(0,p.jsx)("div",Object.assign({style:r?Object.assign({},Se):Object.assign(Object.assign({},Se),Ie)},{children:(0,p.jsx)("ol",Object.assign({style:Ne},{children:t.map((function(e,t){return(0,p.jsxs)("li",{children:[(0,p.jsx)("input",{type:"checkbox",value:t,onChange:c,style:Ce}),String(e.type),(0,p.jsx)("textarea",{rows:3,style:(n=e.checked,{height:32,display:n?"block":"none"}),defaultValue:e.data})]},t);var n}))}))}))]})}function Pe(e){return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsx)(b,Object.assign({header:"Floor"},{children:(0,p.jsx)("table",{children:(0,p.jsxs)("tbody",{children:[(0,p.jsx)(ge,{sdk:e.sdk}),(0,p.jsx)(je,{}),(0,p.jsx)(ve,{sdk:e.sdk}),(0,p.jsx)(je,{}),(0,p.jsx)(xe,{sdk:e.sdk})]})})})),(0,p.jsx)(b,Object.assign({header:"Floor - Current"},{children:(0,p.jsx)(x,{observable:e.sdk.Floor.current,name:"Floor.current"})})),(0,p.jsx)(b,Object.assign({header:"Floor - Collection"},{children:(0,p.jsx)(Oe,{collection:e.sdk.Floor.data,name:"Floor.data"})})),(0,p.jsx)(b,Object.assign({header:"Floor - Events"},{children:(0,p.jsx)(Re,{events:e.sdk.Floor.Event,sdk:e.sdk})}))]})}var Ae=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};const Le={width:"100%",height:50};function De(e){const[t,n]=(0,h.useState)([]),[r,l]=(0,h.useState)(""),a=(0,h.useCallback)((()=>Ae(this,void 0,void 0,(function*(){const t=yield e.sdk.Label.getData();n(t),l(t.length>0?t[0].sid:"")}))),[e.sdk.Label]);let i=(0,p.jsx)("option",Object.assign({value:0,disabled:!0},{children:"(no data)"})),o="";if(t.length>0){i=t.map((e=>(0,p.jsx)("option",Object.assign({value:e.sid},{children:e.sid}),e.sid)));const e=t.findIndex((e=>e.sid===r));if(-1!==e){const n=t[e];o=JSON.stringify(n,null,2)}}const s=(0,h.useCallback)((e=>l(e.target.value)),[]);return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsxs)("div",Object.assign({style:{display:"flex",flexDirection:"row"}},{children:[(0,p.jsx)("button",Object.assign({onClick:a},{children:"getData"})),(0,p.jsx)("div",{style:{flexGrow:1}}),(0,p.jsx)("select",Object.assign({value:r,onChange:s},{children:i}))]})),(0,p.jsx)("div",{children:(0,p.jsx)("textarea",{style:Le,defaultValue:o})})]})}function Fe(e){return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)(b,Object.assign({header:"Label - Data"},{children:(0,p.jsx)(De,{sdk:e.sdk})})),(0,p.jsx)(b,Object.assign({header:"Label - Events"},{children:(0,p.jsx)(Re,{sdk:e.sdk,events:e.sdk.Label.Event})})),(0,p.jsx)(N,{collection:e.sdk.Label.data,label:"Label"})]})}var Me=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};function ze(e){const[t,n]=(0,h.useState)(""),r=(0,h.useCallback)((()=>Me(this,void 0,void 0,(function*(){const t=yield e.createLink();n(t)}))),[e]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsx)("button",Object.assign({onClick:r},{children:e.label})),(0,p.jsx)("br",{}),(0,p.jsx)("textarea",{style:{height:"3.5em"},value:t,readOnly:!0})]})}function Ue(e){const t=Object.keys(H.CreationPolicy).map(((e,t)=>(0,p.jsx)("option",Object.assign({value:H.CreationPolicy[e]},{children:e}),t))),n=(0,h.useCallback)((t=>{const n=t.currentTarget.value;n===H.CreationPolicy.MATTERPORT?e.setPolicy(n):e.setPolicy(n,{includeParams:n===H.CreationPolicy.REFERRER?["apiHost","applicationKey"]:["apiHost"]})}),[e]);return(0,p.jsx)("select",Object.assign({onChange:n},{children:t}))}function Be(e){const t=Object.keys(H.OpenPolicy).map(((e,t)=>(0,p.jsx)("option",Object.assign({value:H.OpenPolicy[e]},{children:e}),t))),n=(0,h.useCallback)((t=>{const n=t.currentTarget.value;e.setPolicy(n,{templateHref:window.location.origin+window.location.pathname+"?${bundleVersion}&${apiHost}&${mds}&${applicationKey}"})}),[e]);return(0,p.jsx)("select",Object.assign({onChange:n},{children:t}))}function Ve(e){const t=(0,h.useCallback)((t=>{const n="new window"===t.currentTarget.value;e.setPolicy(n)}),[e]);return(0,p.jsxs)("select",Object.assign({onChange:t},{children:[(0,p.jsx)("option",Object.assign({value:"new window"},{children:"NEW WINDOW"})),(0,p.jsx)("option",Object.assign({value:"same window"},{children:"SAME WINDOW"}))]}))}function He(e){return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsxs)("div",Object.assign({className:"controlPanel"},{children:[(0,p.jsx)("div",Object.assign({className:"controlPanelHeader"},{children:"Link - Create"})),(0,p.jsx)("label",{children:"Policy:"}),(0,p.jsx)(Ue,{setPolicy:e.sdk.Link.setShareLinkPolicy}),(0,p.jsx)("br",{}),(0,p.jsx)(ze,{label:"createLink",createLink:e.sdk.Link.createLink}),(0,p.jsx)("br",{}),(0,p.jsx)(ze,{label:"createDeepLink",createLink:e.sdk.Link.createDeepLink})]})),(0,p.jsxs)("div",Object.assign({className:"controlPanel"},{children:[(0,p.jsx)("div",Object.assign({className:"controlPanelHeader"},{children:"Link - Set Policy"})),"Opening policies:",(0,p.jsx)("table",{children:(0,p.jsxs)("tbody",{children:[(0,p.jsxs)("tr",{children:[(0,p.jsx)("td",{children:"Model:"}),(0,p.jsx)("td",{children:(0,p.jsx)(Be,{setPolicy:e.sdk.Link.setModelLinkPolicy})})]}),(0,p.jsxs)("tr",{children:[(0,p.jsx)("td",{children:"Navigation:"}),(0,p.jsx)("td",{children:(0,p.jsx)(Be,{setPolicy:e.sdk.Link.setNavigationLinkPolicy})})]}),(0,p.jsxs)("tr",{children:[(0,p.jsx)("td",{children:"Same Origin:"}),(0,p.jsx)("td",{children:(0,p.jsx)(Be,{setPolicy:e.sdk.Link.setSameOriginLinkPolicy})})]}),(0,p.jsxs)("tr",{children:[(0,p.jsx)("td",{children:"External:"}),(0,p.jsx)("td",{children:(0,p.jsx)(Ve,{setPolicy:e.sdk.Link.setExternalLinkPolicy})})]})]})})]}))]})}function We(e){const t=(0,h.useCallback)((()=>{e.sdk.Mattertag.editIcon(e.selectedMattertag,e.selectedAsset)}),[e.sdk.Mattertag,e.selectedAsset,e.selectedMattertag]),n=(0,h.useCallback)((()=>{e.sdk.Mattertag.resetIcon(e.selectedMattertag)}),[e.sdk.Mattertag,e.selectedMattertag]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({onClick:t},{children:"Edit Icon"}))}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({onClick:n},{children:"Reset Icon"}))})]})}var Ke=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};function qe(e){const t=(0,h.useRef)(null),n=(0,h.useRef)(null),r=(0,h.useCallback)((()=>Ke(this,void 0,void 0,(function*(){if(t.current&&n.current){const r=t.current.value,l=n.current.value;yield e.sdk.Mattertag.registerIcon(r,l),e.addAsset(r,l)}}))),[e]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsxs)("div",{children:[(0,p.jsx)("div",Object.assign({style:{display:"inline-block",width:"15%"}},{children:(0,p.jsx)("label",Object.assign({htmlFor:"mattertag-icon-id"},{children:"id: "}))})),(0,p.jsx)("div",Object.assign({style:{display:"inline-block",width:"85%"}},{children:(0,p.jsx)("input",{ref:t,id:"mattertag-icon-id",type:"string"})}))]}),(0,p.jsxs)("div",{children:[(0,p.jsx)("div",Object.assign({style:{display:"inline-block",width:"15%"}},{children:(0,p.jsx)("label",Object.assign({htmlFor:"mattertag-icon-src"},{children:"src: "}))})),(0,p.jsx)("div",Object.assign({style:{display:"inline-block",width:"85%"}},{children:(0,p.jsx)("input",{ref:n,id:"mattertag-icon-src",type:"string"})}))]}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({onClick:r},{children:"Register"}))})]})}function $e(e){const[t,n]=(0,h.useState)(""),r=(0,h.useCallback)((function(e){return e.label||"(no label)"}),[]),l=(0,h.useCallback)((function(e,t){return e.label<t.label?-1:e.label>t.label?1:0}),[]),{sdk:a}=e;return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsx)(b,Object.assign({header:"Mattertag - Collection"},{children:(0,p.jsx)(Oe,{collection:a.Mattertag.data,name:"Mattertags"})})),(0,p.jsx)(N,{label:"Mattertag",collection:a.Mattertag.data,onChanged:n,optionLabel:r,sort:l}),(0,p.jsx)(b,Object.assign({header:"Mattertag - Events"},{children:(0,p.jsx)(Re,{sdk:a,events:e.sdk.Mattertag.Event})})),(0,p.jsx)(b,Object.assign({header:"Mattertag - Edit Icon"},{children:(0,p.jsx)(We,{sdk:a,selectedMattertag:t,selectedAsset:e.selectedAsset})})),(0,p.jsx)(b,Object.assign({header:"Mattertag - Register Icon"},{children:(0,p.jsx)(qe,{sdk:a,selectedMattertag:t,selectedAsset:e.selectedAsset,addAsset:e.addAsset})}))]})}var Ge=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};const Qe={height:50};function Ye(e){const[t,n]=(0,h.useState)(""),r=(0,h.useCallback)((()=>Ge(this,void 0,void 0,(function*(){let t;try{t=yield e.sdk.Measurements.getData(),n(JSON.stringify(t))}catch(e){n(`error ${e}`)}}))),[e.sdk.Measurements]);return(0,p.jsxs)("tr",{children:[(0,p.jsx)("td",Object.assign({colSpan:1},{children:(0,p.jsx)("button",Object.assign({onClick:r},{children:"getData"}))})),(0,p.jsx)("td",Object.assign({colSpan:2},{children:(0,p.jsx)("textarea",{rows:3,style:Qe,value:t,readOnly:!0})}))]})}function Xe({sdk:e}){const[t,n]=(0,h.useState)(!1);(0,h.useEffect)((()=>{const t=e.Measurements.mode.subscribe((e=>n(e.active)));return()=>t.cancel()}),[e.Measurements.mode]);const r=(0,h.useCallback)((()=>{e.Measurements.toggleMode(!t)}),[t,e.Measurements]);return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({onClick:r},{children:"Toggle"}))}),(0,p.jsxs)("div",{children:["Active: ",(0,p.jsx)("span",{children:String(t)})]})]})}function Je({sdk:e}){return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)(N,{collection:e.Measurements.data,label:"Measurements"}),(0,p.jsx)(b,Object.assign({header:"Measurements - Mode"},{children:(0,p.jsx)(x,{name:"mode",observable:e.Measurements.mode})})),(0,p.jsx)(b,Object.assign({header:"Measurements - Toggle"},{children:(0,p.jsx)(Xe,{sdk:e})})),(0,p.jsx)(b,Object.assign({header:"Measurements - GetData"},{children:(0,p.jsx)("table",{children:(0,p.jsx)("tbody",{children:(0,p.jsx)(Ye,{sdk:e})})})}))]})}var Ze=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};const et={height:50};function tt(e){const[t,n]=(0,h.useState)(""),r=(0,h.useCallback)((()=>Ze(this,void 0,void 0,(function*(){let t;try{t=yield e.sdk.Model.getData(),n(JSON.stringify(t))}catch(e){n(`error ${e}`)}}))),[e.sdk.Model]);return(0,p.jsxs)("tr",{children:[(0,p.jsx)("td",Object.assign({colSpan:1},{children:(0,p.jsx)("button",Object.assign({onClick:r},{children:"getData"}))})),(0,p.jsx)("td",Object.assign({colSpan:3},{children:(0,p.jsx)("textarea",{rows:3,style:et,value:t,readOnly:!0})}))]})}var nt=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};const rt={height:50};function lt(e){const[t,n]=(0,h.useState)(""),r=(0,h.useCallback)((()=>nt(this,void 0,void 0,(function*(){let t;try{t=yield e.sdk.Model.getDetails(),n(JSON.stringify(t))}catch(e){n(`error ${e}`)}}))),[e.sdk.Model]);return(0,p.jsxs)("tr",{children:[(0,p.jsx)("td",Object.assign({colSpan:1},{children:(0,p.jsx)("button",Object.assign({onClick:r},{children:"getDetails"}))})),(0,p.jsx)("td",Object.assign({colSpan:3},{children:(0,p.jsx)("textarea",{rows:3,style:rt,value:t,readOnly:!0})}))]})}function at(e){return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsxs)("div",Object.assign({className:"controlPanel"},{children:[(0,p.jsx)("div",Object.assign({className:"controlPanelHeader"},{children:"Model"})),(0,p.jsx)("table",{children:(0,p.jsxs)("tbody",{children:[(0,p.jsx)(tt,{sdk:e.sdk}),(0,p.jsx)(lt,{sdk:e.sdk})]})})]})),(0,p.jsx)(b,Object.assign({header:"Model - Events"},{children:(0,p.jsx)(Re,{sdk:e.sdk,events:e.sdk.Model.Event})}))]})}var it=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};function ot(e){const[t,n]=(0,h.useState)(""),r=(0,h.useRef)(null),l=(0,h.useRef)(null),a=(0,h.useRef)(null),i=(0,h.useCallback)((()=>it(this,void 0,void 0,(function*(){var t,i,o;if(!r)return;const s=null===(t=r.current)||void 0===t?void 0:t.value,c=null===(i=l.current)||void 0===i?void 0:i.value,u=null===(o=a.current)||void 0===o?void 0:o.value;if(void 0===s||void 0===c||void 0===u)return;const d=e.sdk.Plugin;try{yield d.load({applicationKey:c,id:u},new URL(s,window.location.origin).href)}catch(e){n(`error: ${e}`)}}))),[]),o=(0,h.useCallback)((()=>it(this,void 0,void 0,(function*(){var t,i;if(!r)return;const o=null===(t=l.current)||void 0===t?void 0:t.value,s=null===(i=a.current)||void 0===i?void 0:i.value;if(void 0===o||void 0===s)return;const c=e.sdk.Plugin;try{yield c.unload({applicationKey:o,id:s})}catch(e){n(`error: ${e}`)}}))),[]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsxs)("tr",{children:[(0,p.jsx)("td",{children:(0,p.jsx)("span",{children:"App Key"})}),(0,p.jsx)("td",{children:(0,p.jsx)("input",{type:"text",placeholder:"application key",defaultValue:"qa314apf28d4um76n45cz91md",ref:l})})]}),(0,p.jsxs)("tr",{children:[(0,p.jsx)("td",{children:(0,p.jsx)("span",{children:"Plugin Id"})}),(0,p.jsx)("td",{children:(0,p.jsx)("input",{type:"text",placeholder:"plugin id",ref:a})})]}),(0,p.jsxs)("tr",{children:[(0,p.jsx)("td",{children:(0,p.jsx)("span",{children:"Url"})}),(0,p.jsx)("td",{children:(0,p.jsx)("input",{type:"text",id:"scene-source-url",placeholder:"source url",ref:r})})]}),(0,p.jsx)("tr",{children:(0,p.jsx)("td",{children:(0,p.jsx)("button",Object.assign({onClick:i},{children:"Load"}))})}),(0,p.jsx)("tr",{children:(0,p.jsx)("td",{children:(0,p.jsx)("button",Object.assign({onClick:o},{children:"Unload"}))})}),(0,p.jsx)("tr",{children:(0,p.jsx)("td",Object.assign({colSpan:3},{children:(0,p.jsx)("div",Object.assign({id:"scene-setplugin-message"},{children:t}))}))})]})}function st(e){const t=e.sdk.Plugin;return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsx)(b,Object.assign({header:"Plugin"},{children:(0,p.jsx)("table",{children:(0,p.jsx)("tbody",{children:(0,p.jsx)(ot,{sdk:e.sdk})})})})),(0,p.jsx)(b,Object.assign({header:"Plugin - Collection"},{children:(0,p.jsx)(Oe,{collection:t.data,name:"Plugin.data"})}))]})}function ct(e){const t=(0,h.useCallback)((()=>{e.sdk.Pointer.editTexture(e.selectedAsset)}),[e.sdk.Pointer,e.selectedAsset]),n=(0,h.useCallback)((()=>{e.sdk.Pointer.resetTexture()}),[e.sdk.Pointer]);return(0,p.jsxs)(h.Fragment,{children:["SelectedAsset: ",e.selectedAsset,(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({onClick:t},{children:"Edit Texture"}))}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({onClick:n},{children:"Reset Texture"}))})]})}var ut=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};function dt(e){const t=(0,h.useRef)(null),n=(0,h.useRef)(null),r=(0,h.useCallback)((()=>ut(this,void 0,void 0,(function*(){if(t.current&&n.current){const r=t.current.value,l=n.current.value;yield e.sdk.Pointer.registerTexture(r,l),e.addAsset(r,l)}}))),[e]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({htmlFor:"pointer-texture-id"},{children:"id: "})),(0,p.jsx)("input",{ref:t,id:"pointer-texture-id",type:"string"})]}),(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({htmlFor:"pointer-texture-src"},{children:"src: "})),(0,p.jsx)("input",{ref:n,id:"pointer-texture-src",type:"string"})]}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({onClick:r},{children:"Register"}))})]})}function pt(e){const{sdk:t,selectedAsset:n,addAsset:r}=e;return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)(b,Object.assign({header:"Pointer - Register Texture"},{children:(0,p.jsx)(dt,{sdk:t,addAsset:r})})),(0,p.jsx)(b,Object.assign({header:"Pointer - Edit Texture"},{children:(0,p.jsx)(ct,{sdk:t,selectedAsset:n})}))]})}var ft=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};function bt(e){const[t,n]=(0,h.useState)(""),r=(0,h.useRef)(null),l=(0,h.useRef)(null),a=(0,h.useRef)(null),i=(0,h.useCallback)((t=>{!function(){var t,i,o;ft(this,void 0,void 0,(function*(){if(!r.current||!l.current||!a.current)return;const s=null===(t=r.current)||void 0===t?void 0:t.value,c=null===(i=l.current)||void 0===i?void 0:i.value,u=null===(o=a.current)||void 0===o?void 0:o.value;if(s&&c&&u)try{const t=yield e.sdk.Renderer.getScreenPosition({x:parseFloat(s),y:parseFloat(c),z:parseFloat(u)});t.x=Math.trunc(t.x),t.y=Math.trunc(t.y),n(`success x:${t.x} y:${t.y}`)}catch(e){n("error")}}))}()}),[e.sdk.Renderer]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsxs)("tr",{children:[(0,p.jsx)("td",{children:(0,p.jsx)("button",Object.assign({onClick:i},{children:"getScreenPosition"}))}),(0,p.jsx)("td",{children:(0,p.jsx)("input",{type:"number",id:"renderer-getscreenposition-x",className:"small-input",placeholder:"x",ref:r})}),(0,p.jsx)("td",{children:(0,p.jsx)("input",{type:"number",id:"renderer-getscreenposition-y",className:"small-input",placeholder:"y",ref:l})}),(0,p.jsx)("td",{children:(0,p.jsx)("input",{type:"number",id:"renderer-getscreenposition-z",className:"small-input",placeholder:"z",ref:a})})]}),(0,p.jsx)("tr",{children:(0,p.jsx)("td",Object.assign({colSpan:3},{children:(0,p.jsx)("div",Object.assign({id:"renderer-getscreenposition-message"},{children:t}))}))})]})}var ht=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};function gt(e){const[t,n]=(0,h.useState)(""),r=(0,h.useRef)(null),l=(0,h.useRef)(null),a=(0,h.useCallback)((t=>{!function(){var t,a;ht(this,void 0,void 0,(function*(){if(!r.current||!l.current)return;const i=null===(t=r.current)||void 0===t?void 0:t.value,o=null===(a=l.current)||void 0===a?void 0:a.value;if(i&&o)try{const t=yield e.sdk.Renderer.getWorldPositionData({x:parseFloat(i),y:parseFloat(o)});n(`success ${JSON.stringify(t)}`)}catch(e){n("error")}}))}()}),[e.sdk.Renderer]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsxs)("tr",{children:[(0,p.jsx)("td",{children:(0,p.jsx)("button",Object.assign({onClick:a},{children:"getWorldPositionData"}))}),(0,p.jsx)("td",{children:(0,p.jsx)("input",{type:"number",id:"renderer-getworldpositiondata-x",className:"small-input",placeholder:"x",ref:r})}),(0,p.jsx)("td",{children:(0,p.jsx)("input",{type:"number",id:"renderer-getworldpositiondata-y",className:"small-input",placeholder:"y",ref:l})})]}),(0,p.jsx)("tr",{children:(0,p.jsx)("td",Object.assign({colSpan:3},{children:(0,p.jsx)("div",Object.assign({id:"renderer-getscreenposition-message"},{children:t}))}))})]})}function mt(e){return(0,p.jsx)(h.Fragment,{children:(0,p.jsxs)("div",Object.assign({className:"controlPanel"},{children:[(0,p.jsx)("div",Object.assign({className:"controlPanelHeader"},{children:"Renderer"})),(0,p.jsx)("table",{children:(0,p.jsxs)("tbody",{children:[(0,p.jsx)(bt,{sdk:e.sdk}),(0,p.jsx)(gt,{sdk:e.sdk})]})})]}))})}function vt(e){return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsx)(b,Object.assign({header:"Room - Current"},{children:(0,p.jsx)(x,{observable:e.sdk.Room.current,name:"Room.current"})})),(0,p.jsx)(b,Object.assign({header:"Room - Collection"},{children:(0,p.jsx)(Oe,{collection:e.sdk.Room.data,name:"Room.data"})})),(0,p.jsx)(N,{collection:e.sdk.Room.data,label:"Room",additionalProperties:["size","center"]})]})}function yt(e){const t=(0,h.useRef)(null),n=(0,h.useCallback)((()=>{var n,r;(null===(n=t.current)||void 0===n?void 0:n.value)&&e.path.set(null===(r=t.current)||void 0===r?void 0:r.value)}),[e.path]);return(0,p.jsxs)("tr",{children:[(0,p.jsx)("td",Object.assign({colSpan:2},{children:(0,p.jsx)("button",Object.assign({onClick:n},{children:e.id}))})),(0,p.jsx)("td",Object.assign({colSpan:2},{children:(0,p.jsx)("input",{type:"text",placeholder:"string",ref:t})}))]})}const xt=JSON.parse('{"version":"2.0","payload":{"objects":[{"name":"","position":{"x":0,"y":0.6,"z":0},"rotation":{"x":0,"y":0,"z":0},"scale":{"x":1,"y":1,"z":1},"components":[{"type":"mp.gltfLoader","id":"gltf-loader","inputs":{"url":"","materialUrl":"","visible":true,"localScale":{"x":1,"y":1,"z":1},"localRotation":{"x":0,"y":0,"z":0},"localPosition":{"x":0,"y":0,"z":0},"colliderEnabled":true},"events":{"INTERACTION.CLICK":true,"INTERACTION.HOVER":true,"INTERACTION.DRAG":false,"INTERACTION.DRAG_BEGIN":false,"INTERACTION.DRAG_END":false,"INTERACTION.POINTER_MOVE":false,"INTERACTION.POINTER_BUTTON":false,"INTERACTION.SCROLL":false,"INTERACTION.KEY":false,"INTERACTION.LONG_PRESS_START":false,"INTERACTION.LONG_PRESS_END":false,"INTERACTION.MULTI_SWIPE":false,"INTERACTION.MULTI_SWIPE_END":false,"INTERACTION.PINCH":false,"INTERACTION.PINCH_END":false,"INTERACTION.ROTATE":false,"INTERACTION.ROTATE_END":false}},{"type":"mp.objLoader","id":"obj-loader","inputs":{"url":"","materialUrl":"","visible":true,"localScale":{"x":0.03,"y":0.03,"z":0.03},"localRotation":{"x":0,"y":0,"z":0},"localPosition":{"x":0,"y":0,"z":0},"colliderEnabled":true},"events":{"INTERACTION.CLICK":true,"INTERACTION.HOVER":true,"INTERACTION.DRAG":false,"INTERACTION.DRAG_BEGIN":false,"INTERACTION.DRAG_END":false,"INTERACTION.POINTER_MOVE":false,"INTERACTION.POINTER_BUTTON":false,"INTERACTION.SCROLL":false,"INTERACTION.KEY":false,"INTERACTION.LONG_PRESS_START":false,"INTERACTION.LONG_PRESS_END":false,"INTERACTION.MULTI_SWIPE":false,"INTERACTION.MULTI_SWIPE_END":false,"INTERACTION.PINCH":false,"INTERACTION.PINCH_END":false,"INTERACTION.ROTATE":false,"INTERACTION.ROTATE_END":false}},{"type":"mp.daeLoader","id":"dae-loader","inputs":{"url":"","materialUrl":"","visible":true,"localScale":{"x":1,"y":1,"z":1},"localRotation":{"x":0,"y":0,"z":0},"localPosition":{"x":0,"y":0,"z":0},"colliderEnabled":true},"events":{"INTERACTION.CLICK":true,"INTERACTION.HOVER":true,"INTERACTION.DRAG":false,"INTERACTION.DRAG_BEGIN":false,"INTERACTION.DRAG_END":false,"INTERACTION.POINTER_MOVE":false,"INTERACTION.POINTER_BUTTON":false,"INTERACTION.SCROLL":false,"INTERACTION.KEY":false,"INTERACTION.LONG_PRESS_START":false,"INTERACTION.LONG_PRESS_END":false,"INTERACTION.MULTI_SWIPE":false,"INTERACTION.MULTI_SWIPE_END":false,"INTERACTION.PINCH":false,"INTERACTION.PINCH_END":false,"INTERACTION.ROTATE":false,"INTERACTION.ROTATE_END":false}}],"bindings":[],"id":"JxRI"},{"name":"","position":{"x":0,"y":0,"z":0},"rotation":{"x":0,"y":0,"z":0},"scale":{"x":1,"y":1,"z":1},"components":[{"type":"mp.directionalLight","id":"ouvX","inputs":{"enabled":true,"color":{"r":0.7,"g":0.7,"b":0.7},"intensity":2,"position":{"x":1,"y":5,"z":1},"target":{"x":0,"y":0,"z":0},"castShadow":false,"debug":false},"events":{"INTERACTION.CLICK":false,"INTERACTION.HOVER":false,"INTERACTION.DRAG":false,"INTERACTION.DRAG_BEGIN":false,"INTERACTION.DRAG_END":false,"INTERACTION.POINTER_MOVE":false,"INTERACTION.POINTER_BUTTON":false,"INTERACTION.SCROLL":false,"INTERACTION.KEY":false,"INTERACTION.LONG_PRESS_START":false,"INTERACTION.LONG_PRESS_END":false,"INTERACTION.MULTI_SWIPE":false,"INTERACTION.MULTI_SWIPE_END":false,"INTERACTION.PINCH":false,"INTERACTION.PINCH_END":false,"INTERACTION.ROTATE":false,"INTERACTION.ROTATE_END":false}},{"type":"mp.ambientLight","id":"aZ8Q","inputs":{"enabled":true,"color":{"r":1,"g":1,"b":1},"intensity":0.5},"events":{"INTERACTION.CLICK":false,"INTERACTION.HOVER":false,"INTERACTION.DRAG":false,"INTERACTION.DRAG_BEGIN":false,"INTERACTION.DRAG_END":false,"INTERACTION.POINTER_MOVE":false,"INTERACTION.POINTER_BUTTON":false,"INTERACTION.SCROLL":false,"INTERACTION.KEY":false,"INTERACTION.LONG_PRESS_START":false,"INTERACTION.LONG_PRESS_END":false,"INTERACTION.MULTI_SWIPE":false,"INTERACTION.MULTI_SWIPE_END":false,"INTERACTION.PINCH":false,"INTERACTION.PINCH_END":false,"INTERACTION.ROTATE":false,"INTERACTION.ROTATE_END":false}}],"bindings":[],"id":"rLHR"}],"bindings":[],"paths":[["gltfUrl","JxRI/gltf-loader/url"],["objUrl","JxRI/obj-loader/url"],["daeUrl","JxRI/dae-loader/url"],["ambientIntensity","rLHR/ouvX/intensity"]]}}');var _t=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};const jt=JSON.stringify(xt);function kt(e){const[t,n]=(0,h.useState)(null),r=(0,h.useRef)(null),l=(0,h.useCallback)((()=>{if(t){if(t.object&&t.object.stop(),t.objects)for(const e of t.objects)e.stop();n(null)}}),[t]),a=(0,h.useCallback)((t=>_t(this,void 0,void 0,(function*(){var r;const l=yield e.sdk.Scene.deserialize(t);if(l)if(Array.isArray(l)){const e=l;for(const t of e)t.start();n({object:null,objects:e,paths:[]})}else if("object"==typeof l){const e=JSON.parse(t),a=null===(r=null==e?void 0:e.payload)||void 0===r?void 0:r.paths,i=[];if(a)for(const e of a)i.push(e[0]);const o=l;o.start(),n({object:o,objects:null,paths:i})}}))),[e.sdk.Scene]),i=(0,h.useCallback)((e=>{if(l(),0===e.target.files.length)return;const t=new FileReader;t.onload=e=>_t(this,void 0,void 0,(function*(){if(e.target){const t=e.target.result;console.log(t),yield a(t)}})),t.readAsText(e.target.files[0],"UTF-8")}),[l,a]),o=(0,h.useCallback)((e=>{l(),r.current&&(r.current.value="")}),[l]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsx)("tr",{children:(0,p.jsxs)("td",Object.assign({colSpan:3},{children:[(0,p.jsx)("input",{type:"file",id:"scene-deserialize-key",placeholder:"key",accept:".json",onChange:i,ref:r}),(0,p.jsx)("input",{type:"button",onClick:e=>{r.current&&(r.current.value=""),a(jt)},value:"Model Loader"})]}))}),(0,p.jsx)("tr",{children:(0,p.jsx)("td",Object.assign({colSpan:3},{children:(0,p.jsx)("button",Object.assign({onClick:o},{children:"Clear"}))}))}),(()=>{if(t&&t.object){const e=[];for(const{desc:n,path:r}of t.object.pathIterator())n.type===ee.PathType.INPUT&&e.push({desc:n,path:r});return e.map((function(e){return(0,p.jsx)(yt,{id:e.desc.id,path:e.path},e.desc.id)}))}return null})()]})}function wt(e){return(0,p.jsx)(h.Fragment,{children:(0,p.jsxs)("div",Object.assign({className:"controlPanel"},{children:[(0,p.jsx)("div",Object.assign({className:"controlPanelHeader"},{children:"Scene"})),(0,p.jsx)("table",{children:(0,p.jsx)("tbody",{children:(0,p.jsx)(kt,{sdk:e.sdk})})})]}))})}function Et(e){return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsx)("tr",{children:(0,p.jsx)("td",Object.assign({colSpan:3},{children:(0,p.jsx)("div",{children:"TBD"})}))}),(0,p.jsx)("tr",{children:(0,p.jsx)("td",{colSpan:3})})]})}function Tt(e){return(0,p.jsx)(h.Fragment,{children:(0,p.jsxs)("div",Object.assign({className:"controlPanel"},{children:[(0,p.jsx)("div",Object.assign({className:"controlPanelHeader"},{children:"Sensor"})),(0,p.jsx)("table",{children:(0,p.jsx)("tbody",{children:(0,p.jsx)(Et,{sdk:e.sdk})})})]}))})}var Ot=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};function St(e){const[t,n]=(0,h.useState)(""),r=(0,h.useRef)(null),l=(0,h.useCallback)((t=>Ot(this,void 0,void 0,(function*(){var t;if(!r.current)return;const l=null===(t=r.current)||void 0===t?void 0:t.value,a=yield e.sdk.Settings.get(l);n(`key:${l} value:${a}`)}))),[e.sdk]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsxs)("tr",{children:[(0,p.jsx)("td",{children:(0,p.jsx)("button",Object.assign({onClick:l},{children:"get"}))}),(0,p.jsx)("td",{children:(0,p.jsx)("input",{type:"text",id:"settings-get-key",className:"small-input",placeholder:"key",ref:r})})]}),(0,p.jsx)("tr",{children:(0,p.jsx)("td",Object.assign({colSpan:2},{children:(0,p.jsx)("div",Object.assign({id:"settings-get-message"},{children:t}))}))})]})}var Ct=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};function Nt(e){const[t,n]=(0,h.useState)(""),r=(0,h.useRef)(null),l=(0,h.useRef)(null),a=(0,h.useCallback)((()=>Ct(this,void 0,void 0,(function*(){var t,a;if(!r||!l)return;const i=null===(t=r.current)||void 0===t?void 0:t.value,o=null===(a=l.current)||void 0===a?void 0:a.value;if(void 0!==i&&void 0!==o)try{yield e.sdk.Settings.update(i,o),n(`success key:${i} value: ${o}`)}catch(e){n(`error key:${i} value: ${o}`)}}))),[e.sdk.Settings]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsxs)("tr",{children:[(0,p.jsx)("td",{children:(0,p.jsx)("button",Object.assign({onClick:a},{children:"update"}))}),(0,p.jsx)("td",{children:(0,p.jsx)("input",{type:"text",id:"settings-update-key",className:"small-input",placeholder:"key",ref:r})}),(0,p.jsx)("td",{children:(0,p.jsx)("input",{type:"text",id:"settings-update-value",className:"small-input",placeholder:"value",ref:l})})]}),(0,p.jsx)("tr",{children:(0,p.jsx)("td",Object.assign({colSpan:3},{children:(0,p.jsx)("div",Object.assign({id:"settings-update-message"},{children:t}))}))})]})}function It(e){return(0,p.jsxs)("div",Object.assign({className:"controlPanel"},{children:[(0,p.jsx)("div",Object.assign({className:"controlPanelHeader"},{children:"Settings"})),(0,p.jsx)("table",{children:(0,p.jsxs)("tbody",{children:[(0,p.jsx)(St,{sdk:e.sdk}),(0,p.jsx)(Nt,{sdk:e.sdk})]})})]}))}var Rt=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};function Pt(e){const[t,n]=(0,h.useState)(""),r=(0,h.useRef)(null),l=(0,h.useCallback)((()=>Rt(this,void 0,void 0,(function*(){var t;if(!r)return;const l=null===(t=r.current)||void 0===t?void 0:t.value;if(void 0!==l)try{yield e.sdk.Sweep.disable(l),n(`sweepId:${l} disabled`)}catch(e){n(`error disabling sweepId:${l}`)}}))),[e.sdk.Sweep]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsxs)("tr",{children:[(0,p.jsx)("td",{children:(0,p.jsx)("button",Object.assign({onClick:l},{children:"disable"}))}),(0,p.jsx)("td",{children:(0,p.jsx)("input",{type:"text",id:"sweep-disable-sweepId",placeholder:"sweep id",ref:r})})]}),(0,p.jsx)("tr",{children:(0,p.jsx)("td",Object.assign({colSpan:3},{children:(0,p.jsx)("div",Object.assign({id:"sweep-disable-message"},{children:t}))}))})]})}var At=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};function Lt(e){const[t,n]=(0,h.useState)(""),r=(0,h.useRef)(null),l=(0,h.useCallback)((()=>At(this,void 0,void 0,(function*(){var t;if(!r)return;const l=null===(t=r.current)||void 0===t?void 0:t.value;if(void 0!==l)try{yield e.sdk.Sweep.enable(l),n(`sweepId:${l} enabled`)}catch(e){n(`error enabling sweepId:${l}`)}}))),[e.sdk.Sweep]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsxs)("tr",{children:[(0,p.jsx)("td",{children:(0,p.jsx)("button",Object.assign({onClick:l},{children:"enable"}))}),(0,p.jsx)("td",{children:(0,p.jsx)("input",{type:"text",id:"sweep-enable-sweepId",placeholder:"sweep id",ref:r})})]}),(0,p.jsx)("tr",{children:(0,p.jsx)("td",Object.assign({colSpan:3},{children:(0,p.jsx)("div",Object.assign({id:"sweep-enable-message"},{children:t}))}))})]})}var Dt=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};const Ft=e=>{const[t,n]=(0,h.useState)({}),[r,l]=(0,h.useState)({}),[a,i]=(0,h.useState)([]),[o,s]=(0,h.useState)([]),[c,u]=(0,h.useState)(""),[d,f]=(0,h.useState)(""),b=(0,h.useRef)(!1),g=(0,h.useRef)(""),m=(0,h.useCallback)((e=>{const t=r[e];if(!t)throw new Error("Id doesn't correspond to sweep: "+e);s(t.neighbors),f(e),g.current=e}),[r]);const v=(0,h.useCallback)(((t,r)=>Dt(void 0,void 0,void 0,(function*(){const l={};yield Promise.all(Object.values(t).map((t=>Dt(void 0,void 0,void 0,(function*(){const n=yield e.sdk.Sweep.Conversion.getLabelFromId(t.id);l[t.id]=n,l[r[t.id]]=n}))))).then((()=>{n(l),c&&m(c)}))}))),[m,c,e.sdk.Sweep.Conversion]);(0,h.useEffect)((()=>{const t=[];return function(){return Dt(this,void 0,void 0,(function*(){yield e.sdk.App.state.waitUntil((t=>t.phase===e.sdk.App.Phase.PLAYING));const n=yield e.sdk.Sweep.Conversion.createIdMap(!0);t.push(e.sdk.Sweep.current.subscribe((e=>{var t;e.id&&u(null!==(t=n[e.id])&&void 0!==t?t:e.id)}))),t.push(e.sdk.Sweep.data.subscribe({onCollectionUpdated(e){return Dt(this,void 0,void 0,(function*(){const t=function(e,t){var n;const r={},a=Object.values(e).map((e=>{var n;const l=null!==(n=t[e.id])&&void 0!==n?n:e.id;return r[l]=e,l}));l(r);const i=null!==(n=t[g.current])&&void 0!==n?n:g.current;return r&&r[i]&&s(r[i].neighbors),a}(e,n);b.current?c&&m(c):(i(t),b.current=!0,v(e,n))}))}}))}))}().catch((e=>{console.error(e)})),()=>{t.forEach((e=>{e.cancel()}))}}),[m,c,v,e.sdk.App.Phase.PLAYING,e.sdk.App.state,e.sdk.Sweep]);const y=(0,p.jsx)("option",Object.assign({value:""},{children:"-"}),-1),x=a.map(((e,n)=>(0,p.jsx)("option",Object.assign({value:e},{children:t[e]}),n)));return x.unshift(y),(0,p.jsxs)(p.Fragment,{children:[(0,p.jsxs)("p",{children:["Select Sweep: ",(0,p.jsx)("select",Object.assign({onChange:function(e){const t=e.currentTarget.value;m(t)},value:d},{children:x})),(0,p.jsxs)("button",Object.assign({style:{float:"right"},disabled:!c||c===d,onClick:()=>{m(c)}},{children:[" Use Current (",t[c],") "]}))]}),(0,p.jsxs)("div",Object.assign({style:{width:"250px"}},{children:["Neighbors: ",o.map(((e,n)=>t[e])).join(", ")]})),(0,p.jsx)("hr",{}),(0,p.jsxs)("div",{children:["Remove sweep neighbor:",(0,p.jsxs)("select",Object.assign({onChange:function(t){var n;return Dt(this,void 0,void 0,(function*(){const r=t.currentTarget.value;if(!r)return void console.warn("cannot select spacer as ID!");const l=yield e.sdk.Sweep.Conversion.createIdMap(!0);yield e.sdk.Sweep.removeNeighbors(d,[null!==(n=l[r])&&void 0!==n?n:r]),console.log("removed sweep",r)}))},value:-1,style:{float:"right",width:"40px"}},{children:[y,o.map(((e,n)=>(0,p.jsx)("option",Object.assign({value:e},{children:t[e]}),n)))]}))]}),(0,p.jsxs)("div",{children:["Add sweep neighbor:",(0,p.jsx)("select",Object.assign({onChange:function(t){var n;return Dt(this,void 0,void 0,(function*(){const r=t.currentTarget.value;if(!r)return void console.warn("cannot select spacer as ID!");const l=yield e.sdk.Sweep.Conversion.createIdMap(!0);yield e.sdk.Sweep.addNeighbors(d,[null!==(n=l[r])&&void 0!==n?n:r]),console.log("added sweep",r)}))},value:-1,style:{float:"right",width:"40px"}},{children:x}))]})]})};function Mt(e){return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)(b,Object.assign({header:"Sweep - Current"},{children:(0,p.jsx)(x,{observable:e.sdk.Sweep.current,name:"Sweep.current"})})),(0,p.jsx)(b,Object.assign({header:"Sweep - Collection"},{children:(0,p.jsx)(Oe,{collection:e.sdk.Sweep.data,name:"Sweep.data"})})),(0,p.jsxs)("div",Object.assign({className:"controlPanel"},{children:[(0,p.jsx)("div",Object.assign({className:"controlPanelHeader"},{children:"Sweep"})),(0,p.jsx)("table",{children:(0,p.jsxs)("tbody",{children:[(0,p.jsx)(Pt,{sdk:e.sdk}),(0,p.jsx)(Lt,{sdk:e.sdk})]})})]})),(0,p.jsx)(b,Object.assign({header:"Sweep - Events"},{children:(0,p.jsx)(Re,{sdk:e.sdk,events:e.sdk.Sweep.Event})})),(0,p.jsx)(b,Object.assign({header:"Sweep Neighbor Connections"},{children:(0,p.jsx)(Ft,{sdk:e.sdk})}))]})}function zt(e){const[t,n]=(0,h.useState)(!0),r=(0,h.useRef)(),l=["",""],a=(0,h.useRef)(),i=(0,h.useRef)(),o=(0,h.useCallback)((function(e){l[0]=e,c()}),[]),s=(0,h.useCallback)((function(e){l[1]=e,c()}),[]);function c(){if(r.current){const t=r.current.vertex(l[0]),o=r.current.vertex(l[1]);t&&o&&(a.current&&a.current.cancel(),i.current=e.sdk.Graph.createAStarRunner(r.current,t,o),a.current=i.current.subscribe({onChanged(){n(!0)}}))}n(!0)}(0,h.useEffect)((()=>{e.sdk.Sweep.createGraph().then((e=>r.current=e))}));const u=(0,h.useRef)(null),d=(0,h.useCallback)((function(){if(i.current){const e=i.current.exec();u.current&&(e.status!==B.AStarStatus.SUCCESS?u.current.value="No path found":u.current.value=e.path.map(((e,t)=>t+": "+e.id)).join("\n")),n(!1)}}),[]);return(0,p.jsx)(h.Fragment,{children:(0,p.jsxs)("div",Object.assign({className:"controlPanel"},{children:[(0,p.jsx)("div",Object.assign({className:"controlPanelHeader"},{children:"Graph - Sweep"})),(0,p.jsxs)("div",{children:["Start: ",(0,p.jsx)(C,{collection:e.sdk.Sweep.data,filter:Ut,onChanged:o})]}),(0,p.jsxs)("div",{children:["End: ",(0,p.jsx)(C,{collection:e.sdk.Sweep.data,filter:Ut,onChanged:s})]}),(0,p.jsxs)("div",{children:["Path Dirty: ",t.toString()]}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({onClick:d},{children:"CALCULATE PATH"}))}),(0,p.jsx)("div",{children:(0,p.jsx)("textarea",{style:{width:"300px",height:"72px",whiteSpace:"pre"},ref:u})})]}))})}function Ut(e){return e.enabled}function Bt({sdk:e,selectedLayer:t,children:n}){const[r,l]=(0,h.useState)(!1),a=(0,h.useCallback)((e=>{l(e.target.checked)}),[]);return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsxs)("div",Object.assign({style:{backgroundColor:"#d7dee0"}},{children:[(0,p.jsxs)("div",Object.assign({style:{display:"inline-block"}},{children:[(0,p.jsx)("label",Object.assign({htmlFor:""},{children:"Use Layer"})),(0,p.jsx)("input",{type:"checkbox",onChange:a})]})),(0,p.jsx)("div",Object.assign({style:{display:"inline-block"}},{children:(0,p.jsx)("input",{width:"200px",type:"text",value:t?t.id:"no layer selected",readOnly:!0,disabled:!r})}))]})),(0,p.jsx)("div",{children:h.Children.map(n,(n=>(0,h.cloneElement)(n,{sdk:r&&t?t:e})))})]})}function Vt(e){const t=(0,h.useRef)(null),n=(0,h.useRef)(null),r=(0,h.useRef)(null),l=(0,h.useRef)(null),a=(0,h.useRef)(null),i=(0,h.useRef)(null),o=(0,h.useRef)(null),s=(0,h.useRef)(null),c=(0,h.useRef)(null),u=(0,h.useRef)(null),d=(0,h.useRef)(null),f=(0,h.useCallback)((()=>{var p;t.current&&n.current&&r.current&&l.current&&a.current&&i.current&&o.current&&s.current&&c.current&&u.current&&e.sdk.Tag.add({id:""===c.current.value?void 0:c.current.value,label:t.current.value,description:n.current.value,anchorPosition:{x:parseFloat(r.current.value),y:parseFloat(l.current.value),z:parseFloat(a.current.value)},stemVector:{x:parseFloat(i.current.value),y:parseFloat(o.current.value),z:parseFloat(s.current.value)},opacity:parseFloat(u.current.value),iconId:(null===(p=d.current)||void 0===p?void 0:p.checked)&&e.selectedAsset?e.selectedAsset:void 0})}),[e.sdk.Tag,e.selectedAsset]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({htmlFor:"tag2-add-title"},{children:"Title:"})),(0,p.jsx)("input",{ref:t,type:"text",id:"tag2-add-title"})]}),(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({htmlFor:"tag2-add-desc"},{children:"Desc:"})),(0,p.jsx)("textarea",{ref:n,id:"tag2-add-desc"})]}),(0,p.jsxs)("div",{children:[(0,p.jsx)("div",{children:"position:"}),(0,p.jsx)("label",Object.assign({htmlFor:"tag2-add-pos-x"},{children:"x: "})),(0,p.jsx)("input",{ref:r,className:"small-input",id:"tag2-add-pos-x",type:"number",step:"0.001",defaultValue:"0"}),(0,p.jsx)("label",Object.assign({htmlFor:"tag2-add-pos-y"},{children:"y: "})),(0,p.jsx)("input",{ref:l,className:"small-input",id:"tag2-add-pos-y",type:"number",step:"0.001",defaultValue:"0"}),(0,p.jsx)("label",Object.assign({htmlFor:"tag2-add-pos-z"},{children:"z: "})),(0,p.jsx)("input",{ref:a,className:"small-input",id:"tag2-add-pos-z",type:"number",step:"0.001",defaultValue:"0"})]}),(0,p.jsxs)("div",{children:[(0,p.jsx)("div",{children:"normal:"}),(0,p.jsx)("label",Object.assign({htmlFor:"tag2-add-norm-x"},{children:"x: "})),(0,p.jsx)("input",{ref:i,className:"small-input",id:"tag2-add-norm-x",type:"number",step:"0.001",defaultValue:"0"}),(0,p.jsx)("label",Object.assign({htmlFor:"tag2-add-norm-y"},{children:"y: "})),(0,p.jsx)("input",{ref:o,className:"small-input",id:"tag2-add-norm-y",type:"number",step:"0.001",defaultValue:"1"}),(0,p.jsx)("label",Object.assign({htmlFor:"tag2-add-norm-z"},{children:"z: "})),(0,p.jsx)("input",{ref:s,className:"small-input",id:"tag2-add-norm-z",type:"number",step:"0.001",defaultValue:"0"})]}),(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({htmlFor:"tag2-add-id"},{children:"id: "})),(0,p.jsx)("input",{ref:c,className:"small-input",id:"tag2-add-id",type:"string"}),(0,p.jsx)("label",Object.assign({htmlFor:"tag2-add-opacity"},{children:"opacity: "})),(0,p.jsx)("input",{ref:u,className:"small-input",id:"tag2-add-opacity",type:"number",step:"0.01",defaultValue:"1"})]}),(0,p.jsxs)("div",{children:["icon: ",(0,p.jsx)("input",{ref:d,type:"checkbox",defaultChecked:!1}),(0,p.jsx)("input",{type:"text",readOnly:!0,value:e.selectedAsset}),(0,p.jsx)("button",Object.assign({id:"tag2-add",onClick:f},{children:"Add"}))]})]})}function Ht(e){const t=(0,h.useRef)(null),n=(0,h.useRef)(null),r=(0,h.useRef)(null),l=(0,h.useRef)(null),[a,i]=(0,h.useState)(new Map),o=(0,h.useCallback)((()=>{t.current&&n.current&&r.current&&l.current&&e.sdk.Tag.allowAction(e.selectedTag,{docking:t.current.checked,opening:n.current.checked,navigating:r.current.checked,sharing:l.current.checked})}),[e.sdk.Tag,e.selectedTag]),s=(0,h.useCallback)((s=>{const c=a.get(e.selectedTag)||{docking:!0,opening:!0,navigating:!0,sharing:!0};s.target===t.current&&(c.docking=!c.docking),s.target===r.current&&(c.navigating=!c.navigating),s.target===n.current&&(c.opening=!c.opening),s.target===l.current&&(c.sharing=!c.sharing),a.set(e.selectedTag,c),i(new Map(a)),o()}),[o,a,e.selectedTag]),c=a.get(e.selectedTag)||{docking:!0,opening:!0,navigating:!0,sharing:!0};return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsx)("div",{children:"(checked == allowed)"}),(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({htmlFor:"tag2-allow-open"},{children:"Billboard:"})),(0,p.jsx)("input",{ref:n,type:"checkbox",id:"tag2-allow-open",onChange:s,checked:c.opening})]}),(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({htmlFor:"tag2-allow-nav"},{children:"Navigation:"})),(0,p.jsx)("input",{ref:r,type:"checkbox",id:"tag2-allow-nav",onChange:s,checked:c.navigating})]}),(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({htmlFor:"tag2-allow-dock"},{children:"Dock:"})),(0,p.jsx)("input",{ref:t,type:"checkbox",id:"tag2-allow-dock",onChange:s,checked:c.docking})]}),(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({htmlFor:"tag2-allow-share"},{children:"Share:"})),(0,p.jsx)("input",{ref:l,type:"checkbox",id:"tag2-allow-share",onChange:s,checked:c.sharing})]})]})}const Wt={display:"inline-block",width:"80px"};function Kt({sdk:e,selectedTag:t,selectedAttachment:n}){const r=(0,h.useCallback)((()=>{e.Tag.attach(t,n)}),[e.Tag,n,t]),l=(0,h.useCallback)((()=>{e.Tag.detach(t,n)}),[e.Tag,n,t]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({style:Wt},{children:"Tag:"})),(0,p.jsx)("input",{type:"text",readOnly:!0,placeholder:"(none)",value:t})]}),(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({style:Wt},{children:"Attachment:"})),(0,p.jsx)("input",{type:"text",readOnly:!0,placeholder:"(none)",value:n})]}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({onClick:r},{children:"Attach"}))}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({onClick:l},{children:"Detach"}))})]})}function qt(e){const t=(0,h.useRef)(null),n=(0,h.useRef)(null),r=(0,h.useCallback)((()=>{t.current&&n.current&&e.sdk.Tag.editBillboard(e.selectedTag,{label:t.current.value||void 0,description:n.current.value||void 0})}),[e.sdk.Tag,e.selectedTag]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({htmlFor:"tag2-edit-title"},{children:"Title:"})),(0,p.jsx)("input",{ref:t,type:"text",id:"tag2-edit-title"})]}),(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({htmlFor:"tag2-edit-desc"},{children:"Desc:"})),(0,p.jsx)("textarea",{ref:n,id:"tag2-edit-desc"})]}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({id:"tag2-edit",onClick:r},{children:"Edit"}))})]})}const $t={display:"inline-block",width:"80px"};function Gt({sdk:e,selectedTag:t}){const n=(0,h.useRef)(null),r=(0,h.useCallback)((e=>{t&&n.current&&(t.enabled=n.current.checked)}),[t]);return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({style:$t},{children:"Tag:"})),(0,p.jsx)("input",{type:"text",readOnly:!0,placeholder:"none",value:t?t.id:"No Tag selected"})]}),(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({style:$t},{children:"Enabled:"})),(0,p.jsx)("input",{type:"checkbox",ref:n,onChange:r,checked:!!(null==t?void 0:t.enabled)})]})]})}function Qt(e){const t=(0,h.useRef)(null),n=(0,h.useRef)(null),r=(0,h.useRef)(null),l=(0,h.useCallback)((()=>{t.current&&n.current&&r.current&&e.sdk.Tag.editColor(e.selectedTag,{r:parseFloat(t.current.value),g:parseFloat(n.current.value),b:parseFloat(r.current.value)})}),[e.sdk.Tag,e.selectedTag]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({htmlFor:"tag2-color-r"},{children:"R: "})),(0,p.jsx)("input",{ref:t,className:"small-input",id:"tag2-color-r",type:"number",step:.01,defaultValue:1,min:0,max:.75})]}),(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({htmlFor:"tag2-color-g"},{children:"G: "})),(0,p.jsx)("input",{ref:n,className:"small-input",id:"tag2-color-g",type:"number",step:.01,defaultValue:0,min:0,max:1})]}),(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({htmlFor:"tag2-color-b"},{children:"B: "})),(0,p.jsx)("input",{ref:r,className:"small-input",id:"tag2-color-b",type:"number",step:.01,defaultValue:1,min:0,max:.75})]}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({id:"tag2-edit-color",onClick:l},{children:"Edit Color"}))})]})}function Yt(e){const[t,n]=(0,h.useState)(!0),[r,l]=(0,h.useState)(!0),a=(0,h.useRef)(null),i=(0,h.useRef)(null),o=(0,h.useCallback)((function(){n(!t)}),[t]),s=(0,h.useCallback)((function(){l(!r)}),[r]),c=(0,h.useCallback)((()=>{a.current&&i.current&&e.sdk.Tag.editStem(e.selectedTag,{stemVisible:r?i.current.checked:void 0,stemHeight:t?parseFloat(a.current.value):void 0})}),[e.sdk.Tag,e.selectedTag,t,r]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsxs)("div",{children:[(0,p.jsx)("input",{type:"checkbox",checked:t,onChange:o}),(0,p.jsx)("label",Object.assign({htmlFor:"tag2-stem-height"},{children:"stem height: "})),(0,p.jsx)("input",{ref:a,className:"small-input",id:"tag2-height-stem",type:"number",step:.1,defaultValue:1,min:0,disabled:!t})]}),(0,p.jsxs)("div",{children:[(0,p.jsx)("input",{type:"checkbox",checked:r,onChange:s}),(0,p.jsx)("label",Object.assign({htmlFor:"tag2-stem-visible"},{children:"stem visible:"})),(0,p.jsx)("input",{ref:i,type:"checkbox",id:"tag2-stem-visible",disabled:!r})]}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({id:"tag2-edit-stem",onClick:c},{children:"Edit Stem"}))})]})}function Xt(e){const t=(0,h.useRef)(null),[n,r]=(0,h.useState)(!0),l=(0,h.useCallback)((()=>{n?e.sdk.Tag.editIcon(e.selectedTag,e.selectedAsset):null!==t.current&&e.sdk.Tag.editIcon(e.selectedTag,t.current.value)}),[e.sdk.Tag,e.selectedAsset,e.selectedTag,n]),a=(0,h.useCallback)((()=>{e.sdk.Tag.resetIcon(e.selectedTag)}),[e.sdk.Tag,e.selectedTag]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsxs)("div",{children:["Use selected Asset?",(0,p.jsx)("input",{type:"checkbox",onChange:e=>{r(e.target.checked)},defaultChecked:n})]}),n?null:(0,p.jsx)("div",{children:(0,p.jsxs)("div",{children:[(0,p.jsx)("div",Object.assign({style:{display:"inline-block",width:"15%"}},{children:(0,p.jsx)("label",Object.assign({htmlFor:"mattertag-icon-id"},{children:"id: "}))})),(0,p.jsx)("div",Object.assign({style:{display:"inline-block",width:"85%"}},{children:(0,p.jsx)("input",{ref:t,id:"mattertag-icon-id",type:"string",defaultValue:e.selectedAsset})}))]})}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({id:"tag2-edit-icon",onClick:l},{children:"Edit Icon"}))}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({id:"tag2-reset-icon",onClick:a},{children:"Reset Icon"}))})]})}function Jt(e){const t=(0,h.useRef)(null),n=(0,h.useCallback)((()=>{t.current&&e.sdk.Tag.editOpacity(e.selectedTag,parseFloat(t.current.value))}),[e.sdk.Tag,e.selectedTag]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({htmlFor:"tag2-opacity"},{children:"opacity: "})),(0,p.jsx)("input",{ref:t,className:"small-input",id:"tag2-opacity",type:"number",step:.01,defaultValue:.5,min:0,max:1})]}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({id:"tag2-edit-opacity",onClick:n},{children:"Edit Opacity"}))})]})}function Zt({selectedTag:e,selectedTagKeywords:t}){const n=(0,h.useRef)(null),r=(0,h.useCallback)((()=>{e&&n.current&&n.current.value&&e.keywords.push(n.current.value)}),[e]),l=(0,h.useCallback)((()=>{if(!e||!n.current||!n.current.value)return;const t=e.keywords.indexOf(n.current.value);t>=0&&e.keywords.splice(t,1)}),[e]);return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsxs)("div",{children:["Tag: ",(0,p.jsx)("input",{type:"text",readOnly:!0,value:e?e.id:"No Tag selected"})]}),(0,p.jsxs)("div",{children:["Keyword: ",(0,p.jsx)("input",{type:"text",ref:n})]}),(0,p.jsxs)("div",{children:[(0,p.jsx)("button",Object.assign({onClick:r},{children:"ADD"})),(0,p.jsx)("button",Object.assign({onClick:l},{children:"REMOVE"}))]}),(0,p.jsx)("div",{children:(0,p.jsx)("textarea",{style:{height:"6em"},readOnly:!0,value:JSON.stringify(t)})})]})}function en(e){const[t,n]=(0,h.useState)(!0),[r,l]=(0,h.useState)(!0),a=(0,h.useRef)(null),i=(0,h.useRef)(null),o=(0,h.useRef)(null),s=(0,h.useRef)(null),c=(0,h.useRef)(null),u=(0,h.useRef)(null),d=(0,h.useCallback)((function(){n(!t)}),[t]),f=(0,h.useCallback)((function(){l(!r)}),[r]),b=(0,h.useCallback)((()=>{a.current&&i.current&&o.current&&s.current&&c.current&&u.current&&e.sdk.Tag.editPosition(e.selectedTag,{anchorPosition:t?{x:parseFloat(a.current.value),y:parseFloat(i.current.value),z:parseFloat(o.current.value)}:void 0,stemVector:r?{x:parseFloat(s.current.value),y:parseFloat(c.current.value),z:parseFloat(u.current.value)}:void 0})}),[e.sdk.Tag,e.selectedTag,r,t]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsx)("div",{children:"position:"}),(0,p.jsxs)("div",{children:[(0,p.jsx)("input",{type:"checkbox",checked:t,onChange:d}),(0,p.jsx)("label",Object.assign({htmlFor:"tag2-move-pos-x"},{children:"x: "})),(0,p.jsx)("input",{ref:a,className:"small-input",id:"tag2-move-pos-x",type:"number",step:"0.001",defaultValue:"0",disabled:!t}),(0,p.jsx)("label",Object.assign({htmlFor:"tag2-move-pos-y"},{children:"y: "})),(0,p.jsx)("input",{ref:i,className:"small-input",id:"tag2-move-pos-y",type:"number",step:"0.001",defaultValue:"0",disabled:!t}),(0,p.jsx)("label",Object.assign({htmlFor:"tag2-move-pos-z"},{children:"z: "})),(0,p.jsx)("input",{ref:o,className:"small-input",id:"tag2-move-pos-z",type:"number",step:"0.001",defaultValue:"0",disabled:!t})]}),(0,p.jsx)("div",{children:"normal:"}),(0,p.jsxs)("div",{children:[(0,p.jsx)("input",{type:"checkbox",checked:r,onChange:f}),(0,p.jsx)("label",Object.assign({htmlFor:"tag2-move-norm-x"},{children:"x: "})),(0,p.jsx)("input",{ref:s,className:"small-input",id:"tag2-move-norm-x",type:"number",step:"0.001",defaultValue:"0",disabled:!r}),(0,p.jsx)("label",Object.assign({htmlFor:"tag2-move-norm-y"},{children:"y: "})),(0,p.jsx)("input",{ref:c,className:"small-input",id:"tag2-move-norm-y",type:"number",step:"0.001",defaultValue:"1",disabled:!r}),(0,p.jsx)("label",Object.assign({htmlFor:"tag2-move-norm-z"},{children:"z: "})),(0,p.jsx)("input",{ref:u,className:"small-input",id:"tag2-move-norm-z",type:"number",step:"0.001",defaultValue:"0",disabled:!r})]}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({id:"tag2-move",onClick:b},{children:"Move"}))})]})}function tn({sdk:e,selectedTag:t}){const n=(0,h.useRef)(null),r=(0,h.useRef)(null),l=(0,h.useCallback)((function(){var r;if(t){const l=(null===(r=n.current)||void 0===r?void 0:r.checked)||!1;e.Tag.open(t.id,{force:l})}}),[e.Tag,t]),a=(0,h.useCallback)((function(){var n;if(t){const l=(null===(n=r.current)||void 0===n?void 0:n.checked)||!1;e.Tag.dock(t.id,{force:l})}}),[e.Tag,t]),i=(0,h.useCallback)((function(){t&&e.Tag.close(t.id)}),[e.Tag,t]);return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)("div",{children:(0,p.jsx)("input",{type:"text",readOnly:!0,placeholder:"(none)",value:t?t.id:""})}),(0,p.jsxs)("div",{children:[(0,p.jsx)("button",Object.assign({className:"small-input",onClick:l},{children:"Open"})),(0,p.jsx)("label",Object.assign({style:{marginLeft:"5px"}},{children:"force:"})),(0,p.jsx)("input",{ref:n,id:"tag-force-open",type:"checkbox"})]}),(0,p.jsxs)("div",{children:[(0,p.jsx)("button",Object.assign({className:"small-input",onClick:a},{children:"Dock"})),(0,p.jsx)("label",Object.assign({style:{marginLeft:"5px"}},{children:"force:"})),(0,p.jsx)("input",{ref:r,id:"tag-force-dock",type:"checkbox"})]}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({className:"small-input",onClick:i},{children:"Close"}))})]})}function nn(e){const t=(0,h.useRef)(null),n=(0,h.useCallback)((()=>{t.current&&e.sdk.Tag.registerAttachment(t.current.value)}),[e.sdk.Tag]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({htmlFor:"tag2-register-attachment-src"},{children:"Src:"})),(0,p.jsx)("input",{ref:t,type:"text",id:"tag2-register-attachment-src"})]}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({onClick:n},{children:"Register"}))})]})}var rn=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};function ln(e){const t=(0,h.useRef)(null),n=(0,h.useRef)(null),r=(0,h.useRef)(null),l=(0,h.useRef)(null),a=(0,h.useCallback)((()=>rn(this,void 0,void 0,(function*(){if(t.current&&n.current&&r.current&&l.current){const[,a]=yield e.sdk.Tag.registerSandbox(t.current.value,{name:n.current.value,size:{h:parseInt(l.current.value,10),w:parseInt(r.current.value,10)}});function i(){let e="";for(let t=0;t<6;++t)e+=Math.floor(16*Math.random()).toString(16);return"#"+e}a.on("click",(function(e){const t=i();a.send("update.button",t,t.toString())}))}}))),[e.sdk.Tag]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsx)("div",{children:(0,p.jsx)("input",{ref:n,type:"text",placeholder:"name"})}),(0,p.jsx)("div",{children:(0,p.jsx)("textarea",{style:{height:"7em"},ref:t,defaultValue:an})}),(0,p.jsxs)("div",{children:["width:",(0,p.jsx)("input",{className:"small-input",ref:r,type:"number",defaultValue:350}),"height:",(0,p.jsx)("input",{className:"small-input",ref:l,type:"number",defaultValue:150})]}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({onClick:a},{children:"Register"}))})]})}const an="<style>\nbody {\n  background-color: #cccccc;\n}\n#btn1 {\n  width: 100px;\n  height: 20px;\n  background-color: rgb(255, 255, 255);\n  border-radius: 10px;\n  border: 1px solid black;\n  text-align: center;\n}\n</style>\n<br>\n<br>\n<div id='btn1'>CLICK ME!</div>\n<div id='tag'></div>\n<div id='docked'></div>\n<script>\nconst btn1 = document.getElementById('btn1');\nbtn1.addEventListener('click', function () {\n  window.send('click', {buttonId: 1234321});\n});\nwindow.on('update.button', function (color, message) {\n  btn1.innerText = message;\n  btn1.style.backgroundColor = color;\n});\nconst tagOutput = document.getElementById('tag');\ntagOutput.innerHTML = 'Current tag: ' + window.tag;\nconst dockedOutput = document.getElementById('docked');\ndockedOutput.innerHTML = 'Docked: ' + window.docked;\n<\/script>";function on(e){const t=(0,h.useCallback)((()=>{e.sdk.Tag.remove(e.selectedTag)}),[e.sdk.Tag,e.selectedTag]);return(0,p.jsx)(h.Fragment,{children:(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({id:"tag2-remove",onClick:t},{children:"Remove"}))})})}function sn({toggleSetting:e}){const t=(0,h.useCallback)((()=>{e()}),[e]),n=(0,h.useCallback)((()=>{e(!0)}),[e]),r=(0,h.useCallback)((()=>{e(!1)}),[e]);return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({className:"small-input",onClick:t},{children:"Toggle"}))}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({className:"small-input",onClick:n},{children:"Show"}))}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({className:"small-input",onClick:r},{children:"Hide"}))})]})}function cn(e,t){return e.label<t.label?-1:e.label>t.label?1:0}var un=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};function dn(e){const t=(0,h.useRef)(null),[n,r]=(0,h.useState)(""),l=(0,h.useCallback)((()=>un(this,void 0,void 0,(function*(){if(t.current){const n=yield e.sdk.Tag.importTags(t.current.value,{});r(`New tag ids: ${n}`)}}))),[e.sdk.Tag]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({htmlFor:"space-id"},{children:"spaceId: "})),(0,p.jsx)("input",{ref:t,className:"small-input",id:"space-id",type:"string"})]}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({id:"copy-tags",onClick:l},{children:"Import"}))}),(0,p.jsx)("textarea",{style:{width:"100%",height:"80%"},readOnly:!0,value:n})]})}const pn=Object.keys({360:"61697","add-link":"61698",arrow:"61699",arrows:"61700",attach:"61701",back:"61702",blocked:"61703","blur-outline":"61704","brush-outline":"61705",checkmark:"61706","chevron-left":"61707","chevron-right":"61708",close:"61709","comment-large":"57344","comment-outline":"61710",comment:"61711",delete:"61712",dock:"61713",dollhouse:"61714",door:"61715",download:"61716","dpad-down":"61717","dpad-left":"61718","dpad-right":"61719","dpad-up":"61720","drag-edit":"61721","draw-lines":"61722","edit-floorplan":"61723",email:"61724",error:"61725","escape-key":"61726",expand:"61727","ext-link":"61728","eye-hide":"61729","eye-show":"61730",facebook:"61731",file:"61732",filter:"61733","finger-drag":"61734","floor-controls-all":"61735","floor-controls":"61736",floorplan:"61737","fullscreen-exit":"61738",fullscreen:"61739",fullscreen2:"61740","furniture-slash":"61741",furniture:"61742","gizmo-add":"61743","gizmo-closed":"61744","gizmo-eye-hide":"61745","gizmo-eye-show":"61746","gizmo-floorplan":"61747","gizmo-gear":"61748","gizmo-layers":"61749","gizmo-magnet-wall":"61750","gizmo-magnet":"61751","gizmo-model":"61752","gizmo-move":"61753","gizmo-open":"61754","gizmo-orthographic":"61755","gizmo-perspective":"61756","gizmo-redo":"61757","gizmo-snap":"61758","gizmo-undo":"61759",help:"61760","hlr-badge":"61761",hlr:"61762",info:"61763","invisible-wall":"61764",keyboard:"61765",layers:"61766",link:"61767",linkedin:"61768",list:"61769",location:"61770",lock:"61771",logo:"61772","magnifying-glass":"61773","media-mix":"61774","menu-indicator":"61775","mesh-trim":"61776",mesh:"61777",minus:"61778","more-vert":"61779",notes:"61780","object-air-ducts":"61781","object-bathtub":"61782","object-bed":"61783","object-cabinet":"61784","object-ceiling-fan":"61785","object-chair":"61786","object-countertop":"61787","object-dishwasher":"61788","object-door-lock":"61789","object-door":"61790","object-faucet":"61791","object-fireplace":"61792","object-garage-door":"61793","object-kitchen-island":"61794","object-light":"61795","object-microwave":"61796","object-mirror":"61797","object-outlet":"61798","object-oven":"61799","object-range-hood":"61800","object-range":"61801","object-refrigerator":"61802","object-shower":"61803","object-sink":"61804","object-skylight":"61805","object-smoke-detector":"61806","object-sofa":"61807","object-table":"61808","object-television":"61809","object-thermostat":"61810","object-toilet":"61811","object-towel-rack":"61812","object-vanity":"61813","object-wall-switch":"61814","object-washer-dryer":"61815","object-window":"61816",opening:"61817","panorama-disable":"61818",panorama:"61819","paper-clip":"61820","pause-outline":"61821",pause:"61822","photo-2d":"61823","photo-360":"61824","photo-add":"61825",pin:"61826",pinterest:"61827","play-unicode":"61828",play:"61829",plus:"61830","position-3d-fat":"61831","position-3d":"61832","press-hold":"61833",public_buildings_apartment:"61834",public_buildings_archway:"61835","public_buildings_building-circle-arrow-right":"61836","public_buildings_building-circle-check":"61837","public_buildings_building-circle-exclamation":"61838","public_buildings_building-circle-xmark":"61839","public_buildings_building-columns":"61840","public_buildings_building-flag":"61841","public_buildings_building-lock":"61842","public_buildings_building-shield":"61843","public_buildings_building-user":"61844","public_buildings_building-wheat":"61845",public_buildings_building:"61846",public_buildings_buildings:"61847",public_buildings_cabin:"61848",public_buildings_campground:"61849","public_buildings_car-building":"61850",public_buildings_castle:"61851",public_buildings_chimney:"61852",public_buildings_church:"61853",public_buildings_city:"61854",public_buildings_farm:"61855",public_buildings_fence:"61856","public_buildings_ferris-wheel":"61857",public_buildings_fort:"61858",public_buildings_garage:"61859",public_buildings_hospital:"61860",public_buildings_hotel:"61861","public_buildings_house-building":"61862","public_buildings_house-crack":"61863","public_buildings_house-day":"61864","public_buildings_house-fire":"61865","public_buildings_house-flag":"61866","public_buildings_house-flood-water":"61867","public_buildings_house-heart":"61868","public_buildings_house-lock":"61869","public_buildings_house-medical":"61870","public_buildings_house-night":"61871",public_buildings_house:"61872",public_buildings_industry:"61873",public_buildings_landmark:"61874",public_buildings_monument:"61875",public_buildings_mosque:"61876","public_buildings_mountain-city":"61877","public_buildings_place-of-worship":"61878","public_buildings_roller-coaster":"61879",public_buildings_school:"61880",public_buildings_store:"61881",public_buildings_synagogue:"61882",public_buildings_tent:"61883",public_buildings_toilet:"61884","public_buildings_torii-gate":"61885","public_buildings_tower-observation":"61886",public_buildings_tree:"61887",public_buildings_warehouse:"61888",public_characters_0:"61889",public_characters_1:"61890",public_characters_2:"61891",public_characters_3:"61892",public_characters_4:"61893",public_characters_5:"61894",public_characters_6:"61895",public_characters_7:"61896",public_characters_8:"61897",public_characters_9:"61898",public_characters_a:"61899",public_characters_b:"61900",public_characters_c:"61901","public_characters_circle-0":"61902","public_characters_circle-1":"61903","public_characters_circle-2":"61904","public_characters_circle-3":"61905","public_characters_circle-4":"61906","public_characters_circle-5":"61907","public_characters_circle-6":"61908","public_characters_circle-7":"61909","public_characters_circle-8":"61910","public_characters_circle-9":"61911","public_characters_circle-a":"61912","public_characters_circle-b":"61913","public_characters_circle-c":"61914","public_characters_circle-d":"61915","public_characters_circle-e":"61916","public_characters_circle-f":"61917","public_characters_circle-g":"61918","public_characters_circle-h":"61919","public_characters_circle-i":"61920","public_characters_circle-j":"61921","public_characters_circle-k":"61922","public_characters_circle-l":"61923","public_characters_circle-m":"61924","public_characters_circle-n":"61925","public_characters_circle-o":"61926","public_characters_circle-p":"61927","public_characters_circle-q":"61928","public_characters_circle-r":"61929","public_characters_circle-s":"61930","public_characters_circle-t":"61931","public_characters_circle-u":"61932","public_characters_circle-v":"61933","public_characters_circle-w":"61934","public_characters_circle-x":"61935","public_characters_circle-y":"61936","public_characters_circle-z":"61937",public_characters_d:"61938",public_characters_e:"61939",public_characters_f:"61940",public_characters_g:"61941",public_characters_h:"61942",public_characters_i:"61943",public_characters_j:"61944",public_characters_k:"61945",public_characters_l:"61946",public_characters_m:"61947",public_characters_n:"61948",public_characters_o:"61949",public_characters_p:"61950",public_characters_q:"61951",public_characters_r:"61952",public_characters_s:"61953","public_characters_square-0":"61954","public_characters_square-1":"61955","public_characters_square-2":"61956","public_characters_square-3":"61957","public_characters_square-4":"61958","public_characters_square-5":"61959","public_characters_square-6":"61960","public_characters_square-7":"61961","public_characters_square-8":"61962","public_characters_square-9":"61963","public_characters_square-a":"61964","public_characters_square-b":"61965","public_characters_square-c":"61966","public_characters_square-d":"61967","public_characters_square-e":"61968","public_characters_square-f":"61969","public_characters_square-g":"61970","public_characters_square-h":"61971","public_characters_square-i":"61972","public_characters_square-j":"61973","public_characters_square-k":"61974","public_characters_square-l":"61975","public_characters_square-m":"61976","public_characters_square-n":"61977","public_characters_square-o":"61978","public_characters_square-p":"61979","public_characters_square-q":"61980","public_characters_square-r":"61981","public_characters_square-s":"61982","public_characters_square-t":"61983","public_characters_square-u":"61984","public_characters_square-v":"61985","public_characters_square-w":"61986","public_characters_square-x":"61987","public_characters_square-xmark":"61988","public_characters_square-y":"61989","public_characters_square-z":"61990",public_characters_t:"61991",public_characters_u:"61992",public_characters_v:"61993",public_characters_w:"61994",public_characters_x:"61995",public_characters_y:"61996",public_characters_z:"61997",public_furniture_bath:"61998","public_furniture_bed-alt":"61999","public_furniture_bed-bunk":"62000","public_furniture_bed-empty":"62001",public_furniture_bed:"62002",public_furniture_blender:"62003",public_furniture_blinds:"62004","public_furniture_cabinet-filing":"62005","public_furniture_cash-register":"62006","public_furniture_chair-office":"62007",public_furniture_chair:"62008","public_furniture_charging-station":"62009","public_furniture_computer-classic":"62010","public_furniture_computer-speaker":"62011",public_furniture_couch:"62012","public_furniture_dryer-alt":"62013",public_furniture_dryer:"62014",public_furniture_dumbbell:"62015",public_furniture_dumpster:"62016",public_furniture_faucet:"62017",public_furniture_fax:"62018","public_furniture_hot-tub":"62019",public_furniture_inventory:"62020","public_furniture_lamp-desk":"62021","public_furniture_lamp-floor":"62022",public_furniture_lamp:"62023",public_furniture_laptop:"62024","public_furniture_light-ceiling":"62025",public_furniture_loveseat:"62026",public_furniture_microwave:"62027",public_furniture_piano:"62028",public_furniture_podium:"62029",public_furniture_presentation:"62030",public_furniture_projector:"62031",public_furniture_radio:"62032",public_furniture_refrigerator:"62033",public_furniture_shower:"62034",public_furniture_shredder:"62035",public_furniture_sink:"62036","public_furniture_solar-panel":"62037",public_furniture_speaker:"62038",public_furniture_speakers:"62039",public_furniture_toilet:"62040","public_furniture_trash-alt":"62041",public_furniture_turntable:"62042","public_furniture_tv-retro":"62043",public_furniture_tv:"62044",public_furniture_typewriter:"62045",public_objects_abacus:"62046","public_objects_alarm-clock":"62047","public_objects_album-collection":"62048",public_objects_backpack:"62049","public_objects_bags-shopping":"62050",public_objects_bell:"62051",public_objects_bicycle:"62052",public_objects_binoculars:"62053",public_objects_blanket:"62054",public_objects_book:"62055",public_objects_books:"62056",public_objects_boot:"62057",public_objects_box:"62058","public_objects_bread-loaf":"62059","public_objects_briefcase-medical":"62060",public_objects_briefcase:"62061",public_objects_broom:"62062",public_objects_brush:"62063",public_objects_bullhorn:"62064","public_objects_burger-soda":"62065",public_objects_calculator:"62066",public_objects_calendar:"62067",public_objects_camera:"62068",public_objects_car:"62069",public_objects_carrot:"62070","public_objects_cheese-swiss":"62071",public_objects_chess:"62072","public_objects_clipboard-check":"62073","public_objects_clipboard-list":"62074",public_objects_clipboard:"62075","public_objects_coffee-pot":"62076",public_objects_compass:"62077",public_objects_cookie:"62078",public_objects_corn:"62079",public_objects_croissant:"62080",public_objects_dice:"62081",public_objects_drumstick:"62082",public_objects_egg:"62083",public_objects_fish:"62084",public_objects_flask:"62085","public_objects_flower-tulip":"62086",public_objects_gamepad:"62087",public_objects_gem:"62088",public_objects_gift:"62089",public_objects_gifts:"62090","public_objects_glass-citrus":"62091",public_objects_glass:"62092",public_objects_glasses:"62093","public_objects_globe-stand":"62094","public_objects_graduation-cap":"62095",public_objects_guitar:"62096",public_objects_hammer:"62097","public_objects_hat-chef":"62098","public_objects_ice-cream":"62099","public_objects_ice-skate":"62100",public_objects_key:"62101","public_objects_knife-kitchen":"62102","public_objects_lightbulb-on":"62103","public_objects_lightbulb-slash":"62104",public_objects_lightbulb:"62105",public_objects_magnet:"62106",public_objects_mailbox:"62107",public_objects_map:"62108",public_objects_meat:"62109",public_objects_medal:"62110",public_objects_microphone:"62111",public_objects_mobile:"62112","public_objects_money-bill-wave":"62113","public_objects_mug-tea":"62114",public_objects_mug:"62115",public_objects_newspaper:"62116","public_objects_paint-roller":"62117",public_objects_palette:"62118",public_objects_pen:"62119",public_objects_phone:"62120","public_objects_pizza-slice":"62121","public_objects_pump-soap":"62122","public_objects_ruler-triangle":"62123",public_objects_ruler:"62124",public_objects_salad:"62125",public_objects_sandwich:"62126",public_objects_shovel:"62127",public_objects_steak:"62128",public_objects_sunglasses:"62129",public_objects_turkey:"62130",public_objects_utensils:"62131",public_objects_vial:"62132",public_objects_wallet:"62133",public_objects_wrench:"62134",public_people_baby:"62135","public_people_child-dress":"62136","public_people_child-reaching":"62137",public_people_child:"62138",public_people_children:"62139","public_people_circle-user":"62140","public_people_clipboard-user":"62141","public_people_face-angry":"62142","public_people_face-anguished":"62143","public_people_face-astonished":"62144","public_people_face-beam-hand-over-mouth":"62145","public_people_face-confounded":"62146","public_people_face-confused":"62147","public_people_face-diagonal-mouth":"62148","public_people_face-disappointed":"62149","public_people_face-dizzy":"62150","public_people_face-expressionless":"62151","public_people_face-eyes-xmarks":"62152","public_people_face-fearful":"62153","public_people_face-frown-slight":"62154","public_people_face-frown":"62155","public_people_face-glasses":"62156","public_people_face-grimace":"62157","public_people_face-grin-beam-sweat":"62158","public_people_face-grin-beam":"62159","public_people_face-grin-hearts":"62160","public_people_face-grin-squint-tears":"62161","public_people_face-grin-squint":"62162","public_people_face-grin-stars":"62163","public_people_face-grin-tears":"62164","public_people_face-grin-tongue-squint":"62165","public_people_face-grin-tongue-wink":"62166","public_people_face-grin-tongue":"62167","public_people_face-grin-wide":"62168","public_people_face-grin-wink":"62169","public_people_face-grin":"62170","public_people_face-hand-over-mouth":"62171","public_people_face-hushed":"62172","public_people_face-icicles":"62173","public_people_face-kiss":"62174","public_people_face-laugh":"62175","public_people_face-mask":"62176","public_people_face-meh-blank":"62177","public_people_face-meh":"62178","public_people_face-monocle":"62179","public_people_face-nauseated":"62180","public_people_face-party":"62181","public_people_face-pensive":"62182","public_people_face-persevering":"62183","public_people_face-pleading":"62184","public_people_face-pouting":"62185","public_people_face-raised-eyebrow":"62186","public_people_face-relieved":"62187","public_people_face-rolling-eyes":"62188","public_people_face-sad-cry":"62189","public_people_face-sad-sweat":"62190","public_people_face-sad-tear":"62191","public_people_face-scream":"62192","public_people_face-sleeping":"62193","public_people_face-sleepy":"62194","public_people_face-smile-beam":"62195","public_people_face-smile-halo":"62196","public_people_face-smile-hearts":"62197","public_people_face-smile-relaxed":"62198","public_people_face-smile-upside-down":"62199","public_people_face-smile-wink":"62200","public_people_face-smile":"62201","public_people_face-smirking":"62202","public_people_face-spiral-eyes":"62203","public_people_face-sunglasses":"62204","public_people_face-surprise":"62205","public_people_face-thermometer":"62206","public_people_face-thinking":"62207","public_people_face-tired":"62208","public_people_face-tissue":"62209","public_people_face-unamused":"62210","public_people_face-vomit":"62211","public_people_face-weary":"62212","public_people_face-woozy":"62213","public_people_face-worried":"62214","public_people_face-zipper":"62215","public_people_family-dress":"62216","public_people_family-pants":"62217",public_people_family:"62218","public_people_file-user":"62219","public_people_folder-user":"62220","public_people_head-side-brain":"62221","public_people_head-side-cough-slash":"62222","public_people_head-side-cough":"62223","public_people_head-side-goggles":"62224","public_people_head-side-headphones":"62225","public_people_head-side-heart":"62226","public_people_head-side-mask":"62227","public_people_head-side-medical":"62228","public_people_head-side-virus":"62229","public_people_head-side":"62230",public_people_people:"62231","public_people_person-biking":"62232","public_people_person-booth":"62233","public_people_person-breastfeeding":"62234","public_people_person-cane":"62235","public_people_person-carry-box":"62236","public_people_person-digging":"62237","public_people_person-dolly-empty":"62238","public_people_person-dolly":"62239","public_people_person-dress":"62240","public_people_person-drowning":"62241","public_people_person-falling":"62242","public_people_person-half-dress":"62243","public_people_person-hiking":"62244","public_people_person-military-pointing":"62245","public_people_person-pinball":"62246","public_people_person-praying":"62247","public_people_person-pregnant":"62248","public_people_person-running":"62249","public_people_person-seat-reclined":"62250","public_people_person-seat":"62251","public_people_person-shelter":"62252","public_people_person-skating":"62253","public_people_person-skiing":"62254","public_people_person-swimming":"62255","public_people_person-to-door":"62256","public_people_person-walking-luggage":"62257","public_people_person-walking-with-cane":"62258","public_people_person-walking":"62259",public_people_person:"62260",public_people_restroom:"62261","public_people_square-user":"62262","public_people_street-view":"62263","public_people_user-astronaut":"62264","public_people_user-check":"62265","public_people_user-chef":"62266","public_people_user-clock":"62267","public_people_user-cowboy":"62268","public_people_user-crown":"62269","public_people_user-doctor":"62270","public_people_user-gear":"62271","public_people_user-graduate":"62272","public_people_user-group":"62273","public_people_user-headset":"62274","public_people_user-helmet-safety":"62275","public_people_user-injured":"62276","public_people_user-large":"62277","public_people_user-lock":"62278","public_people_user-minus":"62279","public_people_user-music":"62280","public_people_user-nurse":"62281","public_people_user-pen":"62282","public_people_user-pilot":"62283","public_people_user-plus":"62284","public_people_user-police":"62285","public_people_user-shield":"62286","public_people_user-slash":"62287","public_people_user-unlock":"62288",public_people_user:"62289",public_people_users:"62290",public_people_wheelchair:"62291","public_symbols_arrow-alt-circle-down":"62292","public_symbols_arrow-alt-circle-left":"62293","public_symbols_arrow-alt-circle-right":"62294","public_symbols_arrow-alt-circle-up":"62295","public_symbols_arrow-alt-down":"62296","public_symbols_arrow-alt-left":"62297","public_symbols_arrow-alt-right":"62298","public_symbols_arrow-alt-up":"62299",public_symbols_award:"62300","public_symbols_badge-check":"62301","public_symbols_badge-dollar":"62302",public_symbols_badge:"62303",public_symbols_ban:"62304",public_symbols_bell:"62305","public_symbols_bolt-slash":"62306",public_symbols_bolt:"62307",public_symbols_bookmark:"62308","public_symbols_check-circle":"62309",public_symbols_check:"62310",public_symbols_circle:"62311",public_symbols_clock:"62312",public_symbols_club:"62313",public_symbols_cube:"62314",public_symbols_cubes:"62315",public_symbols_deaf:"62316",public_symbols_diamond:"62317","public_symbols_dollar-sign":"62318","public_symbols_exclamation-circle":"62319","public_symbols_exclamation-square":"62320","public_symbols_exclamation-triangle":"62321",public_symbols_exclamation:"62322","public_symbols_eye-slash":"62323",public_symbols_eye:"62324",public_symbols_file:"62325",public_symbols_fingerprint:"62326","public_symbols_fire-alt":"62327","public_symbols_flag-alt":"62328",public_symbols_folder:"62329",public_symbols_genderless:"62330",public_symbols_heart:"62331",public_symbols_hexagon:"62332",public_symbols_hourglass:"62333",public_symbols_image:"62334","public_symbols_info-circle":"62335","public_symbols_info-square":"62336","public_symbols_layer-group":"62337",public_symbols_link:"62338","public_symbols_location-arrow":"62339","public_symbols_lock-open":"62340",public_symbols_lock:"62341","public_symbols_map-marker-alt":"62342","public_symbols_map-marker-check":"62343","public_symbols_map-marker-exclamation":"62344","public_symbols_map-marker-minus":"62345","public_symbols_map-marker-plus":"62346","public_symbols_map-marker-question":"62347","public_symbols_map-marker-smile":"62348",public_symbols_mars:"62349",public_symbols_moon:"62350",public_symbols_octagon:"62351",public_symbols_paperclip:"62352","public_symbols_parking-circle":"62353",public_symbols_parking:"62354",public_symbols_pause:"62355",public_symbols_play:"62356","public_symbols_question-circle":"62357","public_symbols_question-square":"62358",public_symbols_question:"62359",public_symbols_recycle:"62360",public_symbols_redo:"62361",public_symbols_shapes:"62362",public_symbols_shield:"62363","public_symbols_smoking-ban":"62364",public_symbols_smoking:"62365",public_symbols_spade:"62366",public_symbols_square:"62367","public_symbols_star-filled":"62368",public_symbols_star:"62369",public_symbols_tachometer:"62370",public_symbols_tag:"62371","public_symbols_temperature-down":"62372","public_symbols_temperature-frigid":"62373","public_symbols_temperature-high":"62374","public_symbols_temperature-hot":"62375","public_symbols_temperature-low":"62376","public_symbols_temperature-up":"62377",public_symbols_text:"62378","public_symbols_thermometer-empty":"62379","public_symbols_thermometer-full":"62380","public_symbols_thermometer-half":"62381","public_symbols_thermometer-quarter":"62382","public_symbols_thermometer-three-quarters":"62383",public_symbols_thumbtack:"62384",public_symbols_tint:"62385","public_symbols_transgender-alt":"62386",public_symbols_transgender:"62387","public_symbols_trash-alt":"62388",public_symbols_triangle:"62389","public_symbols_usd-circle":"62390","public_symbols_usd-square":"62391","public_symbols_venus-mars":"62392",public_symbols_venus:"62393",public_symbols_video:"62394","public_symbols_volume-down":"62395","public_symbols_volume-mute":"62396","public_symbols_volume-off":"62397","public_symbols_volume-slash":"62398","public_symbols_volume-up":"62399",public_symbols_volume:"62400",public_symbols_water:"62401",public_symbols_waveform:"62402","public_symbols_wifi-slash":"62403",public_symbols_wifi:"62404","public_symbols_yen-sign":"62405",question:"62406",reorder:"62407",reply:"62408",restart:"62409",revert:"62410","room-00258k0mqu8750du151be805c":"62411","room-0an2rky24gb91fdnpzmbwadib":"62412","room-0gnuunpwx63dmmqeq64aqfiyd":"62413","room-2nx6maxxpaeut7kx96fuacdzc":"62414","room-4by2d70b54srbin43t5m0yh9c":"62415","room-4gp8x21ni4i8y19r9pm4rb35a":"62416","room-4qq4e5hz84hcur7ry87uhtmua":"62417","room-66psa4tqgazbnffr9huy2dnpd":"62418","room-91naa1k3hiim9z4mk8352enta":"62419","room-a11d2gi43h0etwedw0mx9pgwd":"62420","room-ag5uphha72sak65qazgsp09yd":"62421","room-byp7pz2tmt4ff47nhfx0uwzec":"62422","room-e6md2spaqemc448pmau3azkhd":"62423","room-ei3kmtun2xpspbg3d5ff3t3zc":"62424","room-gba8cq0s2rdfg1zdb1epwty7d":"62425","room-ge0tcan3iztta5mtgsfx99xpb":"62426","room-gqqw1zac1hzg1p8622ducg3zb":"62427","room-izt39gytcbymc0qtd37nrb7xb":"62428","room-multi-use":"62429","room-mx6e2yfk0tg0zbkbzuw5mhkda":"62430","room-n07hhs9gky4cgrh7q65s9rp0d":"62431","room-nqw75004dcg2bcr41047rhg6c":"62432","room-pnf0xzq61xcegack4iai7xppd":"62433","room-pr9h4zy7eak91f3b7un97u42c":"62434","room-qa21tqcsinnxde9gdmiphacza":"62435","room-rmu8pikcye0n7n9fsu5e4acda":"62436","room-s1h0hb8tpcc9i35dmupknsega":"62437","room-ua1m0u8pm3yngrhzwec1ue5zc":"62438","room-w4tdggk5i5u2zpiryugktghgb":"62439","room-xwhhz63a0hw735qf81knp63ha":"62440","room-y3xuprmywgrprnm0273u3pphd":"62441","room-yeh1aa32fwgm72bh0g92ebruc":"62442","room-ywtddu9hagraxhznwinn8t4zb":"62443","room-zgh2304w5anu0t25ia06ytfxd":"62444","room-zp189tx2hdrry8k5nhaq5x45d":"62445","rotate-left":"62446","rotate-right":"62447",rotate:"62448","rotation-3d":"62449","scale-3d":"62450",settings:"62451",share:"62452",share2:"62453","simple-tag-pin":"62454","simple-tag-small":"62455","simple-tag":"62456",snap:"62457","sparkle-fill":"62458",sparkle:"62459","start-location":"62460","stem-height":"62461","tape-measure":"62462","toggle-pencil":"62463","toolbar-360-view":"62464","toolbar-edit-vr":"62465","toolbar-hlr":"62466","toolbar-labels":"62467","toolbar-mattertags":"62468","toolbar-measurements":"62469","toolbar-more-horiz":"62470","toolbar-photos":"62471","toolbar-plugin-config":"62472","toolbar-scan-mgmt":"62473","toolbar-start-location":"62474",transitions:"62475",trash:"62476","trim-keep":"62477","trim-remove":"62478",twitter:"62479",unlock:"62480",user:"62481",visibility:"62482",vr:"62483",wall:"62484",window:"62485","zoom-reset":"62486"}).sort(((e,t)=>e.localeCompare(t)));var fn=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};const bn=({isOpen:e,onClose:t,tags:n,selectedTags:r,setSelectedTags:l,title:a,confirmButtonText:i,onConfirm:o})=>{if(!e)return null;return(0,p.jsx)("div",Object.assign({className:"modal-wrapper"},{children:(0,p.jsxs)("div",Object.assign({className:"modal-window"},{children:[(0,p.jsxs)("div",Object.assign({className:"modal-header"},{children:[(0,p.jsx)("h3",Object.assign({className:"modal-title"},{children:a})),(0,p.jsx)("button",Object.assign({onClick:()=>{n&&(r.length===n.length?l([]):l(n.map((e=>e.id))))}},{children:r.length===(null==n?void 0:n.length)?"Deselect All":"Select All"}))]})),(0,p.jsx)("div",Object.assign({className:"modal-tag-container"},{children:n&&n.map((e=>(0,p.jsxs)("div",Object.assign({className:"modal-tag-row"},{children:[(0,p.jsx)("input",{id:`modal-tag-${e.id}`,type:"checkbox",checked:r.includes(e.id),onChange:()=>{return t=e.id,void l((e=>e.includes(t)?e.filter((e=>e!==t)):[...e,t]));var t}}),(0,p.jsx)("label",Object.assign({htmlFor:`modal-tag-${e.id}`,className:"modal-tag-label"},{children:e.id+" - "+e.label}))]}),e.id)))})),(0,p.jsxs)("div",Object.assign({className:"modal-actions"},{children:[(0,p.jsx)("button",Object.assign({onClick:t},{children:"Cancel"})),(0,p.jsx)("button",Object.assign({onClick:()=>{o(),t()},disabled:0===r.length},{children:i}))]}))]}))}))};function hn(e){const[t,n]=(0,h.useState)(""),[r,l]=(0,h.useState)([]),[a,i]=(0,h.useState)([]),o=(0,h.useRef)(null),[s,c]=(0,h.useState)(),u=(0,h.useRef)([]),[d,f]=(0,h.useState)(!1),[b,g]=(0,h.useState)(!1),[m,v]=(0,h.useState)(!1);(0,h.useEffect)((()=>{(()=>{fn(this,void 0,void 0,(function*(){const t=yield e.sdk.Tag.data.waitUntil((()=>!0)),n=Object.values(t);c(n)}))})()}),[e.sdk.Tag]),(0,h.useEffect)((()=>{if(!s||0===s.length)return;const t=e.sdk.Tag.data.subscribe({onAdded:(e,t)=>{s.some((e=>e.id===t.id))||u.current.push(t)}});return()=>{t.cancel()}}),[s,e.sdk.Tag]);const y=(0,h.useCallback)((()=>fn(this,void 0,void 0,(function*(){if(r.length>0){const t=pn.length;for(const n of r){const r=Math.floor(Math.random()*(t-1));yield e.sdk.Tag.editIcon(n,pn[r])}}console.log({updatedTags:r,ignoredTags:a});const t={tagsToUpdate:r,tagsToIgnore:a};m&&(t.progress=e=>{o.current&&(o.current.value=100*e)});const l=yield e.sdk.Tag.saveToLayer(t);n(`[${l.join(",")}]`)}))),[e.sdk.Tag,r,a,m]),x=r.length>0?r.join(", "):"No tags selected",_=a.length>0?a.join(", "):"No tags selected";return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsxs)("div",Object.assign({className:"save-to-layer-container"},{children:[(0,p.jsxs)("div",Object.assign({className:"tag-section"},{children:[(0,p.jsx)("label",Object.assign({htmlFor:"updateTagsInput"},{children:"updateTags:"})),(0,p.jsx)("input",{onClick:()=>f(!0),id:"updateTagsInput",type:"text",value:x,readOnly:!0,className:"tag-input"})]})),(0,p.jsxs)("div",Object.assign({className:"tag-section"},{children:[(0,p.jsx)("label",Object.assign({htmlFor:"ignoreTagsInput"},{children:"ignoreTags:"})),(0,p.jsx)("input",{onClick:()=>g(!0),id:"ignoreTagsInput",type:"text",value:_,readOnly:!0,className:"tag-input"})]})),(0,p.jsxs)("div",Object.assign({className:"action-row"},{children:[(0,p.jsx)("button",Object.assign({className:"save-button",id:"saveToLayer",onClick:y,disabled:0===r.length&&0===a.length},{children:"Save"})),(0,p.jsxs)("label",Object.assign({style:{marginLeft:16}},{children:[(0,p.jsx)("input",{type:"checkbox",checked:m,onChange:e=>v(e.target.checked),style:{marginRight:4}}),"Show Progress Bar"]}))]})),m&&(0,p.jsxs)("div",Object.assign({className:"action-row"},{children:[(0,p.jsx)("span",Object.assign({className:"progress-label"},{children:"Progress:"})),(0,p.jsx)("progress",{className:"progress-bar",value:"0",max:"100",ref:o})]})),(0,p.jsx)("div",{children:(0,p.jsx)("textarea",{className:"result-area",readOnly:!0,placeholder:"Result",value:t})})]})),(0,p.jsx)(bn,{isOpen:d,onClose:()=>f(!1),tags:s,selectedTags:r,setSelectedTags:l,title:"Select Non-Transient Tags to Update",confirmButtonText:"OK",onConfirm:()=>{}}),(0,p.jsx)(bn,{isOpen:b,onClose:()=>g(!1),tags:u.current,selectedTags:a,setSelectedTags:i,title:"Select Transient Tags to Ignore",confirmButtonText:"OK",onConfirm:()=>{}})]})}function gn({sdk:e,selectedAsset:t,selectedLayer:n}){var r,l,a,i,o,s,c,u,d;const[f,g]=(0,h.useState)(),[m,v]=(0,h.useState)([]),[y,_]=(0,h.useState)(""),j=(0,h.useCallback)((function(e){return e.label||"(no label)"}),[]),k=(0,h.useCallback)((function(e){return e.src}),[]),w=(0,h.useCallback)((function(e){return e.src.slice(0,30)}),[]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsx)(b,Object.assign({header:"Tag - SaveToLayer (DirectMessage)"},{children:(0,p.jsx)(hn,{sdk:e})})),(0,p.jsx)(b,Object.assign({header:"Tag - Collection"},{children:(0,p.jsx)(Oe,{collection:e.Tag.data,name:"Tags"})})),(0,p.jsx)(b,Object.assign({header:"Tag.attachments - Collection"},{children:(0,p.jsx)(Oe,{collection:e.Tag.attachments,name:"Attachments"})})),(0,p.jsx)(N,{label:"Tag",collection:e.Tag.data,onChanged:(e,t)=>{g(t),v(t?[...t.keywords]:[])},optionLabel:j,sort:cn,additionalProperties:["stemHeight","discPosition","keywords","enabled"],propertyTransforms:{keywords:e=>[...e]}}),(0,p.jsx)(N,{label:"Attachment",collection:e.Tag.attachments,onChanged:_,optionLabel:w,hoverLabel:k}),(0,p.jsx)(b,Object.assign({header:"Tag - Keywords"},{children:(0,p.jsx)(Zt,{selectedTag:f,selectedTagKeywords:m})})),(0,p.jsx)(b,Object.assign({header:"Tag - Add"},{children:(0,p.jsx)(Bt,Object.assign({sdk:e,selectedLayer:n},{children:(0,p.jsx)(Vt,{sdk:e,selectedAsset:t})}))})),(0,p.jsx)(b,Object.assign({header:"Tag - Remove"},{children:(0,p.jsx)(Bt,Object.assign({sdk:e,selectedLayer:n},{children:(0,p.jsx)(on,{sdk:e,selectedTag:null!==(r=null==f?void 0:f.id)&&void 0!==r?r:""})}))})),(0,p.jsx)(b,Object.assign({header:"Tag - Open"},{children:(0,p.jsx)(tn,{sdk:e,selectedTag:f})})),(0,p.jsx)(b,Object.assign({header:'Tag - "Open Tags"'},{children:(0,p.jsx)(x,{observable:e.Tag.openTags,name:"Open Tags"})})),(0,p.jsx)(b,Object.assign({header:"Tag - Edit"},{children:(0,p.jsx)(Bt,Object.assign({sdk:e,selectedLayer:n},{children:(0,p.jsx)(qt,{sdk:e,selectedTag:null!==(l=null==f?void 0:f.id)&&void 0!==l?l:""})}))})),(0,p.jsx)(b,Object.assign({header:"Tag - Enabled"},{children:(0,p.jsx)(Bt,Object.assign({sdk:e,selectedLayer:n},{children:(0,p.jsx)(Gt,{sdk:e,selectedTag:f})}))})),(0,p.jsx)(b,Object.assign({header:"Tag - Color"},{children:(0,p.jsx)(Bt,Object.assign({sdk:e,selectedLayer:n},{children:(0,p.jsx)(Qt,{sdk:e,selectedTag:null!==(a=null==f?void 0:f.id)&&void 0!==a?a:""})}))})),(0,p.jsx)(b,Object.assign({header:"Tag - Edit Icon"},{children:(0,p.jsx)(Bt,Object.assign({sdk:e,selectedLayer:n},{children:(0,p.jsx)(Xt,{sdk:e,selectedTag:null!==(i=null==f?void 0:f.id)&&void 0!==i?i:"",selectedAsset:t})}))})),(0,p.jsx)(b,Object.assign({header:"Tag - Opacity"},{children:(0,p.jsx)(Bt,Object.assign({sdk:e,selectedLayer:n},{children:(0,p.jsx)(Jt,{sdk:e,selectedTag:null!==(o=null==f?void 0:f.id)&&void 0!==o?o:""})}))})),(0,p.jsx)(b,Object.assign({header:"Tag - Stem"},{children:(0,p.jsx)(Bt,Object.assign({sdk:e,selectedLayer:n},{children:(0,p.jsx)(Yt,{sdk:e,selectedTag:null!==(s=null==f?void 0:f.id)&&void 0!==s?s:""})}))})),(0,p.jsx)(b,Object.assign({header:"Tag - Move"},{children:(0,p.jsx)(Bt,Object.assign({sdk:e,selectedLayer:n},{children:(0,p.jsx)(en,{sdk:e,selectedTag:null!==(c=null==f?void 0:f.id)&&void 0!==c?c:""})}))})),(0,p.jsx)(b,Object.assign({header:"Tag - Allow Actions"},{children:(0,p.jsx)(Bt,Object.assign({sdk:e,selectedLayer:n},{children:(0,p.jsx)(Ht,{sdk:e,selectedTag:null!==(u=null==f?void 0:f.id)&&void 0!==u?u:""})}))})),(0,p.jsx)(b,Object.assign({header:"Tag - Attach"},{children:(0,p.jsx)(Bt,Object.assign({sdk:e,selectedLayer:n},{children:(0,p.jsx)(Kt,{sdk:e,selectedTag:null!==(d=null==f?void 0:f.id)&&void 0!==d?d:"",selectedAttachment:y})}))})),(0,p.jsx)(b,Object.assign({header:"Tag - Register Attachment"},{children:(0,p.jsx)(nn,{sdk:e})})),(0,p.jsx)(b,Object.assign({header:"Tag - Register Sandbox"},{children:(0,p.jsx)(ln,{sdk:e})})),(0,p.jsx)(b,Object.assign({header:"Tag - Docking Controls"},{children:(0,p.jsx)(sn,{toggleSetting:e.Tag.toggleDocking})})),(0,p.jsx)(b,Object.assign({header:"Tag - Navigation Controls"},{children:(0,p.jsx)(sn,{toggleSetting:e.Tag.toggleNavControls})})),(0,p.jsx)(b,Object.assign({header:"Tag - Sharing Controls"},{children:(0,p.jsx)(sn,{toggleSetting:e.Tag.toggleSharing})})),(0,p.jsx)(b,Object.assign({header:"Tag - Import Tags"},{children:(0,p.jsx)(dn,{sdk:e})}))]})}var mn=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};const vn={height:50};function yn(e){const[t,n]=(0,h.useState)([]),r=(0,h.useCallback)((()=>mn(this,void 0,void 0,(function*(){const t=yield e.sdk.Tour.getData();n(t)}))),[e.sdk.Tour]);let l="";return t.length>0&&(l=JSON.stringify(t,null,2)),(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({onClick:r},{children:"getData"}))}),(0,p.jsx)("div",{children:(0,p.jsx)("textarea",{rows:3,style:vn,defaultValue:l})})]})}function xn({sdk:e}){const[t,n]=(0,h.useState)("1"),[r,l]=(0,h.useState)(0);(0,h.useEffect)((()=>{e.Tour.getData().then((e=>{l(e.length)}))}),[e.Tour]);const a=(0,h.useCallback)((()=>{e.Tour.start().then((()=>{console.log("Tour started.")}))}),[e.Tour]),i=(0,h.useCallback)((()=>{e.Tour.stop().then((()=>{console.log("Tour stopped.")}))}),[e.Tour]),o=(0,h.useCallback)((()=>{e.Tour.prev().then((()=>{console.log("Tour - Previous")}))}),[e.Tour]),s=(0,h.useCallback)((()=>{e.Tour.next().then((()=>{console.log("Tour - Next")}))}),[e.Tour]),c=(0,h.useCallback)((()=>{const n=Number(t);isNaN(n)||e.Tour.step(n).then((()=>{console.log("Tour - Stepped")}))}),[e.Tour,t]);return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsxs)("div",Object.assign({className:"flexRow"},{children:[(0,p.jsx)("button",Object.assign({onClick:a},{children:"Start Tour"})),(0,p.jsx)("button",Object.assign({onClick:i},{children:"Stop Tour"}))]})),(0,p.jsxs)("div",Object.assign({className:"flexRow"},{children:[(0,p.jsx)("button",Object.assign({onClick:o},{children:"Previous"})),(0,p.jsx)("button",Object.assign({onClick:s},{children:"Next"}))]})),(0,p.jsxs)("div",Object.assign({className:"flexRow"},{children:[(0,p.jsx)("button",Object.assign({onClick:c},{children:"Step"})),(0,p.jsx)("select",Object.assign({value:t,onChange:e=>n(e.target.value)},{children:Array.from({length:r},((e,t)=>(0,p.jsx)("option",Object.assign({value:t},{children:t}),t)))}))]}))]})}function _n(e){return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)(b,Object.assign({header:"Tour - getData"},{children:(0,p.jsx)(yn,{sdk:e.sdk})})),(0,p.jsx)(b,Object.assign({header:"Tour Controls"},{children:(0,p.jsx)(xn,{sdk:e.sdk})})),(0,p.jsx)(b,Object.assign({header:"Tour - Events"},{children:(0,p.jsx)(Re,{sdk:e.sdk,events:e.sdk.Tour.Event})})),(0,p.jsxs)(b,Object.assign({header:"Tour - State"},{children:[(0,p.jsx)(x,{name:"current step",observable:e.sdk.Tour.currentStep}),(0,p.jsx)(x,{name:"play state",observable:e.sdk.Tour.state}),(0,p.jsx)(x,{name:"transition",observable:e.sdk.Tour.transition})]}))]})}var jn=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};function kn({sdk:e}){const t=(0,h.useRef)(null),n=(0,h.useRef)(null),[r,l]=(0,h.useState)(!0),[a,i]=(0,h.useState)(""),o=(0,h.useCallback)((e=>{l(!e.currentTarget.value)}),[]),s=(0,h.useCallback)((()=>jn(this,void 0,void 0,(function*(){if(t.current&&n.current){const r=yield e.View.createLayer(t.current.value,{common:n.current.checked});i("created: "+r.id)}}))),[e.View]);return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)("div",{children:(0,p.jsx)("input",{ref:t,type:"text",onInput:o})}),(0,p.jsxs)("div",{children:[(0,p.jsx)("label",{children:"common:"}),(0,p.jsx)("input",{ref:n,type:"checkbox"})]}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({onClick:s,disabled:r},{children:"Create"}))}),(0,p.jsx)("div",{children:(0,p.jsx)("textarea",{style:{height:"6em"},readOnly:!0,value:a})})]})}var wn=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};function En({sdk:e,selectedLayer:t}){var n;const[r,l]=(0,h.useState)(""),a=(0,h.useCallback)((()=>wn(this,void 0,void 0,(function*(){if(t)try{yield e.View.deleteLayer(t),l("OK")}catch(e){l(e)}}))),[e.View,t]);return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsxs)("div",{children:["selected: ",(0,p.jsx)("input",{type:"text",value:null!==(n=null==t?void 0:t.id)&&void 0!==n?n:"None",disabled:!0})]}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({onClick:a},{children:"Delete"}))}),(0,p.jsx)("div",{children:(0,p.jsx)("textarea",{style:{height:"6em"},readOnly:!0,value:r})})]})}function Tn({selectedView:e}){var t;const n=(0,h.useRef)(null),r=(0,h.useCallback)((()=>{var t,r;e&&e.setActive(null!==(r=null===(t=n.current)||void 0===t?void 0:t.checked)&&void 0!==r&&r)}),[e]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsxs)("div",{children:["selected: ",(0,p.jsx)("input",{type:"text",value:null!==(t=null==e?void 0:e.id)&&void 0!==t?t:"None",disabled:!0})]}),(0,p.jsxs)("div",{children:[(0,p.jsx)("label",Object.assign({htmlFor:"view-start-return"},{children:"Return to Start?"})),(0,p.jsx)("input",{ref:n,id:"view-start-return",type:"checkbox"})]}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({onClick:r},{children:"Activate"}))})]})}function On({selectedLayer:e}){var t;const n=(0,h.useCallback)((t=>{e&&e.toggle(t)}),[e]);return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsxs)("div",{children:["selected: ",(0,p.jsx)("input",{type:"text",value:null!==(t=null==e?void 0:e.id)&&void 0!==t?t:"None",disabled:!0})]}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({onClick:()=>n(!0)},{children:"Toggle On"}))}),(0,p.jsx)("div",{children:(0,p.jsx)("button",Object.assign({onClick:()=>n(!1)},{children:"Toggle Off"}))})]})}var Sn=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};const Cn={display:"inline-block",width:"50px"};function Nn({selectedView:e,selectedLayer:t}){var n,r;const[l,a]=(0,h.useState)(""),i=(0,h.useCallback)((()=>Sn(this,void 0,void 0,(function*(){if(a(""),e&&t)try{yield e.addLayer(t),a("OK")}catch(e){a("[addLayer] Error:"+e)}else a("not ready")}))),[t,e]),o=(0,h.useCallback)((()=>Sn(this,void 0,void 0,(function*(){if(a(""),e&&t)try{yield e.removeLayer(t),a("OK")}catch(e){a("[removeLayer] Error:"+e)}else a("not ready")}))),[t,e]),s=(0,h.useCallback)((()=>Sn(this,void 0,void 0,(function*(){a(e&&t?e.hasLayer(t).toString():"not ready")}))),[t,e]);return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsxs)("div",{children:[(0,p.jsx)("span",Object.assign({style:Cn},{children:"View:"})),(0,p.jsx)("input",{type:"text",value:null!==(n=null==e?void 0:e.id)&&void 0!==n?n:"None",disabled:!0})]}),(0,p.jsxs)("div",{children:[(0,p.jsx)("span",Object.assign({style:Cn},{children:"Layer:"})),(0,p.jsx)("input",{type:"text",value:null!==(r=null==t?void 0:t.id)&&void 0!==r?r:"None",disabled:!0})]}),(0,p.jsxs)("div",{children:[(0,p.jsx)("button",Object.assign({style:{width:"70px"},onClick:i},{children:"Add"})),(0,p.jsx)("button",Object.assign({style:{width:"70px"},onClick:o},{children:"Remove"})),(0,p.jsx)("button",Object.assign({style:{width:"70px"},onClick:s},{children:"Has"}))]}),(0,p.jsx)("div",{children:(0,p.jsx)("textarea",{style:{width:"100%",height:"6em"},value:l,disabled:!0})})]})}function In({sdk:e,selectedLayer:t,selectLayer:n}){const[r,l]=(0,h.useState)();return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)(b,Object.assign({header:"View.views - Collection"},{children:(0,p.jsx)(Oe,{name:"views",collection:e.View.views})})),(0,p.jsx)(N,{label:"Views",collection:e.View.views,additionalProperties:["id","name","type","layers"],propertyTransforms:{layers:e=>[...e].map((e=>e.id))},onChanged:(e,t)=>l(t)}),(0,p.jsx)(b,Object.assign({header:"View.layers - Collection"},{children:(0,p.jsx)(Oe,{name:"layers",collection:e.View.layers})})),(0,p.jsx)(N,{label:"Layers",collection:e.View.layers,additionalProperties:["id","name","type","toggled","common"],onChanged:(e,t)=>n(t)}),(0,p.jsx)(b,Object.assign({header:"View - Current"},{children:(0,p.jsx)(x,{name:"current",observable:e.View.current})})),(0,p.jsx)(b,Object.assign({header:"View - Create Layer"},{children:(0,p.jsx)(kn,{sdk:e})})),(0,p.jsx)(b,Object.assign({header:"View - Delete Layer"},{children:(0,p.jsx)(En,{sdk:e,selectedLayer:t})})),(0,p.jsx)(b,Object.assign({header:"View - Activate"},{children:(0,p.jsx)(Tn,{selectedView:r})})),(0,p.jsx)(b,Object.assign({header:"Layer - Toggle"},{children:(0,p.jsx)(On,{selectedLayer:t})})),(0,p.jsx)(b,Object.assign({header:"View.layers controls"},{children:(0,p.jsx)(Nn,{selectedView:r,selectedLayer:t})}))]})}function Rn(e){return(0,p.jsx)(p.Fragment,{children:(0,p.jsxs)(b,Object.assign({header:"Viewmode - Transition"},{children:[(0,p.jsx)(x,{name:"viewmode current",observable:e.sdk.Mode.current}),(0,p.jsx)(x,{name:"viewmode transition",observable:e.sdk.Mode.transition})]}))})}function Pn({sdk:e}){const[t,n]=(0,h.useState)(""),[r,l]=(0,h.useState)(),[a,i]=(0,h.useState)({}),o=(0,h.useCallback)(((e,t)=>{i((n=>Object.assign(Object.assign({},n),{[e]:t})))}),[]);return(0,p.jsxs)(h.Fragment,{children:[(0,p.jsx)(v,{sdk:e}),(0,p.jsx)(j,{sdk:e}),(0,p.jsx)(O,{sdk:e}),(0,p.jsx)(A,{sdk:e,assets:a,setAssets:i,setSelectedAsset:n}),(0,p.jsx)(L,{sdk:e}),(0,p.jsx)(fe,{sdk:e}),(0,p.jsx)(Pe,{sdk:e}),(0,p.jsx)(Fe,{sdk:e}),(0,p.jsx)(He,{sdk:e}),(0,p.jsx)($e,{sdk:e,selectedAsset:t,addAsset:o}),(0,p.jsx)(Je,{sdk:e}),(0,p.jsx)(at,{sdk:e}),"Plugin"in e&&(0,p.jsx)(st,{sdk:e}),(0,p.jsx)(pt,{sdk:e,selectedAsset:t,addAsset:o}),(0,p.jsx)(mt,{sdk:e}),(0,p.jsx)(vt,{sdk:e}),(0,p.jsx)(wt,{sdk:e}),(0,p.jsx)(Tt,{sdk:e}),(0,p.jsx)(It,{sdk:e}),(0,p.jsx)(Mt,{sdk:e}),(0,p.jsx)(zt,{sdk:e}),"Tag"in e&&(0,p.jsx)(gn,{sdk:e,selectedAsset:t,selectedLayer:r}),(0,p.jsx)(_n,{sdk:e}),"View"in e&&(0,p.jsx)(In,{sdk:e,selectedLayer:r,selectLayer:l}),(0,p.jsx)(Rn,{sdk:e})]})}var An,Ln,Dn=l(505),Fn=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};(Ln=An||(An={})).MODEL="m",Ln.APPLICATION_KEY="applicationKey",Ln.API_HOST="apiHost",Ln.CONNECT_DELAY="delay",Ln.PROVIDER="provider",Ln.VERSION="version",Ln.LOAD_BUNDLE="bundle",Ln.DIRECT_MESSAGE="dm",Ln.BOOTSTRAP_VERSION="bootstrapVersion",Ln.LOAD_WORKSHOP="workshop";const Mn=[{configKey:"model",paramKey:An.MODEL,name:"Model",description:"The model to load into Showcase",type:"text"},{configKey:"applicationKey",paramKey:An.APPLICATION_KEY,name:"Application Key",description:"The application to use when connecting the SDK",type:"text"},{configKey:"apiHost",paramKey:An.API_HOST,name:"Api Host",description:"The API host to use to load models and assets from (e.g. https://my.matterport.com)",type:"text"},{configKey:"connectionDelay",paramKey:An.CONNECT_DELAY,name:"Connection Delay",description:"Delay the connection of the SDK by some number of milliseconds",type:"num"},{configKey:"provider",paramKey:An.PROVIDER,name:"Provider",description:"Connect the SDK as a provider",type:"text"},{configKey:"version",paramKey:An.VERSION,name:"Showcase Version",description:"Which version of Showcase to load in the iframe",type:"text"},{configKey:"loadBundle",paramKey:An.LOAD_BUNDLE,name:"Load as Bundle?",description:"Load the Showcase Bundle instead of as a standard Embed? Forces direct messaging",type:"bool"},{configKey:"useDirectMessages",paramKey:An.DIRECT_MESSAGE,name:"Direct Message?",description:'Connect and use the "bundle\'s" direction connection (as opposed to postmessage). Can be blocked by CORS',type:"bool"},{configKey:"bootstrapVersion",paramKey:An.BOOTSTRAP_VERSION,name:"Bootstrap Version",description:'The version of the bootstrap (the thing that does initial connect) to load. Use "local" to load local bootstrap packages',type:"text"},{configKey:"workshop",paramKey:An.LOAD_WORKSHOP,name:"Load Workshop?",description:"Load Workshop in place of Showcase",type:"bool"}];function zn(e,t){const n=t.loadBundle?function(e){const t=e.version,n=t.startsWith("https"),r=new URL(n?t+"/showcase.html":"https://static.matterport.com/showcase-sdk/bundle/"+t+"/showcase.html");return r}(t):function(e){const t=e.workshop?"/work/":"/show/",n=new URL(e.apiHost+t);return n}(t);n.search=window.location.search,n.searchParams.set("m",t.model),n.searchParams.set("applicationKey",decodeURIComponent(t.applicationKey)),n.searchParams.set("apiHost",t.apiHost),t.version?n.searchParams.set("version",t.version):n.searchParams.delete("version"),e.src=n.toString()}const Un=new Dn.o;const Bn=function(e){return new Promise((t=>{setTimeout(t,e)}))};(()=>{const e={}})();var Vn=l(338);function Hn({config:e,onConfigChange:t}){const n=(0,h.useRef)(null),[r,l]=(0,h.useState)(!1),a=Object.entries(e).map((([e,t])=>[e,{value:t,modifiedValue:t}])),[i,o]=(0,h.useState)(Object.fromEntries(a)),s=(0,h.useCallback)((e=>{e.target===n.current&&l(!1)}),[]),c=(0,h.useCallback)((()=>{l(!r)}),[r]),u=(0,h.useCallback)(((e,t)=>{i[e].modifiedValue=t,o(Object.assign({},i))}),[i]),d=(0,h.useCallback)((()=>{if(!Object.values(i).reduce(((e,t)=>e&&t.value===t.modifiedValue),!0)){for(const e of Object.keys(i)){const t=i[e];t.value=t.modifiedValue}t(function(e){const t={};for(const[n,{value:r}]of Object.entries(e)){const e=Mn.find((e=>e.configKey===n));e&&(t[e.paramKey]=r)}return t}(i)),o(Object.assign({},i))}}),[i,t]),f=(0,h.useCallback)((()=>{for(const e of Object.keys(i)){const t=i[e];t.modifiedValue=t.value}o(Object.assign({},i))}),[i]),b={height:"100%",width:"100%",pointerEvents:r?"all":"none"};return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)("div",{ref:n,style:b,onClick:s}),(0,p.jsxs)("div",Object.assign({style:{position:"absolute",top:0,right:0,height:60,width:60,fontSize:"60px",lineHeight:"60px",color:"white",textAlign:"center"},onClick:c},{children:["⚙",(0,p.jsx)("div",Object.assign({style:{position:"absolute",top:0,height:60,width:60,fontSize:"50px",lineHeight:"60px",color:"black",textAlign:"center",pointerEvents:"none"}},{children:"⚙"}))]})),r&&(0,p.jsx)(Wn,{config:i,updateConfig:u,applyConfig:d,resetConfig:f})]})}function Wn({config:e,updateConfig:t,applyConfig:n,resetConfig:r}){const l={margin:"0 4"},a={outline:"1px solid red"};return(0,p.jsxs)("div",Object.assign({style:{position:"absolute",top:10,right:10,backgroundColor:"white",border:"1px solid black",width:300,padding:8}},{children:[Mn.map((({configKey:n,paramKey:r,name:l,type:i,description:o})=>{const s=e[n].value,c=e[n].modifiedValue,u=void 0!==c?c:s,d=c!==s?a:{};return(0,p.jsx)(Kn,Object.assign({name:l,description:o},{children:"text"===i?(0,p.jsx)("input",{style:d,type:"text",value:u,onChange:e=>t(n,e.target.value)}):"num"===i?(0,p.jsx)("input",{type:"number",style:d,step:1,value:u,onChange:e=>t(n,parseInt(e.target.value,10))}):(0,p.jsx)("input",{type:"checkbox",style:d,checked:u,onChange:e=>t(n,e.target.checked)})}),r)})),(0,p.jsxs)("div",Object.assign({style:{display:"flex",flexDirection:"row"}},{children:[(0,p.jsx)("span",{style:{flexGrow:1}}),(0,p.jsx)("button",Object.assign({style:l,onClick:n},{children:"Apply"})),(0,p.jsx)("button",Object.assign({style:l,onClick:r},{children:"Reset"}))]}))]}))}function Kn({name:e,children:t,description:n}){return(0,p.jsxs)("div",Object.assign({style:{padding:8,display:"flex",flexDirection:"row"}},{children:[(0,p.jsx)("div",Object.assign({style:{textAlign:"right",marginRight:8,flexGrow:1}},{children:(0,p.jsx)("span",Object.assign({title:n},{children:e}))})),(0,p.jsx)("div",Object.assign({style:{width:150,flex:"0 1 auto"}},{children:t}))]}))}var qn=function(e,t,n,r){return new(n||(n=Promise))((function(l,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))};document.getElementById("control-root").innerHTML="<div>\n  <div class='drawer'>\n    <span class='drawer-label'>Mattertag</span>\n    <div>\n      <select id='mattertag-selector' class='mattertag-selector'>\n        <option disabled selected value />\n      </select>\n    </div>\n\n    \x3c!-- Mattertag Add --\x3e\n    <div class='controlPanel'>\n      <div class='controlPanelHeader'>Mattertag - Add</div>\n      <label for='tag-add-title'>Title:</label>\n      <input type='text' id='tag-add-title'>\n      <br>\n      <label for='tag-add-desc'>Desc:</label>\n      <textarea id='tag-add-desc'></textarea>\n      <br>\n      position:\n      <br>\n      <label for='tag-add-pos-x'>x: </label><input class='small-input' id='tag-add-pos-x' type='number' step='0.001' value='0'>\n      <label for='tag-add-pos-y'>y: </label><input class='small-input' id='tag-add-pos-y' type='number' step='0.001' value='0'>\n      <label for='tag-add-pos-z'>z: </label><input class='small-input' id='tag-add-pos-z' type='number' step='0.001' value='0'>\n      <br>\n      normal:\n      <br>\n      <label for='tag-add-norm-x'>x: </label><input class='small-input' id='tag-add-norm-x' type='number' step='0.001' value='0'>\n      <label for='tag-add-norm-y'>y: </label><input class='small-input' id='tag-add-norm-y' type='number' step='0.001' value='1'>\n      <label for='tag-add-norm-z'>z: </label><input class='small-input' id='tag-add-norm-z' type='number' step='0.001' value='0'>\n      <br>\n      media:\n      <br>\n      <label for='tag-add-mtype'>type:</label><select id='tag-add-mtype' class='mtag-media-type'></select>\n      <label for='tag-add-msrc'>src:</label><input type='text' id='tag-add-msrc'>\n      <br>\n      <button id='tag-add'>Add</button>\n    </div>\n\n    \x3c!-- Mattertag Move --\x3e\n    <div class='controlPanel'>\n      <div class='controlPanelHeader'>Mattertag - Move</div>\n      position:\n      <br>\n      <label for='tag-move-pos-x'>x: </label><input class='small-input' id='tag-move-pos-x' type='number' step='0.001' value='0'>\n      <label for='tag-move-pos-y'>y: </label><input class='small-input' id='tag-move-pos-y' type='number' step='0.001' value='0'>\n      <label for='tag-move-pos-z'>z: </label><input class='small-input' id='tag-move-pos-z' type='number' step='0.001' value='0'>\n      <br>\n      normal:\n      <br>\n      <label for='tag-move-norm-x'>x: </label><input class='small-input' id='tag-move-norm-x' type='number' step='0.001' value='0'>\n      <label for='tag-move-norm-y'>y: </label><input class='small-input' id='tag-move-norm-y' type='number' step='0.001' value='1'>\n      <label for='tag-move-norm-z'>z: </label><input class='small-input' id='tag-move-norm-z' type='number' step='0.001' value='0'>\n      <br>\n      <button id='tag-move'>Move</button>\n    </div>\n\n    \x3c!-- Mattertag Remove --\x3e\n    <div id='mattertag-controls' class='controlPanel'>\n      <div class='controlPanelHeader'>Mattertag - Remove</div>\n      <br />\n      <div>\n        <button id='mattertag-remove'>Remove Mattertag</button>\n      </div>\n    </div>\n\n    \x3c!-- Mattertag Editor --\x3e\n    <div class='controlPanel'>\n      <div class=\"controlPanelHeader\">Mattertag - Edit</div>\n      <table>\n        <tr>\n          <td><label for='tag-edit-title'>Title:</label></td>\n          <td><input type='text' id='tag-edit-title'></td>\n        </tr>\n        <tr>\n          <td><label for='tag-edit-media'>Media:</label></td>\n          <td><input type='text' id='tag-edit-media'></td>\n          <td><select id='tag-edit-mediatype' class='mtag-media-type'></select></td>\n        </tr>\n        <tr>\n          <td><label for='tag-edit-desc'>Desc:</label></td>\n          <td><textarea id='tag-edit-desc'></textarea></td>\n        </tr>\n      </table>\n      <button id='mattertag-edit'>Edit</button>\n    </div>\n\n    \x3c!-- Mattertag prevent --\x3e\n    <div class='controlPanel'>\n      <div class='controlPanelHeader'>Mattertag - Prevent Action</div>\n      checked => functionality allowed<br />unchecked => disallowed\n      <br />\n      <br />\n      <div>\n        <label for='tag-lock-bb'>Billboard:</label>\n        <input type='checkbox' id='tag-lock-bb' checked></td>\n      </div>\n      <div>\n        <label>Navigation:</label>\n        <input type='checkbox' id='tag-lock-nav' checked></td>\n      </div>\n    </div>\n\n    \x3c!-- Mattertag Color --\x3e\n    <div class='controlPanel'>\n      <div class='controlPanelHeader'>Mattertag - Color</div>\n      <br>\n      <label>Color</label>\n      <div>\n        <label for='tag-color-r'>r: </label><input class='small-input' id='tag-color-r' type='number' step='0.001' value='1'>\n      </div>\n      <div>\n        <label for='tag-color-g'>g: </label><input class='small-input' id='tag-color-g' type='number' step='0.001' value='0'>\n      </div>\n      <div>\n        <label for='tag-color-b'>b: </label><input class='small-input' id='tag-color-b' type='number' step='0.001' value='1'>\n      </div>\n      <br>\n      <button id='tag-edit-color'>Edit Color</button>\n    </div>\n\n    \x3c!-- Mattertag Opacity --\x3e\n    <div class='controlPanel'>\n      <div class='controlPanelHeader'>Mattertag - Edit Opacity</div>\n      <br />\n      <div>\n        <label for='mattertag-opacity'>Opacity:</label>\n        <input type='number' min='0' max='1' step='0.001' value='.5' id='mattertag-opacity'>\n      </div>\n      <div>\n        <button id='mattertag-opacity-edit'>Edit Opacity</button>\n      </div>\n    </div>\n\n    \x3c!-- Mattertag injection --\x3e\n    <div id=\"tagHTML\" class=\"controlPanel\">\n      <div class=\"controlPanelHeader\">Mattertag - Inject HTML</div>\n      <table height=\"100%\">\n        <tr>\n          <td>\n            <textarea id='injectedHTML'></textarea>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <div>\n              <table>\n                <tr>\n                  <td>Size:</td>\n                  <td><input type=\"text\" id=\"mattertag-html-w\" class=\"small-input\"></td>\n                  <td><input type=\"text\" id=\"mattertag-html-h\" class=\"small-input\"></td>\n                </tr>\n              </table>\n            </div>\n          </td>\n        </tr>\n        <tr>\n          <td><button id=\"injectHTML\">INJECT HTML</button></td>\n        </tr>\n      </table>\n    </div>\n\n    \x3c!-- Mattertag Navigation --\x3e\n    <div id='mattertag-controls' class='controlPanel'>\n      <div class='controlPanelHeader'>Mattertag - Navigate</div>\n      <br />\n      <div>\n        <select id='mattertag-navigation-type'>\n          <option value='FLY'>Fly</option>\n          <option value='FADEOUT'>Fade Out</option>\n          <option value='INSTANT'>Instant</option>\n        </select>\n      </div>\n      <div>\n        <label for='mattertag-navigation-force'>Force:</label>\n        <input id='mattertag-navigation-force' type='checkbox'></input>\n      </div>\n      <div>\n        <button id='navigateToTag'>Navigate</button>\n      </div>\n    </div>\n\n  </div>\n\n\n  \x3c!-- Mattertag Stem --\x3e\n  <div class='controlPanel'>\n    <div class='controlPanelHeader'>Mattertag - Stem</div>\n    <br>\n    <label>Editable Stem Properties</label>\n    <div>\n      <label for='stem-height'>Stem Height: </label><input class='small-input' id='stem-height' type='number' step='0.01' value='0.7'>\n    </div>\n    <input id='stem-visible' type='checkbox' checked>Visible</input>\n    <br>\n    <button id='tag-edit-stem'>Update Stem</button>\n  </div>\n\n\n  \x3c!-- Screenshots --\x3e\n  <div class='controlPanel'>\n    <button id=\"screenshot\">Screenshot</button>\n    <button id=\"equirectangle\">Equirectangular</button>\n    <br />\n    <br />\n    <img id='screenshot-preview'>\n  </div>\n\n  \x3c!-- Pointer Observable --\x3e\n  <div id=\"pointerInfo\" class=\"controlPanel\">\n    <textarea id='pointer'></textarea>\n    <br />\n    <button id=\"getPointer\">Toggle Pointer Data</button>\n  </div>\n\n  \x3c!-- Movement --\x3e\n  <div class=\"controlPanel navControls\">\n    <div class=\"controlPanelHeader\">Movement</div>\n    <br />\n    <table>\n      <tr>\n        <td></td>\n        <td><button id=\"FORWARD\" data-direction='FORWARD' class=\"navButton\">Fwd</button></td>\n        <td></td>\n      </tr>\n       <tr>\n        <td><button id=\"LEFT\" data-direction='LEFT' class=\"navButton\">Left</button></td>\n        <td></td>\n        <td><button id=\"RIGHT\" data-direction='RIGHT' class=\"navButton\">Right</button></td>\n      </tr>\n       <tr>\n        <td></td>\n        <td><button id=\"BACK\" data-direction='BACK' class=\"navButton\">Back</button></td>\n        <td></td>\n      </tr>\n      <tr>\n        <td><input type=\"text\" id=\"positionX\" name=\"panX\" class=\"rotationbutton\"></td>\n        <td><input type=\"text\" id=\"positionZ\" name=\"panZ\" class=\"rotationbutton\"></td>\n        <td><button id=\"pan\">Pan</button></td>\n        </tr>\n      </tr>\n    </table>\n  </div>\n\n  \x3c!-- Rotation Controls --\x3e\n  <div class=\"controlPanel rotationControls\">\n    <div class=\"controlPanelHeader\">Rotation</div>\n    <br />\n    <table>\n      <tr>\n        <td></td>\n        <td><button id=\"tiltUp\" data-direction='UP' class=\"rotationbutton\">Up</button></td>\n        <td></td>\n      </tr>\n       <tr>\n        <td><button id=\"rotateLeft\" data-direction='LEFT' class=\"rotationbutton\">Left</button></td>\n        <td><input type=\"text\" id=\"rotation\" name=\"rotation\" class=\"rotationbutton\"></td>\n        <td><button id=\"rotateRight\" data-direction='RIGHT' class=\"rotationbutton\">Right</button></td>\n      </tr>\n       <tr>\n        <td></td>\n        <td><button id=\"tiltDown\" data-direction='DOWN' class=\"rotationbutton\">Down</button></td>\n        <td></td>\n      </tr>\n    </table>\n    <br />\n    <input type=\"text\" id=\"rotationX\" name=\"rotationX\" class=\"rotationbutton\">&nbsp;&nbsp;\n    <input type=\"text\" id=\"rotationY\" name=\"rotationY\" class=\"rotationbutton\">&nbsp;&nbsp;\n    <button id=\"freeRotate\" class=\"rotationbutton\">Free</button>\n    <button id=\"orient\" class=\"rotationbutton\">Orient</button>\n    <input type=\"text\" id=\"rotationSpeed\" name=\"rotationSpeed\" class=\"rotationbutton\">&nbsp;&nbsp;\n  </div>\n\n  \x3c!-- Zoom Controls --\x3e\n  <div class=\"controlPanel zoomControls\">\n    <div class=\"controlPanelHeader\">Zoom</div>\n    <br />\n    <table>\n      <tr>\n        <td>Current Zoom:</td>\n        <td><label id='current-zoom-level'>1</label></td>\n\n      </tr>\n      <tr>\n        <td><input type=\"text\" id=\"zoom-by-val\" name=\"zoom-by-val\" class=\"rotationbutton\"></td>\n        <td><button id=\"zoom-by\" class=\"\">Zoom By</button></td>\n      </tr>\n      <tr>\n        <td><input type=\"text\" id=\"zoom-to-val\" name=\"zoom-to-val\" class=\"rotationbutton\"></td>\n        <td><button id=\"zoom-to\" class=\"\">Zoom To</button></td>\n      </tr>\n      <tr>\n        <td></td>\n        <td><button id=\"zoom-reset\" class=\"rotationbutton\">Reset</button></td>\n      </tr>\n    </table>\n  </div>\n\n  \x3c!-- Mode Controls --\x3e\n  <div class=\"controlPanel modeControls\">\n    <div class=\"controlPanelHeader\">Mode</div>\n    <br />\n    <table>\n      <tr>\n        <td></td>\n        <td><button id=\"INSIDE\" class=\"modeButton\">Inside</button></td>\n        <td></td>\n      </tr>\n      <tr>\n        <td></td>\n        <td><button id=\"DOLLHOUSE\" class=\"modeButton\">Dollhouse</button></td>\n        <td></td>\n      </tr>\n      <tr>\n        <td></td>\n        <td><button id=\"FLOORPLAN\" class=\"modeButton\">Floorplan</button></td>\n        <td></td>\n      </tr>\n      <tr>\n        <td></td>\n        <td>\n          <p>\n            Transition:\n            <select id=\"modeStyles\">\n              <option value='FLY'>Fly</option>\n              <option value='FADEOUT'>Fade to black</option>\n              <option value='INSTANT'>Instant</option>\n            </select>\n          </p>\n        </td>\n        <td></td>\n      </tr>\n    </table>\n  </div>\n\n  \x3c!-- sweep Controls --\x3e\n  <div class=\"controlPanel modeControls\">\n    <div class=\"controlPanelHeader\">Fly To Sweep By ID</div>\n    <br />\n    <table>\n      <tr>\n        <td>\n        <p>\n          Sweep:\n          <select class='sweep-selector' id='sweepIds'></select>\n        </p>\n        </td>\n      </tr>\n      <tr>\n        <td>\n        <p>\n          Rotation:\n          <input type=\"text\" id=\"sweepRotationX\" name=\"rotationX\" class=\"rotationbutton\">&nbsp;&nbsp;\n          <input type=\"text\" id=\"sweepRotationY\" name=\"rotationY\" class=\"rotationbutton\">&nbsp;&nbsp;\n        </p>\n        </td>\n      </tr>\n      <tr>\n        <td>\n        <p>\n          Transition:\n          <select id=\"flyStyles\">\n            <option value='FLY'>Fly</option>\n            <option value='FADEOUT'>Fade to black</option>\n            <option value='INSTANT'>Instant</option>\n          </select>\n        </p>\n        </td>\n      </tr>\n      <tr>\n        <td>\n        <p>\n          Transition Time:\n          <input type=\"text\" id=\"sweepTransitionTime\">&nbsp;&nbsp;\n        </p>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <button id=\"moveToSweep\" class=\"sweepButton\">Move To Sweep</button>\n        </td>\n      </tr>\n    </table>\n  </div>\n\n  \x3c!-- Sweep enable --\x3e\n  <div class=\"controlPanel\">\n    <div class=\"controlPanelHeader\">Sweep - Enable</div>\n    <br>\n    <select class='sweep-selector' id='sweep-enable-selector'></select>\n    <br>\n    <input id='sweep-enable' type='checkbox' checked>Enabled</input>\n  </div>\n\n  <div id='root'></div>\n</div>\n";const $n=document.getElementById("showcase"),Gn=document.getElementById("react-root"),Qn=Gn?(0,Vn.H)(Gn):void 0,Yn=new URLSearchParams(window.location.search),Xn={model:Yn.get(An.MODEL)||Yn.get("model")||"NKANYpwb2Sn",applicationKey:Yn.get(An.APPLICATION_KEY)||Yn.get("sdkKey")||"u2mw9w1qe1sasr0sbiucrgceb",apiHost:Yn.get(An.API_HOST)||Yn.get("host")||window.location.origin,connectionDelay:parseInt(Yn.get(An.CONNECT_DELAY)||"0",10),provider:Yn.get(An.PROVIDER)||"",version:Yn.get(An.VERSION)||"",loadBundle:"1"===Yn.get(An.LOAD_BUNDLE),useDirectMessages:!(!Yn.get(An.LOAD_BUNDLE)&&"1"!==Yn.get(An.DIRECT_MESSAGE)),bootstrapVersion:Yn.get(An.BOOTSTRAP_VERSION)||Yn.get("sdkVersion")||"local",workshop:"1"===Yn.get(An.LOAD_WORKSHOP)};function Jn(){return qn(this,void 0,void 0,(function*(){if(Xn.useDirectMessages)return Xn.connectionDelay>0&&(yield Bn(Xn.connectionDelay)),function(){const e=$n.contentWindow,t=e.MP_SDK;try{return t.connect(e,{provider:Xn.provider})}catch(n){return t.connect(e,Xn.applicationKey)}}();Xn.connectionDelay>0&&(yield Bn(Xn.connectionDelay));return function(e){if("1"===Yn.get("useLegacyConnect"))return e.connect($n,Xn.applicationKey,"");try{return e.connect($n,{provider:Xn.provider})}catch(t){return e.connect($n,Xn.applicationKey,"")}}(yield"local"===Xn.bootstrapVersion?l.e(395).then(l.bind(l,395)):function(e){return Fn(this,void 0,void 0,(function*(){console.log("Loading SDK bootstrap version:",e);const t=yield Un.load(function(){try{return new URL(e),e}catch(t){return"https://static.matterport.com/showcase-sdk/"+e+"/sdk.js"}}()),n=window.MP_SDK||t;return delete window.MP_SDK,n}))}(Xn.bootstrapVersion))}))}function Zn(){var e;return qn(this,void 0,void 0,(function*(){try{const e=yield Jn();window.SDK_INSTANCE=e,d(e,$n),Qn?(t=e,Qn.render((0,p.jsx)("div",{children:(0,p.jsx)(Pn,{sdk:t})}))):console.warn("Unable to create controls. Continuing without")}catch(e){console.error(e)}var t;window.THREE=null===(e=$n.contentWindow)||void 0===e?void 0:e.THREE}))}function er(){if(!Xn.model){const e="No model specified. Specify a model using ?m=[modelSid] or #m=[modelSid]",t=document.getElementById("status");throw t.classList.add("error"),t.innerText=e,Error(e)}$n.onload=Zn,zn($n,Xn)}function tr(){const e=new URLSearchParams(window.location.hash.substring(1));Xn.model=e.get(An.MODEL)||Xn.model,Xn.applicationKey=e.get(An.APPLICATION_KEY)||Xn.applicationKey,Xn.apiHost=e.get(An.API_HOST)||Xn.apiHost,Xn.connectionDelay=parseInt(e.get(An.CONNECT_DELAY)||"0",10),Xn.provider=e.get(An.PROVIDER)||Xn.provider,Xn.version=e.get(An.VERSION)||Xn.version,Xn.loadBundle="1"===e.get(An.LOAD_BUNDLE),Xn.useDirectMessages=!(!Xn.loadBundle&&"1"!==e.get(An.DIRECT_MESSAGE)),Xn.bootstrapVersion=e.get(An.BOOTSTRAP_VERSION)||Xn.bootstrapVersion,Xn.workshop="1"===e.get(An.LOAD_WORKSHOP)}function nr(e){var t;window.location.hash=e.toString(),null===(t=window.parent)||void 0===t||t.postMessage({type:"update-hash",hash:decodeURIComponent(e.toString())},"*")}"https://static.matterport.com"===Xn.apiHost&&(Xn.apiHost="https://qa3-app.matterport.com"),tr(),er(),function(){const e=document.querySelector("#settings-container");e?function(e,t,n){const r=(0,Vn.H)(e);r.render((0,p.jsx)(Hn,{config:t,onConfigChange:n}))}(e,Xn,(e=>{const t=function(e){const t=[];for(const[n,r]of Object.entries(e))t.push(`${n}=${r}`);const n=new URLSearchParams(t.join("&")),r=[];for(const[e,t]of n){const l=Mn.find((t=>t.paramKey===e));"text"===(null==l?void 0:l.type)&&""===t&&r.push(e),"bool"===(null==l?void 0:l.type)&&("true"===t&&n.set(e,"1"),"false"===t&&r.push(e))}for(const e of r)n.delete(e);return"local"===n.get("bootstrapVersion")&&n.delete("bootstrapVersion"),"local"===n.get("version")&&n.delete("version"),"0"===n.get("delay")&&n.delete("delay"),n}(e),n=new URLSearchParams(window.location.hash.substring(1)),r=n.get("height"),l=n.get("width"),a=n.get("filter");null!==r&&t.set("height",r),null!==l&&t.set("width",l),null!==a&&t.set("filter",a),nr(t),tr(),er()})):console.warn("Unable to create settings panel. Continuing without.")}(),function(){const e=document.querySelector("#width"),t=document.querySelector("#height"),n=document.querySelector("#filter-panels"),r=new URLSearchParams(window.location.hash.substring(1));if(!e||!t||!n)return void console.warn("Unable to set up page controls. Continuing without.");e.value=String($n.clientWidth),t.value=String($n.clientHeight),e.addEventListener("change",(()=>{$n.width=e.value;const t=new URLSearchParams(window.location.hash.substring(1));t.set("width",e.value),nr(t)})),t.addEventListener("change",(()=>{$n.height=t.value;const e=new URLSearchParams(window.location.hash.substring(1));e.set("height",t.value),nr(e)})),e.addEventListener("wheel",(e=>e.stopPropagation())),t.addEventListener("wheel",(e=>e.stopPropagation()));const l=r.get("width"),a=r.get("height");l&&(e.value=l,e.dispatchEvent(new Event("change"))),a&&(t.value=a,t.dispatchEvent(new Event("change")));const i=()=>{var e;const t=document.querySelectorAll(".controlPanelHeader");for(const r of t)r.parentElement&&(!n.value||(null===(e=r.textContent)||void 0===e?void 0:e.match(new RegExp(`${n.value}`,"i")))?r.parentElement.style.display="block":r.parentElement.style.display="none");const r=new URLSearchParams(window.location.hash.substring(1));n.value?r.set("filter",n.value):r.delete("filter"),nr(r)};n.addEventListener("keyup",i);const o=document.querySelector("#main-scroll");if(o){new MutationObserver(i).observe(o,{childList:!0,subtree:!0})}const s=r.get("filter");s&&(n.value=s,n.dispatchEvent(new Event("keyup")))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LFFBQzlCLDZCQUE4QixRQUM5Qiw2QkFBOEIsUUFDOUIsNkJBQThCLFFBQzlCLDZCQUE4QixRQUM5Qiw2QkFBOEIsUUFDOUIsNkJBQThCLFFBQzlCLDZCQUE4QixRQUM5Qiw2QkFBOEIsUUFDOUIsNkJBQThCLFFBQzlCLDZCQUE4QixRQUM5Qiw2QkFBOEIsUUFDOUIsNkJBQThCLFFBQzlCLDZCQUE4QixRQUM5Qiw2QkFBOEIsUUFDOUIsNkJBQThCLFFBQzlCLDZCQUE4QixRQUM5Qiw2QkFBOEIsUUFDOUIsNkJBQThCLFFBQzlCLDZCQUE4QixRQUM5Qiw2QkFBOEIsUUFDOUIsNkJBQThCLFFBQzlCLDZCQUE4QixRQUM5Qiw2QkFBOEIsUUFDOUIsNkJBQThCLFFBQzlCLDZCQUE4QixRQUM5Qiw2QkFBOEIsUUFDOUIsNkJBQThCLFFBQzlCLDZCQUE4QixRQUM5Qiw2QkFBOEIsUUFDOUIsb0JBQXVCLFFBQ3ZCLG9CQUF1QixRQUN2QixvQkFBdUIsUUFDdkIsb0JBQXVCLFFBQ3ZCLG9CQUF1QixRQUN2QixvQkFBdUIsUUFDdkIsb0JBQXVCLFFBQ3ZCLG9CQUF1QixRQUN2QixvQkFBdUIsUUFDdkIsb0JBQXVCLFFBQ3ZCLG9CQUF1QixRQUN2QixvQkFBdUIsUUFDdkIsb0JBQXVCLFFBQ3ZCLG9CQUF1QixRQUN2QixvQkFBdUIsUUFDdkIsb0JBQXVCLFFBQ3ZCLDZCQUE4QixRQUM5Qiw2QkFBOEIsUUFDOUIsNkJBQThCLFFBQzlCLDZCQUE4QixRQUM5Qiw2QkFBOEIsUUFDOUIsNkJBQThCLFFBQzlCLDZCQUE4QixRQUM5Qiw2QkFBOEIsUUFDOUIsNkJBQThCLFFBQzlCLDZCQUE4QixRQUM5Qiw2QkFBOEIsUUFDOUIsNkJBQThCLFFBQzlCLDZCQUE4QixRQUM5Qiw2QkFBOEIsUUFDOUIsNkJBQThCLFFBQzlCLDZCQUE4QixRQUM5Qiw2QkFBOEIsUUFDOUIsNkJBQThCLFFBQzlCLDZCQUE4QixRQUM5Qiw2QkFBOEIsUUFDOUIsNkJBQThCLFFBQzlCLDZCQUE4QixRQUM5Qiw2QkFBOEIsUUFDOUIsNkJBQThCLFFBQzlCLDZCQUE4QixRQUM5Qiw2QkFBOEIsUUFDOUIsNkJBQThCLFFBQzlCLDZCQUE4QixRQUM5Qiw2QkFBOEIsUUFDOUIsNkJBQThCLFFBQzlCLDZCQUE4QixRQUM5Qiw2QkFBOEIsUUFDOUIsNkJBQThCLFFBQzlCLDZCQUE4QixRQUM5QixpQ0FBa0MsUUFDbEMsNkJBQThCLFFBQzlCLDZCQUE4QixRQUM5QixvQkFBdUIsUUFDdkIsb0JBQXVCLFFBQ3ZCLG9CQUF1QixRQUN2QixvQkFBdUIsUUFDdkIsb0JBQXVCLFFBQ3ZCLG9CQUF1QixRQUN2QixvQkFBdUIsUUFDdkIsc0JBQXlCLFFBQ3pCLDJCQUE0QixRQUM1Qiw0QkFBNkIsUUFDN0IsNkJBQThCLFFBQzlCLHFCQUF3QixRQUN4Qix5QkFBNEIsUUFDNUIsd0JBQTJCLFFBQzNCLGtDQUFtQyxRQUNuQyxpQ0FBa0MsUUFDbEMsZ0NBQWlDLFFBQ2pDLHVCQUEwQixRQUMxQixvQ0FBcUMsUUFDckMsb0NBQXFDLFFBQ3JDLG9DQUFxQyxRQUNyQyx1QkFBMEIsUUFDMUIsNkJBQThCLFFBQzlCLHVCQUEwQixRQUMxQiwwQkFBNkIsUUFDN0IsMEJBQTZCLFFBQzdCLHdCQUEyQixRQUMzQixxQkFBd0IsUUFDeEIsMkJBQTRCLFFBQzVCLDJCQUE4QixRQUM5Qiw2QkFBOEIsUUFDOUIsOEJBQStCLFFBQy9CLHNCQUF5QixRQUN6Qix3QkFBMkIsUUFDM0IsaUNBQWtDLFFBQ2xDLDBCQUE2QixRQUM3QiwyQkFBOEIsUUFDOUIsdUJBQTBCLFFBQzFCLHdCQUEyQixRQUMzQiw4QkFBaUMsUUFDakMsMkJBQThCLFFBQzlCLHVCQUEwQixRQUMxQiw4QkFBaUMsUUFDakMsd0JBQTJCLFFBQzNCLDBCQUE2QixRQUM3QixzQkFBeUIsUUFDekIsK0JBQWdDLFFBQ2hDLHlCQUE0QixRQUM1QiwwQkFBNkIsUUFDN0Isd0JBQTJCLFFBQzNCLDZCQUE4QixRQUM5QiwyQkFBOEIsUUFDOUIsNEJBQTZCLFFBQzdCLG9CQUF1QixRQUN2Qiw0QkFBK0IsUUFDL0Isc0JBQXlCLFFBQ3pCLDZCQUE4QixRQUM5QixrQ0FBbUMsUUFDbkMsd0JBQTJCLFFBQzNCLCtCQUFnQyxRQUNoQyxvQkFBdUIsUUFDdkIsdUJBQTBCLFFBQzFCLDBCQUE2QixRQUM3Qix1QkFBMEIsUUFDMUIsb0JBQXVCLFFBQ3ZCLHFCQUF3QixRQUN4QixvQkFBdUIsUUFDdkIsbUJBQXNCLFFBQ3RCLDRCQUE2QixRQUM3QixtQ0FBb0MsUUFDcEMseUJBQTRCLFFBQzVCLHFCQUF3QixRQUN4QixxQkFBd0IsUUFDeEIsd0JBQTJCLFFBQzNCLDZCQUE4QixRQUM5QiwwQkFBNkIsUUFDN0Isd0JBQTJCLFFBQzNCLHNCQUF5QixRQUN6QixtQkFBc0IsUUFDdEIsc0JBQXlCLFFBQ3pCLDhCQUErQixRQUMvQixxQkFBd0IsUUFDeEIsaUNBQWtDLFFBQ2xDLGdDQUFpQyxRQUNqQyx5QkFBNEIsUUFDNUIsNEJBQTZCLFFBQzdCLHVCQUEwQixRQUMxQixzQkFBeUIsUUFDekIsb0JBQXVCLFFBQ3ZCLHlCQUE0QixRQUM1QixvQkFBdUIsUUFDdkIseUJBQTRCLFFBQzVCLG1CQUFzQixRQUN0QixvQkFBdUIsUUFDdkIscUJBQXdCLFFBQ3hCLDhCQUErQixRQUMvQix1QkFBMEIsUUFDMUIsbUJBQXNCLFFBQ3RCLG9CQUF1QixRQUN2QixxQkFBd0IsUUFDeEIsOEJBQStCLFFBQy9CLHFCQUF3QixRQUN4Qix1QkFBMEIsUUFDMUIsNkJBQThCLFFBQzlCLGdDQUFpQyxRQUNqQyxzQkFBeUIsUUFDekIsc0JBQXlCLFFBQ3pCLDBCQUEyQixRQUMzQiwyQkFBNEIsUUFDNUIsMkJBQTRCLFFBQzVCLG1CQUFzQixRQUN0QiwrQkFBZ0MsUUFDaEMsOEJBQStCLFFBQy9CLGlDQUFrQyxRQUNsQyx5QkFBNEIsUUFDNUIsc0JBQXlCLFFBQ3pCLHVCQUEwQixRQUMxQixtQkFBc0IsUUFDdEIsb0JBQXVCLFFBQ3ZCLHFCQUF3QixRQUN4QiwwQkFBNkIsUUFDN0Isc0JBQXlCLFFBQ3pCLGlDQUFrQyxRQUNsQyx5QkFBMEIsUUFDMUIsbUJBQXNCLFFBQ3RCLHlCQUE0QixRQUM1Qiw4QkFBK0IsUUFDL0IsdUJBQTBCLFFBQzFCLG1CQUFzQixRQUN0QixxQkFBd0IsUUFDeEIsNkJBQThCLFFBQzlCLDJCQUE0QixRQUM1QixnQ0FBaUMsUUFDakMscUJBQXdCLFFBQ3hCLHFCQUF3QixRQUN4Qix3QkFBMkIsUUFDM0Isc0JBQXlCLFFBQ3pCLHFCQUF3QixRQUN4QiwwQkFBNkIsUUFDN0Isc0JBQXlCLFFBQ3pCLHdCQUEyQixRQUMzQixvQkFBdUIsUUFDdkIsc0JBQXlCLFFBQ3pCLHNCQUF5QixRQUN6QixtQkFBc0IsUUFDdEIsNEJBQTZCLFFBQzdCLCtCQUFnQyxRQUNoQyxvQkFBdUIsUUFDdkIsdUJBQTBCLFFBQzFCLDRCQUE2QixRQUM3QiwrQkFBZ0MsUUFDaEMsMkJBQTRCLFFBQzVCLCtCQUFnQyxRQUNoQyxnQ0FBaUMsUUFDakMsMENBQTJDLFFBQzNDLGdDQUFpQyxRQUNqQyw4QkFBK0IsUUFDL0Isb0NBQXFDLFFBQ3JDLGtDQUFtQyxRQUNuQywyQkFBNEIsUUFDNUIsb0NBQXFDLFFBQ3JDLGlDQUFrQyxRQUNsQyw2QkFBOEIsUUFDOUIsa0NBQW1DLFFBQ25DLDJCQUE0QixRQUM1Qiw2QkFBOEIsUUFDOUIsNkJBQThCLFFBQzlCLHFDQUFzQyxRQUN0QywrQkFBZ0MsUUFDaEMsaUNBQWtDLFFBQ2xDLHVDQUF3QyxRQUN4QyxpQ0FBa0MsUUFDbEMsZ0NBQWlDLFFBQ2pDLGdDQUFpQyxRQUNqQyx3Q0FBeUMsUUFDekMsc0NBQXVDLFFBQ3ZDLGlDQUFrQyxRQUNsQywrQkFBZ0MsUUFDaEMsK0JBQWdDLFFBQ2hDLDBCQUEyQixRQUMzQixxQ0FBc0MsUUFDdEMsNEJBQTZCLFFBQzdCLDZCQUE4QixRQUM5QiwwQkFBMkIsUUFDM0IsMkJBQTRCLFFBQzVCLDBCQUEyQixRQUMzQiwrQkFBZ0MsUUFDaEMseUJBQTBCLFFBQzFCLDZCQUE4QixRQUM5QiwrQkFBZ0MsUUFDaEMsMkJBQTRCLFFBQzVCLDZCQUE4QixRQUM5QixpQ0FBa0MsUUFDbEMsOEJBQStCLFFBQy9CLDZCQUE4QixRQUM5QixvQ0FBcUMsUUFDckMsOEJBQStCLFFBQy9CLGtDQUFtQyxRQUNuQyw2QkFBOEIsUUFDOUIsK0JBQWdDLFFBQ2hDLDhCQUErQixRQUMvQiw0QkFBNkIsUUFDN0IsOEJBQStCLFFBQy9CLDRCQUE2QixRQUM3QixnQ0FBaUMsUUFDakMsZ0NBQWlDLFFBQ2pDLGtDQUFtQyxRQUNuQyxtQ0FBb0MsUUFDcEMsdUNBQXdDLFFBQ3hDLGdDQUFpQyxRQUNqQywyQkFBNEIsUUFDNUIsOEJBQStCLFFBQy9CLGlDQUFrQyxRQUNsQyxnQ0FBaUMsUUFDakMsOEJBQStCLFFBQy9CLGlDQUFrQyxRQUNsQyw4QkFBK0IsUUFDL0IsMkJBQTRCLFFBQzVCLDRCQUE2QixRQUM3Qiw4QkFBK0IsUUFDL0IsMkJBQTRCLFFBQzVCLDJCQUE0QixRQUM1QiwyQkFBNEIsUUFDNUIsNkJBQThCLFFBQzlCLDRCQUE2QixRQUM3Qiw2QkFBOEIsUUFDOUIsNkJBQThCLFFBQzlCLHFCQUF3QixRQUN4QiwwQkFBMkIsUUFDM0IsNEJBQTZCLFFBQzdCLGdDQUFpQyxRQUNqQyxzQ0FBdUMsUUFDdkMsZ0NBQWlDLFFBQ2pDLGtDQUFtQyxRQUNuQyxxQ0FBc0MsUUFDdEMsZ0NBQWlDLFFBQ2pDLCtCQUFnQyxRQUNoQyxrQ0FBbUMsUUFDbkMsZ0NBQWlDLFFBQ2pDLDBCQUEyQixRQUMzQixxQkFBd0IsUUFDeEIsOEJBQStCLFFBQy9CLDZCQUE4QixRQUM5QixxQ0FBc0MsUUFDdEMsNEJBQTZCLFFBQzdCLGlDQUFrQyxRQUNsQywrQkFBZ0MsUUFDaEMsbUNBQW9DLFFBQ3BDLDZCQUE4QixRQUM5Qiw2QkFBOEIsUUFDOUIsZ0NBQWlDLFFBQ2pDLCtCQUFnQyxRQUNoQyxrQ0FBbUMsUUFDbkMsOEJBQStCLFFBQy9CLHlDQUEwQyxRQUMxQywrQkFBZ0MsUUFDaEMsK0JBQWdDLFFBQ2hDLGdDQUFpQyxRQUNqQywrQkFBZ0MsUUFDaEMscUNBQXNDLFFBQ3RDLDRCQUE2QixRQUM3QiwrQkFBZ0MsUUFDaEMsK0JBQWdDLFFBQ2hDLDhCQUErQixRQUMvQixnQ0FBaUMsUUFDakMsK0JBQWdDLFFBQ2hDLHVDQUF3QyxRQUN4Qyx5Q0FBMEMsUUFDMUMsK0JBQWdDLFFBQ2hDLHFCQUF3QixRQUN4Qix1QkFBMEIsUUFDMUIsNEJBQTZCLFFBQzdCLDRCQUE2QixRQUM3QiwrQkFBZ0MsUUFDaEMsMkJBQTRCLFFBQzVCLDBCQUEyQixRQUMzQiwyQkFBNEIsUUFDNUIsNEJBQTZCLFFBQzdCLDJCQUE0QixRQUM1Qiw0QkFBNkIsUUFDN0IsMEJBQTJCLFFBQzNCLDhCQUErQixRQUMvQiwyQkFBNEIsUUFDNUIsNkJBQThCLFFBQzlCLG1DQUFvQyxRQUNwQyw2QkFBOEIsUUFDOUIsMkJBQTRCLFFBQzVCLDBCQUEyQixRQUMzQiwyQkFBNEIsUUFDNUIsMkJBQTRCLFFBQzVCLDJCQUE0QixRQUM1Qix5QkFBMEIsUUFDMUIsMkJBQTRCLFFBQzVCLDBCQUEyQixRQUMzQiw0QkFBNkIsUUFDN0IsNEJBQTZCLFFBQzdCLDJCQUE0QixRQUM1Qiw0QkFBNkIsUUFDN0IsbUJBQXNCLFFBQ3RCLG9CQUF1QixRQUN2Qix5QkFBNEIsUUFDNUIsdUNBQXdDLFFBQ3hDLHVDQUF3QyxRQUN4Qyx3Q0FBeUMsUUFDekMscUNBQXNDLFFBQ3RDLGdDQUFpQyxRQUNqQyxnQ0FBaUMsUUFDakMsaUNBQWtDLFFBQ2xDLDhCQUErQixRQUMvQixxQkFBd0IsUUFDeEIsNkJBQThCLFFBQzlCLDhCQUErQixRQUMvQixxQkFBd0IsUUFDeEIsbUJBQXNCLFFBQ3RCLG9CQUF1QixRQUN2Qiw0QkFBNkIsUUFDN0Isb0JBQXVCLFFBQ3ZCLHdCQUEyQixRQUMzQiw4QkFBK0IsUUFDL0IscUJBQXdCLFFBQ3hCLHNCQUF5QixRQUN6QixxQkFBd0IsUUFDeEIsb0JBQXVCLFFBQ3ZCLG9CQUF1QixRQUN2QixxQkFBd0IsUUFDeEIsb0JBQXVCLFFBQ3ZCLHVCQUEwQixRQUMxQiw2QkFBOEIsUUFDOUIsb0NBQXFDLFFBQ3JDLG9DQUFxQyxRQUNyQyxzQ0FBdUMsUUFDdkMsMkJBQThCLFFBQzlCLDJCQUE0QixRQUM1QixtQkFBc0IsUUFDdEIsb0JBQXVCLFFBQ3ZCLDJCQUE4QixRQUM5QiwwQkFBMkIsUUFDM0IsMEJBQTJCLFFBQzNCLHNCQUF5QixRQUN6QiwwQkFBNkIsUUFDN0IscUJBQXdCLFFBQ3hCLHVCQUEwQixRQUMxQix5QkFBNEIsUUFDNUIscUJBQXdCLFFBQ3hCLDZCQUE4QixRQUM5Qiw2QkFBOEIsUUFDOUIsNkJBQThCLFFBQzlCLG9CQUF1QixRQUN2QixnQ0FBaUMsUUFDakMsMkJBQTRCLFFBQzVCLG9CQUF1QixRQUN2QixnQ0FBaUMsUUFDakMsa0NBQW1DLFFBQ25DLHdDQUF5QyxRQUN6QyxrQ0FBbUMsUUFDbkMsaUNBQWtDLFFBQ2xDLHFDQUFzQyxRQUN0QyxrQ0FBbUMsUUFDbkMsb0JBQXVCLFFBQ3ZCLG9CQUF1QixRQUN2Qix1QkFBMEIsUUFDMUIseUJBQTRCLFFBQzVCLGdDQUFpQyxRQUNqQyx1QkFBMEIsUUFDMUIscUJBQXdCLFFBQ3hCLG9CQUF1QixRQUN2QixpQ0FBa0MsUUFDbEMsaUNBQWtDLFFBQ2xDLHdCQUEyQixRQUMzQix1QkFBMEIsUUFDMUIsb0JBQXVCLFFBQ3ZCLHNCQUF5QixRQUN6QixzQkFBeUIsUUFDekIsNkJBQThCLFFBQzlCLHVCQUEwQixRQUMxQixxQkFBd0IsUUFDeEIsc0JBQXlCLFFBQ3pCLDZCQUE4QixRQUM5QixvQkFBdUIsUUFDdkIsMEJBQTZCLFFBQzdCLG1CQUFzQixRQUN0QixrQ0FBbUMsUUFDbkMsb0NBQXFDLFFBQ3JDLGtDQUFtQyxRQUNuQyxpQ0FBa0MsUUFDbEMsaUNBQWtDLFFBQ2xDLGdDQUFpQyxRQUNqQyxvQkFBdUIsUUFDdkIsbUNBQW9DLFFBQ3BDLGtDQUFtQyxRQUNuQyxrQ0FBbUMsUUFDbkMscUNBQXNDLFFBQ3RDLDRDQUE2QyxRQUM3Qyx5QkFBNEIsUUFDNUIsb0JBQXVCLFFBQ3ZCLGlDQUFrQyxRQUNsQywyQkFBOEIsUUFDOUIsMkJBQTRCLFFBQzVCLHdCQUEyQixRQUMzQiw0QkFBNkIsUUFDN0IsNEJBQTZCLFFBQzdCLDRCQUE2QixRQUM3QixxQkFBd0IsUUFDeEIscUJBQXdCLFFBQ3hCLDZCQUE4QixRQUM5Qiw2QkFBOEIsUUFDOUIsNEJBQTZCLFFBQzdCLDhCQUErQixRQUMvQiwyQkFBNEIsUUFDNUIsc0JBQXlCLFFBQ3pCLHFCQUF3QixRQUN4Qix3QkFBMkIsUUFDM0IsNEJBQTZCLFFBQzdCLG9CQUF1QixRQUN2QiwwQkFBMkIsUUFDM0IsU0FBWSxRQUNaLFFBQVcsUUFDWCxNQUFTLFFBQ1QsUUFBVyxRQUNYLE9BQVUsUUFDVixpQ0FBa0MsUUFDbEMsaUNBQWtDLFFBQ2xDLGlDQUFrQyxRQUNsQyxpQ0FBa0MsUUFDbEMsaUNBQWtDLFFBQ2xDLGlDQUFrQyxRQUNsQyxpQ0FBa0MsUUFDbEMsaUNBQWtDLFFBQ2xDLGlDQUFrQyxRQUNsQyxpQ0FBa0MsUUFDbEMsaUNBQWtDLFFBQ2xDLGlDQUFrQyxRQUNsQyxpQ0FBa0MsUUFDbEMsaUNBQWtDLFFBQ2xDLGlDQUFrQyxRQUNsQyxpQ0FBa0MsUUFDbEMsaUNBQWtDLFFBQ2xDLGlDQUFrQyxRQUNsQyxpQkFBa0IsUUFDbEIsaUNBQWtDLFFBQ2xDLGlDQUFrQyxRQUNsQyxpQ0FBa0MsUUFDbEMsaUNBQWtDLFFBQ2xDLGlDQUFrQyxRQUNsQyxpQ0FBa0MsUUFDbEMsaUNBQWtDLFFBQ2xDLGlDQUFrQyxRQUNsQyxpQ0FBa0MsUUFDbEMsaUNBQWtDLFFBQ2xDLGlDQUFrQyxRQUNsQyxpQ0FBa0MsUUFDbEMsaUNBQWtDLFFBQ2xDLGlDQUFrQyxRQUNsQyxpQ0FBa0MsUUFDbEMsaUNBQWtDLFFBQ2xDLGNBQWUsUUFDZixlQUFnQixRQUNoQixPQUFVLFFBQ1YsY0FBZSxRQUNmLFdBQVksUUFDWixTQUFZLFFBQ1osTUFBUyxRQUNULE9BQVUsUUFDVixpQkFBa0IsUUFDbEIsbUJBQW9CLFFBQ3BCLGFBQWMsUUFDZCxLQUFRLFFBQ1IsZUFBZ0IsUUFDaEIsUUFBVyxRQUNYLGlCQUFrQixRQUNsQixjQUFlLFFBQ2YsZUFBZ0IsUUFDaEIsZ0JBQWlCLFFBQ2pCLG1CQUFvQixRQUNwQixrQkFBbUIsUUFDbkIsY0FBZSxRQUNmLGlCQUFrQixRQUNsQixxQkFBc0IsUUFDdEIsdUJBQXdCLFFBQ3hCLHFCQUFzQixRQUN0QixpQkFBa0IsUUFDbEIsd0JBQXlCLFFBQ3pCLG9CQUFxQixRQUNyQix5QkFBMEIsUUFDMUIsWUFBZSxRQUNmLE1BQVMsUUFDVCxZQUFhLFFBQ2IsY0FBZSxRQUNmLFFBQVcsUUFDWCxPQUFVLFFBQ1YsS0FBUSxRQUNSLFdBQWMsUUFDZCxHQUFNLFFBQ04sS0FBUSxRQUNSLE9BQVUsUUFDVixhQUFjLFVDbjBFMEMrMEMsTUFIdEMsQ0FBQzdpRCxFQUFhQyxJQUFnQkQsRUFBRXUrQyxjQUFjdCtDLGdUQ09sRSxNQUFNLEdBQW9CLEVBQ3hCazZELFNBQ0FDLFVBQ0E1ZSxPQUNBNmUsZUFDQUMsa0JBQ0E1akIsUUFDQTZqQixvQkFDQUMsZ0JBV0EsSUFBS0wsRUFBUSxPQUFPLEtBdUJwQixPQUNFLDhCQUFLamxCLFVBQVUsaUJBQWUsV0FDNUIsK0JBQUtBLFVBQVUsZ0JBQWMsWUFDM0IsK0JBQUtBLFVBQVUsZ0JBQWMsWUFDM0IsNkJBQUlBLFVBQVUsZUFBYSxVQUFFd0IsTUFDN0IsaUNBQVF4WSxRQWRRLEtBQ2pCc2QsSUFDRDZlLEVBQWFqNkQsU0FBV283QyxFQUFLcDdDLE9BQy9CazZELEVBQWdCLElBRWhCQSxFQUFnQjllLEVBQUtsTyxLQUFLbm5DLEdBQVFBLEVBQUlzUyxTQVNGLFVBQzdCNGhELEVBQWFqNkQsVUFBV283QyxhQUFJLEVBQUpBLEVBQU1wN0MsUUFBUyxlQUFpQixxQkFJN0QsOEJBQUs4MEMsVUFBVSx1QkFBcUIsVUFDakNzRyxHQUFRQSxFQUFLbE8sS0FBS25uQyxJQUNqQiwrQkFFRSt1QyxVQUFVLGlCQUFlLFlBRXpCLGtCQUNFejhCLEdBQUksYUFBYXRTLEVBQUlzUyxLQUNyQnZXLEtBQUssV0FDTHdGLFFBQVMyeUQsRUFBYXIwRCxTQUFTRyxFQUFJc1MsSUFDbkM0b0MsU0FBVSxLQUFNb1osT0F4Q1hwZSxFQXdDcUJsMkMsRUFBSXNTLFFBdkMxQzZoRCxHQUFpQkksR0FDWEEsRUFBYTEwRCxTQUFTcTJDLEdBQ2pCcWUsRUFBYTlYLFFBQVFucUMsR0FBT0EsSUFBTzRqQyxJQUVuQyxJQUFJcWUsRUFBY3JlLEtBTGIsSUFBQ0EsQ0F3QzRCLEtBRW5DLGdDQUNFb0UsUUFBUyxhQUFhdDZDLEVBQUlzUyxLQUMxQnk4QixVQUFVLG1CQUFpQixVQUUxQi91QyxFQUFJc1MsR0FBSyxNQUFRdFMsRUFBSWl4QyxZQWJuQmp4QyxFQUFJc1MsVUFtQmYsK0JBQUt5OEIsVUFBVSxpQkFBZSxZQUM1QixpQ0FBUWhYLFFBQVNrOEIsR0FBTyx1QkFDeEIsaUNBQ0VsOEIsUUFBUyxLQUNQczhCLElBQ0FKLEdBQVMsRUFFWGp4RCxTQUFrQyxJQUF4Qmt4RCxFQUFhajZELFFBQVksVUFFbENtNkQsZUFLVixFQUdJLFNBQVMsR0FBWXJvQyxHQUMxQixNQUFPMVEsRUFBTTQrQixJQUFXLElBQUE3a0IsVUFBaUIsS0FDbENvL0IsRUFBY0MsSUFBbUIsSUFBQXIvQixVQUFtQixLQUNwRHMvQixFQUFjQyxJQUFtQixJQUFBdi9CLFVBQW1CLElBQ3JEdy9CLEdBQVcsSUFBQXovQixRQUE0QixPQUN0Q2tnQixFQUFNd2YsSUFBVyxJQUFBei9CLFlBQ2xCMC9CLEdBQWdCLElBQUEzL0IsUUFBNEIsS0FDM0M0L0IsRUFBbUJDLElBQXdCLElBQUE1L0IsV0FBUyxJQUNwRDYvQixFQUFtQkMsSUFBd0IsSUFBQTkvQixXQUFTLElBQ3BEKy9CLEVBQWNDLElBQW1CLElBQUFoZ0MsV0FBUyxJQUdqRCxJQUFBUCxZQUFVLEtBQ1EsTUFBWSxtQ0FDMUIsTUFBTXdnQyxRQUFvQnRwQyxFQUFNb3VCLElBQUlzSSxJQUFJanNDLEtBQUt3b0MsV0FBVSxLQUFNLElBQ3ZEc1csRUFBWXg2RCxPQUFPa2dELE9BQU9xYSxHQUNoQ1IsRUFBUVMsRUFDVixHQUFDLEVBQ0RDLEVBQVMsR0FDUixDQUFDeHBDLEVBQU1vdUIsSUFBSXNJLE9BR2QsSUFBQTV0QixZQUFVLEtBQ1IsSUFBS3dnQixHQUF3QixJQUFoQkEsRUFBS3A3QyxPQUFjLE9BQ2hDLE1BQU11N0QsRUFBU3pwQyxFQUFNb3VCLElBQUlzSSxJQUFJanNDLEtBQUsyOUIsVUFBVSxDQUMxQ0MsUUFBUyxDQUFDcWhCLEVBQVF6MUQsS0FDWnExQyxFQUFLOUcsTUFBTTNyQixHQUFNQSxFQUFFdFEsS0FBT3RTLEVBQUlzUyxNQUNsQ3dpRCxFQUFjOW9ELFFBQVFoQyxLQUFLaEssRUFBSSxJQUduQyxNQUFPLEtBQ0x3MUQsRUFBTzVjLFFBQVEsQ0FDaEIsR0FDQSxDQUFDdkQsRUFBTXRwQixFQUFNb3VCLElBQUlzSSxNQUVwQixNQUFNaVQsR0FBYyxJQUFBL2dDLGNBQVksSUFBWSxtQ0FFMUMsR0FBSTYvQixFQUFhdjZELE9BQVMsRUFBRyxDQUMzQixNQUFNMDdELEVBQVcsR0FBVzE3RCxPQUM1QixJQUFLLE1BQU1pOEMsS0FBU3NlLEVBQWMsQ0FDaEMsTUFBTW9CLEVBQWFob0QsS0FBS2k4QixNQUFNajhCLEtBQUt3VSxVQUFZdXpDLEVBQVcsVUFDcEQ1cEMsRUFBTW91QixJQUFJc0ksSUFBSWlGLFNBQVN4UixFQUFPLEdBQVcwZixLQUluRDUvQixRQUFRaG9CLElBQUksQ0FDVjZuRCxZQUFhckIsRUFDYnNCLFlBQWFwQixJQUlmLE1BQU03eEQsRUFBd0MsQ0FDNUMyeEQsZUFDQUUsZ0JBR0VTLElBQ0Z0eUQsRUFBUSt4RCxTQUFZbUIsSUFDZG5CLEVBQVM1b0QsVUFDWDRvRCxFQUFTNW9ELFFBQVF4SyxNQUEwQixJQUFsQnUwRCxLQUsvQixNQUFNL1YsUUFBZWowQixFQUFNb3VCLElBQUlzSSxJQUFJaVQsWUFBWTd5RCxHQUUvQ28zQyxFQUFRLElBQUkrRixFQUFPcnhCLEtBQUssUUFDMUIsS0FBRyxDQUFDNUMsRUFBTW91QixJQUFJc0ksSUFBSytSLEVBQWNFLEVBQWNTLElBR3pDYSxFQUFtQnhCLEVBQWF2NkQsT0FBUyxFQUMzQ3U2RCxFQUFhN2xDLEtBQUssTUFDbEIsbUJBRUVzbkMsRUFBbUJ2QixFQUFhejZELE9BQVMsRUFDM0N5NkQsRUFBYS9sQyxLQUFLLE1BQ2xCLG1CQUVKLE9BQ0UsaUNBQ0UsK0JBQUtvZ0IsVUFBVSwyQkFBeUIsWUFFdEMsK0JBQUtBLFVBQVUsZUFBYSxZQUMxQixnQ0FBT3VMLFFBQVEsbUJBQWlCLDRCQUNoQyxrQkFDRXZpQixRQUFTLElBQU1pOUIsR0FBcUIsR0FDcEMxaUQsR0FBRyxrQkFDSHZXLEtBQUssT0FDTHlGLE1BQU93MEQsRUFDUHpiLFVBQVEsRUFDUnhMLFVBQVUsbUJBS2QsK0JBQUtBLFVBQVUsZUFBYSxZQUMxQixnQ0FBT3VMLFFBQVEsbUJBQWlCLDRCQUNoQyxrQkFDRXZpQixRQUFTLElBQU1tOUIsR0FBcUIsR0FDcEM1aUQsR0FBRyxrQkFDSHZXLEtBQUssT0FDTHlGLE1BQU95MEQsRUFDUDFiLFVBQVEsRUFDUnhMLFVBQVUsbUJBSWQsK0JBQUtBLFVBQVUsY0FBWSxZQUN6QixpQ0FDRUEsVUFBVSxjQUNWejhCLEdBQUcsY0FDSHlsQixRQUFTMjlCLEVBQ1QxeUQsU0FBa0MsSUFBeEJ3eEQsRUFBYXY2RCxRQUF3QyxJQUF4Qnk2RCxFQUFhejZELFFBQVkscUJBSWxFLGlDQUFPdU4sTUFBTyxDQUFFNHJELFdBQVksS0FBSSxZQUM5QixrQkFDRXIzRCxLQUFLLFdBQ0x3RixRQUFTNHpELEVBQ1RqYSxTQUFVNS9DLEdBQUs4NUQsRUFBZ0I5NUQsRUFBRThOLE9BQU83SCxTQUN4Q2lHLE1BQU8sQ0FBRTB1RCxZQUFhLEtBQ3RCLDRCQUlMZixJQUNDLCtCQUFLcG1CLFVBQVUsY0FBWSxZQUN6QiwrQkFBTUEsVUFBVSxrQkFBZ0IsMEJBQ2hDLHFCQUFVQSxVQUFVLGVBQWV2dEMsTUFBTSxJQUFJK3ZELElBQUksTUFBTWhqQyxJQUFLcW1DLFNBR2hFLDBCQUNFLHFCQUFVN2xCLFVBQVUsY0FBY3dMLFVBQVEsRUFBQzRGLFlBQVksU0FBUzMrQyxNQUFPNlosV0FLM0UsU0FBQyxHQUFpQixDQUNoQjI0QyxPQUFRZSxFQUNSZCxRQUFTLElBQU1lLEdBQXFCLEdBQ3BDM2YsS0FBTUEsRUFDTjZlLGFBQWNNLEVBQ2RMLGdCQUFpQk0sRUFDakJsa0IsTUFBTSxzQ0FDTjZqQixrQkFBa0IsS0FDbEJDLFVBQVcsVUFJYixTQUFDLEdBQWlCLENBQ2hCTCxPQUFRaUIsRUFDUmhCLFFBQVMsSUFBTWlCLEdBQXFCLEdBQ3BDN2YsS0FBTXlmLEVBQWM5b0QsUUFDcEJrb0QsYUFBY1EsRUFDZFAsZ0JBQWlCUSxFQUNqQnBrQixNQUFNLGtDQUNONmpCLGtCQUFrQixLQUNsQkMsVUFBVyxXQUluQixDQ3RPTyxTQUFTLElBQUksSUFBRWxhLEVBQUcsY0FBRXlOLEVBQWEsY0FBRW9ILDBCQUN4QyxNQUFPdmYsRUFBYTBtQixJQUFhLElBQUEvZ0MsYUFDMUI4OEIsRUFBcUJrRSxJQUEwQixJQUFBaGhDLFVBQW1CLEtBQ2xFeTdCLEVBQW9Cd0YsSUFBb0IsSUFBQWpoQyxVQUFTLElBRWxEa2hDLEdBQWlCLElBQUEzaEMsY0FBWSxTQUFVMGYsR0FDM0MsT0FBT0EsRUFBS3BELE9BQVMsWUFDdkIsR0FBRyxJQUVHc2xCLEdBQXVCLElBQUE1aEMsY0FBWSxTQUFVMGYsR0FDakQsT0FBT0EsRUFBS2xYLEdBQ2QsR0FBRyxJQUNHcTVCLEdBQXdCLElBQUE3aEMsY0FBWSxTQUFVMGYsR0FDbEQsT0FBT0EsRUFBS2xYLElBQUl6Z0MsTUFBTSxFQUFHLEdBQzNCLEdBQUcsSUFFSCxPQUNFLFVBQUMsRUFBQStwQyxTQUFRLFlBQ1AsU0FBQyxFQUFZLGVBQUNzVCxPQUFRLHFDQUFtQyxXQUN2RCxTQUFDLEdBQVcsQ0FBQ0ksSUFBS0EsUUFHcEIsU0FBQyxFQUFZLGVBQUNKLE9BQVEsb0JBQWtCLFdBQ3RDLFNBQUMsR0FBb0IsQ0FDbkJ2RixXQUFZMkYsRUFBSXNJLElBQUlqc0MsS0FDcEIxVyxLQUFNLGFBSVYsU0FBQyxFQUFZLGVBQUNpNkMsT0FBUSxnQ0FBOEIsV0FDbEQsU0FBQyxHQUFvQixDQUNuQnZGLFdBQVkyRixFQUFJc0ksSUFBSWdVLFlBQ3BCMzJELEtBQU0sb0JBSVYsU0FBQyxFQUFtQixDQUNsQm14QyxNQUFPLE1BQ1B1RCxXQUFZMkYsRUFBSXNJLElBQUlqc0MsS0FDcEJxa0MsVUFBVyxDQUFDM0UsRUFBT2wyQyxLQUNqQm0yRCxFQUFVbjJELEdBQ1ZvMkQsRUFBdUJwMkQsRUFBTSxJQUFJQSxFQUFJcXlELFVBQVksR0FBRyxFQUV0RDFWLFlBQWEyWixFQUNiNVosS0FBTSxHQUNOaUIscUJBQXNCLENBQUMsYUFBYyxlQUFnQixXQUFZLFdBQ2pFQyxtQkFBb0IsQ0FDbEJ5VSxTQUFTQSxHQUNBLElBQUlBLE9BS2pCLFNBQUMsRUFBbUIsQ0FDbEJwaEIsTUFBTyxhQUNQdUQsV0FBWTJGLEVBQUlzSSxJQUFJZ1UsWUFDcEI1YixVQUFXd2IsRUFDWDFaLFlBQWE2WixFQUNiNVosV0FBWTJaLEtBR2QsU0FBQyxFQUFZLGVBQUN4YyxPQUFRLGtCQUFnQixXQUNwQyxTQUFDLEdBQVEsQ0FBQ3RLLFlBQWFBLEVBQWF5aUIsb0JBQXFCQSxRQUczRCxTQUFDLEVBQVksZUFBQ25ZLE9BQVEsYUFBVyxXQUMvQixTQUFDLEdBQVksZUFBQ0ksSUFBS0EsRUFBSzZVLGNBQWVBLEdBQWEsV0FDbEQsU0FBQyxHQUFHLENBQUM3VSxJQUFLQSxFQUFLeU4sY0FBZUEsV0FJbEMsU0FBQyxFQUFZLGVBQUM3TixPQUFRLGdCQUFjLFdBQ2xDLFNBQUMsR0FBWSxlQUFDSSxJQUFLQSxFQUFLNlUsY0FBZUEsR0FBYSxXQUNsRCxTQUFDLEdBQU0sQ0FBQzdVLElBQUtBLEVBQUsxSyxZQUE0QixRQUFmLEVBQUFBLGFBQVcsRUFBWEEsRUFBYW45QixVQUFFLFFBQUksWUFJdEQsU0FBQyxFQUFZLGVBQUN5bkMsT0FBUSxjQUFZLFdBQ2hDLFNBQUMsR0FBSSxDQUFDSSxJQUFLQSxFQUFLMUssWUFBYUEsUUFHL0IsU0FBQyxFQUFZLGVBQUNzSyxPQUFRLHFCQUFtQixXQUN2QyxTQUFDLEVBQVUsQ0FDVGEsV0FBWVQsRUFBSXNJLElBQUlpVSxTQUNwQjUyRCxLQUFNLGtCQUlWLFNBQUMsRUFBWSxlQUFDaTZDLE9BQVEsY0FBWSxXQUNoQyxTQUFDLEdBQVksZUFBQ0ksSUFBS0EsRUFBSzZVLGNBQWVBLEdBQWEsV0FDbEQsU0FBQyxHQUFhLENBQUM3VSxJQUFLQSxFQUFLMUssWUFBNEIsUUFBZixFQUFBQSxhQUFXLEVBQVhBLEVBQWFuOUIsVUFBRSxRQUFJLFlBSTdELFNBQUMsRUFBWSxlQUFDeW5DLE9BQVEsaUJBQWUsV0FDbkMsU0FBQyxHQUFZLGVBQUNJLElBQUtBLEVBQUs2VSxjQUFlQSxHQUFhLFdBQ2xELFNBQUMsR0FBVyxDQUFDN1UsSUFBS0EsRUFBSzFLLFlBQWFBLFdBSXhDLFNBQUMsRUFBWSxlQUFDc0ssT0FBUSxlQUFhLFdBQ2pDLFNBQUMsR0FBWSxlQUFDSSxJQUFLQSxFQUFLNlUsY0FBZUEsR0FBYSxXQUNsRCxTQUFDLEdBQVMsQ0FBQzdVLElBQUtBLEVBQUsxSyxZQUE0QixRQUFmLEVBQUFBLGFBQVcsRUFBWEEsRUFBYW45QixVQUFFLFFBQUksWUFJekQsU0FBQyxFQUFZLGVBQUN5bkMsT0FBUSxtQkFBaUIsV0FDckMsU0FBQyxHQUFZLGVBQUNJLElBQUtBLEVBQUs2VSxjQUFlQSxHQUFhLFdBQ2xELFNBQUMsR0FBUSxDQUFDN1UsSUFBS0EsRUFBSzFLLFlBQTRCLFFBQWYsRUFBQUEsYUFBVyxFQUFYQSxFQUFhbjlCLFVBQUUsUUFBSSxHQUFJczFDLGNBQWVBLFdBSTNFLFNBQUMsRUFBWSxlQUFDN04sT0FBUSxpQkFBZSxXQUNuQyxTQUFDLEdBQVksZUFBQ0ksSUFBS0EsRUFBSzZVLGNBQWVBLEdBQWEsV0FDbEQsU0FBQyxHQUFXLENBQUM3VSxJQUFLQSxFQUFLMUssWUFBNEIsUUFBZixFQUFBQSxhQUFXLEVBQVhBLEVBQWFuOUIsVUFBRSxRQUFJLFlBSTNELFNBQUMsRUFBWSxlQUFDeW5DLE9BQVEsY0FBWSxXQUNoQyxTQUFDLEdBQVksZUFBQ0ksSUFBS0EsRUFBSzZVLGNBQWVBLEdBQWEsV0FDbEQsU0FBQyxHQUFRLENBQUM3VSxJQUFLQSxFQUFLMUssWUFBNEIsUUFBZixFQUFBQSxhQUFXLEVBQVhBLEVBQWFuOUIsVUFBRSxRQUFJLFlBSXhELFNBQUMsRUFBWSxlQUFDeW5DLE9BQVEsY0FBWSxXQUNoQyxTQUFDLEdBQVksZUFBQ0ksSUFBS0EsRUFBSzZVLGNBQWVBLEdBQWEsV0FDbEQsU0FBQyxHQUFJLENBQUM3VSxJQUFLQSxFQUFLMUssWUFBNEIsUUFBZixFQUFBQSxhQUFXLEVBQVhBLEVBQWFuOUIsVUFBRSxRQUFJLFlBSXBELFNBQUMsRUFBWSxlQUFDeW5DLE9BQVEsdUJBQXFCLFdBQ3pDLFNBQUMsR0FBWSxlQUFDSSxJQUFLQSxFQUFLNlUsY0FBZUEsR0FBYSxXQUNsRCxTQUFDLEdBQVcsQ0FBQzdVLElBQUtBLEVBQUsxSyxZQUE0QixRQUFmLEVBQUFBLGFBQVcsRUFBWEEsRUFBYW45QixVQUFFLFFBQUksWUFJM0QsU0FBQyxFQUFZLGVBQUN5bkMsT0FBUSxnQkFBYyxXQUNsQyxTQUFDLEdBQVksZUFBQ0ksSUFBS0EsRUFBSzZVLGNBQWVBLEdBQWEsV0FDbEQsU0FBQyxHQUFNLENBQUM3VSxJQUFLQSxFQUFLMUssWUFBNEIsUUFBZixFQUFBQSxhQUFXLEVBQVhBLEVBQWFuOUIsVUFBRSxRQUFJLEdBQUl1K0MsbUJBQW9CQSxXQUk5RSxTQUFDLEVBQVksZUFBQzlXLE9BQVEsNkJBQTJCLFdBQy9DLFNBQUMsR0FBa0IsQ0FBQ0ksSUFBS0EsUUFHM0IsU0FBQyxFQUFZLGVBQUNKLE9BQVEsMEJBQXdCLFdBQzVDLFNBQUMsR0FBZSxDQUFDSSxJQUFLQSxRQUd4QixTQUFDLEVBQVksZUFBQ0osT0FBUSwwQkFBd0IsV0FDNUMsU0FBQyxHQUFhLENBQUM2WixjQUFlelosRUFBSXNJLElBQUlrVSxvQkFHeEMsU0FBQyxFQUFZLGVBQUM1YyxPQUFRLDZCQUEyQixXQUMvQyxTQUFDLEdBQWEsQ0FBQzZaLGNBQWV6WixFQUFJc0ksSUFBSW1VLHdCQUd4QyxTQUFDLEVBQVksZUFBQzdjLE9BQVEsMEJBQXdCLFdBQzVDLFNBQUMsR0FBYSxDQUFDNlosY0FBZXpaLEVBQUlzSSxJQUFJb1Usb0JBR3hDLFNBQUMsRUFBWSxlQUFDOWMsT0FBUSxxQkFBbUIsV0FDdkMsU0FBQyxHQUFVLENBQUNJLElBQUtBLFNBSXpCLDRTQ2hNQSxNQUFNLEdBQStCLENBQ25DMWhDLE9BQVEsSUFHSCxTQUFTLEdBQVlzVCxHQUMxQixNQUFPK3FDLEVBQWVDLElBQW9CLElBQUEzaEMsVUFBMEIsSUFFOURvdUIsR0FBVSxJQUFBN3VCLGNBQVksSUFBWSxtQ0FDdEMsTUFBTXFpQyxRQUF5QmpyQyxFQUFNb3VCLElBQUl3SSxLQUFLYSxVQUM5Q3VULEVBQWlCQyxFQUNuQixLQUFHLENBQUNqckMsRUFBTW91QixJQUFJd0ksT0FFZCxJQUFJMUgsRUFBYSxHQU1qQixPQUpJNmIsRUFBYzc4RCxPQUFTLElBQ3pCZ2hELEVBQWEvWCxLQUFLQyxVQUFVMnpCLEVBQWUsS0FBTSxLQUlqRCxpQ0FDRSwwQkFDRSxpQ0FBUS8rQixRQUFTeXJCLEdBQU8sMEJBRTFCLDBCQUNFLHFCQUFVckksS0FBTSxFQUFHM3pDLE1BQU8sR0FBZTFGLGFBQWNtNUMsUUFJL0QsQ0M3Qk8sU0FBUyxJQUFhLElBQUVkLElBQzdCLE1BQU84YyxFQUFjQyxJQUFtQixJQUFBOWhDLFVBQVMsTUFDMUMraEMsRUFBWUMsSUFBaUIsSUFBQWhpQyxVQUFTLElBRTdDLElBQUFQLFlBQVUsS0FDUnNsQixFQUFJd0ksS0FBS2EsVUFBVTErQixNQUFLdXlDLElBQ3RCRCxFQUFjQyxFQUFTcDlELE9BQU8sR0FDOUIsR0FDRCxDQUFDa2dELEVBQUl3SSxPQUNSLE1BQU0yVSxHQUFZLElBQUEzaUMsY0FBWSxLQUM1QndsQixFQUFJd0ksS0FBS3JrQyxRQUFRd0csTUFBSyxLQUNwQmtSLFFBQVFob0IsSUFBSSxnQkFBZ0IsR0FDNUIsR0FDRCxDQUFDbXNDLEVBQUl3SSxPQUNGNFUsR0FBVyxJQUFBNWlDLGNBQVksS0FDM0J3bEIsRUFBSXdJLEtBQUttSCxPQUFPaGxDLE1BQUssS0FDbkJrUixRQUFRaG9CLElBQUksZ0JBQWdCLEdBQzVCLEdBQ0QsQ0FBQ21zQyxFQUFJd0ksT0FDRjZVLEdBQVcsSUFBQTdpQyxjQUFZLEtBQzNCd2xCLEVBQUl3SSxLQUFLM1YsT0FBT2xvQixNQUFLLEtBQ25Ca1IsUUFBUWhvQixJQUFJLGtCQUFrQixHQUM5QixHQUNELENBQUNtc0MsRUFBSXdJLE9BQ0Y4VSxHQUFXLElBQUE5aUMsY0FBWSxLQUMzQndsQixFQUFJd0ksS0FBS2w2QixPQUFPM0QsTUFBSyxLQUNuQmtSLFFBQVFob0IsSUFBSSxjQUFjLEdBQzFCLEdBQ0QsQ0FBQ21zQyxFQUFJd0ksT0FDRitVLEdBQVcsSUFBQS9pQyxjQUFZLEtBQzNCLE1BQU1uekIsRUFBUXEvQyxPQUFPb1csR0FDaEJyNkQsTUFBTTRFLElBQ1QyNEMsRUFBSXdJLEtBQUs3RyxLQUFLdDZDLEdBQU9zakIsTUFBSyxLQUMxQmtSLFFBQVFob0IsSUFBSSxpQkFBaUIsTUFHOUIsQ0FBQ21zQyxFQUFJd0ksS0FBTXNVLElBRWQsT0FDRSxpQ0FDRSwrQkFBS2xvQixVQUFVLFdBQVMsWUFDdEIsaUNBQVFoWCxRQUFTdS9CLEdBQVMsMkJBQzFCLGlDQUFRdi9CLFFBQVN3L0IsR0FBUSw4QkFFM0IsK0JBQUt4b0IsVUFBVSxXQUFTLFlBQ3RCLGlDQUFRaFgsUUFBU3kvQixHQUFRLHlCQUN6QixpQ0FBUXovQixRQUFTMC9CLEdBQVEseUJBRTNCLCtCQUFLMW9CLFVBQVUsV0FBUyxZQUN0QixpQ0FBUWhYLFFBQVMyL0IsR0FBUSxxQkFDekIsaUNBQ0VsMkQsTUFBT3kxRCxFQUNQL2IsU0FBVTUvQyxHQUFLNDdELEVBQWdCNTdELEVBQUU4TixPQUFPNUgsUUFBTSxVQUU3Q2tCLE1BQU1pMUQsS0FBSyxDQUFFMTlELE9BQVFrOUQsSUFBYyxDQUFDUyxFQUFHbjFDLEtBQ3RDLGlDQUFnQmpoQixNQUFPaWhCLEdBQUMsVUFBR0EsSUFBZEEsY0FNekIsQ0N6RE8sU0FBUyxHQUFLc0osR0FDbkIsT0FDRSxpQ0FDRSxTQUFDLEVBQVksZUFBQ2d1QixPQUFRLGtCQUFnQixXQUNwQyxTQUFDLEdBQVcsQ0FBQ0ksSUFBS3B1QixFQUFNb3VCLFVBRTFCLFNBQUMsRUFBWSxlQUFDSixPQUFRLGlCQUFlLFdBQ25DLFNBQUMsR0FBWSxDQUFDSSxJQUFLcHVCLEVBQU1vdUIsVUFFM0IsU0FBQyxFQUFZLGVBQUNKLE9BQU8saUJBQWUsV0FDbEMsU0FBQyxHQUFLLENBQUNJLElBQUtwdUIsRUFBTW91QixJQUFLd0wsT0FBUTU1QixFQUFNb3VCLElBQUl3SSxLQUFLcE4sWUFFaEQsVUFBQyxFQUFZLGVBQUN3RSxPQUFRLGdCQUFjLFlBQ2xDLFNBQUMsRUFBVSxDQUFDajZDLEtBQUssZUFBZTg2QyxXQUFZN3VCLEVBQU1vdUIsSUFBSXdJLEtBQUtrVixlQUMzRCxTQUFDLEVBQVUsQ0FBQy8zRCxLQUFLLGFBQWE4NkMsV0FBWTd1QixFQUFNb3VCLElBQUl3SSxLQUFLbDNCLFNBQ3pELFNBQUMsRUFBVSxDQUFDM3JCLEtBQUssYUFBYTg2QyxXQUFZN3VCLEVBQU1vdUIsSUFBSXdJLEtBQUtoeEMsbUJBSWpFLDRTQzNCTyxTQUFTLElBQVksSUFBQ3dvQyxJQUMzQixNQUFNMmQsR0FBZSxJQUFBM2lDLFFBQXlCLE1BQ3hDNGlDLEdBQWlCLElBQUE1aUMsUUFBeUIsT0FDekM2aUMsRUFBZ0JDLElBQXFCLElBQUE3aUMsV0FBUyxJQUM5Q1UsRUFBUzBsQixJQUFjLElBQUFwbUIsVUFBUyxJQUVqQzhpQyxHQUFlLElBQUF2akMsY0FBYS9ZLElBQ2hDcThDLEdBQW1CcjhDLEVBQU03SSxjQUFjdlIsTUFBTSxHQUM1QyxJQUVHMjJELEdBQWMsSUFBQXhqQyxjQUFZLElBQVksbUNBQzFDLEdBQUltakMsRUFBYTlyRCxTQUFXK3JELEVBQWUvckQsUUFBUyxDQUNsRCxNQUFNb3NELFFBQWNqZSxFQUFJMEksS0FBS3NWLFlBQVlMLEVBQWE5ckQsUUFBUXhLLE1BQU8sQ0FDbkU2MkQsT0FBUU4sRUFBZS9yRCxRQUFRekssVUFFakNpNkMsRUFBVyxZQUFjNGMsRUFBTTlsRCxJQUVuQyxLQUFHLENBQUM2bkMsRUFBSTBJLE9BRVIsT0FDRSxpQ0FDRSwwQkFDRSxrQkFBT3QwQixJQUFLdXBDLEVBQWMvN0QsS0FBSyxPQUFPdThELFFBQVNKLE9BRWpELDRCQUNFLHdDQUNBLGtCQUFPM3BDLElBQUt3cEMsRUFBZ0JoOEQsS0FBSyxpQkFFbkMsMEJBQ0UsaUNBQVFnOEIsUUFBU29nQyxFQUFhbjFELFNBQVVnMUQsR0FBYyx5QkFFeEQsMEJBQ0UscUJBQVV4d0QsTUFBTyxDQUFFaVIsT0FBUSxPQUFROGhDLFVBQVEsRUFBQy80QyxNQUFPczBCLFFBSTNELDRTQy9CTyxTQUFTLElBQVksSUFBQ3FrQixFQUFHLGNBQUU2VSxVQUNoQyxNQUFPbDVCLEVBQVMwbEIsSUFBYyxJQUFBcG1CLFVBQVMsSUFFakNtakMsR0FBYyxJQUFBNWpDLGNBQVksSUFBWSxtQ0FDMUMsR0FBSXE2QixFQUNGLFVBQ1E3VSxFQUFJMEksS0FBSzBWLFlBQVl2SixHQUMzQnhULEVBQVcsTUFDWCxNQUFPbGdELEdBQ1BrZ0QsRUFBV2xnRCxHQUdqQixLQUFHLENBQUM2K0MsRUFBSTBJLEtBQU1tTSxJQUVkLE9BQ0UsaUNBQ0UseUNBQ1ksa0JBQU9qekQsS0FBSyxPQUFPeUYsTUFBd0IsUUFBakIsRUFBQXd0RCxhQUFhLEVBQWJBLEVBQWUxOEMsVUFBRSxRQUFJLE9BQVF0UCxVQUFRLFFBRTNFLDBCQUNFLGlDQUFRKzBCLFFBQVN3Z0MsR0FBVyx5QkFFOUIsMEJBQ0UscUJBQVUvd0QsTUFBTyxDQUFFaVIsT0FBUSxPQUFROGhDLFVBQVEsRUFBQy80QyxNQUFPczBCLFFBSTNELENDNUJPLFNBQVMsSUFBYSxhQUFDMGlDLFVBQzVCLE1BQU1DLEdBQWdCLElBQUF0akMsUUFBeUIsTUFDekN1akMsR0FBZSxJQUFBL2pDLGNBQVksYUFDM0I2akMsR0FDRkEsRUFBYWxRLFVBQXdDLFFBQTlCLEVBQXFCLFFBQXJCLEVBQUFtUSxFQUFjenNELGVBQU8sZUFBRXpLLGVBQU8sWUFFdEQsQ0FBQ2kzRCxJQUVKLE9BQ0UsVUFBQyxFQUFBL3hCLFNBQVEsWUFDUCx5Q0FDWSxrQkFBTzFxQyxLQUFLLE9BQU95RixNQUF1QixRQUFoQixFQUFBZzNELGFBQVksRUFBWkEsRUFBY2xtRCxVQUFFLFFBQUksT0FBUXRQLFVBQVEsUUFFMUUsNEJBQ0UsZ0NBQU9zM0MsUUFBUSxxQkFBbUIsaUNBQ2xDLGtCQUFPL3JCLElBQUtrcUMsRUFBZW5tRCxHQUFHLG9CQUFvQnZXLEtBQUssaUJBRXpELDBCQUNFLGlDQUFRZzhCLFFBQVMyZ0MsR0FBWSw0QkFJckMsQ0N0Qk8sU0FBUyxJQUFZLGNBQUMxSixVQUMzQixNQUFNMkosR0FBYyxJQUFBaGtDLGNBQWFpa0MsSUFDM0I1SixHQUNGQSxFQUFjNkUsT0FBTytFLEtBRXRCLENBQUM1SixJQUNKLE9BQ0UsaUNBQ0UseUNBQ1ksa0JBQU9qekQsS0FBSyxPQUFPeUYsTUFBd0IsUUFBakIsRUFBQXd0RCxhQUFhLEVBQWJBLEVBQWUxOEMsVUFBRSxRQUFJLE9BQVF0UCxVQUFRLFFBRTNFLDBCQUNFLGlDQUFRKzBCLFFBQVMsSUFBTTRnQyxHQUFZLElBQUssNEJBRTFDLDBCQUNFLGlDQUFRNWdDLFFBQVMsSUFBTTRnQyxHQUFZLElBQU0sOEJBSWpELDRTQ3ZCQSxNQUFNLEdBQTJCLENBQy9CaDRCLFFBQVMsZUFDVG5vQixNQUFPLFFBR0YsU0FBUyxJQUFjLGFBQzVCZ2dELEVBQVksY0FDWnhKLFlBRUEsTUFBT2w1QixFQUFTMGxCLElBQWMsSUFBQXBtQixVQUFTLElBRWpDeWpDLEdBQVcsSUFBQWxrQyxjQUFZLElBQVcsbUNBRXRDLEdBREE2bUIsRUFBVyxJQUNOZ2QsR0FBaUJ4SixFQUl0QixVQUNRd0osRUFBYUssU0FBUzdKLEdBQzVCeFQsRUFBVyxNQUNYLE1BQU9sZ0QsR0FDUGtnRCxFQUFXLG9CQUFzQmxnRCxRQVBqQ2tnRCxFQUFXLFlBU2YsS0FBRyxDQUFDd1QsRUFBZXdKLElBQ2JNLEdBQWMsSUFBQW5rQyxjQUFZLElBQVksbUNBRTFDLEdBREE2bUIsRUFBVyxJQUNOZ2QsR0FBaUJ4SixFQUl0QixVQUNRd0osRUFBYU0sWUFBWTlKLEdBQy9CeFQsRUFBVyxNQUNYLE1BQU9sZ0QsR0FDUGtnRCxFQUFXLHVCQUF5QmxnRCxRQVBwQ2tnRCxFQUFXLFlBU2YsS0FBRyxDQUFDd1QsRUFBZXdKLElBQ2JPLEdBQVcsSUFBQXBrQyxjQUFZLElBQVksbUNBS3ZDNm1CLEVBSktnZCxHQUFpQnhKLEVBSVh3SixFQUFhTyxTQUFTL0osR0FBZWpyRCxXQUhuQyxZQUlmLEtBQUcsQ0FBQ2lyRCxFQUFld0osSUFFbkIsT0FDRSxpQ0FDRSw0QkFDRSwrQkFBTWh4RCxNQUFPLElBQVMsc0JBQWMsa0JBQU96TCxLQUFLLE9BQU95RixNQUF1QixRQUFoQixFQUFBZzNELGFBQVksRUFBWkEsRUFBY2xtRCxVQUFFLFFBQUksT0FBUXRQLFVBQVEsUUFFcEcsNEJBQ0UsK0JBQU13RSxNQUFPLElBQVMsdUJBQWUsa0JBQU96TCxLQUFLLE9BQU95RixNQUF3QixRQUFqQixFQUFBd3RELGFBQWEsRUFBYkEsRUFBZTE4QyxVQUFFLFFBQUksT0FBUXRQLFVBQVEsUUFFdEcsNEJBQ0UsaUNBQVF3RSxNQUFPLENBQUNnUixNQUFPLFFBQVN1ZixRQUFTOGdDLEdBQVEsb0JBQ2pELGlDQUFRcnhELE1BQU8sQ0FBQ2dSLE1BQU8sUUFBU3VmLFFBQVMrZ0MsR0FBVyx1QkFDcEQsaUNBQVF0eEQsTUFBTyxDQUFDZ1IsTUFBTyxRQUFTdWYsUUFBU2doQyxHQUFRLHVCQUVuRCwwQkFDRSxxQkFBVXZ4RCxNQUFPLENBQUNnUixNQUFPLE9BQVFDLE9BQVEsT0FBUWpYLE1BQU9zMEIsRUFBUzl5QixVQUFRLFFBSWpGLENDaERPLFNBQVMsSUFBSyxJQUFDbTNDLEVBQUcsY0FBRTZVLEVBQWEsWUFBRWdLLElBQ3hDLE1BQU9SLEVBQWNTLElBQWMsSUFBQTdqQyxZQUVuQyxPQUNFLGlDQUNFLFNBQUMsRUFBWSxlQUFDMmtCLE9BQVEsMkJBQXlCLFdBQzdDLFNBQUMsR0FBb0IsQ0FDbkJqNkMsS0FBTSxRQUNOMDBDLFdBQVkyRixFQUFJMEksS0FBSzNJLFlBR3pCLFNBQUMsRUFBbUIsQ0FDbEJqSixNQUFPLFFBQ1B1RCxXQUFZMkYsRUFBSTBJLEtBQUszSSxNQUNyQnlELHFCQUFzQixDQUFDLEtBQU0sT0FBUSxPQUFRLFVBQzdDQyxtQkFBb0IsQ0FDbEJzYixPQUFTQSxHQUFXLElBQUlBLEdBQVEveEIsS0FBSWl4QixHQUFTQSxFQUFNOWxELE1BRXJEdW9DLFVBQVcsQ0FBQytjLEVBQUd2akQsSUFBUzRrRCxFQUFXNWtELE1BRXJDLFNBQUMsRUFBWSxlQUFDMGxDLE9BQVEsNEJBQTBCLFdBQzlDLFNBQUMsR0FBb0IsQ0FDbkJqNkMsS0FBTSxTQUNOMDBDLFdBQVkyRixFQUFJMEksS0FBS3FXLGFBR3pCLFNBQUMsRUFBbUIsQ0FDbEJqb0IsTUFBTyxTQUNQdUQsV0FBWTJGLEVBQUkwSSxLQUFLcVcsT0FDckJ2YixxQkFBc0IsQ0FBQyxLQUFNLE9BQVEsT0FBUSxVQUFXLFVBQ3hEOUMsVUFBVyxDQUFDK2MsRUFBR1EsSUFBVVksRUFBWVosTUFFdkMsU0FBQyxFQUFZLGVBQUNyZSxPQUFRLGtCQUFnQixXQUNwQyxTQUFDLEVBQVUsQ0FDVGo2QyxLQUFNLFVBQ044NkMsV0FBWVQsRUFBSTBJLEtBQUs3MkMsY0FHekIsU0FBQyxFQUFZLGVBQUMrdEMsT0FBUSx1QkFBcUIsV0FDekMsU0FBQyxHQUFXLENBQUNJLElBQUtBLFFBRXBCLFNBQUMsRUFBWSxlQUFDSixPQUFRLHVCQUFxQixXQUN6QyxTQUFDLEdBQVcsQ0FBQ0ksSUFBS0EsRUFBSzZVLGNBQWVBLFFBRXhDLFNBQUMsRUFBWSxlQUFDalYsT0FBUSxtQkFBaUIsV0FDckMsU0FBQyxHQUFZLENBQUN5ZSxhQUFjQSxRQUU5QixTQUFDLEVBQVksZUFBQ3plLE9BQVEsa0JBQWdCLFdBQ3BDLFNBQUMsR0FBVyxDQUFDaVYsY0FBZUEsUUFFOUIsU0FBQyxFQUFZLGVBQUNqVixPQUFRLHdCQUFzQixXQUMxQyxTQUFDLEdBQWEsQ0FDWnllLGFBQWNBLEVBQ2R4SixjQUFlQSxTQUt6QixDQ3BFTyxTQUFTLEdBQVNqakMsR0FDdkIsT0FDRSwrQkFDRSxVQUFDLEVBQVksZUFBQ2d1QixPQUFRLHlCQUF1QixZQUMzQyxTQUFDLEVBQVUsQ0FBQ2o2QyxLQUFLLG1CQUFtQjg2QyxXQUFZN3VCLEVBQU1vdUIsSUFBSXpFLEtBQUsxcEMsV0FDL0QsU0FBQyxFQUFVLENBQUNsTSxLQUFLLHNCQUFzQjg2QyxXQUFZN3VCLEVBQU1vdUIsSUFBSXpFLEtBQUsvakMsa0JBSTFFLENDb0JBLFNBQVMsSUFBUyxJQUFFd29DLElBQ2xCLE1BQU95TixFQUFldVIsSUFBZSxJQUFBL2pDLFVBQVMsS0FDdkM0NUIsRUFBZWdLLElBQWUsSUFBQTVqQyxhQUU5QjBwQixFQUFRSyxJQUFhLElBQUEvcEIsVUFBaUMsQ0FBQyxHQUV4RDJ5QixHQUFXLElBQUFwekIsY0FBWSxDQUFDcmlCLEVBQVk2cUIsS0FDeENnaUIsR0FBV0MsR0FBbUIsT0FBRCx3QkFDeEJBLEdBQWEsQ0FDaEIsQ0FBQzlzQyxHQUFLNnFCLEtBQ0wsR0FDRixJQUVILE9BQ0UsVUFBQyxFQUFBc0osU0FBUSxZQUNQLFNBQUMsRUFBRyxDQUFDMFQsSUFBS0EsS0FDVixTQUFDLEVBQUcsQ0FBQ0EsSUFBS0EsS0FDVixTQUFDLEVBQVMsQ0FBQ0EsSUFBS0EsS0FDaEIsU0FBQyxFQUFLLENBQUNBLElBQUtBLEVBQUsyRSxPQUFRQSxFQUFRSyxVQUFXQSxFQUFXRSxpQkFBa0I4WixLQUN6RSxTQUFDLEVBQU0sQ0FBQ2hmLElBQUtBLEtBQ2IsU0FBQyxHQUFVLENBQUNBLElBQUtBLEtBQ2pCLFNBQUMsR0FBSyxDQUFDQSxJQUFLQSxLQUNaLFNBQUMsR0FBSyxDQUFDQSxJQUFLQSxLQUNaLFNBQUMsR0FBSSxDQUFDQSxJQUFLQSxLQUNYLFNBQUMsR0FBUyxDQUFDQSxJQUFLQSxFQUFLeU4sY0FBZUEsRUFBZUcsU0FBVUEsS0FDN0QsU0FBQyxHQUFZLENBQUM1TixJQUFLQSxLQUNuQixTQUFDLEdBQUssQ0FBQ0EsSUFBS0EsSUFDVixXQUFZQSxJQUFPLFNBQUMsR0FBTSxDQUFDQSxJQUFLQSxLQUNsQyxTQUFDLEdBQU8sQ0FBQ0EsSUFBS0EsRUFBS3lOLGNBQWVBLEVBQWVHLFNBQVVBLEtBQzNELFNBQUMsR0FBUSxDQUFDNU4sSUFBS0EsS0FDZixTQUFDLEdBQUksQ0FBQ0EsSUFBS0EsS0FDWCxTQUFDLEdBQUssQ0FBQ0EsSUFBS0EsS0FDWixTQUFDLEdBQU0sQ0FBQ0EsSUFBS0EsS0FDYixTQUFDLEdBQVEsQ0FBQ0EsSUFBS0EsS0FDZixTQUFDLEdBQUssQ0FBQ0EsSUFBS0EsS0FDWixTQUFDLEdBQVUsQ0FBQ0EsSUFBS0EsSUFDZixRQUFTQSxJQUFPLFNBQUMsR0FBRyxDQUFDQSxJQUFLQSxFQUFLeU4sY0FBZUEsRUFBZW9ILGNBQWVBLEtBQzlFLFNBQUMsR0FBSSxDQUFDN1UsSUFBS0EsSUFDVCxTQUFVQSxJQUFPLFNBQUMsR0FBSSxDQUFDQSxJQUFLQSxFQUFLNlUsY0FBZUEsRUFBZWdLLFlBQWFBLEtBQzlFLFNBQUMsR0FBUSxDQUFDN2UsSUFBS0EsTUFHckIsS0NyRFksR0FBQWlmLHFUQUFBQSxHQUFBLFFBQVMsS0FDbkIsVUFDQSxvQ0FDQSxzQkFDQSx5QkFDQSx1QkFDQSxxQkFDQSx3QkFDQSx1QkFDQSx3Q0FDQSw0QkFnQkssTUFBTSxHQUFxQyxDQUFDLENBQ2pEQyxVQUFXLFFBQ1hDLFNBQVUsR0FBVUMsTUFDcEJ6NUQsS0FBTSxRQUNOb3hDLFlBQWEsa0NBQ2JuMUMsS0FBTSxRQUNMLENBQ0RzOUQsVUFBVyxpQkFDWEMsU0FBVSxHQUFVRSxnQkFDcEIxNUQsS0FBTSxrQkFDTm94QyxZQUFhLGlEQUNibjFDLEtBQU0sUUFDTCxDQUNEczlELFVBQVcsVUFDWEMsU0FBVSxHQUFVRyxTQUNwQjM1RCxLQUFNLFdBQ05veEMsWUFBYSxzRkFDYm4xQyxLQUFNLFFBQ0wsQ0FDRHM5RCxVQUFXLGtCQUNYQyxTQUFVLEdBQVVJLGNBQ3BCNTVELEtBQU0sbUJBQ05veEMsWUFBYSxpRUFDYm4xQyxLQUFNLE9BQ0wsQ0FDRHM5RCxVQUFXLFdBQ1hDLFNBQVUsR0FBVUssU0FDcEI3NUQsS0FBTSxXQUNOb3hDLFlBQWEsZ0NBQ2JuMUMsS0FBTSxRQUNMLENBQ0RzOUQsVUFBVyxVQUNYQyxTQUFVLEdBQVVNLFFBQ3BCOTVELEtBQU0sbUJBQ05veEMsWUFBYSxrREFDYm4xQyxLQUFNLFFBQ0wsQ0FDRHM5RCxVQUFXLGFBQ1hDLFNBQVUsR0FBVU8sWUFDcEIvNUQsS0FBTSxrQkFDTm94QyxZQUFhLG1GQUNibjFDLEtBQU0sUUFDTCxDQUNEczlELFVBQVcsb0JBQ1hDLFNBQVUsR0FBVVEsZUFDcEJoNkQsS0FBTSxrQkFDTm94QyxZQUFhLDJHQUNibjFDLEtBQU0sUUFDTCxDQUNEczlELFVBQVcsbUJBQ1hDLFNBQVUsR0FBVVMsa0JBQ3BCajZELEtBQU0sb0JBQ05veEMsWUFBYSwySEFDYm4xQyxLQUFNLFFBQ0wsQ0FDRHM5RCxVQUFXLFdBQ1hDLFNBQVUsR0FBVVUsY0FDcEJsNkQsS0FBTSxpQkFDTm94QyxZQUFhLHFDQUNibjFDLEtBQU0sU0FHRCxTQUFTLEdBQWF5ekMsRUFBb0N5cUIsR0FDL0QsTUFBTUMsRUFBY0QsRUFBT0UsV0F5QjdCLFNBQXNCRixHQUNwQixNQUFNRyxFQUFzQkgsRUFBT3QyQixRQUM3QjAyQixFQUFhRCxFQUFvQkUsV0FBVyxTQUU1Q0osRUFBYyxJQUFJalIsSUFBSW9SLEVBQzFCRCxFQUFxQixpQkFDckIscURBQXVEQSxFQUFzQixrQkFFL0UsT0FBT0YsQ0FDVCxDQWpDSSxDQUFhRCxHQWtCakIsU0FBcUJBLEdBQ25CLE1BQU1NLEVBQWFOLEVBQU9PLFNBQVcsU0FBVyxTQUMxQ04sRUFBYyxJQUFJalIsSUFBSWdSLEVBQU9RLFFBQVVGLEdBQzdDLE9BQU9MLENBQ1QsQ0FyQkksQ0FBWUQsR0FHZEMsRUFBWS8rQyxPQUFTemdCLE9BQU93ZCxTQUFTaUQsT0FFckMrK0MsRUFBWVEsYUFBYXA3RCxJQUFJLElBQUsyNkQsRUFBT1UsT0FDekNULEVBQVlRLGFBQWFwN0QsSUFBSSxpQkFBa0JzN0QsbUJBQW1CWCxFQUFPblIsaUJBQ3pFb1IsRUFBWVEsYUFBYXA3RCxJQUFJLFVBQVcyNkQsRUFBT1EsU0FFM0NSLEVBQU90MkIsUUFDVHUyQixFQUFZUSxhQUFhcDdELElBQUksVUFBVzI2RCxFQUFPdDJCLFNBRS9DdTJCLEVBQVlRLGFBQWF2cUQsT0FBTyxXQUVsQ3EvQixFQUFnQnJTLElBQU0rOEIsRUFBWW4yRCxVQUNwQyxDQW1CQSxNQUFNLEdBQVksSUFBSSxHQUFnQixRQ2pIekIsR0FBUSxTQUFTdVgsR0FDNUIsT0FBTyxJQUFJb0osU0FBU0csSUFDbEJQLFdBQVdPLEVBQVN2SixFQUFLLEdBRTdCLEVBdVBvQixNQUNsQixNQUFNNnJCLEVBQW9CLENBQUMsQ0FRNUIsRUFUbUIsaUJDL1FwQixTQUFTLElBQWEsT0FBRTh5QixFQUFNLGVBQUVZLElBQzlCLE1BQU1DLEdBQWEsSUFBQTNsQyxRQUF1QixPQUNuQzRsQyxFQUFXQyxJQUFnQixJQUFBNWxDLFdBQVMsR0FFckMzSixFQUFzQzN3QixPQUFPdWlELFFBQVE0YyxHQUFROXlCLEtBQUksRUFBRXJ2QixFQUFLdFcsS0FBVyxDQUN2RnNXLEVBQUssQ0FDSHRXLFFBQ0F5NUQsY0FBZXo1RCxPQUdaMDVELEVBQWFDLElBQWEsSUFBQS9sQyxVQUFTdDZCLE9BQU9zZ0UsWUFBWTN2QyxJQUV2RDR2QyxHQUFlLElBQUExbUMsY0FBYS9ZLElBQzVCQSxFQUFNeFMsU0FBVzB4RCxFQUFXOXVELFNBQzlCZ3ZELEdBQWEsS0FFZCxJQUNHTSxHQUFzQixJQUFBM21DLGNBQVksS0FDdENxbUMsR0FBY0QsRUFBVSxHQUN2QixDQUFDQSxJQUNFUSxHQUFlLElBQUE1bUMsY0FBWSxDQUFDN2MsRUFBbUJ0VyxLQUM3QjA1RCxFQUFZcGpELEdBQ3BCbWpELGNBQWdCejVELEVBQzlCMjVELEVBQVUsT0FBRCxVQUFNRCxHQUFjLEdBQzVCLENBQUNBLElBQ0VNLEdBQWMsSUFBQTdtQyxjQUFZLEtBRTlCLElBRHNCNzVCLE9BQU9rZ0QsT0FBT2tnQixHQUFhbnZCLFFBQU8sQ0FBQzB2QixFQUFPQyxJQUFVRCxHQUFTQyxFQUFNbDZELFFBQVVrNkQsRUFBTVQsZ0JBQWUsR0FDdEcsQ0FDaEIsSUFBSyxNQUFNbmpELEtBQU9oZCxPQUFPNk0sS0FBS3V6RCxHQUFjLENBQzFDLE1BQU1TLEVBQWNULEVBQVlwakQsR0FDaEM2akQsRUFBWW42RCxNQUFRbTZELEVBQVlWLGNBRWxDSixFQXlKTixTQUFxQlosR0FDbkIsTUFBTTJCLEVBQWtDLENBQUMsRUFDekMsSUFBSyxNQUFPOWpELEdBQUssTUFBQ3RXLE1BQVcxRyxPQUFPdWlELFFBQVE0YyxHQUFTLENBQ25ELE1BQU00QixFQUFpQixHQUFnQkMsTUFBS3A1QixHQUFNQSxFQUFHMjJCLFlBQWN2aEQsSUFDL0QrakQsSUFDRkQsRUFBT0MsRUFBZXZDLFVBQVk5M0QsR0FJdEMsT0FBT282RCxDQUNULENBbktxQixDQUFZVixJQUMzQkMsRUFBVSxPQUFELFVBQUtELE9BRWYsQ0FBQ0EsRUFBYUwsSUFDWGtCLEdBQWMsSUFBQXBuQyxjQUFZLEtBQzlCLElBQUssTUFBTTdjLEtBQU9oZCxPQUFPNk0sS0FBS3V6RCxHQUFjLENBQzFDLE1BQU1TLEVBQWNULEVBQVlwakQsR0FDaEM2akQsRUFBWVYsY0FBZ0JVLEVBQVluNkQsTUFFMUMyNUQsRUFBVSxPQUFELFVBQU1ELEdBQWMsR0FDNUIsQ0FBQ0EsSUFFRWMsRUFBNEMsQ0FDaER2akQsT0FBUSxPQUNSRCxNQUFPLE9BQ1B5akQsY0FBZWxCLEVBQVksTUFBUSxRQXlCckMsT0FDRSxpQ0FDRSxnQkFBS3hzQyxJQUFLdXNDLEVBQVl0ekQsTUFBT3cwRCxFQUFzQmprQyxRQUFTc2pDLEtBQzVELCtCQUFLN3pELE1BMUJnQyxDQUN2QzAwRCxTQUFVLFdBQ1Z2OEMsSUFBSyxFQUNMdzhDLE1BQU8sRUFDUDFqRCxPQUFRLEdBQ1JELE1BQU8sR0FDUDRqRCxTQUFVLE9BQ1YvMUQsV0FBWSxPQUNac1UsTUFBTyxRQUNQMGhELFVBQVcsVUFpQmdCdGtDLFFBQVN1akMsR0FBbUIsZ0JBQ25ELDhCQUFLOXpELE1BaEIwQyxDQUNuRDAwRCxTQUFVLFdBQ1Z2OEMsSUFBSyxFQUNMbEgsT0FBUSxHQUNSRCxNQUFPLEdBQ1A0akQsU0FBVSxPQUNWLzFELFdBQVksT0FDWnNVLE1BQU8sUUFDUDBoRCxVQUFXLFNBQ1hKLGNBQWUsU0FPd0IscUJBRXBDbEIsSUFDQyxTQUFDLEdBQWEsQ0FBQ2QsT0FBUWlCLEVBQWFLLGFBQWNBLEVBQWNDLFlBQWFBLEVBQWFPLFlBQWFBLE1BSS9HLENBUUEsU0FBUyxJQUFjLE9BQUU5QixFQUFNLGFBQUVzQixFQUFZLFlBQUVDLEVBQVcsWUFBRU8sSUFDMUQsTUFTTU8sRUFBbUMsQ0FDdkNDLE9BQVEsT0FFSkMsRUFBMEMsQ0FDOUNDLFFBQVMsaUJBR1gsT0FDRSwrQkFBS2oxRCxNQWpCaUMsQ0FDdEMwMEQsU0FBVSxXQUNWdjhDLElBQUssR0FDTHc4QyxNQUFPLEdBQ1AxWCxnQkFBaUIsUUFDakJpWSxPQUFRLGtCQUNSbGtELE1BQU8sSUFDUGdzQyxRQUFTLElBVWEsV0FDbkIsR0FBZ0JyZCxLQUFJLEVBQUVreUIsWUFBV0MsV0FBVXg1RCxPQUFNL0QsT0FBTW0xQyxrQkFDdEQsTUFBTXlyQixFQUFlMUMsRUFBT1osR0FBVzczRCxNQUNqQ3k1RCxFQUFnQmhCLEVBQU9aLEdBQVc0QixjQUNsQzJCLE9BQW1DbnhCLElBQWxCd3ZCLEVBQThCQSxFQUFnQjBCLEVBQy9ERSxFQUFhNUIsSUFBa0IwQixFQUFlSCxFQUFxQixDQUFDLEVBQzFFLE9BQ0UsU0FBQyxHQUFLLGVBQWdCMThELEtBQU1BLEVBQU1veEMsWUFBYUEsR0FBVyxVQUU3QyxTQUFUbjFDLEdBQ0Usa0JBQ0V5TCxNQUFPcTFELEVBQ1A5Z0UsS0FBSyxPQUNMeUYsTUFBT283RCxFQUNQMWhCLFNBQVU1L0MsR0FBS2lnRSxFQUFhbEMsRUFBVy85RCxFQUFFOE4sT0FBTzVILFNBRXpDLFFBQVR6RixHQUNFLGtCQUNFQSxLQUFLLFNBQ0x5TCxNQUFPcTFELEVBQ1AvZ0IsS0FBTSxFQUNOdDZDLE1BQU9vN0QsRUFDUDFoQixTQUFVNS9DLEdBQUtpZ0UsRUFBYWxDLEVBQVd2VixTQUFTeG9ELEVBQUU4TixPQUFPNUgsTUFBTyxRQUVsRSxrQkFDRXpGLEtBQUssV0FDTHlMLE1BQU9xMUQsRUFDUHQ3RCxRQUFTcTdELEVBQ1QxaEIsU0FBVTUvQyxHQUFLaWdFLEVBQWFsQyxFQUFXLzlELEVBQUU4TixPQUFPN0gsYUFyQjlDKzNELEVBeUJiLEtBRUgsK0JBQUs5eEQsTUFBTyxDQUFFbTVCLFFBQVMsT0FBUTRsQixjQUFlLFFBQU8sWUFDbkQsaUJBQU0vK0MsTUFBTyxDQUFDbkMsU0FBVSxNQUN4QixpQ0FBUW1DLE1BQU84MEQsRUFBYXZrQyxRQUFTeWpDLEdBQVcsc0JBQ2hELGlDQUFRaDBELE1BQU84MEQsRUFBYXZrQyxRQUFTZ2tDLEdBQVcsNEJBSXhELENBRUEsU0FBUyxJQUFNLEtBQ2JqOEQsRUFBSSxTQUNKcUQsRUFBUSxZQUNSK3RDLElBaUJBLE9BQ0UsK0JBQUsxcEMsTUFoQjRCLENBQ2pDZzlDLFFBQVMsRUFDVDdqQixRQUFTLE9BQ1Q0bEIsY0FBZSxRQWFFLFlBQ2YsOEJBQUsvK0MsTUFaK0IsQ0FDdEM2MEQsVUFBVyxRQUNYbkcsWUFBYSxFQUNiN3dELFNBQVUsSUFTYyxXQUNwQiwrQkFBTWtyQyxNQUFPVyxHQUFXLFVBQUdweEMsU0FFN0IsOEJBQUswSCxNQVYrQixDQUN0Q2dSLE1BQU8sSUFDUHBULEtBQU0sYUFRa0IsVUFDbkJqQyxRQUtULDRTQ3RMb0J4SSxTQUFTZzBDLGVBQWUsZ0JBQ2hDOXFDLHE5YUFFWixNQUFNLEdBQWtCbEosU0FBU2cwQyxlQUFlLFlBQzFDLEdBQVloMEMsU0FBU2cwQyxlQUFlLGNBQ3BDLEdBQW9CLElBQVksUUFBVyxTQUFhbEQsRUFFeEQsR0FBUyxJQUFJcXhCLGdCQUFnQnBpRSxPQUFPd2QsU0FBU2lELFFBRTdDLEdBQWlCLENBQ3JCdy9DLE1BQU8sR0FBTzU1RCxJQUFJLEdBQVV3NEQsUUFBVSxHQUFPeDRELElBQUksVUFBWSxjQUM3RCtuRCxlQUFnQixHQUFPL25ELElBQUksR0FBVXk0RCxrQkFBb0IsR0FBT3o0RCxJQUFJLFdBQVksNEJBQ2hGMDVELFFBQVMsR0FBTzE1RCxJQUFJLEdBQVUwNEQsV0FBYSxHQUFPMTRELElBQUksU0FBV3JHLE9BQU93ZCxTQUFTK3VDLE9BQ2pGOFYsZ0JBQWlCalosU0FBUyxHQUFPL2lELElBQUksR0FBVTI0RCxnQkFBa0IsSUFBSyxJQUN0RXNELFNBQVUsR0FBT2o4RCxJQUFJLEdBQVU0NEQsV0FBYSxHQUM1Q2gyQixRQUFTLEdBQU81aUMsSUFBSSxHQUFVNjRELFVBQVksR0FDMUNPLFdBQWtELE1BQXRDLEdBQU9wNUQsSUFBSSxHQUFVODRELGFBQ2pDb0QscUJBQXNCLEdBQU9sOEQsSUFBSSxHQUFVODRELGNBQXlELE1BQXpDLEdBQU85NEQsSUFBSSxHQUFVKzRELGlCQUNoRm9ELGlCQUFrQixHQUFPbjhELElBQUksR0FBVWc1RCxvQkFBc0IsR0FBT2g1RCxJQUFJLGVBQWlCLFFBQ3pGeTVELFNBQWtELE1BQXhDLEdBQU96NUQsSUFBSSxHQUFVaTVELGdCQWFqQyxTQUFlLCtDQUNiLEdBQUksR0FBT2lELGtCQUlULE9BSEksR0FBT0YsZ0JBQWtCLFVBQ3JCLEdBQU0sR0FBT0Esa0JBOEJ6QixXQUNFLE1BQU1JLEVBQWlCLEdBQWdCci9DLGNBQ2pDcy9DLEVBQWtCRCxFQUFlRSxPQUN2QyxJQUNFLE9BQU9ELEVBQWdCRSxRQUFRSCxFQUFnQixDQUM3Q0gsU0FBVSxHQUFPQSxXQUVuQixTQUVBLE9BQVFJLEVBQXdCRSxRQUFRSCxFQUFnQixHQUFPclUsZ0JBRW5FLENBdkNXLEdBR0wsR0FBT2lVLGdCQUFrQixVQUNyQixHQUFNLEdBQU9BLGtCQUlyQixPQUdGLFNBQXNCUSxHQUVwQixHQUF1QyxNQUFuQyxHQUFPeDhELElBQUksb0JBQ2IsT0FBT3c4RCxFQUFVRCxRQUFRLEdBQWlCLEdBQU94VSxlQUFnQixJQUduRSxJQUVFLE9BQU95VSxFQUFVRCxRQUFRLEdBQWlCLENBQ3hDTixTQUFVLEdBQU9BLFdBRW5CLFNBRUEsT0FBT08sRUFBVUQsUUFBUSxHQUFpQixHQUFPeFUsZUFBZ0IsSUFFckUsQ0FsQlMsTUFEOEMsVUFBNUIsR0FBT29VLGlCQUErQiw2Qkh5RjFELFNBQWdDQSw2Q0FDckNsbkMsUUFBUWhvQixJQUFJLGlDQUFrQ2t2RCxHQWE5QyxNQUFNTSxRQUFjLEdBQVVsekIsS0FYOUIsV0FDRSxJQUlFLE9BRkEsSUFBSTJlLElBQUlpVSxHQUVEQSxFQUNQLFNBQ0EsTUFBTyw4Q0FBZ0RBLEVBQW1CLFVBRTlFLENBRTJDTyxJQUNyQ0YsRUFBWTdpRSxPQUFPMmlFLFFBQVVHLEVBSW5DLGNBRlE5aUUsT0FBZTJpRSxPQUVoQkUsQ0FDVCxJRzdHNEYsQ0FBaUIsR0FBT0wsa0JBRXBILElBb0NBLFNBQWUscURBQ2IsSUFDRSxNQUFNUSxRQUFvQixLQUMxQmhqRSxPQUFPaWpFLGFBQWVELEVBQ3RCLEVBQVVBLEVBQWEsSUFDbkIsSUo3RXVDdmpCLEVJOEVYdWpCLEVBQW5CLEdKN0VWejlELFFBQ0gsMEJBQ0UsU0FBQyxHQUFRLENBQUNrNkMsSUFBS0EsUUk2RWZua0IsUUFBUWlaLEtBQUssaURBRWYsTUFBT2haLEdBQ1BELFFBQVFDLE1BQU1BLEdKbkZRLElBQXFCa2tCLEVJcUY1Q3ovQyxPQUFla2pFLE1BQThDLFFBQXJDLEtBQWdCOS9DLHFCQUFxQixlQUFFOC9DLFNBT2xFLFNBQVMsS0FDUCxJQUFLLEdBQU9qRCxNQUFPLENBQ2pCLE1BQU1rRCxFQUFlLDJFQUNmQyxFQUFZbmpFLFNBQVNnMEMsZUFBZSxVQUkxQyxNQUhBbXZCLEVBQVVDLFVBQVV2akUsSUFBSSxTQUN4QnNqRSxFQUFVMXJCLFVBQVl5ckIsRUFFaEIvK0QsTUFBTSsrRCxHQUdkLEdBQWdCM3dCLE9BQVMsR0FDekIsR0FBYSxHQUFpQixHQUNoQyxDQWtIQSxTQUFTLEtBQ1AsTUFBTTh3QixFQUFhLElBQUlsQixnQkFBZ0JwaUUsT0FBT3dkLFNBQVMrbEQsS0FBS3AyRCxVQUFVLElBQ3RFLEdBQU84eUQsTUFBUXFELEVBQVdqOUQsSUFBSSxHQUFVdzRELFFBQVUsR0FBT29CLE1BQ3pELEdBQU83UixlQUFpQmtWLEVBQVdqOUQsSUFBSSxHQUFVeTRELGtCQUFvQixHQUFPMVEsZUFDNUUsR0FBTzJSLFFBQVV1RCxFQUFXajlELElBQUksR0FBVTA0RCxXQUFhLEdBQU9nQixRQUM5RCxHQUFPc0MsZ0JBQWtCalosU0FBU2thLEVBQVdqOUQsSUFBSSxHQUFVMjRELGdCQUFrQixJQUFLLElBQ2xGLEdBQU9zRCxTQUFXZ0IsRUFBV2o5RCxJQUFJLEdBQVU0NEQsV0FBYSxHQUFPcUQsU0FDL0QsR0FBT3I1QixRQUFVcTZCLEVBQVdqOUQsSUFBSSxHQUFVNjRELFVBQVksR0FBT2oyQixRQUM3RCxHQUFPdzJCLFdBQXVELE1BQTFDNkQsRUFBV2o5RCxJQUFJLEdBQVU4NEQsYUFDN0MsR0FBT29ELHFCQUF1QixHQUFPOUMsWUFBMkQsTUFBN0M2RCxFQUFXajlELElBQUksR0FBVSs0RCxpQkFDNUUsR0FBT29ELGlCQUFtQmMsRUFBV2o5RCxJQUFJLEdBQVVnNUQsb0JBQXNCLEdBQU9tRCxpQkFDaEYsR0FBTzFDLFNBQXVELE1BQTVDd0QsRUFBV2o5RCxJQUFJLEdBQVVpNUQsY0FDN0MsQ0FFQSxTQUFTLEdBQVdrRSxTQUVsQnhqRSxPQUFPd2QsU0FBUytsRCxLQUFPQyxFQUFjbjZELFdBQ3hCLFFBQWIsRUFBQXJKLE9BQU95akUsY0FBTSxTQUFFMTBCLFlBQVksQ0FDekIxdEMsS0FBTSxjQUNOa2lFLEtBQU1yRCxtQkFBbUJzRCxFQUFjbjZELGFBQ3RDLElBQ0wsQ0FsT3VCLGtDQUFuQixHQUFPMDJELFVBQ1QsR0FBT0EsUUFBVSxrQ0FHbkIsS0F3RkEsS0FFQSxXQUNFLE1BQU0yRCxFQUFvQnpqRSxTQUFTcTBDLGNBQTJCLHVCQUN6RG92QixFRHRJQSxTQUE0QkMsRUFBd0JwRSxFQUFnQlksR0FDekUsTUFBTXlELEdBQU8sUUFBV0QsR0FDeEJDLEVBQUtyK0QsUUFDSCxTQUFDLEdBQVksQ0FBQ2c2RCxPQUFRQSxFQUFRWSxlQUFnQkEsSUFJbEQsQ0NrSUksQ0FBbUJ1RCxFQUFtQixJQUFTRyxJQUM3QyxNQUFNTCxFSGdDTCxTQUE2QmpFLEdBQ2xDLE1BQU0yQixFQUFTLEdBQ2YsSUFBSyxNQUFPOWpELEVBQUt0VyxLQUFVMUcsT0FBT3VpRCxRQUFRNGMsR0FDeEMyQixFQUFPNXhELEtBQUssR0FBRzhOLEtBQU90VyxLQUd4QixNQUFNdzhELEVBQWEsSUFBSWxCLGdCQUFnQmxCLEVBQU9qdEMsS0FBSyxNQUM3QzZ2QyxFQUF5QixHQUMvQixJQUFLLE1BQU8xbUQsRUFBS3d1QyxLQUFRMFgsRUFBWSxDQUNuQyxNQUFNUyxFQUFrQixHQUFnQjNDLE1BQUs0QyxHQUFjQSxFQUFXcEYsV0FBYXhoRCxJQUNyRCxVQUExQjJtRCxhQUFlLEVBQWZBLEVBQWlCMWlFLE9BQ1AsS0FBUnVxRCxHQUNGa1ksRUFBYXgwRCxLQUFLOE4sR0FHUSxVQUExQjJtRCxhQUFlLEVBQWZBLEVBQWlCMWlFLFFBQ1AsU0FBUnVxRCxHQUNGMFgsRUFBVzErRCxJQUFJd1ksRUFBSyxLQUVWLFVBQVJ3dUMsR0FDRmtZLEVBQWF4MEQsS0FBSzhOLElBSXhCLElBQUssTUFBTTZtRCxLQUFZSCxFQUNyQlIsRUFBVzd0RCxPQUFPd3VELEdBY3BCLE1BVjJDLFVBQXZDWCxFQUFXajlELElBQUkscUJBQ2pCaTlELEVBQVc3dEQsT0FBTyxvQkFFYyxVQUE5QjZ0RCxFQUFXajlELElBQUksWUFDakJpOUQsRUFBVzd0RCxPQUFPLFdBRVksTUFBNUI2dEQsRUFBV2o5RCxJQUFJLFVBQ2pCaTlELEVBQVc3dEQsT0FBTyxTQUdiNnRELENBQ1QsQ0d4RTRCLENBQW9CTyxHQUNwQ0ssRUFBb0IsSUFBSTlCLGdCQUFnQnBpRSxPQUFPd2QsU0FBUytsRCxLQUFLcDJELFVBQVUsSUFDdkU0USxFQUFTbW1ELEVBQWtCNzlELElBQUksVUFDL0J5WCxFQUFRb21ELEVBQWtCNzlELElBQUksU0FDOUIwN0MsRUFBU21pQixFQUFrQjc5RCxJQUFJLFVBQ3RCLE9BQVgwWCxHQUNGeWxELEVBQWM1K0QsSUFBSSxTQUFVbVosR0FFaEIsT0FBVkQsR0FDRjBsRCxFQUFjNStELElBQUksUUFBU2taLEdBRWQsT0FBWGlrQyxHQUNGeWhCLEVBQWM1K0QsSUFBSSxTQUFVbTlDLEdBRTlCLEdBQVd5aEIsR0FDWCxLQUNBLElBQU0sSUFuQlJsb0MsUUFBUWlaLEtBQUssdURBc0JoQixDQXpCRCxHQTJCQSxXQUNFLE1BQU00dkIsRUFBZWxrRSxTQUFTcTBDLGNBQWdDLFVBQ3hEOHZCLEVBQWdCbmtFLFNBQVNxMEMsY0FBZ0MsV0FDekQrdkIsRUFBZ0Jwa0UsU0FBU3EwQyxjQUFnQyxrQkFDekRndkIsRUFBYSxJQUFJbEIsZ0JBQWdCcGlFLE9BQU93ZCxTQUFTK2xELEtBQUtwMkQsVUFBVSxJQUV0RSxJQUFLZzNELElBQWlCQyxJQUFrQkMsRUFFdEMsWUFEQS9vQyxRQUFRaVosS0FBSyx1REFJZjR2QixFQUFhcjlELE1BQVF1VyxPQUFPLEdBQWdCMCtCLGFBQzVDcW9CLEVBQWN0OUQsTUFBUXVXLE9BQU8sR0FBZ0IyK0IsY0FHN0Ntb0IsRUFBYXAwRCxpQkFBaUIsVUFBVSxLQUN0QyxHQUFnQitOLE1BQVFxbUQsRUFBYXI5RCxNQUNyQyxNQUFNMDhELEVBQWdCLElBQUlwQixnQkFBZ0JwaUUsT0FBT3dkLFNBQVMrbEQsS0FBS3AyRCxVQUFVLElBQ3pFcTJELEVBQWM1K0QsSUFBSSxRQUFTdS9ELEVBQWFyOUQsT0FDeEMsR0FBVzA4RCxFQUFjLElBRTNCWSxFQUFjcjBELGlCQUFpQixVQUFVLEtBQ3ZDLEdBQWdCZ08sT0FBU3FtRCxFQUFjdDlELE1BQ3ZDLE1BQU0wOEQsRUFBZ0IsSUFBSXBCLGdCQUFnQnBpRSxPQUFPd2QsU0FBUytsRCxLQUFLcDJELFVBQVUsSUFDekVxMkQsRUFBYzUrRCxJQUFJLFNBQVV3L0QsRUFBY3Q5RCxPQUMxQyxHQUFXMDhELEVBQWMsSUFFM0JXLEVBQWFwMEQsaUJBQWlCLFNBQVNuUCxHQUFLQSxFQUFFMlcsb0JBQzlDNnNELEVBQWNyMEQsaUJBQWlCLFNBQVNuUCxHQUFLQSxFQUFFMlcsb0JBRy9DLE1BQU0rc0QsRUFBZWhCLEVBQVdqOUQsSUFBSSxTQUM5QmsrRCxFQUFnQmpCLEVBQVdqOUQsSUFBSSxVQUNqQ2krRCxJQUNGSCxFQUFhcjlELE1BQVF3OUQsRUFDckJILEVBQWEzdEQsY0FBYyxJQUFJcWtDLE1BQU0sWUFFbkMwcEIsSUFDRkgsRUFBY3Q5RCxNQUFReTlELEVBQ3RCSCxFQUFjNXRELGNBQWMsSUFBSXFrQyxNQUFNLFlBSXhDLE1BQU0ycEIsRUFBaUIsV0FDckIsTUFBTUMsRUFBT3hrRSxTQUFTc29DLGlCQUFpQix1QkFDdkMsSUFBSyxNQUFNbThCLEtBQU9ELEVBQ1pDLEVBQUkvbUIsaUJBQ0QwbUIsRUFBY3Y5RCxRQUF3QixRQUFmLEVBQUE0OUQsRUFBSTc3RCxtQkFBVyxlQUFFdEUsTUFDM0MsSUFBSW9nRSxPQUFPLEdBQUdOLEVBQWN2OUQsUUFBUyxPQUVyQzQ5RCxFQUFJL21CLGNBQWM3d0MsTUFBTW01QixRQUFVLFFBRWxDeStCLEVBQUkvbUIsY0FBYzd3QyxNQUFNbTVCLFFBQVUsUUFJeEMsTUFBTXU5QixFQUFnQixJQUFJcEIsZ0JBQWdCcGlFLE9BQU93ZCxTQUFTK2xELEtBQUtwMkQsVUFBVSxJQUNyRWszRCxFQUFjdjlELE1BQ2hCMDhELEVBQWM1K0QsSUFBSSxTQUFVeS9ELEVBQWN2OUQsT0FFMUMwOEQsRUFBYy90RCxPQUFPLFVBRXZCLEdBQVcrdEQsRUFBYyxFQUUzQmEsRUFBY3QwRCxpQkFBaUIsUUFBU3kwRCxHQUd4QyxNQUFNSSxFQUFjM2tFLFNBQVNxMEMsY0FBYyxnQkFDM0MsR0FBSXN3QixFQUFhLENBQ1UsSUFBSUMsaUJBQWlCTCxHQUM3Qk0sUUFBUUYsRUFBYSxDQUNwQ0csV0FBVyxFQUNYQyxTQUFTLElBS2IsTUFBTUMsRUFBZ0IzQixFQUFXajlELElBQUksVUFDakM0K0QsSUFDRlosRUFBY3Y5RCxNQUFRbStELEVBQ3RCWixFQUFjN3RELGNBQWMsSUFBSXFrQyxNQUFNLFVBRXpDLENBbEZEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL3dlYnBhY2svcnVudGltZS9sb2FkIHNjcmlwdCIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9jbGllbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LWpzeC1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9qc3gtcnVudGltZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9keW5hbWljLWxpYi1sb2FkZXIvRHluYW1pY0xpYkxvYWRlci50cyIsIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly8vd2VicGFjay9ydW50aW1lL2Vuc3VyZSBjaHVuayIsIndlYnBhY2s6Ly8vd2VicGFjay9ydW50aW1lL2dldCBqYXZhc2NyaXB0IGNodW5rIGZpbGVuYW1lIiwid2VicGFjazovLy93ZWJwYWNrL3J1bnRpbWUvZ2V0IG1pbmktY3NzIGNodW5rIGZpbGVuYW1lIiwid2VicGFjazovLy93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovLy93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovLy93ZWJwYWNrL3J1bnRpbWUvbWFrZSBuYW1lc3BhY2Ugb2JqZWN0Iiwid2VicGFjazovLy93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly8vd2VicGFjay9ydW50aW1lL2pzb25wIGNodW5rIGxvYWRpbmciLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29udHJvbHMuanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9Db250cm9sUGFuZWwudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvQVBJL0dldFZpZXdzLnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL0FQSS9pbmRleC50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9PYnNlcnZhYmxlLnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL0FwcC90cmFjay50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9BcHAvaW5kZXgudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvQXBwLkxvY2FsZS9BcHBMb2NhbGVHZXRMYW5ndWFnZUNvZGUudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvQXBwLkxvY2FsZS9BcHBMb2NhbGVHZXRULnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL0FwcC5Mb2NhbGUvaW5kZXgudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2hvb2tzL3VzZURpZE1vdW50LnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb25TZWxlY3Rvci50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9Db2xsZWN0aW9uSW5zcGVjdG9yLnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL0Fzc2V0L1JlZ2lzdGVyLnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL0Fzc2V0L2luZGV4LnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL0Fzc2V0L0Fzc2V0Q29sbGVjdGlvbi50cyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL0NhbWVyYS9pbmRleC50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3R5cGVzL3R5cGVzL2FwcC50cyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdHlwZXMvdHlwZXMvYXNzZXQudHMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3R5cGVzL3R5cGVzL2NhbWVyYS50cyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdHlwZXMvdHlwZXMvY29udmVyc2lvbi50cyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdHlwZXMvdHlwZXMvZmxvb3IudHMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3R5cGVzL3R5cGVzL2dyYXBoLnRzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90eXBlcy90eXBlcy9sYWJlbC50cyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdHlwZXMvdHlwZXMvbGluay50cyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdHlwZXMvdHlwZXMvbWF0dGVydGFnLnRzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90eXBlcy90eXBlcy9tb2RlLnRzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90eXBlcy90eXBlcy9tb2RlbC50cyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdHlwZXMvdHlwZXMvcG9pbnRlci50cyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdHlwZXMvdHlwZXMvcm9vbS50cyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdHlwZXMvdHlwZXMvc2Vuc29yLnRzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90eXBlcy90eXBlcy9zd2VlcC50cyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdHlwZXMvdHlwZXMvdGFnLnRzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90eXBlcy90eXBlcy90b3VyLnRzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90eXBlcy90eXBlcy92aWV3LnRzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90eXBlcy90eXBlcy9zY2VuZS50cyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdHlwZXMvdHlwZXMvcGx1Z2luLnRzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90eXBlcy9zaGFyZS9LZXlzLnRzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90eXBlcy9zaGFyZS9LZXlTdGF0ZS50cyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdHlwZXMvc2hhcmUvUG9pbnRlckJ1dHRvbi50cyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL0NvbnZlcnNpb24vQ29udmVyc2lvbldvcmxkVG9TY3JlZW4udHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvQ29udmVyc2lvbi9Db252ZXJzaW9uQmFzaXNDaGFuZ2UudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvQ29udmVyc2lvbi9pbmRleC50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9GbG9vci9GbG9vckdldERhdGEudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvRmxvb3IvRmxvb3JNb3ZlVG8udHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvRmxvb3IvRmxvb3JTaG93QWxsLnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL1Jvd1NwYWNlci50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9PYnNlcnZhYmxlQ29sbGVjdGlvbi50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9FdmVudC50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9GbG9vci9pbmRleC50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9MYWJlbC9MYWJlbEdldERhdGEudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvTGFiZWwvaW5kZXgudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvTGluay9MaW5rQ3JlYXRlLnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL0xpbmsvTGlua1BvbGljeS50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9MaW5rL2luZGV4LnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL01hdHRlcnRhZy9FZGl0SWNvbi50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9NYXR0ZXJ0YWcvUmVnaXN0ZXJJY29uLnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL01hdHRlcnRhZy9pbmRleC50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9NZWFzdXJlbWVudHMvTWVhc3VyZW1lbnRzR2V0RGF0YS50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9NZWFzdXJlbWVudHMvVG9nZ2xlLnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL01lYXN1cmVtZW50cy9pbmRleC50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9Nb2RlbC9Nb2RlbEdldERhdGEudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvTW9kZWwvTW9kZWxHZXREZXRhaWxzLnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL01vZGVsL2luZGV4LnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL1BsdWdpbkxvYWQudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvUGx1Z2luLnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL1BvaW50ZXIvRWRpdFRleHR1cmUudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvUG9pbnRlci9SZWdpc3RlclRleHR1cmUudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvUG9pbnRlci9pbmRleC50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9SZW5kZXJlci9SZW5kZXJlckdldFNjcmVlblBvc2l0aW9uLnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL1JlbmRlcmVyL1JlbmRlcmVyR2V0V29ybGRQb3NpdGlvbkRhdGEudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvUmVuZGVyZXIvaW5kZXgudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvUm9vbS9pbmRleC50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9TY2VuZS9TY2VuZVBhdGgudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvU2NlbmUvU2NlbmVEZXNlcmlhbGl6ZS50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9TY2VuZS9pbmRleC50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9TZW5zb3IvU2Vuc29yQWRkU291cmNlLnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL1NlbnNvci9pbmRleC50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9TZXR0aW5ncy9TZXR0aW5nc0dldC50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9TZXR0aW5ncy9TZXR0aW5nc1VwZGF0ZS50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9TZXR0aW5ncy9pbmRleC50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9Td2VlcC9Td2VlcERpc2FibGUudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvU3dlZXAvU3dlZXBFbmFibGUudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvU3dlZXAvU3dlZXBNb2RpZnlOZWlnaGJvcnMudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvU3dlZXAvaW5kZXgudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvU3dlZXAvU3dlZXBHcmFwaC50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9UYWcvTGF5ZXJTdXBwb3J0LnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL1RhZy9BZGQudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvVGFnL0FsbG93QWN0aW9uLnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL1RhZy9BdHRhY2gudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvVGFnL0VkaXRCaWxsYm9hcmQudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvVGFnL0VkaXRFbmFibGVkLnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL1RhZy9FZGl0Q29sb3IudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvVGFnL0VkaXRTdGVtLnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL1RhZy9FZGl0SWNvbi50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9UYWcvRWRpdE9wYWNpdHkudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvVGFnL0tleXdvcmRzLnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL1RhZy9Nb3ZlLnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL1RhZy9PcGVuLnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL1RhZy9SZWdpc3RlckF0dGFjaG1lbnQudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvVGFnL1JlZ2lzdGVyU2FuZGJveC50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9UYWcvUmVtb3ZlLnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL1RhZy9Ub2dnbGVTZXR0aW5nLnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL1RhZy90YWdTb3J0LnRzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvVGFnL0ltcG9ydFRhZ3MudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL21wLWZvbnQvZGlzdC9mb250cy9tcC1mb250LnRzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL21wLWZvbnQvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9UYWcvU2F2ZVRvTGF5ZXIudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvVGFnL2luZGV4LnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL1RvdXIvVG91ckdldERhdGEudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvVG91ci9Ub3VyQ29udHJvbHMudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvVG91ci9pbmRleC50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9WaWV3L0NyZWF0ZUxheWVyLnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL1ZpZXcvRGVsZXRlTGF5ZXIudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvVmlldy9BY3RpdmF0ZVZpZXcudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvVmlldy9Ub2dnbGVMYXllci50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9WaWV3L0xheWVyQ29udHJvbHMudHN4Iiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL2NvbXBvbmVudHMvVmlldy9pbmRleC50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvY29tcG9uZW50cy9Nb2RlL1ZpZXdtb2RlLnRzeCIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9zZGsvdGVzdC1wYWdlL3NyYy9jb21wb25lbnRzL1JlYWN0Um9vdC50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvdXRpbHMudHMiLCJ3ZWJwYWNrOi8vLy4vY3dmL3NyYy91dGlsL2luZGV4LnRzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3Nkay90ZXN0LXBhZ2Uvc3JjL0NvbmZpZ3VyYXRvci50c3giLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvc2RrL3Rlc3QtcGFnZS9zcmMvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGluUHJvZ3Jlc3MgPSB7fTtcbnZhciBkYXRhV2VicGFja1ByZWZpeCA9IFwibXBfd2ViZ2w6XCI7XG4vLyBsb2FkU2NyaXB0IGZ1bmN0aW9uIHRvIGxvYWQgYSBzY3JpcHQgdmlhIHNjcmlwdCB0YWdcbl9fd2VicGFja19yZXF1aXJlX18ubCA9ICh1cmwsIGRvbmUsIGtleSwgY2h1bmtJZCkgPT4ge1xuXHRpZihpblByb2dyZXNzW3VybF0pIHsgaW5Qcm9ncmVzc1t1cmxdLnB1c2goZG9uZSk7IHJldHVybjsgfVxuXHR2YXIgc2NyaXB0LCBuZWVkQXR0YWNoO1xuXHRpZihrZXkgIT09IHVuZGVmaW5lZCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IHNjcmlwdHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBzID0gc2NyaXB0c1tpXTtcblx0XHRcdGlmKHMuZ2V0QXR0cmlidXRlKFwic3JjXCIpID09IHVybCB8fCBzLmdldEF0dHJpYnV0ZShcImRhdGEtd2VicGFja1wiKSA9PSBkYXRhV2VicGFja1ByZWZpeCArIGtleSkgeyBzY3JpcHQgPSBzOyBicmVhazsgfVxuXHRcdH1cblx0fVxuXHRpZighc2NyaXB0KSB7XG5cdFx0bmVlZEF0dGFjaCA9IHRydWU7XG5cdFx0c2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG5cblx0XHRzY3JpcHQuY2hhcnNldCA9ICd1dGYtOCc7XG5cdFx0c2NyaXB0LnRpbWVvdXQgPSAxMjA7XG5cdFx0aWYgKF9fd2VicGFja19yZXF1aXJlX18ubmMpIHtcblx0XHRcdHNjcmlwdC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBfX3dlYnBhY2tfcmVxdWlyZV9fLm5jKTtcblx0XHR9XG5cdFx0c2NyaXB0LnNldEF0dHJpYnV0ZShcImRhdGEtd2VicGFja1wiLCBkYXRhV2VicGFja1ByZWZpeCArIGtleSk7XG5cblx0XHRzY3JpcHQuc3JjID0gdXJsO1xuXHR9XG5cdGluUHJvZ3Jlc3NbdXJsXSA9IFtkb25lXTtcblx0dmFyIG9uU2NyaXB0Q29tcGxldGUgPSAocHJldiwgZXZlbnQpID0+IHtcblx0XHQvLyBhdm9pZCBtZW0gbGVha3MgaW4gSUUuXG5cdFx0c2NyaXB0Lm9uZXJyb3IgPSBzY3JpcHQub25sb2FkID0gbnVsbDtcblx0XHRjbGVhclRpbWVvdXQodGltZW91dCk7XG5cdFx0dmFyIGRvbmVGbnMgPSBpblByb2dyZXNzW3VybF07XG5cdFx0ZGVsZXRlIGluUHJvZ3Jlc3NbdXJsXTtcblx0XHRzY3JpcHQucGFyZW50Tm9kZSAmJiBzY3JpcHQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzY3JpcHQpO1xuXHRcdGRvbmVGbnMgJiYgZG9uZUZucy5mb3JFYWNoKChmbikgPT4gKGZuKGV2ZW50KSkpO1xuXHRcdGlmKHByZXYpIHJldHVybiBwcmV2KGV2ZW50KTtcblx0fVxuXHR2YXIgdGltZW91dCA9IHNldFRpbWVvdXQob25TY3JpcHRDb21wbGV0ZS5iaW5kKG51bGwsIHVuZGVmaW5lZCwgeyB0eXBlOiAndGltZW91dCcsIHRhcmdldDogc2NyaXB0IH0pLCAxMjAwMDApO1xuXHRzY3JpcHQub25lcnJvciA9IG9uU2NyaXB0Q29tcGxldGUuYmluZChudWxsLCBzY3JpcHQub25lcnJvcik7XG5cdHNjcmlwdC5vbmxvYWQgPSBvblNjcmlwdENvbXBsZXRlLmJpbmQobnVsbCwgc2NyaXB0Lm9ubG9hZCk7XG5cdG5lZWRBdHRhY2ggJiYgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzY3JpcHQpO1xufTsiLCIvKipcbiAqIEBsaWNlbnNlIFJlYWN0XG4gKiByZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuLypcbiBNb2Rlcm5penIgMy4wLjBwcmUgKEN1c3RvbSBCdWlsZCkgfCBNSVRcbiovXG4ndXNlIHN0cmljdCc7dmFyIGFhPXJlcXVpcmUoXCJyZWFjdFwiKSxiYT1yZXF1aXJlKFwic2NoZWR1bGVyXCIpO2Z1bmN0aW9uIHAoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9dmFyIGNhPW5ldyBTZXQsZGE9e307ZnVuY3Rpb24gZWEoYSxiKXtmYShhLGIpO2ZhKGErXCJDYXB0dXJlXCIsYil9XG5mdW5jdGlvbiBmYShhLGIpe2RhW2FdPWI7Zm9yKGE9MDthPGIubGVuZ3RoO2ErKyljYS5hZGQoYlthXSl9XG52YXIgaGE9IShcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnR8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpLGlhPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksamE9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLGthPVxue30sbGE9e307ZnVuY3Rpb24gbWEoYSl7aWYoaWEuY2FsbChsYSxhKSlyZXR1cm4hMDtpZihpYS5jYWxsKGthLGEpKXJldHVybiExO2lmKGphLnRlc3QoYSkpcmV0dXJuIGxhW2FdPSEwO2thW2FdPSEwO3JldHVybiExfWZ1bmN0aW9uIG5hKGEsYixjLGQpe2lmKG51bGwhPT1jJiYwPT09Yy50eXBlKXJldHVybiExO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImZ1bmN0aW9uXCI6Y2FzZSBcInN5bWJvbFwiOnJldHVybiEwO2Nhc2UgXCJib29sZWFuXCI6aWYoZClyZXR1cm4hMTtpZihudWxsIT09YylyZXR1cm4hYy5hY2NlcHRzQm9vbGVhbnM7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCIhPT1hJiZcImFyaWEtXCIhPT1hO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gb2EoYSxiLGMsZCl7aWYobnVsbD09PWJ8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYnx8bmEoYSxiLGMsZCkpcmV0dXJuITA7aWYoZClyZXR1cm4hMTtpZihudWxsIT09Yylzd2l0Y2goYy50eXBlKXtjYXNlIDM6cmV0dXJuIWI7Y2FzZSA0OnJldHVybiExPT09YjtjYXNlIDU6cmV0dXJuIGlzTmFOKGIpO2Nhc2UgNjpyZXR1cm4gaXNOYU4oYil8fDE+Yn1yZXR1cm4hMX1mdW5jdGlvbiBxKGEsYixjLGQsZSxmLGcpe3RoaXMuYWNjZXB0c0Jvb2xlYW5zPTI9PT1ifHwzPT09Ynx8ND09PWI7dGhpcy5hdHRyaWJ1dGVOYW1lPWQ7dGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2U9ZTt0aGlzLm11c3RVc2VQcm9wZXJ0eT1jO3RoaXMucHJvcGVydHlOYW1lPWE7dGhpcy50eXBlPWI7dGhpcy5zYW5pdGl6ZVVSTD1mO3RoaXMucmVtb3ZlRW1wdHlTdHJpbmc9Z312YXIgej17fTtcblwiY2hpbGRyZW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgZGVmYXVsdFZhbHVlIGRlZmF1bHRDaGVja2VkIGlubmVySFRNTCBzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmcgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIHN0eWxlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7elthXT1uZXcgcShhLDAsITEsYSxudWxsLCExLCExKX0pO1tbXCJhY2NlcHRDaGFyc2V0XCIsXCJhY2NlcHQtY2hhcnNldFwiXSxbXCJjbGFzc05hbWVcIixcImNsYXNzXCJdLFtcImh0bWxGb3JcIixcImZvclwiXSxbXCJodHRwRXF1aXZcIixcImh0dHAtZXF1aXZcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXTt6W2JdPW5ldyBxKGIsMSwhMSxhWzFdLG51bGwsITEsITEpfSk7W1wiY29udGVudEVkaXRhYmxlXCIsXCJkcmFnZ2FibGVcIixcInNwZWxsQ2hlY2tcIixcInZhbHVlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7elthXT1uZXcgcShhLDIsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7XG5bXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwiZm9jdXNhYmxlXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7elthXT1uZXcgcShhLDIsITEsYSxudWxsLCExLCExKX0pO1wiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGRpc2FibGVQaWN0dXJlSW5QaWN0dXJlIGRpc2FibGVSZW1vdGVQbGF5YmFjayBmb3JtTm9WYWxpZGF0ZSBoaWRkZW4gbG9vcCBub01vZHVsZSBub1ZhbGlkYXRlIG9wZW4gcGxheXNJbmxpbmUgcmVhZE9ubHkgcmVxdWlyZWQgcmV2ZXJzZWQgc2NvcGVkIHNlYW1sZXNzIGl0ZW1TY29wZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHEoYSwzLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuW1wiY2hlY2tlZFwiLFwibXVsdGlwbGVcIixcIm11dGVkXCIsXCJzZWxlY3RlZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHEoYSwzLCEwLGEsbnVsbCwhMSwhMSl9KTtbXCJjYXB0dXJlXCIsXCJkb3dubG9hZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHEoYSw0LCExLGEsbnVsbCwhMSwhMSl9KTtbXCJjb2xzXCIsXCJyb3dzXCIsXCJzaXplXCIsXCJzcGFuXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7elthXT1uZXcgcShhLDYsITEsYSxudWxsLCExLCExKX0pO1tcInJvd1NwYW5cIixcInN0YXJ0XCJdLmZvckVhY2goZnVuY3Rpb24oYSl7elthXT1uZXcgcShhLDUsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7dmFyIHBhPS9bXFwtOl0oW2Etel0pL2c7ZnVuY3Rpb24gcWEoYSl7cmV0dXJuIGFbMV0udG9VcHBlckNhc2UoKX1cblwiYWNjZW50LWhlaWdodCBhbGlnbm1lbnQtYmFzZWxpbmUgYXJhYmljLWZvcm0gYmFzZWxpbmUtc2hpZnQgY2FwLWhlaWdodCBjbGlwLXBhdGggY2xpcC1ydWxlIGNvbG9yLWludGVycG9sYXRpb24gY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzIGNvbG9yLXByb2ZpbGUgY29sb3ItcmVuZGVyaW5nIGRvbWluYW50LWJhc2VsaW5lIGVuYWJsZS1iYWNrZ3JvdW5kIGZpbGwtb3BhY2l0eSBmaWxsLXJ1bGUgZmxvb2QtY29sb3IgZmxvb2Qtb3BhY2l0eSBmb250LWZhbWlseSBmb250LXNpemUgZm9udC1zaXplLWFkanVzdCBmb250LXN0cmV0Y2ggZm9udC1zdHlsZSBmb250LXZhcmlhbnQgZm9udC13ZWlnaHQgZ2x5cGgtbmFtZSBnbHlwaC1vcmllbnRhdGlvbi1ob3Jpem9udGFsIGdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsIGhvcml6LWFkdi14IGhvcml6LW9yaWdpbi14IGltYWdlLXJlbmRlcmluZyBsZXR0ZXItc3BhY2luZyBsaWdodGluZy1jb2xvciBtYXJrZXItZW5kIG1hcmtlci1taWQgbWFya2VyLXN0YXJ0IG92ZXJsaW5lLXBvc2l0aW9uIG92ZXJsaW5lLXRoaWNrbmVzcyBwYWludC1vcmRlciBwYW5vc2UtMSBwb2ludGVyLWV2ZW50cyByZW5kZXJpbmctaW50ZW50IHNoYXBlLXJlbmRlcmluZyBzdG9wLWNvbG9yIHN0b3Atb3BhY2l0eSBzdHJpa2V0aHJvdWdoLXBvc2l0aW9uIHN0cmlrZXRocm91Z2gtdGhpY2tuZXNzIHN0cm9rZS1kYXNoYXJyYXkgc3Ryb2tlLWRhc2hvZmZzZXQgc3Ryb2tlLWxpbmVjYXAgc3Ryb2tlLWxpbmVqb2luIHN0cm9rZS1taXRlcmxpbWl0IHN0cm9rZS1vcGFjaXR5IHN0cm9rZS13aWR0aCB0ZXh0LWFuY2hvciB0ZXh0LWRlY29yYXRpb24gdGV4dC1yZW5kZXJpbmcgdW5kZXJsaW5lLXBvc2l0aW9uIHVuZGVybGluZS10aGlja25lc3MgdW5pY29kZS1iaWRpIHVuaWNvZGUtcmFuZ2UgdW5pdHMtcGVyLWVtIHYtYWxwaGFiZXRpYyB2LWhhbmdpbmcgdi1pZGVvZ3JhcGhpYyB2LW1hdGhlbWF0aWNhbCB2ZWN0b3ItZWZmZWN0IHZlcnQtYWR2LXkgdmVydC1vcmlnaW4teCB2ZXJ0LW9yaWdpbi15IHdvcmQtc3BhY2luZyB3cml0aW5nLW1vZGUgeG1sbnM6eGxpbmsgeC1oZWlnaHRcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UocGEsXG5xYSk7eltiXT1uZXcgcShiLDEsITEsYSxudWxsLCExLCExKX0pO1wieGxpbms6YWN0dWF0ZSB4bGluazphcmNyb2xlIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHBhLHFhKTt6W2JdPW5ldyBxKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCExLCExKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHBhLHFhKTt6W2JdPW5ldyBxKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIsITEsITEpfSk7W1widGFiSW5kZXhcIixcImNyb3NzT3JpZ2luXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7elthXT1uZXcgcShhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7XG56LnhsaW5rSHJlZj1uZXcgcShcInhsaW5rSHJlZlwiLDEsITEsXCJ4bGluazpocmVmXCIsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITAsITEpO1tcInNyY1wiLFwiaHJlZlwiLFwiYWN0aW9uXCIsXCJmb3JtQWN0aW9uXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7elthXT1uZXcgcShhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITAsITApfSk7XG5mdW5jdGlvbiByYShhLGIsYyxkKXt2YXIgZT16Lmhhc093blByb3BlcnR5KGIpP3pbYl06bnVsbDtpZihudWxsIT09ZT8wIT09ZS50eXBlOmR8fCEoMjxiLmxlbmd0aCl8fFwib1wiIT09YlswXSYmXCJPXCIhPT1iWzBdfHxcIm5cIiE9PWJbMV0mJlwiTlwiIT09YlsxXSlvYShiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/bWEoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpfVxudmFyIHNhPWFhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVELHRhPVN5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpLHVhPVN5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIiksdmE9U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpLHdhPVN5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKSx4YT1TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIikseWE9U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpLEFhPVN5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpLEJhPVN5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKSxDYT1TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIiksRGE9U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlX2xpc3RcIiksRWE9U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIiksRmE9U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik7U3ltYm9sLmZvcihcInJlYWN0LnNjb3BlXCIpO1N5bWJvbC5mb3IoXCJyZWFjdC5kZWJ1Z190cmFjZV9tb2RlXCIpO1xudmFyIEdhPVN5bWJvbC5mb3IoXCJyZWFjdC5vZmZzY3JlZW5cIik7U3ltYm9sLmZvcihcInJlYWN0LmxlZ2FjeV9oaWRkZW5cIik7U3ltYm9sLmZvcihcInJlYWN0LmNhY2hlXCIpO1N5bWJvbC5mb3IoXCJyZWFjdC50cmFjaW5nX21hcmtlclwiKTt2YXIgSGE9U3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIElhKGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT1IYSYmYVtIYV18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH12YXIgQT1PYmplY3QuYXNzaWduLEphO2Z1bmN0aW9uIEthKGEpe2lmKHZvaWQgMD09PUphKXRyeXt0aHJvdyBFcnJvcigpO31jYXRjaChjKXt2YXIgYj1jLnN0YWNrLnRyaW0oKS5tYXRjaCgvXFxuKCAqKGF0ICk/KS8pO0phPWImJmJbMV18fFwiXCJ9cmV0dXJuXCJcXG5cIitKYSthfXZhciBMYT0hMTtcbmZ1bmN0aW9uIE1hKGEsYil7aWYoIWF8fExhKXJldHVyblwiXCI7TGE9ITA7dmFyIGM9RXJyb3IucHJlcGFyZVN0YWNrVHJhY2U7RXJyb3IucHJlcGFyZVN0YWNrVHJhY2U9dm9pZCAwO3RyeXtpZihiKWlmKGI9ZnVuY3Rpb24oKXt0aHJvdyBFcnJvcigpO30sT2JqZWN0LmRlZmluZVByb3BlcnR5KGIucHJvdG90eXBlLFwicHJvcHNcIix7c2V0OmZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoKTt9fSksXCJvYmplY3RcIj09PXR5cGVvZiBSZWZsZWN0JiZSZWZsZWN0LmNvbnN0cnVjdCl7dHJ5e1JlZmxlY3QuY29uc3RydWN0KGIsW10pfWNhdGNoKGwpe3ZhciBkPWx9UmVmbGVjdC5jb25zdHJ1Y3QoYSxbXSxiKX1lbHNle3RyeXtiLmNhbGwoKX1jYXRjaChsKXtkPWx9YS5jYWxsKGIucHJvdG90eXBlKX1lbHNle3RyeXt0aHJvdyBFcnJvcigpO31jYXRjaChsKXtkPWx9YSgpfX1jYXRjaChsKXtpZihsJiZkJiZcInN0cmluZ1wiPT09dHlwZW9mIGwuc3RhY2spe2Zvcih2YXIgZT1sLnN0YWNrLnNwbGl0KFwiXFxuXCIpLFxuZj1kLnN0YWNrLnNwbGl0KFwiXFxuXCIpLGc9ZS5sZW5ndGgtMSxoPWYubGVuZ3RoLTE7MTw9ZyYmMDw9aCYmZVtnXSE9PWZbaF07KWgtLTtmb3IoOzE8PWcmJjA8PWg7Zy0tLGgtLSlpZihlW2ddIT09ZltoXSl7aWYoMSE9PWd8fDEhPT1oKXtkbyBpZihnLS0saC0tLDA+aHx8ZVtnXSE9PWZbaF0pe3ZhciBrPVwiXFxuXCIrZVtnXS5yZXBsYWNlKFwiIGF0IG5ldyBcIixcIiBhdCBcIik7YS5kaXNwbGF5TmFtZSYmay5pbmNsdWRlcyhcIjxhbm9ueW1vdXM+XCIpJiYoaz1rLnJlcGxhY2UoXCI8YW5vbnltb3VzPlwiLGEuZGlzcGxheU5hbWUpKTtyZXR1cm4ga313aGlsZSgxPD1nJiYwPD1oKX1icmVha319fWZpbmFsbHl7TGE9ITEsRXJyb3IucHJlcGFyZVN0YWNrVHJhY2U9Y31yZXR1cm4oYT1hP2EuZGlzcGxheU5hbWV8fGEubmFtZTpcIlwiKT9LYShhKTpcIlwifVxuZnVuY3Rpb24gTmEoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDU6cmV0dXJuIEthKGEudHlwZSk7Y2FzZSAxNjpyZXR1cm4gS2EoXCJMYXp5XCIpO2Nhc2UgMTM6cmV0dXJuIEthKFwiU3VzcGVuc2VcIik7Y2FzZSAxOTpyZXR1cm4gS2EoXCJTdXNwZW5zZUxpc3RcIik7Y2FzZSAwOmNhc2UgMjpjYXNlIDE1OnJldHVybiBhPU1hKGEudHlwZSwhMSksYTtjYXNlIDExOnJldHVybiBhPU1hKGEudHlwZS5yZW5kZXIsITEpLGE7Y2FzZSAxOnJldHVybiBhPU1hKGEudHlwZSwhMCksYTtkZWZhdWx0OnJldHVyblwiXCJ9fVxuZnVuY3Rpb24gT2EoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSB2YTpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSB1YTpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgeGE6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2Ugd2E6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBDYTpyZXR1cm5cIlN1c3BlbnNlXCI7Y2FzZSBEYTpyZXR1cm5cIlN1c3BlbnNlTGlzdFwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBBYTpyZXR1cm4oYS5kaXNwbGF5TmFtZXx8XCJDb250ZXh0XCIpK1wiLkNvbnN1bWVyXCI7Y2FzZSB5YTpyZXR1cm4oYS5fY29udGV4dC5kaXNwbGF5TmFtZXx8XCJDb250ZXh0XCIpK1wiLlByb3ZpZGVyXCI7Y2FzZSBCYTp2YXIgYj1hLnJlbmRlcjthPWEuZGlzcGxheU5hbWU7YXx8KGE9Yi5kaXNwbGF5TmFtZXx8XG5iLm5hbWV8fFwiXCIsYT1cIlwiIT09YT9cIkZvcndhcmRSZWYoXCIrYStcIilcIjpcIkZvcndhcmRSZWZcIik7cmV0dXJuIGE7Y2FzZSBFYTpyZXR1cm4gYj1hLmRpc3BsYXlOYW1lfHxudWxsLG51bGwhPT1iP2I6T2EoYS50eXBlKXx8XCJNZW1vXCI7Y2FzZSBGYTpiPWEuX3BheWxvYWQ7YT1hLl9pbml0O3RyeXtyZXR1cm4gT2EoYShiKSl9Y2F0Y2goYyl7fX1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIFBhKGEpe3ZhciBiPWEudHlwZTtzd2l0Y2goYS50YWcpe2Nhc2UgMjQ6cmV0dXJuXCJDYWNoZVwiO2Nhc2UgOTpyZXR1cm4oYi5kaXNwbGF5TmFtZXx8XCJDb250ZXh0XCIpK1wiLkNvbnN1bWVyXCI7Y2FzZSAxMDpyZXR1cm4oYi5fY29udGV4dC5kaXNwbGF5TmFtZXx8XCJDb250ZXh0XCIpK1wiLlByb3ZpZGVyXCI7Y2FzZSAxODpyZXR1cm5cIkRlaHlkcmF0ZWRGcmFnbWVudFwiO2Nhc2UgMTE6cmV0dXJuIGE9Yi5yZW5kZXIsYT1hLmRpc3BsYXlOYW1lfHxhLm5hbWV8fFwiXCIsYi5kaXNwbGF5TmFtZXx8KFwiXCIhPT1hP1wiRm9yd2FyZFJlZihcIithK1wiKVwiOlwiRm9yd2FyZFJlZlwiKTtjYXNlIDc6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2UgNTpyZXR1cm4gYjtjYXNlIDQ6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIDM6cmV0dXJuXCJSb290XCI7Y2FzZSA2OnJldHVyblwiVGV4dFwiO2Nhc2UgMTY6cmV0dXJuIE9hKGIpO2Nhc2UgODpyZXR1cm4gYj09PXdhP1wiU3RyaWN0TW9kZVwiOlwiTW9kZVwiO2Nhc2UgMjI6cmV0dXJuXCJPZmZzY3JlZW5cIjtcbmNhc2UgMTI6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2UgMjE6cmV0dXJuXCJTY29wZVwiO2Nhc2UgMTM6cmV0dXJuXCJTdXNwZW5zZVwiO2Nhc2UgMTk6cmV0dXJuXCJTdXNwZW5zZUxpc3RcIjtjYXNlIDI1OnJldHVyblwiVHJhY2luZ01hcmtlclwiO2Nhc2UgMTpjYXNlIDA6Y2FzZSAxNzpjYXNlIDI6Y2FzZSAxNDpjYXNlIDE1OmlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXJldHVybiBiLmRpc3BsYXlOYW1lfHxiLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBiKXJldHVybiBifXJldHVybiBudWxsfWZ1bmN0aW9uIFFhKGEpe3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSBcImJvb2xlYW5cIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtjYXNlIFwib2JqZWN0XCI6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1cbmZ1bmN0aW9uIFJhKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiBTYShhKXt2YXIgYj1SYShhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24gVGEoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPVNhKGEpKX1mdW5jdGlvbiBVYShhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9UmEoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX1mdW5jdGlvbiBWYShhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19XG5mdW5jdGlvbiBXYShhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gQSh7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9ZnVuY3Rpb24gWGEoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9UWEobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiBZYShhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJnJhKGEsXCJjaGVja2VkXCIsYiwhMSl9XG5mdW5jdGlvbiBaYShhLGIpe1lhKGEsYik7dmFyIGM9UWEoYi52YWx1ZSksZD1iLnR5cGU7aWYobnVsbCE9YylpZihcIm51bWJlclwiPT09ZCl7aWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlfHxhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIGlmKFwic3VibWl0XCI9PT1kfHxcInJlc2V0XCI9PT1kKXthLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO3JldHVybn1iLmhhc093blByb3BlcnR5KFwidmFsdWVcIik/JGEoYSxiLnR5cGUsYyk6Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSYmJGEoYSxiLnR5cGUsUWEoYi5kZWZhdWx0VmFsdWUpKTtudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBhYihhLGIsYyl7aWYoYi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpfHxiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpKXt2YXIgZD1iLnR5cGU7aWYoIShcInN1Ym1pdFwiIT09ZCYmXCJyZXNldFwiIT09ZHx8dm9pZCAwIT09Yi52YWx1ZSYmbnVsbCE9PWIudmFsdWUpKXJldHVybjtiPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTtjfHxiPT09YS52YWx1ZXx8KGEudmFsdWU9Yik7YS5kZWZhdWx0VmFsdWU9Yn1jPWEubmFtZTtcIlwiIT09YyYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSEhYS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkO1wiXCIhPT1jJiYoYS5uYW1lPWMpfVxuZnVuY3Rpb24gJGEoYSxiLGMpe2lmKFwibnVtYmVyXCIhPT1ifHxWYShhLm93bmVyRG9jdW1lbnQpIT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9dmFyIGJiPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiBjYihhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrUWEoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIGRiKGEsYil7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl0aHJvdyBFcnJvcihwKDkxKSk7cmV0dXJuIEEoe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gZWIoYSxiKXt2YXIgYz1iLnZhbHVlO2lmKG51bGw9PWMpe2M9Yi5jaGlsZHJlbjtiPWIuZGVmYXVsdFZhbHVlO2lmKG51bGwhPWMpe2lmKG51bGwhPWIpdGhyb3cgRXJyb3IocCg5MikpO2lmKGJiKGMpKXtpZigxPGMubGVuZ3RoKXRocm93IEVycm9yKHAoOTMpKTtjPWNbMF19Yj1jfW51bGw9PWImJihiPVwiXCIpO2M9Yn1hLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTpRYShjKX19XG5mdW5jdGlvbiBmYihhLGIpe3ZhciBjPVFhKGIudmFsdWUpLGQ9UWEoYi5kZWZhdWx0VmFsdWUpO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09YyYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1kJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitkKX1mdW5jdGlvbiBnYihhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiZcIlwiIT09YiYmbnVsbCE9PWImJihhLnZhbHVlPWIpfWZ1bmN0aW9uIGhiKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19XG5mdW5jdGlvbiBpYihhLGIpe3JldHVybiBudWxsPT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/aGIoYik6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPT09YSYmXCJmb3JlaWduT2JqZWN0XCI9PT1iP1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiOmF9XG52YXIgamIsa2I9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiE9PWEubmFtZXNwYWNlVVJJfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7amI9amJ8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7amIuaW5uZXJIVE1MPVwiPHN2Zz5cIitiLnZhbHVlT2YoKS50b1N0cmluZygpK1wiPC9zdmc+XCI7Zm9yKGI9amIuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24gbGIoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1cbnZhciBtYj17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYXNwZWN0UmF0aW86ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkQXJlYTohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLFxuem9vbTohMCxmaWxsT3BhY2l0eTohMCxmbG9vZE9wYWNpdHk6ITAsc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxuYj1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMobWIpLmZvckVhY2goZnVuY3Rpb24oYSl7bmIuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTttYltiXT1tYlthXX0pfSk7ZnVuY3Rpb24gb2IoYSxiLGMpe3JldHVybiBudWxsPT1ifHxcImJvb2xlYW5cIj09PXR5cGVvZiBifHxcIlwiPT09Yj9cIlwiOmN8fFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MD09PWJ8fG1iLmhhc093blByb3BlcnR5KGEpJiZtYlthXT8oXCJcIitiKS50cmltKCk6YitcInB4XCJ9XG5mdW5jdGlvbiBwYihhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIiksZT1vYihjLGJbY10sZCk7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciBxYj1BKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gcmIoYSxiKXtpZihiKXtpZihxYlthXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHAoMTM3LGEpKTtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXtpZihudWxsIT1iLmNoaWxkcmVuKXRocm93IEVycm9yKHAoNjApKTtpZihcIm9iamVjdFwiIT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUx8fCEoXCJfX2h0bWxcImluIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHAoNjEpKTt9aWYobnVsbCE9Yi5zdHlsZSYmXCJvYmplY3RcIiE9PXR5cGVvZiBiLnN0eWxlKXRocm93IEVycm9yKHAoNjIpKTt9fVxuZnVuY3Rpb24gc2IoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fXZhciB0Yj1udWxsO2Z1bmN0aW9uIHViKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX12YXIgdmI9bnVsbCx3Yj1udWxsLHhiPW51bGw7XG5mdW5jdGlvbiB5YihhKXtpZihhPXpiKGEpKXtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgdmIpdGhyb3cgRXJyb3IocCgyODApKTt2YXIgYj1hLnN0YXRlTm9kZTtiJiYoYj1BYihiKSx2YihhLnN0YXRlTm9kZSxhLnR5cGUsYikpfX1mdW5jdGlvbiBCYihhKXt3Yj94Yj94Yi5wdXNoKGEpOnhiPVthXTp3Yj1hfWZ1bmN0aW9uIENiKCl7aWYod2Ipe3ZhciBhPXdiLGI9eGI7eGI9d2I9bnVsbDt5YihhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspeWIoYlthXSl9fWZ1bmN0aW9uIERiKGEsYil7cmV0dXJuIGEoYil9ZnVuY3Rpb24gRWIoKXt9dmFyIEZiPSExO2Z1bmN0aW9uIEdiKGEsYixjKXtpZihGYilyZXR1cm4gYShiLGMpO0ZiPSEwO3RyeXtyZXR1cm4gRGIoYSxiLGMpfWZpbmFsbHl7aWYoRmI9ITEsbnVsbCE9PXdifHxudWxsIT09eGIpRWIoKSxDYigpfX1cbmZ1bmN0aW9uIEhiKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7dmFyIGQ9QWIoYyk7aWYobnVsbD09PWQpcmV0dXJuIG51bGw7Yz1kW2JdO2E6c3dpdGNoKGIpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRW50ZXJcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2lmKGMmJlwiZnVuY3Rpb25cIiE9PVxudHlwZW9mIGMpdGhyb3cgRXJyb3IocCgyMzEsYix0eXBlb2YgYykpO3JldHVybiBjfXZhciBJYj0hMTtpZihoYSl0cnl7dmFyIEpiPXt9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShKYixcInBhc3NpdmVcIix7Z2V0OmZ1bmN0aW9uKCl7SWI9ITB9fSk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJ0ZXN0XCIsSmIsSmIpO3dpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwidGVzdFwiLEpiLEpiKX1jYXRjaChhKXtJYj0hMX1mdW5jdGlvbiBLYihhLGIsYyxkLGUsZixnLGgsayl7dmFyIGw9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsbCl9Y2F0Y2gobSl7dGhpcy5vbkVycm9yKG0pfX12YXIgTGI9ITEsTWI9bnVsbCxOYj0hMSxPYj1udWxsLFBiPXtvbkVycm9yOmZ1bmN0aW9uKGEpe0xiPSEwO01iPWF9fTtmdW5jdGlvbiBRYihhLGIsYyxkLGUsZixnLGgsayl7TGI9ITE7TWI9bnVsbDtLYi5hcHBseShQYixhcmd1bWVudHMpfVxuZnVuY3Rpb24gUmIoYSxiLGMsZCxlLGYsZyxoLGspe1FiLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihMYil7aWYoTGIpe3ZhciBsPU1iO0xiPSExO01iPW51bGx9ZWxzZSB0aHJvdyBFcnJvcihwKDE5OCkpO05ifHwoTmI9ITAsT2I9bCl9fWZ1bmN0aW9uIFNiKGEpe3ZhciBiPWEsYz1hO2lmKGEuYWx0ZXJuYXRlKWZvcig7Yi5yZXR1cm47KWI9Yi5yZXR1cm47ZWxzZXthPWI7ZG8gYj1hLDAhPT0oYi5mbGFncyY0MDk4KSYmKGM9Yi5yZXR1cm4pLGE9Yi5yZXR1cm47d2hpbGUoYSl9cmV0dXJuIDM9PT1iLnRhZz9jOm51bGx9ZnVuY3Rpb24gVGIoYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9YS5tZW1vaXplZFN0YXRlO251bGw9PT1iJiYoYT1hLmFsdGVybmF0ZSxudWxsIT09YSYmKGI9YS5tZW1vaXplZFN0YXRlKSk7aWYobnVsbCE9PWIpcmV0dXJuIGIuZGVoeWRyYXRlZH1yZXR1cm4gbnVsbH1mdW5jdGlvbiBVYihhKXtpZihTYihhKSE9PWEpdGhyb3cgRXJyb3IocCgxODgpKTt9XG5mdW5jdGlvbiBWYihhKXt2YXIgYj1hLmFsdGVybmF0ZTtpZighYil7Yj1TYihhKTtpZihudWxsPT09Yil0aHJvdyBFcnJvcihwKDE4OCkpO3JldHVybiBiIT09YT9udWxsOmF9Zm9yKHZhciBjPWEsZD1iOzspe3ZhciBlPWMucmV0dXJuO2lmKG51bGw9PT1lKWJyZWFrO3ZhciBmPWUuYWx0ZXJuYXRlO2lmKG51bGw9PT1mKXtkPWUucmV0dXJuO2lmKG51bGwhPT1kKXtjPWQ7Y29udGludWV9YnJlYWt9aWYoZS5jaGlsZD09PWYuY2hpbGQpe2ZvcihmPWUuY2hpbGQ7Zjspe2lmKGY9PT1jKXJldHVybiBVYihlKSxhO2lmKGY9PT1kKXJldHVybiBVYihlKSxiO2Y9Zi5zaWJsaW5nfXRocm93IEVycm9yKHAoMTg4KSk7fWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2Zvcih2YXIgZz0hMSxoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PVxuYyl7Zz0hMDtjPWY7ZD1lO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZjtjPWU7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpdGhyb3cgRXJyb3IocCgxODkpKTt9fWlmKGMuYWx0ZXJuYXRlIT09ZCl0aHJvdyBFcnJvcihwKDE5MCkpO31pZigzIT09Yy50YWcpdGhyb3cgRXJyb3IocCgxODgpKTtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIFdiKGEpe2E9VmIoYSk7cmV0dXJuIG51bGwhPT1hP1hiKGEpOm51bGx9ZnVuY3Rpb24gWGIoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGE7Zm9yKGE9YS5jaGlsZDtudWxsIT09YTspe3ZhciBiPVhiKGEpO2lmKG51bGwhPT1iKXJldHVybiBiO2E9YS5zaWJsaW5nfXJldHVybiBudWxsfVxudmFyIFliPWJhLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2ssWmI9YmEudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2ssJGI9YmEudW5zdGFibGVfc2hvdWxkWWllbGQsYWM9YmEudW5zdGFibGVfcmVxdWVzdFBhaW50LEQ9YmEudW5zdGFibGVfbm93LGJjPWJhLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsLGNjPWJhLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LGRjPWJhLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LGVjPWJhLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LGZjPWJhLnVuc3RhYmxlX0xvd1ByaW9yaXR5LGdjPWJhLnVuc3RhYmxlX0lkbGVQcmlvcml0eSxoYz1udWxsLGljPW51bGw7ZnVuY3Rpb24gamMoYSl7aWYoaWMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBpYy5vbkNvbW1pdEZpYmVyUm9vdCl0cnl7aWMub25Db21taXRGaWJlclJvb3QoaGMsYSx2b2lkIDAsMTI4PT09KGEuY3VycmVudC5mbGFncyYxMjgpKX1jYXRjaChiKXt9fVxudmFyIGxjPU1hdGguY2x6MzI/TWF0aC5jbHozMjprYyxtYz1NYXRoLmxvZyxuYz1NYXRoLkxOMjtmdW5jdGlvbiBrYyhhKXthPj4+PTA7cmV0dXJuIDA9PT1hPzMyOjMxLShtYyhhKS9uY3wwKXwwfXZhciBvYz02NCxwYz00MTk0MzA0O1xuZnVuY3Rpb24gcWMoYSl7c3dpdGNoKGEmLWEpe2Nhc2UgMTpyZXR1cm4gMTtjYXNlIDI6cmV0dXJuIDI7Y2FzZSA0OnJldHVybiA0O2Nhc2UgODpyZXR1cm4gODtjYXNlIDE2OnJldHVybiAxNjtjYXNlIDMyOnJldHVybiAzMjtjYXNlIDY0OmNhc2UgMTI4OmNhc2UgMjU2OmNhc2UgNTEyOmNhc2UgMTAyNDpjYXNlIDIwNDg6Y2FzZSA0MDk2OmNhc2UgODE5MjpjYXNlIDE2Mzg0OmNhc2UgMzI3Njg6Y2FzZSA2NTUzNjpjYXNlIDEzMTA3MjpjYXNlIDI2MjE0NDpjYXNlIDUyNDI4ODpjYXNlIDEwNDg1NzY6Y2FzZSAyMDk3MTUyOnJldHVybiBhJjQxOTQyNDA7Y2FzZSA0MTk0MzA0OmNhc2UgODM4ODYwODpjYXNlIDE2Nzc3MjE2OmNhc2UgMzM1NTQ0MzI6Y2FzZSA2NzEwODg2NDpyZXR1cm4gYSYxMzAwMjM0MjQ7Y2FzZSAxMzQyMTc3Mjg6cmV0dXJuIDEzNDIxNzcyODtjYXNlIDI2ODQzNTQ1NjpyZXR1cm4gMjY4NDM1NDU2O2Nhc2UgNTM2ODcwOTEyOnJldHVybiA1MzY4NzA5MTI7Y2FzZSAxMDczNzQxODI0OnJldHVybiAxMDczNzQxODI0O1xuZGVmYXVsdDpyZXR1cm4gYX19ZnVuY3Rpb24gcmMoYSxiKXt2YXIgYz1hLnBlbmRpbmdMYW5lcztpZigwPT09YylyZXR1cm4gMDt2YXIgZD0wLGU9YS5zdXNwZW5kZWRMYW5lcyxmPWEucGluZ2VkTGFuZXMsZz1jJjI2ODQzNTQ1NTtpZigwIT09Zyl7dmFyIGg9ZyZ+ZTswIT09aD9kPXFjKGgpOihmJj1nLDAhPT1mJiYoZD1xYyhmKSkpfWVsc2UgZz1jJn5lLDAhPT1nP2Q9cWMoZyk6MCE9PWYmJihkPXFjKGYpKTtpZigwPT09ZClyZXR1cm4gMDtpZigwIT09YiYmYiE9PWQmJjA9PT0oYiZlKSYmKGU9ZCYtZCxmPWImLWIsZT49Znx8MTY9PT1lJiYwIT09KGYmNDE5NDI0MCkpKXJldHVybiBiOzAhPT0oZCY0KSYmKGR8PWMmMTYpO2I9YS5lbnRhbmdsZWRMYW5lcztpZigwIT09Yilmb3IoYT1hLmVudGFuZ2xlbWVudHMsYiY9ZDswPGI7KWM9MzEtbGMoYiksZT0xPDxjLGR8PWFbY10sYiY9fmU7cmV0dXJuIGR9XG5mdW5jdGlvbiBzYyhhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgNDpyZXR1cm4gYisyNTA7Y2FzZSA4OmNhc2UgMTY6Y2FzZSAzMjpjYXNlIDY0OmNhc2UgMTI4OmNhc2UgMjU2OmNhc2UgNTEyOmNhc2UgMTAyNDpjYXNlIDIwNDg6Y2FzZSA0MDk2OmNhc2UgODE5MjpjYXNlIDE2Mzg0OmNhc2UgMzI3Njg6Y2FzZSA2NTUzNjpjYXNlIDEzMTA3MjpjYXNlIDI2MjE0NDpjYXNlIDUyNDI4ODpjYXNlIDEwNDg1NzY6Y2FzZSAyMDk3MTUyOnJldHVybiBiKzVFMztjYXNlIDQxOTQzMDQ6Y2FzZSA4Mzg4NjA4OmNhc2UgMTY3NzcyMTY6Y2FzZSAzMzU1NDQzMjpjYXNlIDY3MTA4ODY0OnJldHVybi0xO2Nhc2UgMTM0MjE3NzI4OmNhc2UgMjY4NDM1NDU2OmNhc2UgNTM2ODcwOTEyOmNhc2UgMTA3Mzc0MTgyNDpyZXR1cm4tMTtkZWZhdWx0OnJldHVybi0xfX1cbmZ1bmN0aW9uIHRjKGEsYil7Zm9yKHZhciBjPWEuc3VzcGVuZGVkTGFuZXMsZD1hLnBpbmdlZExhbmVzLGU9YS5leHBpcmF0aW9uVGltZXMsZj1hLnBlbmRpbmdMYW5lczswPGY7KXt2YXIgZz0zMS1sYyhmKSxoPTE8PGcsaz1lW2ddO2lmKC0xPT09ayl7aWYoMD09PShoJmMpfHwwIT09KGgmZCkpZVtnXT1zYyhoLGIpfWVsc2Ugazw9YiYmKGEuZXhwaXJlZExhbmVzfD1oKTtmJj1+aH19ZnVuY3Rpb24gdWMoYSl7YT1hLnBlbmRpbmdMYW5lcyYtMTA3Mzc0MTgyNTtyZXR1cm4gMCE9PWE/YTphJjEwNzM3NDE4MjQ/MTA3Mzc0MTgyNDowfWZ1bmN0aW9uIHZjKGEpe2Zvcih2YXIgYj1bXSxjPTA7MzE+YztjKyspYi5wdXNoKGEpO3JldHVybiBifWZ1bmN0aW9uIHdjKGEsYixjKXthLnBlbmRpbmdMYW5lc3w9Yjs1MzY4NzA5MTIhPT1iJiYoYS5zdXNwZW5kZWRMYW5lcz0wLGEucGluZ2VkTGFuZXM9MCk7YT1hLmV2ZW50VGltZXM7Yj0zMS1sYyhiKTthW2JdPWN9XG5mdW5jdGlvbiB4YyhhLGIpe3ZhciBjPWEucGVuZGluZ0xhbmVzJn5iO2EucGVuZGluZ0xhbmVzPWI7YS5zdXNwZW5kZWRMYW5lcz0wO2EucGluZ2VkTGFuZXM9MDthLmV4cGlyZWRMYW5lcyY9YjthLm11dGFibGVSZWFkTGFuZXMmPWI7YS5lbnRhbmdsZWRMYW5lcyY9YjtiPWEuZW50YW5nbGVtZW50czt2YXIgZD1hLmV2ZW50VGltZXM7Zm9yKGE9YS5leHBpcmF0aW9uVGltZXM7MDxjOyl7dmFyIGU9MzEtbGMoYyksZj0xPDxlO2JbZV09MDtkW2VdPS0xO2FbZV09LTE7YyY9fmZ9fWZ1bmN0aW9uIHljKGEsYil7dmFyIGM9YS5lbnRhbmdsZWRMYW5lc3w9Yjtmb3IoYT1hLmVudGFuZ2xlbWVudHM7Yzspe3ZhciBkPTMxLWxjKGMpLGU9MTw8ZDtlJmJ8YVtkXSZiJiYoYVtkXXw9Yik7YyY9fmV9fXZhciBFPTA7ZnVuY3Rpb24gemMoYSl7YSY9LWE7cmV0dXJuIDE8YT80PGE/MCE9PShhJjI2ODQzNTQ1NSk/MTY6NTM2ODcwOTEyOjQ6MX1cbnZhciBBYyxCYyxDYyxEYyxFYyxGYz0hMSxHYz1bXSxIYz1udWxsLEljPW51bGwsSmM9bnVsbCxLYz1uZXcgTWFwLExjPW5ldyBNYXAsTWM9W10sTmM9XCJtb3VzZWRvd24gbW91c2V1cCB0b3VjaGNhbmNlbCB0b3VjaGVuZCB0b3VjaHN0YXJ0IGF1eGNsaWNrIGRibGNsaWNrIHBvaW50ZXJjYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlcnVwIGRyYWdlbmQgZHJhZ3N0YXJ0IGRyb3AgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIGlucHV0IHRleHRJbnB1dCBjb3B5IGN1dCBwYXN0ZSBjbGljayBjaGFuZ2UgY29udGV4dG1lbnUgcmVzZXQgc3VibWl0XCIuc3BsaXQoXCIgXCIpO1xuZnVuY3Rpb24gT2MoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImZvY3VzaW5cIjpjYXNlIFwiZm9jdXNvdXRcIjpIYz1udWxsO2JyZWFrO2Nhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6SWM9bnVsbDticmVhaztjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcIm1vdXNlb3V0XCI6SmM9bnVsbDticmVhaztjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcm91dFwiOktjLmRlbGV0ZShiLnBvaW50ZXJJZCk7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOkxjLmRlbGV0ZShiLnBvaW50ZXJJZCl9fVxuZnVuY3Rpb24gUGMoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hfHxhLm5hdGl2ZUV2ZW50IT09ZilyZXR1cm4gYT17YmxvY2tlZE9uOmIsZG9tRXZlbnROYW1lOmMsZXZlbnRTeXN0ZW1GbGFnczpkLG5hdGl2ZUV2ZW50OmYsdGFyZ2V0Q29udGFpbmVyczpbZV19LG51bGwhPT1iJiYoYj16YihiKSxudWxsIT09YiYmQmMoYikpLGE7YS5ldmVudFN5c3RlbUZsYWdzfD1kO2I9YS50YXJnZXRDb250YWluZXJzO251bGwhPT1lJiYtMT09PWIuaW5kZXhPZihlKSYmYi5wdXNoKGUpO3JldHVybiBhfVxuZnVuY3Rpb24gUWMoYSxiLGMsZCxlKXtzd2l0Y2goYil7Y2FzZSBcImZvY3VzaW5cIjpyZXR1cm4gSGM9UGMoSGMsYSxiLGMsZCxlKSwhMDtjYXNlIFwiZHJhZ2VudGVyXCI6cmV0dXJuIEljPVBjKEljLGEsYixjLGQsZSksITA7Y2FzZSBcIm1vdXNlb3ZlclwiOnJldHVybiBKYz1QYyhKYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJwb2ludGVyb3ZlclwiOnZhciBmPWUucG9pbnRlcklkO0tjLnNldChmLFBjKEtjLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKTtyZXR1cm4hMDtjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpyZXR1cm4gZj1lLnBvaW50ZXJJZCxMYy5zZXQoZixQYyhMYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSksITB9cmV0dXJuITF9XG5mdW5jdGlvbiBSYyhhKXt2YXIgYj1TYyhhLnRhcmdldCk7aWYobnVsbCE9PWIpe3ZhciBjPVNiKGIpO2lmKG51bGwhPT1jKWlmKGI9Yy50YWcsMTM9PT1iKXtpZihiPVRiKGMpLG51bGwhPT1iKXthLmJsb2NrZWRPbj1iO0VjKGEucHJpb3JpdHksZnVuY3Rpb24oKXtDYyhjKX0pO3JldHVybn19ZWxzZSBpZigzPT09YiYmYy5zdGF0ZU5vZGUuY3VycmVudC5tZW1vaXplZFN0YXRlLmlzRGVoeWRyYXRlZCl7YS5ibG9ja2VkT249Mz09PWMudGFnP2Muc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtyZXR1cm59fWEuYmxvY2tlZE9uPW51bGx9XG5mdW5jdGlvbiBUYyhhKXtpZihudWxsIT09YS5ibG9ja2VkT24pcmV0dXJuITE7Zm9yKHZhciBiPWEudGFyZ2V0Q29udGFpbmVyczswPGIubGVuZ3RoOyl7dmFyIGM9VWMoYS5kb21FdmVudE5hbWUsYS5ldmVudFN5c3RlbUZsYWdzLGJbMF0sYS5uYXRpdmVFdmVudCk7aWYobnVsbD09PWMpe2M9YS5uYXRpdmVFdmVudDt2YXIgZD1uZXcgYy5jb25zdHJ1Y3RvcihjLnR5cGUsYyk7dGI9ZDtjLnRhcmdldC5kaXNwYXRjaEV2ZW50KGQpO3RiPW51bGx9ZWxzZSByZXR1cm4gYj16YihjKSxudWxsIT09YiYmQmMoYiksYS5ibG9ja2VkT249YywhMTtiLnNoaWZ0KCl9cmV0dXJuITB9ZnVuY3Rpb24gVmMoYSxiLGMpe1RjKGEpJiZjLmRlbGV0ZShiKX1mdW5jdGlvbiBXYygpe0ZjPSExO251bGwhPT1IYyYmVGMoSGMpJiYoSGM9bnVsbCk7bnVsbCE9PUljJiZUYyhJYykmJihJYz1udWxsKTtudWxsIT09SmMmJlRjKEpjKSYmKEpjPW51bGwpO0tjLmZvckVhY2goVmMpO0xjLmZvckVhY2goVmMpfVxuZnVuY3Rpb24gWGMoYSxiKXthLmJsb2NrZWRPbj09PWImJihhLmJsb2NrZWRPbj1udWxsLEZjfHwoRmM9ITAsYmEudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayhiYS51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxXYykpKX1cbmZ1bmN0aW9uIFljKGEpe2Z1bmN0aW9uIGIoYil7cmV0dXJuIFhjKGIsYSl9aWYoMDxHYy5sZW5ndGgpe1hjKEdjWzBdLGEpO2Zvcih2YXIgYz0xO2M8R2MubGVuZ3RoO2MrKyl7dmFyIGQ9R2NbY107ZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCl9fW51bGwhPT1IYyYmWGMoSGMsYSk7bnVsbCE9PUljJiZYYyhJYyxhKTtudWxsIT09SmMmJlhjKEpjLGEpO0tjLmZvckVhY2goYik7TGMuZm9yRWFjaChiKTtmb3IoYz0wO2M8TWMubGVuZ3RoO2MrKylkPU1jW2NdLGQuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpO2Zvcig7MDxNYy5sZW5ndGgmJihjPU1jWzBdLG51bGw9PT1jLmJsb2NrZWRPbik7KVJjKGMpLG51bGw9PT1jLmJsb2NrZWRPbiYmTWMuc2hpZnQoKX12YXIgWmM9c2EuUmVhY3RDdXJyZW50QmF0Y2hDb25maWc7XG5mdW5jdGlvbiAkYyhhLGIsYyxkKXt2YXIgZT1FLGY9WmMudHJhbnNpdGlvbjtaYy50cmFuc2l0aW9uPW51bGw7dHJ5e0U9MSxhZChhLGIsYyxkKX1maW5hbGx5e0U9ZSxaYy50cmFuc2l0aW9uPWZ9fWZ1bmN0aW9uIGJkKGEsYixjLGQpe3ZhciBlPUUsZj1aYy50cmFuc2l0aW9uO1pjLnRyYW5zaXRpb249bnVsbDt0cnl7RT00LGFkKGEsYixjLGQpfWZpbmFsbHl7RT1lLFpjLnRyYW5zaXRpb249Zn19XG5mdW5jdGlvbiBhZChhLGIsYyxkKXt2YXIgZT1VYyhhLGIsYyxkKTtpZihudWxsPT09ZSljZChhLGIsZCxkZCxjKSxPYyhhLGQpO2Vsc2UgaWYoUWMoZSxhLGIsYyxkKSlkLnN0b3BQcm9wYWdhdGlvbigpO2Vsc2UgaWYoT2MoYSxkKSxiJjQmJi0xPE5jLmluZGV4T2YoYSkpe2Zvcig7bnVsbCE9PWU7KXt2YXIgZj16YihlKTtudWxsIT09ZiYmQWMoZik7Zj1VYyhhLGIsYyxkKTtudWxsPT09ZiYmY2QoYSxiLGQsZGQsYyk7aWYoZj09PWUpYnJlYWs7ZT1mfW51bGwhPT1lJiZkLnN0b3BQcm9wYWdhdGlvbigpfWVsc2UgY2QoYSxiLGQsbnVsbCxjKX12YXIgZGQ9bnVsbDtcbmZ1bmN0aW9uIFVjKGEsYixjLGQpe2RkPW51bGw7YT11YihkKTthPVNjKGEpO2lmKG51bGwhPT1hKWlmKGI9U2IoYSksbnVsbD09PWIpYT1udWxsO2Vsc2UgaWYoYz1iLnRhZywxMz09PWMpe2E9VGIoYik7aWYobnVsbCE9PWEpcmV0dXJuIGE7YT1udWxsfWVsc2UgaWYoMz09PWMpe2lmKGIuc3RhdGVOb2RlLmN1cnJlbnQubWVtb2l6ZWRTdGF0ZS5pc0RlaHlkcmF0ZWQpcmV0dXJuIDM9PT1iLnRhZz9iLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7YT1udWxsfWVsc2UgYiE9PWEmJihhPW51bGwpO2RkPWE7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBlZChhKXtzd2l0Y2goYSl7Y2FzZSBcImNhbmNlbFwiOmNhc2UgXCJjbGlja1wiOmNhc2UgXCJjbG9zZVwiOmNhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJhdXhjbGlja1wiOmNhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6Y2FzZSBcImZvY3VzaW5cIjpjYXNlIFwiZm9jdXNvdXRcIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwiaW52YWxpZFwiOmNhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcImtleXVwXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcInBhc3RlXCI6Y2FzZSBcInBhdXNlXCI6Y2FzZSBcInBsYXlcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVydXBcIjpjYXNlIFwicmF0ZWNoYW5nZVwiOmNhc2UgXCJyZXNldFwiOmNhc2UgXCJyZXNpemVcIjpjYXNlIFwic2Vla2VkXCI6Y2FzZSBcInN1Ym1pdFwiOmNhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6Y2FzZSBcInZvbHVtZWNoYW5nZVwiOmNhc2UgXCJjaGFuZ2VcIjpjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6Y2FzZSBcInRleHRJbnB1dFwiOmNhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6Y2FzZSBcImNvbXBvc2l0aW9udXBkYXRlXCI6Y2FzZSBcImJlZm9yZWJsdXJcIjpjYXNlIFwiYWZ0ZXJibHVyXCI6Y2FzZSBcImJlZm9yZWlucHV0XCI6Y2FzZSBcImJsdXJcIjpjYXNlIFwiZnVsbHNjcmVlbmNoYW5nZVwiOmNhc2UgXCJmb2N1c1wiOmNhc2UgXCJoYXNoY2hhbmdlXCI6Y2FzZSBcInBvcHN0YXRlXCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJzZWxlY3RzdGFydFwiOnJldHVybiAxO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInNjcm9sbFwiOmNhc2UgXCJ0b2dnbGVcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcIndoZWVsXCI6Y2FzZSBcIm1vdXNlZW50ZXJcIjpjYXNlIFwibW91c2VsZWF2ZVwiOmNhc2UgXCJwb2ludGVyZW50ZXJcIjpjYXNlIFwicG9pbnRlcmxlYXZlXCI6cmV0dXJuIDQ7XG5jYXNlIFwibWVzc2FnZVwiOnN3aXRjaChiYygpKXtjYXNlIGNjOnJldHVybiAxO2Nhc2UgZGM6cmV0dXJuIDQ7Y2FzZSBlYzpjYXNlIGZjOnJldHVybiAxNjtjYXNlIGdjOnJldHVybiA1MzY4NzA5MTI7ZGVmYXVsdDpyZXR1cm4gMTZ9ZGVmYXVsdDpyZXR1cm4gMTZ9fXZhciBmZD1udWxsLGdkPW51bGwsaGQ9bnVsbDtmdW5jdGlvbiBpZCgpe2lmKGhkKXJldHVybiBoZDt2YXIgYSxiPWdkLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIGZkP2ZkLnZhbHVlOmZkLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuIGhkPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9XG5mdW5jdGlvbiBqZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1mdW5jdGlvbiBrZCgpe3JldHVybiEwfWZ1bmN0aW9uIGxkKCl7cmV0dXJuITF9XG5mdW5jdGlvbiBtZChhKXtmdW5jdGlvbiBiKGIsZCxlLGYsZyl7dGhpcy5fcmVhY3ROYW1lPWI7dGhpcy5fdGFyZ2V0SW5zdD1lO3RoaXMudHlwZT1kO3RoaXMubmF0aXZlRXZlbnQ9Zjt0aGlzLnRhcmdldD1nO3RoaXMuY3VycmVudFRhcmdldD1udWxsO2Zvcih2YXIgYyBpbiBhKWEuaGFzT3duUHJvcGVydHkoYykmJihiPWFbY10sdGhpc1tjXT1iP2IoZik6ZltjXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWYuZGVmYXVsdFByZXZlbnRlZD9mLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1mLnJldHVyblZhbHVlKT9rZDpsZDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWxkO3JldHVybiB0aGlzfUEoYi5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJlxuKGEucmV0dXJuVmFsdWU9ITEpLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWtkKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5zdG9wUHJvcGFnYXRpb24/YS5zdG9wUHJvcGFnYXRpb24oKTpcInVua25vd25cIiE9PXR5cGVvZiBhLmNhbmNlbEJ1YmJsZSYmKGEuY2FuY2VsQnViYmxlPSEwKSx0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWtkKX0scGVyc2lzdDpmdW5jdGlvbigpe30saXNQZXJzaXN0ZW50OmtkfSk7cmV0dXJuIGJ9XG52YXIgbmQ9e2V2ZW50UGhhc2U6MCxidWJibGVzOjAsY2FuY2VsYWJsZTowLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6MCxpc1RydXN0ZWQ6MH0sb2Q9bWQobmQpLHBkPUEoe30sbmQse3ZpZXc6MCxkZXRhaWw6MH0pLHFkPW1kKHBkKSxyZCxzZCx0ZCx2ZD1BKHt9LHBkLHtzY3JlZW5YOjAsc2NyZWVuWTowLGNsaWVudFg6MCxjbGllbnRZOjAscGFnZVg6MCxwYWdlWTowLGN0cmxLZXk6MCxzaGlmdEtleTowLGFsdEtleTowLG1ldGFLZXk6MCxnZXRNb2RpZmllclN0YXRlOnVkLGJ1dHRvbjowLGJ1dHRvbnM6MCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiB2b2lkIDA9PT1hLnJlbGF0ZWRUYXJnZXQ/YS5mcm9tRWxlbWVudD09PWEuc3JjRWxlbWVudD9hLnRvRWxlbWVudDphLmZyb21FbGVtZW50OmEucmVsYXRlZFRhcmdldH0sbW92ZW1lbnRYOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRYXCJpblxuYSlyZXR1cm4gYS5tb3ZlbWVudFg7YSE9PXRkJiYodGQmJlwibW91c2Vtb3ZlXCI9PT1hLnR5cGU/KHJkPWEuc2NyZWVuWC10ZC5zY3JlZW5YLHNkPWEuc2NyZWVuWS10ZC5zY3JlZW5ZKTpzZD1yZD0wLHRkPWEpO3JldHVybiByZH0sbW92ZW1lbnRZOmZ1bmN0aW9uKGEpe3JldHVyblwibW92ZW1lbnRZXCJpbiBhP2EubW92ZW1lbnRZOnNkfX0pLHdkPW1kKHZkKSx4ZD1BKHt9LHZkLHtkYXRhVHJhbnNmZXI6MH0pLHlkPW1kKHhkKSx6ZD1BKHt9LHBkLHtyZWxhdGVkVGFyZ2V0OjB9KSxBZD1tZCh6ZCksQmQ9QSh7fSxuZCx7YW5pbWF0aW9uTmFtZTowLGVsYXBzZWRUaW1lOjAscHNldWRvRWxlbWVudDowfSksQ2Q9bWQoQmQpLERkPUEoe30sbmQse2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KSxFZD1tZChEZCksRmQ9QSh7fSxuZCx7ZGF0YTowfSksR2Q9bWQoRmQpLEhkPXtFc2M6XCJFc2NhcGVcIixcblNwYWNlYmFyOlwiIFwiLExlZnQ6XCJBcnJvd0xlZnRcIixVcDpcIkFycm93VXBcIixSaWdodDpcIkFycm93UmlnaHRcIixEb3duOlwiQXJyb3dEb3duXCIsRGVsOlwiRGVsZXRlXCIsV2luOlwiT1NcIixNZW51OlwiQ29udGV4dE1lbnVcIixBcHBzOlwiQ29udGV4dE1lbnVcIixTY3JvbGw6XCJTY3JvbGxMb2NrXCIsTW96UHJpbnRhYmxlS2V5OlwiVW5pZGVudGlmaWVkXCJ9LElkPXs4OlwiQmFja3NwYWNlXCIsOTpcIlRhYlwiLDEyOlwiQ2xlYXJcIiwxMzpcIkVudGVyXCIsMTY6XCJTaGlmdFwiLDE3OlwiQ29udHJvbFwiLDE4OlwiQWx0XCIsMTk6XCJQYXVzZVwiLDIwOlwiQ2Fwc0xvY2tcIiwyNzpcIkVzY2FwZVwiLDMyOlwiIFwiLDMzOlwiUGFnZVVwXCIsMzQ6XCJQYWdlRG93blwiLDM1OlwiRW5kXCIsMzY6XCJIb21lXCIsMzc6XCJBcnJvd0xlZnRcIiwzODpcIkFycm93VXBcIiwzOTpcIkFycm93UmlnaHRcIiw0MDpcIkFycm93RG93blwiLDQ1OlwiSW5zZXJ0XCIsNDY6XCJEZWxldGVcIiwxMTI6XCJGMVwiLDExMzpcIkYyXCIsMTE0OlwiRjNcIiwxMTU6XCJGNFwiLDExNjpcIkY1XCIsMTE3OlwiRjZcIiwxMTg6XCJGN1wiLFxuMTE5OlwiRjhcIiwxMjA6XCJGOVwiLDEyMTpcIkYxMFwiLDEyMjpcIkYxMVwiLDEyMzpcIkYxMlwiLDE0NDpcIk51bUxvY2tcIiwxNDU6XCJTY3JvbGxMb2NrXCIsMjI0OlwiTWV0YVwifSxKZD17QWx0OlwiYWx0S2V5XCIsQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gS2QoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1KZFthXSk/ISFiW2FdOiExfWZ1bmN0aW9uIHVkKCl7cmV0dXJuIEtkfVxudmFyIExkPUEoe30scGQse2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9SGRbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9amQoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP0lkW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sY29kZTowLGxvY2F0aW9uOjAsY3RybEtleTowLHNoaWZ0S2V5OjAsYWx0S2V5OjAsbWV0YUtleTowLHJlcGVhdDowLGxvY2FsZTowLGdldE1vZGlmaWVyU3RhdGU6dWQsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP2pkKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/amQoYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KSxNZD1tZChMZCksTmQ9QSh7fSx2ZCx7cG9pbnRlcklkOjAsd2lkdGg6MCxoZWlnaHQ6MCxwcmVzc3VyZTowLHRhbmdlbnRpYWxQcmVzc3VyZTowLHRpbHRYOjAsdGlsdFk6MCx0d2lzdDowLHBvaW50ZXJUeXBlOjAsaXNQcmltYXJ5OjB9KSxPZD1tZChOZCksUGQ9QSh7fSxwZCx7dG91Y2hlczowLHRhcmdldFRvdWNoZXM6MCxjaGFuZ2VkVG91Y2hlczowLGFsdEtleTowLG1ldGFLZXk6MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxnZXRNb2RpZmllclN0YXRlOnVkfSksUWQ9bWQoUGQpLFJkPUEoe30sbmQse3Byb3BlcnR5TmFtZTowLGVsYXBzZWRUaW1lOjAscHNldWRvRWxlbWVudDowfSksU2Q9bWQoUmQpLFRkPUEoe30sdmQse2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpbiBhPy1hLndoZWVsRGVsdGFYOjB9LFxuZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOjAsZGVsdGFNb2RlOjB9KSxVZD1tZChUZCksVmQ9WzksMTMsMjcsMzJdLFdkPWhhJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxYZD1udWxsO2hhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihYZD1kb2N1bWVudC5kb2N1bWVudE1vZGUpO3ZhciBZZD1oYSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIVhkLFpkPWhhJiYoIVdkfHxYZCYmODxYZCYmMTE+PVhkKSwkZD1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSxhZT0hMTtcbmZ1bmN0aW9uIGJlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09VmQuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImZvY3Vzb3V0XCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gY2UoYSl7YT1hLmRldGFpbDtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJlwiZGF0YVwiaW4gYT9hLmRhdGE6bnVsbH12YXIgZGU9ITE7ZnVuY3Rpb24gZWUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIGNlKGIpO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDMyIT09Yi53aGljaClyZXR1cm4gbnVsbDthZT0hMDtyZXR1cm4gJGQ7Y2FzZSBcInRleHRJbnB1dFwiOnJldHVybiBhPWIuZGF0YSxhPT09JGQmJmFlP251bGw6YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIGZlKGEsYil7aWYoZGUpcmV0dXJuXCJjb21wb3NpdGlvbmVuZFwiPT09YXx8IVdkJiZiZShhLGIpPyhhPWlkKCksaGQ9Z2Q9ZmQ9bnVsbCxkZT0hMSxhKTpudWxsO3N3aXRjaChhKXtjYXNlIFwicGFzdGVcIjpyZXR1cm4gbnVsbDtjYXNlIFwia2V5cHJlc3NcIjppZighKGIuY3RybEtleXx8Yi5hbHRLZXl8fGIubWV0YUtleSl8fGIuY3RybEtleSYmYi5hbHRLZXkpe2lmKGIuY2hhciYmMTxiLmNoYXIubGVuZ3RoKXJldHVybiBiLmNoYXI7aWYoYi53aGljaClyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShiLndoaWNoKX1yZXR1cm4gbnVsbDtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gWmQmJlwia29cIiE9PWIubG9jYWxlP251bGw6Yi5kYXRhO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIGdlPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIGhlKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhZ2VbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfWZ1bmN0aW9uIGllKGEsYixjLGQpe0JiKGQpO2I9amUoYixcIm9uQ2hhbmdlXCIpOzA8Yi5sZW5ndGgmJihjPW5ldyBvZChcIm9uQ2hhbmdlXCIsXCJjaGFuZ2VcIixudWxsLGMsZCksYS5wdXNoKHtldmVudDpjLGxpc3RlbmVyczpifSkpfXZhciBrZT1udWxsLGxlPW51bGw7ZnVuY3Rpb24gbWUoYSl7bmUoYSwwKX1mdW5jdGlvbiBvZShhKXt2YXIgYj1wZShhKTtpZihVYShiKSlyZXR1cm4gYX1cbmZ1bmN0aW9uIHFlKGEsYil7aWYoXCJjaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIHJlPSExO2lmKGhhKXt2YXIgc2U7aWYoaGEpe3ZhciB0ZT1cIm9uaW5wdXRcImluIGRvY3VtZW50O2lmKCF0ZSl7dmFyIHVlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7dWUuc2V0QXR0cmlidXRlKFwib25pbnB1dFwiLFwicmV0dXJuO1wiKTt0ZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgdWUub25pbnB1dH1zZT10ZX1lbHNlIHNlPSExO3JlPXNlJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpfWZ1bmN0aW9uIHZlKCl7a2UmJihrZS5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIix3ZSksbGU9a2U9bnVsbCl9ZnVuY3Rpb24gd2UoYSl7aWYoXCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJm9lKGxlKSl7dmFyIGI9W107aWUoYixsZSxhLHViKGEpKTtHYihtZSxiKX19XG5mdW5jdGlvbiB4ZShhLGIsYyl7XCJmb2N1c2luXCI9PT1hPyh2ZSgpLGtlPWIsbGU9YyxrZS5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIix3ZSkpOlwiZm9jdXNvdXRcIj09PWEmJnZlKCl9ZnVuY3Rpb24geWUoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gb2UobGUpfWZ1bmN0aW9uIHplKGEsYil7aWYoXCJjbGlja1wiPT09YSlyZXR1cm4gb2UoYil9ZnVuY3Rpb24gQWUoYSxiKXtpZihcImlucHV0XCI9PT1hfHxcImNoYW5nZVwiPT09YSlyZXR1cm4gb2UoYil9ZnVuY3Rpb24gQmUoYSxiKXtyZXR1cm4gYT09PWImJigwIT09YXx8MS9hPT09MS9iKXx8YSE9PWEmJmIhPT1ifXZhciBDZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgT2JqZWN0LmlzP09iamVjdC5pczpCZTtcbmZ1bmN0aW9uIERlKGEsYil7aWYoQ2UoYSxiKSlyZXR1cm4hMDtpZihcIm9iamVjdFwiIT09dHlwZW9mIGF8fG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGJ8fG51bGw9PT1iKXJldHVybiExO3ZhciBjPU9iamVjdC5rZXlzKGEpLGQ9T2JqZWN0LmtleXMoYik7aWYoYy5sZW5ndGghPT1kLmxlbmd0aClyZXR1cm4hMTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCsrKXt2YXIgZT1jW2RdO2lmKCFpYS5jYWxsKGIsZSl8fCFDZShhW2VdLGJbZV0pKXJldHVybiExfXJldHVybiEwfWZ1bmN0aW9uIEVlKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIEZlKGEsYil7dmFyIGM9RWUoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9RWUoYyl9fWZ1bmN0aW9uIEdlKGEsYil7cmV0dXJuIGEmJmI/YT09PWI/ITA6YSYmMz09PWEubm9kZVR5cGU/ITE6YiYmMz09PWIubm9kZVR5cGU/R2UoYSxiLnBhcmVudE5vZGUpOlwiY29udGFpbnNcImluIGE/YS5jb250YWlucyhiKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uPyEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpOiExOiExfVxuZnVuY3Rpb24gSGUoKXtmb3IodmFyIGE9d2luZG93LGI9VmEoKTtiIGluc3RhbmNlb2YgYS5IVE1MSUZyYW1lRWxlbWVudDspe3RyeXt2YXIgYz1cInN0cmluZ1wiPT09dHlwZW9mIGIuY29udGVudFdpbmRvdy5sb2NhdGlvbi5ocmVmfWNhdGNoKGQpe2M9ITF9aWYoYylhPWIuY29udGVudFdpbmRvdztlbHNlIGJyZWFrO2I9VmEoYS5kb2N1bWVudCl9cmV0dXJuIGJ9ZnVuY3Rpb24gSWUoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmKFwidGV4dFwiPT09YS50eXBlfHxcInNlYXJjaFwiPT09YS50eXBlfHxcInRlbFwiPT09YS50eXBlfHxcInVybFwiPT09YS50eXBlfHxcInBhc3N3b3JkXCI9PT1hLnR5cGUpfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX1cbmZ1bmN0aW9uIEplKGEpe3ZhciBiPUhlKCksYz1hLmZvY3VzZWRFbGVtLGQ9YS5zZWxlY3Rpb25SYW5nZTtpZihiIT09YyYmYyYmYy5vd25lckRvY3VtZW50JiZHZShjLm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LGMpKXtpZihudWxsIT09ZCYmSWUoYykpaWYoYj1kLnN0YXJ0LGE9ZC5lbmQsdm9pZCAwPT09YSYmKGE9YiksXCJzZWxlY3Rpb25TdGFydFwiaW4gYyljLnNlbGVjdGlvblN0YXJ0PWIsYy5zZWxlY3Rpb25FbmQ9TWF0aC5taW4oYSxjLnZhbHVlLmxlbmd0aCk7ZWxzZSBpZihhPShiPWMub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQpJiZiLmRlZmF1bHRWaWV3fHx3aW5kb3csYS5nZXRTZWxlY3Rpb24pe2E9YS5nZXRTZWxlY3Rpb24oKTt2YXIgZT1jLnRleHRDb250ZW50Lmxlbmd0aCxmPU1hdGgubWluKGQuc3RhcnQsZSk7ZD12b2lkIDA9PT1kLmVuZD9mOk1hdGgubWluKGQuZW5kLGUpOyFhLmV4dGVuZCYmZj5kJiYoZT1kLGQ9ZixmPWUpO2U9RmUoYyxmKTt2YXIgZz1GZShjLFxuZCk7ZSYmZyYmKDEhPT1hLnJhbmdlQ291bnR8fGEuYW5jaG9yTm9kZSE9PWUubm9kZXx8YS5hbmNob3JPZmZzZXQhPT1lLm9mZnNldHx8YS5mb2N1c05vZGUhPT1nLm5vZGV8fGEuZm9jdXNPZmZzZXQhPT1nLm9mZnNldCkmJihiPWIuY3JlYXRlUmFuZ2UoKSxiLnNldFN0YXJ0KGUubm9kZSxlLm9mZnNldCksYS5yZW1vdmVBbGxSYW5nZXMoKSxmPmQ/KGEuYWRkUmFuZ2UoYiksYS5leHRlbmQoZy5ub2RlLGcub2Zmc2V0KSk6KGIuc2V0RW5kKGcubm9kZSxnLm9mZnNldCksYS5hZGRSYW5nZShiKSkpfWI9W107Zm9yKGE9YzthPWEucGFyZW50Tm9kZTspMT09PWEubm9kZVR5cGUmJmIucHVzaCh7ZWxlbWVudDphLGxlZnQ6YS5zY3JvbGxMZWZ0LHRvcDphLnNjcm9sbFRvcH0pO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmZvY3VzJiZjLmZvY3VzKCk7Zm9yKGM9MDtjPGIubGVuZ3RoO2MrKylhPWJbY10sYS5lbGVtZW50LnNjcm9sbExlZnQ9YS5sZWZ0LGEuZWxlbWVudC5zY3JvbGxUb3A9YS50b3B9fVxudmFyIEtlPWhhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJjExPj1kb2N1bWVudC5kb2N1bWVudE1vZGUsTGU9bnVsbCxNZT1udWxsLE5lPW51bGwsT2U9ITE7XG5mdW5jdGlvbiBQZShhLGIsYyl7dmFyIGQ9Yy53aW5kb3c9PT1jP2MuZG9jdW1lbnQ6OT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQ7T2V8fG51bGw9PUxlfHxMZSE9PVZhKGQpfHwoZD1MZSxcInNlbGVjdGlvblN0YXJ0XCJpbiBkJiZJZShkKT9kPXtzdGFydDpkLnNlbGVjdGlvblN0YXJ0LGVuZDpkLnNlbGVjdGlvbkVuZH06KGQ9KGQub3duZXJEb2N1bWVudCYmZC5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmdldFNlbGVjdGlvbigpLGQ9e2FuY2hvck5vZGU6ZC5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpkLmFuY2hvck9mZnNldCxmb2N1c05vZGU6ZC5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6ZC5mb2N1c09mZnNldH0pLE5lJiZEZShOZSxkKXx8KE5lPWQsZD1qZShNZSxcIm9uU2VsZWN0XCIpLDA8ZC5sZW5ndGgmJihiPW5ldyBvZChcIm9uU2VsZWN0XCIsXCJzZWxlY3RcIixudWxsLGIsYyksYS5wdXNoKHtldmVudDpiLGxpc3RlbmVyczpkfSksYi50YXJnZXQ9TGUpKSl9XG5mdW5jdGlvbiBRZShhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO3JldHVybiBjfXZhciBSZT17YW5pbWF0aW9uZW5kOlFlKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOlFlKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6UWUoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6UWUoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxTZT17fSxUZT17fTtcbmhhJiYoVGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgUmUuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgUmUuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgUmUuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgUmUudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtmdW5jdGlvbiBVZShhKXtpZihTZVthXSlyZXR1cm4gU2VbYV07aWYoIVJlW2FdKXJldHVybiBhO3ZhciBiPVJlW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIFRlKXJldHVybiBTZVthXT1iW2NdO3JldHVybiBhfXZhciBWZT1VZShcImFuaW1hdGlvbmVuZFwiKSxXZT1VZShcImFuaW1hdGlvbml0ZXJhdGlvblwiKSxYZT1VZShcImFuaW1hdGlvbnN0YXJ0XCIpLFllPVVlKFwidHJhbnNpdGlvbmVuZFwiKSxaZT1uZXcgTWFwLCRlPVwiYWJvcnQgYXV4Q2xpY2sgY2FuY2VsIGNhblBsYXkgY2FuUGxheVRocm91Z2ggY2xpY2sgY2xvc2UgY29udGV4dE1lbnUgY29weSBjdXQgZHJhZyBkcmFnRW5kIGRyYWdFbnRlciBkcmFnRXhpdCBkcmFnTGVhdmUgZHJhZ092ZXIgZHJhZ1N0YXJ0IGRyb3AgZHVyYXRpb25DaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgZ290UG9pbnRlckNhcHR1cmUgaW5wdXQgaW52YWxpZCBrZXlEb3duIGtleVByZXNzIGtleVVwIGxvYWQgbG9hZGVkRGF0YSBsb2FkZWRNZXRhZGF0YSBsb2FkU3RhcnQgbG9zdFBvaW50ZXJDYXB0dXJlIG1vdXNlRG93biBtb3VzZU1vdmUgbW91c2VPdXQgbW91c2VPdmVyIG1vdXNlVXAgcGFzdGUgcGF1c2UgcGxheSBwbGF5aW5nIHBvaW50ZXJDYW5jZWwgcG9pbnRlckRvd24gcG9pbnRlck1vdmUgcG9pbnRlck91dCBwb2ludGVyT3ZlciBwb2ludGVyVXAgcHJvZ3Jlc3MgcmF0ZUNoYW5nZSByZXNldCByZXNpemUgc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdWJtaXQgc3VzcGVuZCB0aW1lVXBkYXRlIHRvdWNoQ2FuY2VsIHRvdWNoRW5kIHRvdWNoU3RhcnQgdm9sdW1lQ2hhbmdlIHNjcm9sbCB0b2dnbGUgdG91Y2hNb3ZlIHdhaXRpbmcgd2hlZWxcIi5zcGxpdChcIiBcIik7XG5mdW5jdGlvbiBhZihhLGIpe1plLnNldChhLGIpO2VhKGIsW2FdKX1mb3IodmFyIGJmPTA7YmY8JGUubGVuZ3RoO2JmKyspe3ZhciBjZj0kZVtiZl0sZGY9Y2YudG9Mb3dlckNhc2UoKSxlZj1jZlswXS50b1VwcGVyQ2FzZSgpK2NmLnNsaWNlKDEpO2FmKGRmLFwib25cIitlZil9YWYoVmUsXCJvbkFuaW1hdGlvbkVuZFwiKTthZihXZSxcIm9uQW5pbWF0aW9uSXRlcmF0aW9uXCIpO2FmKFhlLFwib25BbmltYXRpb25TdGFydFwiKTthZihcImRibGNsaWNrXCIsXCJvbkRvdWJsZUNsaWNrXCIpO2FmKFwiZm9jdXNpblwiLFwib25Gb2N1c1wiKTthZihcImZvY3Vzb3V0XCIsXCJvbkJsdXJcIik7YWYoWWUsXCJvblRyYW5zaXRpb25FbmRcIik7ZmEoXCJvbk1vdXNlRW50ZXJcIixbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdKTtmYShcIm9uTW91c2VMZWF2ZVwiLFtcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl0pO2ZhKFwib25Qb2ludGVyRW50ZXJcIixbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXSk7XG5mYShcIm9uUG9pbnRlckxlYXZlXCIsW1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl0pO2VhKFwib25DaGFuZ2VcIixcImNoYW5nZSBjbGljayBmb2N1c2luIGZvY3Vzb3V0IGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpKTtlYShcIm9uU2VsZWN0XCIsXCJmb2N1c291dCBjb250ZXh0bWVudSBkcmFnZW5kIGZvY3VzaW4ga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIikpO2VhKFwib25CZWZvcmVJbnB1dFwiLFtcImNvbXBvc2l0aW9uZW5kXCIsXCJrZXlwcmVzc1wiLFwidGV4dElucHV0XCIsXCJwYXN0ZVwiXSk7ZWEoXCJvbkNvbXBvc2l0aW9uRW5kXCIsXCJjb21wb3NpdGlvbmVuZCBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7ZWEoXCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcImNvbXBvc2l0aW9uc3RhcnQgZm9jdXNvdXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIikpO1xuZWEoXCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsXCJjb21wb3NpdGlvbnVwZGF0ZSBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7dmFyIGZmPVwiYWJvcnQgY2FucGxheSBjYW5wbGF5dGhyb3VnaCBkdXJhdGlvbmNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBsb2FkZWRkYXRhIGxvYWRlZG1ldGFkYXRhIGxvYWRzdGFydCBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZWNoYW5nZSByZXNpemUgc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIiksZ2Y9bmV3IFNldChcImNhbmNlbCBjbG9zZSBpbnZhbGlkIGxvYWQgc2Nyb2xsIHRvZ2dsZVwiLnNwbGl0KFwiIFwiKS5jb25jYXQoZmYpKTtcbmZ1bmN0aW9uIGhmKGEsYixjKXt2YXIgZD1hLnR5cGV8fFwidW5rbm93bi1ldmVudFwiO2EuY3VycmVudFRhcmdldD1jO1JiKGQsYix2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9XG5mdW5jdGlvbiBuZShhLGIpe2I9MCE9PShiJjQpO2Zvcih2YXIgYz0wO2M8YS5sZW5ndGg7YysrKXt2YXIgZD1hW2NdLGU9ZC5ldmVudDtkPWQubGlzdGVuZXJzO2E6e3ZhciBmPXZvaWQgMDtpZihiKWZvcih2YXIgZz1kLmxlbmd0aC0xOzA8PWc7Zy0tKXt2YXIgaD1kW2ddLGs9aC5pbnN0YW5jZSxsPWguY3VycmVudFRhcmdldDtoPWgubGlzdGVuZXI7aWYoayE9PWYmJmUuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSlicmVhayBhO2hmKGUsaCxsKTtmPWt9ZWxzZSBmb3IoZz0wO2c8ZC5sZW5ndGg7ZysrKXtoPWRbZ107az1oLmluc3RhbmNlO2w9aC5jdXJyZW50VGFyZ2V0O2g9aC5saXN0ZW5lcjtpZihrIT09ZiYmZS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKWJyZWFrIGE7aGYoZSxoLGwpO2Y9a319fWlmKE5iKXRocm93IGE9T2IsTmI9ITEsT2I9bnVsbCxhO31cbmZ1bmN0aW9uIEYoYSxiKXt2YXIgYz1iW2pmXTt2b2lkIDA9PT1jJiYoYz1iW2pmXT1uZXcgU2V0KTt2YXIgZD1hK1wiX19idWJibGVcIjtjLmhhcyhkKXx8KGtmKGIsYSwyLCExKSxjLmFkZChkKSl9ZnVuY3Rpb24gbGYoYSxiLGMpe3ZhciBkPTA7YiYmKGR8PTQpO2tmKGMsYSxkLGIpfXZhciBtZj1cIl9yZWFjdExpc3RlbmluZ1wiK01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpO2Z1bmN0aW9uIG5mKGEpe2lmKCFhW21mXSl7YVttZl09ITA7Y2EuZm9yRWFjaChmdW5jdGlvbihiKXtcInNlbGVjdGlvbmNoYW5nZVwiIT09YiYmKGdmLmhhcyhiKXx8bGYoYiwhMSxhKSxsZihiLCEwLGEpKX0pO3ZhciBiPTk9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50O251bGw9PT1ifHxiW21mXXx8KGJbbWZdPSEwLGxmKFwic2VsZWN0aW9uY2hhbmdlXCIsITEsYikpfX1cbmZ1bmN0aW9uIGtmKGEsYixjLGQpe3N3aXRjaChlZChiKSl7Y2FzZSAxOnZhciBlPSRjO2JyZWFrO2Nhc2UgNDplPWJkO2JyZWFrO2RlZmF1bHQ6ZT1hZH1jPWUuYmluZChudWxsLGIsYyxhKTtlPXZvaWQgMDshSWJ8fFwidG91Y2hzdGFydFwiIT09YiYmXCJ0b3VjaG1vdmVcIiE9PWImJlwid2hlZWxcIiE9PWJ8fChlPSEwKTtkP3ZvaWQgMCE9PWU/YS5hZGRFdmVudExpc3RlbmVyKGIsYyx7Y2FwdHVyZTohMCxwYXNzaXZlOmV9KTphLmFkZEV2ZW50TGlzdGVuZXIoYixjLCEwKTp2b2lkIDAhPT1lP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGMse3Bhc3NpdmU6ZX0pOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGMsITEpfVxuZnVuY3Rpb24gY2QoYSxiLGMsZCxlKXt2YXIgZj1kO2lmKDA9PT0oYiYxKSYmMD09PShiJjIpJiZudWxsIT09ZClhOmZvcig7Oyl7aWYobnVsbD09PWQpcmV0dXJuO3ZhciBnPWQudGFnO2lmKDM9PT1nfHw0PT09Zyl7dmFyIGg9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztpZihoPT09ZXx8OD09PWgubm9kZVR5cGUmJmgucGFyZW50Tm9kZT09PWUpYnJlYWs7aWYoND09PWcpZm9yKGc9ZC5yZXR1cm47bnVsbCE9PWc7KXt2YXIgaz1nLnRhZztpZigzPT09a3x8ND09PWspaWYoaz1nLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLGs9PT1lfHw4PT09ay5ub2RlVHlwZSYmay5wYXJlbnROb2RlPT09ZSlyZXR1cm47Zz1nLnJldHVybn1mb3IoO251bGwhPT1oOyl7Zz1TYyhoKTtpZihudWxsPT09ZylyZXR1cm47az1nLnRhZztpZig1PT09a3x8Nj09PWspe2Q9Zj1nO2NvbnRpbnVlIGF9aD1oLnBhcmVudE5vZGV9fWQ9ZC5yZXR1cm59R2IoZnVuY3Rpb24oKXt2YXIgZD1mLGU9dWIoYyksZz1bXTtcbmE6e3ZhciBoPVplLmdldChhKTtpZih2b2lkIDAhPT1oKXt2YXIgaz1vZCxuPWE7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1qZChjKSlicmVhayBhO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6az1NZDticmVhaztjYXNlIFwiZm9jdXNpblwiOm49XCJmb2N1c1wiO2s9QWQ7YnJlYWs7Y2FzZSBcImZvY3Vzb3V0XCI6bj1cImJsdXJcIjtrPUFkO2JyZWFrO2Nhc2UgXCJiZWZvcmVibHVyXCI6Y2FzZSBcImFmdGVyYmx1clwiOms9QWQ7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKWJyZWFrIGE7Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwiY29udGV4dG1lbnVcIjprPXdkO2JyZWFrO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOms9XG55ZDticmVhaztjYXNlIFwidG91Y2hjYW5jZWxcIjpjYXNlIFwidG91Y2hlbmRcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjprPVFkO2JyZWFrO2Nhc2UgVmU6Y2FzZSBXZTpjYXNlIFhlOms9Q2Q7YnJlYWs7Y2FzZSBZZTprPVNkO2JyZWFrO2Nhc2UgXCJzY3JvbGxcIjprPXFkO2JyZWFrO2Nhc2UgXCJ3aGVlbFwiOms9VWQ7YnJlYWs7Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcInBhc3RlXCI6az1FZDticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcInBvaW50ZXJjYW5jZWxcIjpjYXNlIFwicG9pbnRlcmRvd25cIjpjYXNlIFwicG9pbnRlcm1vdmVcIjpjYXNlIFwicG9pbnRlcm91dFwiOmNhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVydXBcIjprPU9kfXZhciB2PTAhPT0oYiY0KSxDPSF2JiZcInNjcm9sbFwiPT09YSx0PXY/bnVsbCE9PWg/aCtcIkNhcHR1cmVcIjpudWxsOmg7dj1bXTtmb3IodmFyIHI9ZCx4O251bGwhPT1cbnI7KXt4PXI7dmFyIEI9eC5zdGF0ZU5vZGU7NT09PXgudGFnJiZudWxsIT09QiYmKHg9QixudWxsIT09dCYmKEI9SGIocix0KSxudWxsIT1CJiZ2LnB1c2gob2YocixCLHgpKSkpO2lmKEMpYnJlYWs7cj1yLnJldHVybn0wPHYubGVuZ3RoJiYoaD1uZXcgayhoLG4sbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6aCxsaXN0ZW5lcnM6dn0pKX19aWYoMD09PShiJjcpKXthOntoPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hO2s9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGgmJmMhPT10YiYmKG49Yy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KSYmKFNjKG4pfHxuW3BmXSkpYnJlYWsgYTtpZihrfHxoKXtoPWUud2luZG93PT09ZT9lOihoPWUub3duZXJEb2N1bWVudCk/aC5kZWZhdWx0Vmlld3x8aC5wYXJlbnRXaW5kb3c6d2luZG93O2lmKGspe2lmKG49Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCxrPWQsbj1uP1NjKG4pOm51bGwsbnVsbCE9PVxubiYmKEM9U2IobiksbiE9PUN8fDUhPT1uLnRhZyYmNiE9PW4udGFnKSluPW51bGx9ZWxzZSBrPW51bGwsbj1kO2lmKGshPT1uKXt2PXdkO0I9XCJvbk1vdXNlTGVhdmVcIjt0PVwib25Nb3VzZUVudGVyXCI7cj1cIm1vdXNlXCI7aWYoXCJwb2ludGVyb3V0XCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hKXY9T2QsQj1cIm9uUG9pbnRlckxlYXZlXCIsdD1cIm9uUG9pbnRlckVudGVyXCIscj1cInBvaW50ZXJcIjtDPW51bGw9PWs/aDpwZShrKTt4PW51bGw9PW4/aDpwZShuKTtoPW5ldyB2KEIscitcImxlYXZlXCIsayxjLGUpO2gudGFyZ2V0PUM7aC5yZWxhdGVkVGFyZ2V0PXg7Qj1udWxsO1NjKGUpPT09ZCYmKHY9bmV3IHYodCxyK1wiZW50ZXJcIixuLGMsZSksdi50YXJnZXQ9eCx2LnJlbGF0ZWRUYXJnZXQ9QyxCPXYpO0M9QjtpZihrJiZuKWI6e3Y9azt0PW47cj0wO2Zvcih4PXY7eDt4PXFmKHgpKXIrKzt4PTA7Zm9yKEI9dDtCO0I9cWYoQikpeCsrO2Zvcig7MDxyLXg7KXY9cWYodiksci0tO2Zvcig7MDx4LXI7KXQ9XG5xZih0KSx4LS07Zm9yKDtyLS07KXtpZih2PT09dHx8bnVsbCE9PXQmJnY9PT10LmFsdGVybmF0ZSlicmVhayBiO3Y9cWYodik7dD1xZih0KX12PW51bGx9ZWxzZSB2PW51bGw7bnVsbCE9PWsmJnJmKGcsaCxrLHYsITEpO251bGwhPT1uJiZudWxsIT09QyYmcmYoZyxDLG4sdiwhMCl9fX1hOntoPWQ/cGUoZCk6d2luZG93O2s9aC5ub2RlTmFtZSYmaC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKFwic2VsZWN0XCI9PT1rfHxcImlucHV0XCI9PT1rJiZcImZpbGVcIj09PWgudHlwZSl2YXIgTz1xZTtlbHNlIGlmKGhlKGgpKWlmKHJlKU89QWU7ZWxzZXtPPXllO3ZhciBUPXhlfWVsc2Uoaz1oLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09ay50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09aC50eXBlfHxcInJhZGlvXCI9PT1oLnR5cGUpJiYoTz16ZSk7aWYoTyYmKE89TyhhLGQpKSl7aWUoZyxPLGMsZSk7YnJlYWsgYX1UJiZUKGEsaCxkKTtcImZvY3Vzb3V0XCI9PT1hJiYoVD1oLl93cmFwcGVyU3RhdGUpJiZcblQuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWgudHlwZSYmJGEoaCxcIm51bWJlclwiLGgudmFsdWUpfVQ9ZD9wZShkKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c2luXCI6aWYoaGUoVCl8fFwidHJ1ZVwiPT09VC5jb250ZW50RWRpdGFibGUpTGU9VCxNZT1kLE5lPW51bGw7YnJlYWs7Y2FzZSBcImZvY3Vzb3V0XCI6TmU9TWU9TGU9bnVsbDticmVhaztjYXNlIFwibW91c2Vkb3duXCI6T2U9ITA7YnJlYWs7Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwiZHJhZ2VuZFwiOk9lPSExO1BlKGcsYyxlKTticmVhaztjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6aWYoS2UpYnJlYWs7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjpQZShnLGMsZSl9dmFyIHphO2lmKFdkKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOnZhciBMPVwib25Db21wb3NpdGlvblN0YXJ0XCI7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpMPVwib25Db21wb3NpdGlvbkVuZFwiO2JyZWFrIGI7XG5jYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpMPVwib25Db21wb3NpdGlvblVwZGF0ZVwiO2JyZWFrIGJ9TD12b2lkIDB9ZWxzZSBkZT9iZShhLGMpJiYoTD1cIm9uQ29tcG9zaXRpb25FbmRcIik6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihMPVwib25Db21wb3NpdGlvblN0YXJ0XCIpO0wmJihaZCYmXCJrb1wiIT09Yy5sb2NhbGUmJihkZXx8XCJvbkNvbXBvc2l0aW9uU3RhcnRcIiE9PUw/XCJvbkNvbXBvc2l0aW9uRW5kXCI9PT1MJiZkZSYmKHphPWlkKCkpOihmZD1lLGdkPVwidmFsdWVcImluIGZkP2ZkLnZhbHVlOmZkLnRleHRDb250ZW50LGRlPSEwKSksVD1qZShkLEwpLDA8VC5sZW5ndGgmJihMPW5ldyBHZChMLGEsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6TCxsaXN0ZW5lcnM6VH0pLHphP0wuZGF0YT16YTooemE9Y2UoYyksbnVsbCE9PXphJiYoTC5kYXRhPXphKSkpKTtpZih6YT1ZZD9lZShhLGMpOmZlKGEsYykpZD1qZShkLFwib25CZWZvcmVJbnB1dFwiKSwwPGQubGVuZ3RoJiYoZT1uZXcgR2QoXCJvbkJlZm9yZUlucHV0XCIsXG5cImJlZm9yZWlucHV0XCIsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6ZSxsaXN0ZW5lcnM6ZH0pLGUuZGF0YT16YSl9bmUoZyxiKX0pfWZ1bmN0aW9uIG9mKGEsYixjKXtyZXR1cm57aW5zdGFuY2U6YSxsaXN0ZW5lcjpiLGN1cnJlbnRUYXJnZXQ6Y319ZnVuY3Rpb24gamUoYSxiKXtmb3IodmFyIGM9YitcIkNhcHR1cmVcIixkPVtdO251bGwhPT1hOyl7dmFyIGU9YSxmPWUuc3RhdGVOb2RlOzU9PT1lLnRhZyYmbnVsbCE9PWYmJihlPWYsZj1IYihhLGMpLG51bGwhPWYmJmQudW5zaGlmdChvZihhLGYsZSkpLGY9SGIoYSxiKSxudWxsIT1mJiZkLnB1c2gob2YoYSxmLGUpKSk7YT1hLnJldHVybn1yZXR1cm4gZH1mdW5jdGlvbiBxZihhKXtpZihudWxsPT09YSlyZXR1cm4gbnVsbDtkbyBhPWEucmV0dXJuO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfVxuZnVuY3Rpb24gcmYoYSxiLGMsZCxlKXtmb3IodmFyIGY9Yi5fcmVhY3ROYW1lLGc9W107bnVsbCE9PWMmJmMhPT1kOyl7dmFyIGg9YyxrPWguYWx0ZXJuYXRlLGw9aC5zdGF0ZU5vZGU7aWYobnVsbCE9PWsmJms9PT1kKWJyZWFrOzU9PT1oLnRhZyYmbnVsbCE9PWwmJihoPWwsZT8oaz1IYihjLGYpLG51bGwhPWsmJmcudW5zaGlmdChvZihjLGssaCkpKTplfHwoaz1IYihjLGYpLG51bGwhPWsmJmcucHVzaChvZihjLGssaCkpKSk7Yz1jLnJldHVybn0wIT09Zy5sZW5ndGgmJmEucHVzaCh7ZXZlbnQ6YixsaXN0ZW5lcnM6Z30pfXZhciBzZj0vXFxyXFxuPy9nLHRmPS9cXHUwMDAwfFxcdUZGRkQvZztmdW5jdGlvbiB1ZihhKXtyZXR1cm4oXCJzdHJpbmdcIj09PXR5cGVvZiBhP2E6XCJcIithKS5yZXBsYWNlKHNmLFwiXFxuXCIpLnJlcGxhY2UodGYsXCJcIil9ZnVuY3Rpb24gdmYoYSxiLGMpe2I9dWYoYik7aWYodWYoYSkhPT1iJiZjKXRocm93IEVycm9yKHAoNDI1KSk7fWZ1bmN0aW9uIHdmKCl7fVxudmFyIHhmPW51bGw7ZnVuY3Rpb24geWYoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9XG52YXIgemY9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsQWY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwLEJmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBQcm9taXNlP1Byb21pc2U6dm9pZCAwLERmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBxdWV1ZU1pY3JvdGFzaz9xdWV1ZU1pY3JvdGFzazpcInVuZGVmaW5lZFwiIT09dHlwZW9mIEJmP2Z1bmN0aW9uKGEpe3JldHVybiBCZi5yZXNvbHZlKG51bGwpLnRoZW4oYSkuY2F0Y2goQ2YpfTp6ZjtmdW5jdGlvbiBDZihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgYTt9KX1cbmZ1bmN0aW9uIEVmKGEsYil7dmFyIGM9YixkPTA7ZG97dmFyIGU9Yy5uZXh0U2libGluZzthLnJlbW92ZUNoaWxkKGMpO2lmKGUmJjg9PT1lLm5vZGVUeXBlKWlmKGM9ZS5kYXRhLFwiLyRcIj09PWMpe2lmKDA9PT1kKXthLnJlbW92ZUNoaWxkKGUpO1ljKGIpO3JldHVybn1kLS19ZWxzZVwiJFwiIT09YyYmXCIkP1wiIT09YyYmXCIkIVwiIT09Y3x8ZCsrO2M9ZX13aGlsZShjKTtZYyhiKX1mdW5jdGlvbiBGZihhKXtmb3IoO251bGwhPWE7YT1hLm5leHRTaWJsaW5nKXt2YXIgYj1hLm5vZGVUeXBlO2lmKDE9PT1ifHwzPT09YilicmVhaztpZig4PT09Yil7Yj1hLmRhdGE7aWYoXCIkXCI9PT1ifHxcIiQhXCI9PT1ifHxcIiQ/XCI9PT1iKWJyZWFrO2lmKFwiLyRcIj09PWIpcmV0dXJuIG51bGx9fXJldHVybiBhfVxuZnVuY3Rpb24gR2YoYSl7YT1hLnByZXZpb3VzU2libGluZztmb3IodmFyIGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihcIiRcIj09PWN8fFwiJCFcIj09PWN8fFwiJD9cIj09PWMpe2lmKDA9PT1iKXJldHVybiBhO2ItLX1lbHNlXCIvJFwiPT09YyYmYisrfWE9YS5wcmV2aW91c1NpYmxpbmd9cmV0dXJuIG51bGx9dmFyIEhmPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLElmPVwiX19yZWFjdEZpYmVyJFwiK0hmLEpmPVwiX19yZWFjdFByb3BzJFwiK0hmLHBmPVwiX19yZWFjdENvbnRhaW5lciRcIitIZixqZj1cIl9fcmVhY3RFdmVudHMkXCIrSGYsS2Y9XCJfX3JlYWN0TGlzdGVuZXJzJFwiK0hmLExmPVwiX19yZWFjdEhhbmRsZXMkXCIrSGY7XG5mdW5jdGlvbiBTYyhhKXt2YXIgYj1hW0lmXTtpZihiKXJldHVybiBiO2Zvcih2YXIgYz1hLnBhcmVudE5vZGU7Yzspe2lmKGI9Y1twZl18fGNbSWZdKXtjPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1iLmNoaWxkfHxudWxsIT09YyYmbnVsbCE9PWMuY2hpbGQpZm9yKGE9R2YoYSk7bnVsbCE9PWE7KXtpZihjPWFbSWZdKXJldHVybiBjO2E9R2YoYSl9cmV0dXJuIGJ9YT1jO2M9YS5wYXJlbnROb2RlfXJldHVybiBudWxsfWZ1bmN0aW9uIHpiKGEpe2E9YVtJZl18fGFbcGZdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZyYmMTMhPT1hLnRhZyYmMyE9PWEudGFnP251bGw6YX1mdW5jdGlvbiBwZShhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7dGhyb3cgRXJyb3IocCgzMykpO31mdW5jdGlvbiBBYihhKXtyZXR1cm4gYVtKZl18fG51bGx9dmFyIE1mPVtdLE5mPS0xO2Z1bmN0aW9uIE9mKGEpe3JldHVybntjdXJyZW50OmF9fVxuZnVuY3Rpb24gRyhhKXswPk5mfHwoYS5jdXJyZW50PU1mW05mXSxNZltOZl09bnVsbCxOZi0tKX1mdW5jdGlvbiBIKGEsYil7TmYrKztNZltOZl09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBQZj17fSxJPU9mKFBmKSxRZj1PZighMSksUmY9UGY7ZnVuY3Rpb24gU2YoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBQZjt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1cbmZ1bmN0aW9uIFRmKGEpe2E9YS5jaGlsZENvbnRleHRUeXBlcztyZXR1cm4gbnVsbCE9PWEmJnZvaWQgMCE9PWF9ZnVuY3Rpb24gVWYoKXtHKFFmKTtHKEkpfWZ1bmN0aW9uIFZmKGEsYixjKXtpZihJLmN1cnJlbnQhPT1QZil0aHJvdyBFcnJvcihwKDE2OCkpO0goSSxiKTtIKFFmLGMpfWZ1bmN0aW9uIFdmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtiPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZClpZighKGUgaW4gYikpdGhyb3cgRXJyb3IocCgxMDgsUGEoYSl8fFwiVW5rbm93blwiLGUpKTtyZXR1cm4gQSh7fSxjLGQpfVxuZnVuY3Rpb24gWGYoYSl7YT0oYT1hLnN0YXRlTm9kZSkmJmEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fFBmO1JmPUkuY3VycmVudDtIKEksYSk7SChRZixRZi5jdXJyZW50KTtyZXR1cm4hMH1mdW5jdGlvbiBZZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoIWQpdGhyb3cgRXJyb3IocCgxNjkpKTtjPyhhPVdmKGEsYixSZiksZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1hLEcoUWYpLEcoSSksSChJLGEpKTpHKFFmKTtIKFFmLGMpfXZhciBaZj1udWxsLCRmPSExLGFnPSExO2Z1bmN0aW9uIGJnKGEpe251bGw9PT1aZj9aZj1bYV06WmYucHVzaChhKX1mdW5jdGlvbiBjZyhhKXskZj0hMDtiZyhhKX1cbmZ1bmN0aW9uIGRnKCl7aWYoIWFnJiZudWxsIT09WmYpe2FnPSEwO3ZhciBhPTAsYj1FO3RyeXt2YXIgYz1aZjtmb3IoRT0xO2E8Yy5sZW5ndGg7YSsrKXt2YXIgZD1jW2FdO2RvIGQ9ZCghMCk7d2hpbGUobnVsbCE9PWQpfVpmPW51bGw7JGY9ITF9Y2F0Y2goZSl7dGhyb3cgbnVsbCE9PVpmJiYoWmY9WmYuc2xpY2UoYSsxKSksWWIoY2MsZGcpLGU7fWZpbmFsbHl7RT1iLGFnPSExfX1yZXR1cm4gbnVsbH12YXIgZWc9c2EuUmVhY3RDdXJyZW50QmF0Y2hDb25maWc7ZnVuY3Rpb24gZmcoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1BKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSk7cmV0dXJuIGJ9cmV0dXJuIGJ9dmFyIGdnPU9mKG51bGwpLGhnPW51bGwsaWc9bnVsbCxqZz1udWxsO2Z1bmN0aW9uIGtnKCl7amc9aWc9aGc9bnVsbH1cbmZ1bmN0aW9uIGxnKGEpe3ZhciBiPWdnLmN1cnJlbnQ7RyhnZyk7YS5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gbWcoYSxiLGMpe2Zvcig7bnVsbCE9PWE7KXt2YXIgZD1hLmFsdGVybmF0ZTsoYS5jaGlsZExhbmVzJmIpIT09Yj8oYS5jaGlsZExhbmVzfD1iLG51bGwhPT1kJiYoZC5jaGlsZExhbmVzfD1iKSk6bnVsbCE9PWQmJihkLmNoaWxkTGFuZXMmYikhPT1iJiYoZC5jaGlsZExhbmVzfD1iKTtpZihhPT09YylicmVhazthPWEucmV0dXJufX1mdW5jdGlvbiBuZyhhLGIpe2hnPWE7amc9aWc9bnVsbDthPWEuZGVwZW5kZW5jaWVzO251bGwhPT1hJiZudWxsIT09YS5maXJzdENvbnRleHQmJigwIT09KGEubGFuZXMmYikmJihvZz0hMCksYS5maXJzdENvbnRleHQ9bnVsbCl9XG5mdW5jdGlvbiBwZyhhKXt2YXIgYj1hLl9jdXJyZW50VmFsdWU7aWYoamchPT1hKWlmKGE9e2NvbnRleHQ6YSxtZW1vaXplZFZhbHVlOmIsbmV4dDpudWxsfSxudWxsPT09aWcpe2lmKG51bGw9PT1oZyl0aHJvdyBFcnJvcihwKDMwOCkpO2lnPWE7aGcuZGVwZW5kZW5jaWVzPXtsYW5lczowLGZpcnN0Q29udGV4dDphfX1lbHNlIGlnPWlnLm5leHQ9YTtyZXR1cm4gYn12YXIgcWc9bnVsbCxyZz0hMTtmdW5jdGlvbiBzZyhhKXthLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5tZW1vaXplZFN0YXRlLGZpcnN0QmFzZVVwZGF0ZTpudWxsLGxhc3RCYXNlVXBkYXRlOm51bGwsc2hhcmVkOntwZW5kaW5nOm51bGwsaW50ZXJsZWF2ZWQ6bnVsbCxsYW5lczowfSxlZmZlY3RzOm51bGx9fVxuZnVuY3Rpb24gdGcoYSxiKXthPWEudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT09PWEmJihiLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5iYXNlU3RhdGUsZmlyc3RCYXNlVXBkYXRlOmEuZmlyc3RCYXNlVXBkYXRlLGxhc3RCYXNlVXBkYXRlOmEubGFzdEJhc2VVcGRhdGUsc2hhcmVkOmEuc2hhcmVkLGVmZmVjdHM6YS5lZmZlY3RzfSl9ZnVuY3Rpb24gdWcoYSxiKXtyZXR1cm57ZXZlbnRUaW1lOmEsbGFuZTpiLHRhZzowLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbH19XG5mdW5jdGlvbiB2ZyhhLGIpe3ZhciBjPWEudXBkYXRlUXVldWU7bnVsbCE9PWMmJihjPWMuc2hhcmVkLG51bGwhPT1KJiYwIT09KGEubW9kZSYxKSYmMD09PShLJjIpPyhhPWMuaW50ZXJsZWF2ZWQsbnVsbD09PWE/KGIubmV4dD1iLG51bGw9PT1xZz9xZz1bY106cWcucHVzaChjKSk6KGIubmV4dD1hLm5leHQsYS5uZXh0PWIpLGMuaW50ZXJsZWF2ZWQ9Yik6KGE9Yy5wZW5kaW5nLG51bGw9PT1hP2IubmV4dD1iOihiLm5leHQ9YS5uZXh0LGEubmV4dD1iKSxjLnBlbmRpbmc9YikpfWZ1bmN0aW9uIHdnKGEsYixjKXtiPWIudXBkYXRlUXVldWU7aWYobnVsbCE9PWImJihiPWIuc2hhcmVkLDAhPT0oYyY0MTk0MjQwKSkpe3ZhciBkPWIubGFuZXM7ZCY9YS5wZW5kaW5nTGFuZXM7Y3w9ZDtiLmxhbmVzPWM7eWMoYSxjKX19XG5mdW5jdGlvbiB4ZyhhLGIpe3ZhciBjPWEudXBkYXRlUXVldWUsZD1hLmFsdGVybmF0ZTtpZihudWxsIT09ZCYmKGQ9ZC51cGRhdGVRdWV1ZSxjPT09ZCkpe3ZhciBlPW51bGwsZj1udWxsO2M9Yy5maXJzdEJhc2VVcGRhdGU7aWYobnVsbCE9PWMpe2Rve3ZhciBnPXtldmVudFRpbWU6Yy5ldmVudFRpbWUsbGFuZTpjLmxhbmUsdGFnOmMudGFnLHBheWxvYWQ6Yy5wYXlsb2FkLGNhbGxiYWNrOmMuY2FsbGJhY2ssbmV4dDpudWxsfTtudWxsPT09Zj9lPWY9ZzpmPWYubmV4dD1nO2M9Yy5uZXh0fXdoaWxlKG51bGwhPT1jKTtudWxsPT09Zj9lPWY9YjpmPWYubmV4dD1ifWVsc2UgZT1mPWI7Yz17YmFzZVN0YXRlOmQuYmFzZVN0YXRlLGZpcnN0QmFzZVVwZGF0ZTplLGxhc3RCYXNlVXBkYXRlOmYsc2hhcmVkOmQuc2hhcmVkLGVmZmVjdHM6ZC5lZmZlY3RzfTthLnVwZGF0ZVF1ZXVlPWM7cmV0dXJufWE9Yy5sYXN0QmFzZVVwZGF0ZTtudWxsPT09YT9jLmZpcnN0QmFzZVVwZGF0ZT1iOmEubmV4dD1cbmI7Yy5sYXN0QmFzZVVwZGF0ZT1ifVxuZnVuY3Rpb24geWcoYSxiLGMsZCl7dmFyIGU9YS51cGRhdGVRdWV1ZTtyZz0hMTt2YXIgZj1lLmZpcnN0QmFzZVVwZGF0ZSxnPWUubGFzdEJhc2VVcGRhdGUsaD1lLnNoYXJlZC5wZW5kaW5nO2lmKG51bGwhPT1oKXtlLnNoYXJlZC5wZW5kaW5nPW51bGw7dmFyIGs9aCxsPWsubmV4dDtrLm5leHQ9bnVsbDtudWxsPT09Zz9mPWw6Zy5uZXh0PWw7Zz1rO3ZhciBtPWEuYWx0ZXJuYXRlO251bGwhPT1tJiYobT1tLnVwZGF0ZVF1ZXVlLGg9bS5sYXN0QmFzZVVwZGF0ZSxoIT09ZyYmKG51bGw9PT1oP20uZmlyc3RCYXNlVXBkYXRlPWw6aC5uZXh0PWwsbS5sYXN0QmFzZVVwZGF0ZT1rKSl9aWYobnVsbCE9PWYpe3ZhciB3PWUuYmFzZVN0YXRlO2c9MDttPWw9az1udWxsO2g9Zjtkb3t2YXIgdT1oLmxhbmUseT1oLmV2ZW50VGltZTtpZigoZCZ1KT09PXUpe251bGwhPT1tJiYobT1tLm5leHQ9e2V2ZW50VGltZTp5LGxhbmU6MCx0YWc6aC50YWcscGF5bG9hZDpoLnBheWxvYWQsY2FsbGJhY2s6aC5jYWxsYmFjayxcbm5leHQ6bnVsbH0pO2E6e3ZhciBuPWEsdj1oO3U9Yjt5PWM7c3dpdGNoKHYudGFnKXtjYXNlIDE6bj12LnBheWxvYWQ7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIG4pe3c9bi5jYWxsKHksdyx1KTticmVhayBhfXc9bjticmVhayBhO2Nhc2UgMzpuLmZsYWdzPW4uZmxhZ3MmLTY1NTM3fDEyODtjYXNlIDA6bj12LnBheWxvYWQ7dT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygbj9uLmNhbGwoeSx3LHUpOm47aWYobnVsbD09PXV8fHZvaWQgMD09PXUpYnJlYWsgYTt3PUEoe30sdyx1KTticmVhayBhO2Nhc2UgMjpyZz0hMH19bnVsbCE9PWguY2FsbGJhY2smJjAhPT1oLmxhbmUmJihhLmZsYWdzfD02NCx1PWUuZWZmZWN0cyxudWxsPT09dT9lLmVmZmVjdHM9W2hdOnUucHVzaChoKSl9ZWxzZSB5PXtldmVudFRpbWU6eSxsYW5lOnUsdGFnOmgudGFnLHBheWxvYWQ6aC5wYXlsb2FkLGNhbGxiYWNrOmguY2FsbGJhY2ssbmV4dDpudWxsfSxudWxsPT09bT8obD1tPXksaz13KTptPW0ubmV4dD15LGd8PXU7XG5oPWgubmV4dDtpZihudWxsPT09aClpZihoPWUuc2hhcmVkLnBlbmRpbmcsbnVsbD09PWgpYnJlYWs7ZWxzZSB1PWgsaD11Lm5leHQsdS5uZXh0PW51bGwsZS5sYXN0QmFzZVVwZGF0ZT11LGUuc2hhcmVkLnBlbmRpbmc9bnVsbH13aGlsZSgxKTtudWxsPT09bSYmKGs9dyk7ZS5iYXNlU3RhdGU9aztlLmZpcnN0QmFzZVVwZGF0ZT1sO2UubGFzdEJhc2VVcGRhdGU9bTtiPWUuc2hhcmVkLmludGVybGVhdmVkO2lmKG51bGwhPT1iKXtlPWI7ZG8gZ3w9ZS5sYW5lLGU9ZS5uZXh0O3doaWxlKGUhPT1iKX1lbHNlIG51bGw9PT1mJiYoZS5zaGFyZWQubGFuZXM9MCk7emd8PWc7YS5sYW5lcz1nO2EubWVtb2l6ZWRTdGF0ZT13fX1cbmZ1bmN0aW9uIEFnKGEsYixjKXthPWIuZWZmZWN0cztiLmVmZmVjdHM9bnVsbDtpZihudWxsIT09YSlmb3IoYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgZD1hW2JdLGU9ZC5jYWxsYmFjaztpZihudWxsIT09ZSl7ZC5jYWxsYmFjaz1udWxsO2Q9YztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZSl0aHJvdyBFcnJvcihwKDE5MSxlKSk7ZS5jYWxsKGQpfX19dmFyIEJnPShuZXcgYWEuQ29tcG9uZW50KS5yZWZzO2Z1bmN0aW9uIENnKGEsYixjLGQpe2I9YS5tZW1vaXplZFN0YXRlO2M9YyhkLGIpO2M9bnVsbD09PWN8fHZvaWQgMD09PWM/YjpBKHt9LGIsYyk7YS5tZW1vaXplZFN0YXRlPWM7MD09PWEubGFuZXMmJihhLnVwZGF0ZVF1ZXVlLmJhc2VTdGF0ZT1jKX1cbnZhciBGZz17aXNNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxzKT9TYihhKT09PWE6ITF9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsczt2YXIgZD1NKCksZT1EZyhhKSxmPXVnKGQsZSk7Zi5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihmLmNhbGxiYWNrPWMpO3ZnKGEsZik7Yj1FZyhhLGUsZCk7bnVsbCE9PWImJndnKGIsYSxlKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsczt2YXIgZD1NKCksZT1EZyhhKSxmPXVnKGQsZSk7Zi50YWc9MTtmLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGYuY2FsbGJhY2s9Yyk7dmcoYSxmKTtiPUVnKGEsZSxkKTtudWxsIT09YiYmd2coYixhLGUpfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oYSxiKXthPWEuX3JlYWN0SW50ZXJuYWxzO3ZhciBjPU0oKSxkPURnKGEpLGU9dWcoYyxcbmQpO2UudGFnPTI7dm9pZCAwIT09YiYmbnVsbCE9PWImJihlLmNhbGxiYWNrPWIpO3ZnKGEsZSk7Yj1FZyhhLGQsYyk7bnVsbCE9PWImJndnKGIsYSxkKX19O2Z1bmN0aW9uIEdnKGEsYixjLGQsZSxmLGcpe2E9YS5zdGF0ZU5vZGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuc2hvdWxkQ29tcG9uZW50VXBkYXRlP2Euc2hvdWxkQ29tcG9uZW50VXBkYXRlKGQsZixnKTpiLnByb3RvdHlwZSYmYi5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IURlKGMsZCl8fCFEZShlLGYpOiEwfVxuZnVuY3Rpb24gSGcoYSxiLGMpe3ZhciBkPSExLGU9UGY7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2Y9cGcoZik6KGU9VGYoYik/UmY6SS5jdXJyZW50LGQ9Yi5jb250ZXh0VHlwZXMsZj0oZD1udWxsIT09ZCYmdm9pZCAwIT09ZCk/U2YoYSxlKTpQZik7Yj1uZXcgYihjLGYpO2EubWVtb2l6ZWRTdGF0ZT1udWxsIT09Yi5zdGF0ZSYmdm9pZCAwIT09Yi5zdGF0ZT9iLnN0YXRlOm51bGw7Yi51cGRhdGVyPUZnO2Euc3RhdGVOb2RlPWI7Yi5fcmVhY3RJbnRlcm5hbHM9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxuZnVuY3Rpb24gSWcoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJkZnLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24gSmcoYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz1CZztzZyhhKTt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PXBnKGYpOihmPVRmKGIpP1JmOkkuY3VycmVudCxlLmNvbnRleHQ9U2YoYSxmKSk7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKENnKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnR8fChiPWUuc3RhdGUsXG5cImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQmJmUuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYiE9PWUuc3RhdGUmJkZnLmVucXVldWVSZXBsYWNlU3RhdGUoZSxlLnN0YXRlLG51bGwpLHlnKGEsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnREaWRNb3VudCYmKGEuZmxhZ3N8PTQxOTQzMDgpfXZhciBLZz1bXSxMZz0wLE1nPW51bGwsTmc9MCxPZz1bXSxQZz0wLFFnPW51bGwsUmc9MSxTZz1cIlwiO2Z1bmN0aW9uIFRnKGEsYil7S2dbTGcrK109Tmc7S2dbTGcrK109TWc7TWc9YTtOZz1ifVxuZnVuY3Rpb24gVWcoYSxiLGMpe09nW1BnKytdPVJnO09nW1BnKytdPVNnO09nW1BnKytdPVFnO1FnPWE7dmFyIGQ9Umc7YT1TZzt2YXIgZT0zMi1sYyhkKS0xO2QmPX4oMTw8ZSk7Yys9MTt2YXIgZj0zMi1sYyhiKStlO2lmKDMwPGYpe3ZhciBnPWUtZSU1O2Y9KGQmKDE8PGcpLTEpLnRvU3RyaW5nKDMyKTtkPj49ZztlLT1nO1JnPTE8PDMyLWxjKGIpK2V8Yzw8ZXxkO1NnPWYrYX1lbHNlIFJnPTE8PGZ8Yzw8ZXxkLFNnPWF9ZnVuY3Rpb24gVmcoYSl7bnVsbCE9PWEucmV0dXJuJiYoVGcoYSwxKSxVZyhhLDEsMCkpfWZ1bmN0aW9uIFdnKGEpe2Zvcig7YT09PU1nOylNZz1LZ1stLUxnXSxLZ1tMZ109bnVsbCxOZz1LZ1stLUxnXSxLZ1tMZ109bnVsbDtmb3IoO2E9PT1RZzspUWc9T2dbLS1QZ10sT2dbUGddPW51bGwsU2c9T2dbLS1QZ10sT2dbUGddPW51bGwsUmc9T2dbLS1QZ10sT2dbUGddPW51bGx9dmFyIFhnPW51bGwsWWc9bnVsbCxOPSExLFpnPW51bGw7XG5mdW5jdGlvbiAkZyhhLGIpe3ZhciBjPWFoKDUsbnVsbCxudWxsLDApO2MuZWxlbWVudFR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2I9YS5kZWxldGlvbnM7bnVsbD09PWI/KGEuZGVsZXRpb25zPVtjXSxhLmZsYWdzfD0xNik6Yi5wdXNoKGMpfVxuZnVuY3Rpb24gYmgoYSxiKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTp2YXIgYz1hLnR5cGU7Yj0xIT09Yi5ub2RlVHlwZXx8Yy50b0xvd2VyQ2FzZSgpIT09Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpP251bGw6YjtyZXR1cm4gbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsWGc9YSxZZz1GZihiLmZpcnN0Q2hpbGQpLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsWGc9YSxZZz1udWxsLCEwKTohMTtjYXNlIDEzOnJldHVybiBiPTghPT1iLm5vZGVUeXBlP251bGw6YixudWxsIT09Yj8oYz1udWxsIT09UWc/e2lkOlJnLG92ZXJmbG93OlNnfTpudWxsLGEubWVtb2l6ZWRTdGF0ZT17ZGVoeWRyYXRlZDpiLHRyZWVDb250ZXh0OmMscmV0cnlMYW5lOjEwNzM3NDE4MjR9LGM9YWgoMTgsbnVsbCxudWxsLDApLGMuc3RhdGVOb2RlPWIsYy5yZXR1cm49YSxhLmNoaWxkPWMsWGc9YSxZZz1cbm51bGwsITApOiExO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIGNoKGEpe3JldHVybiAwIT09KGEubW9kZSYxKSYmMD09PShhLmZsYWdzJjEyOCl9ZnVuY3Rpb24gZGgoYSl7aWYoTil7dmFyIGI9WWc7aWYoYil7dmFyIGM9YjtpZighYmgoYSxiKSl7aWYoY2goYSkpdGhyb3cgRXJyb3IocCg0MTgpKTtiPUZmKGMubmV4dFNpYmxpbmcpO3ZhciBkPVhnO2ImJmJoKGEsYik/JGcoZCxjKTooYS5mbGFncz1hLmZsYWdzJi00MDk3fDIsTj0hMSxYZz1hKX19ZWxzZXtpZihjaChhKSl0aHJvdyBFcnJvcihwKDQxOCkpO2EuZmxhZ3M9YS5mbGFncyYtNDA5N3wyO049ITE7WGc9YX19fWZ1bmN0aW9uIGVoKGEpe2ZvcihhPWEucmV0dXJuO251bGwhPT1hJiY1IT09YS50YWcmJjMhPT1hLnRhZyYmMTMhPT1hLnRhZzspYT1hLnJldHVybjtYZz1hfVxuZnVuY3Rpb24gZmgoYSl7aWYoYSE9PVhnKXJldHVybiExO2lmKCFOKXJldHVybiBlaChhKSxOPSEwLCExO3ZhciBiOyhiPTMhPT1hLnRhZykmJiEoYj01IT09YS50YWcpJiYoYj1hLnR5cGUsYj1cImhlYWRcIiE9PWImJlwiYm9keVwiIT09YiYmIXlmKGEudHlwZSxhLm1lbW9pemVkUHJvcHMpKTtpZihiJiYoYj1ZZykpe2lmKGNoKGEpKXtmb3IoYT1ZZzthOylhPUZmKGEubmV4dFNpYmxpbmcpO3Rocm93IEVycm9yKHAoNDE4KSk7fWZvcig7YjspJGcoYSxiKSxiPUZmKGIubmV4dFNpYmxpbmcpfWVoKGEpO2lmKDEzPT09YS50YWcpe2E9YS5tZW1vaXplZFN0YXRlO2E9bnVsbCE9PWE/YS5kZWh5ZHJhdGVkOm51bGw7aWYoIWEpdGhyb3cgRXJyb3IocCgzMTcpKTthOnthPWEubmV4dFNpYmxpbmc7Zm9yKGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihcIi8kXCI9PT1jKXtpZigwPT09Yil7WWc9RmYoYS5uZXh0U2libGluZyk7YnJlYWsgYX1iLS19ZWxzZVwiJFwiIT09YyYmXG5cIiQhXCIhPT1jJiZcIiQ/XCIhPT1jfHxiKyt9YT1hLm5leHRTaWJsaW5nfVlnPW51bGx9fWVsc2UgWWc9WGc/RmYoYS5zdGF0ZU5vZGUubmV4dFNpYmxpbmcpOm51bGw7cmV0dXJuITB9ZnVuY3Rpb24gZ2goKXtZZz1YZz1udWxsO049ITF9ZnVuY3Rpb24gaGgoYSl7bnVsbD09PVpnP1pnPVthXTpaZy5wdXNoKGEpfVxuZnVuY3Rpb24gaWgoYSxiLGMpe2E9Yy5yZWY7aWYobnVsbCE9PWEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZcIm9iamVjdFwiIT09dHlwZW9mIGEpe2lmKGMuX293bmVyKXtjPWMuX293bmVyO2lmKGMpe2lmKDEhPT1jLnRhZyl0aHJvdyBFcnJvcihwKDMwOSkpO3ZhciBkPWMuc3RhdGVOb2RlfWlmKCFkKXRocm93IEVycm9yKHAoMTQ3LGEpKTt2YXIgZT1kLGY9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWYpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZS5yZWZzO2I9PT1CZyYmKGI9ZS5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltmXTpiW2ZdPWF9O2IuX3N0cmluZ1JlZj1mO3JldHVybiBifWlmKFwic3RyaW5nXCIhPT10eXBlb2YgYSl0aHJvdyBFcnJvcihwKDI4NCkpO2lmKCFjLl9vd25lcil0aHJvdyBFcnJvcihwKDI5MCxhKSk7fXJldHVybiBhfVxuZnVuY3Rpb24gamgoYSxiKXthPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKTt0aHJvdyBFcnJvcihwKDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1hP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmEpKTt9ZnVuY3Rpb24ga2goYSl7dmFyIGI9YS5faW5pdDtyZXR1cm4gYihhLl9wYXlsb2FkKX1cbmZ1bmN0aW9uIGxoKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmRlbGV0aW9ucztudWxsPT09ZD8oYi5kZWxldGlvbnM9W2NdLGIuZmxhZ3N8PTE2KTpkLnB1c2goYyl9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiKXthPW1oKGEsYik7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYi5mbGFnc3w9MTA0ODU3NixjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZmxhZ3N8PTIsYyk6ZDtiLmZsYWdzfD0yO3JldHVybiBjfWZ1bmN0aW9uIGcoYil7YSYmXG5udWxsPT09Yi5hbHRlcm5hdGUmJihiLmZsYWdzfD0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9bmgoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gayhhLGIsYyxkKXt2YXIgZj1jLnR5cGU7aWYoZj09PXZhKXJldHVybiBtKGEsYixjLnByb3BzLmNoaWxkcmVuLGQsYy5rZXkpO2lmKG51bGwhPT1iJiYoYi5lbGVtZW50VHlwZT09PWZ8fFwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYuJCR0eXBlb2Y9PT1GYSYma2goZik9PT1iLnR5cGUpKXJldHVybiBkPWUoYixjLnByb3BzKSxkLnJlZj1paChhLGIsYyksZC5yZXR1cm49YSxkO2Q9b2goYy50eXBlLGMua2V5LGMucHJvcHMsbnVsbCxhLm1vZGUsZCk7ZC5yZWY9aWgoYSxiLGMpO2QucmV0dXJuPWE7cmV0dXJuIGR9ZnVuY3Rpb24gbChhLGIsYyxkKXtpZihudWxsPT09Ynx8NCE9PWIudGFnfHxcbmIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09Yy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj1waChjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYy5jaGlsZHJlbnx8W10pO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbShhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9cWgoYyxhLm1vZGUsZCxmKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiB3KGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGImJlwiXCIhPT1ifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9bmgoXCJcIitiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2UgdGE6cmV0dXJuIGM9b2goYi50eXBlLGIua2V5LGIucHJvcHMsbnVsbCxhLm1vZGUsYyksXG5jLnJlZj1paChhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2UgdWE6cmV0dXJuIGI9cGgoYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2Nhc2UgRmE6dmFyIGQ9Yi5faW5pdDtyZXR1cm4gdyhhLGQoYi5fcGF5bG9hZCksYyl9aWYoYmIoYil8fElhKGIpKXJldHVybiBiPXFoKGIsYS5tb2RlLGMsbnVsbCksYi5yZXR1cm49YSxiO2poKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24gdShhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYyYmXCJcIiE9PWN8fFwibnVtYmVyXCI9PT10eXBlb2YgYylyZXR1cm4gbnVsbCE9PWU/bnVsbDpoKGEsYixcIlwiK2MsZCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7c3dpdGNoKGMuJCR0eXBlb2Ype2Nhc2UgdGE6cmV0dXJuIGMua2V5PT09ZT9rKGEsYixjLGQpOm51bGw7Y2FzZSB1YTpyZXR1cm4gYy5rZXk9PT1lP2woYSxiLGMsZCk6bnVsbDtjYXNlIEZhOnJldHVybiBlPWMuX2luaXQsdShhLFxuYixlKGMuX3BheWxvYWQpLGQpfWlmKGJiKGMpfHxJYShjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDptKGEsYixjLGQsbnVsbCk7amgoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB5KGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkJiZcIlwiIT09ZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLGgoYixhLFwiXCIrZCxlKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kKXtzd2l0Y2goZC4kJHR5cGVvZil7Y2FzZSB0YTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsayhiLGEsZCxlKTtjYXNlIHVhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpO2Nhc2UgRmE6dmFyIGY9ZC5faW5pdDtyZXR1cm4geShhLGIsYyxmKGQuX3BheWxvYWQpLGUpfWlmKGJiKGQpfHxJYShkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxtKGIsYSxkLGUsbnVsbCk7amgoYixkKX1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIG4oZSxnLGgsayl7Zm9yKHZhciBsPW51bGwsbj1udWxsLG09ZyxyPWc9MCx4PW51bGw7bnVsbCE9PW0mJnI8aC5sZW5ndGg7cisrKXttLmluZGV4PnI/KHg9bSxtPW51bGwpOng9bS5zaWJsaW5nO3ZhciB0PXUoZSxtLGhbcl0sayk7aWYobnVsbD09PXQpe251bGw9PT1tJiYobT14KTticmVha31hJiZtJiZudWxsPT09dC5hbHRlcm5hdGUmJmIoZSxtKTtnPWYodCxnLHIpO251bGw9PT1uP2w9dDpuLnNpYmxpbmc9dDtuPXQ7bT14fWlmKHI9PT1oLmxlbmd0aClyZXR1cm4gYyhlLG0pLE4mJlRnKGUsciksbDtpZihudWxsPT09bSl7Zm9yKDtyPGgubGVuZ3RoO3IrKyltPXcoZSxoW3JdLGspLG51bGwhPT1tJiYoZz1mKG0sZyxyKSxudWxsPT09bj9sPW06bi5zaWJsaW5nPW0sbj1tKTtOJiZUZyhlLHIpO3JldHVybiBsfWZvcihtPWQoZSxtKTtyPGgubGVuZ3RoO3IrKyl4PXkobSxlLHIsaFtyXSxrKSxudWxsIT09eCYmKGEmJm51bGwhPT14LmFsdGVybmF0ZSYmbS5kZWxldGUobnVsbD09PVxueC5rZXk/cjp4LmtleSksZz1mKHgsZyxyKSxudWxsPT09bj9sPXg6bi5zaWJsaW5nPXgsbj14KTthJiZtLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO04mJlRnKGUscik7cmV0dXJuIGx9ZnVuY3Rpb24gdihlLGcsaCxrKXt2YXIgbD1JYShoKTtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgbCl0aHJvdyBFcnJvcihwKDE1MCkpO2g9bC5jYWxsKGgpO2lmKG51bGw9PWgpdGhyb3cgRXJyb3IocCgxNTEpKTtmb3IodmFyIG09bD1udWxsLG49ZyxyPWc9MCx4PW51bGwsdD1oLm5leHQoKTtudWxsIT09biYmIXQuZG9uZTtyKyssdD1oLm5leHQoKSl7bi5pbmRleD5yPyh4PW4sbj1udWxsKTp4PW4uc2libGluZzt2YXIgdj11KGUsbix0LnZhbHVlLGspO2lmKG51bGw9PT12KXtudWxsPT09biYmKG49eCk7YnJlYWt9YSYmbiYmbnVsbD09PXYuYWx0ZXJuYXRlJiZiKGUsbik7Zz1mKHYsZyxyKTtudWxsPT09bT9sPXY6bS5zaWJsaW5nPXY7bT12O249eH1pZih0LmRvbmUpcmV0dXJuIGMoZSxcbm4pLE4mJlRnKGUsciksbDtpZihudWxsPT09bil7Zm9yKDshdC5kb25lO3IrKyx0PWgubmV4dCgpKXQ9dyhlLHQudmFsdWUsayksbnVsbCE9PXQmJihnPWYodCxnLHIpLG51bGw9PT1tP2w9dDptLnNpYmxpbmc9dCxtPXQpO04mJlRnKGUscik7cmV0dXJuIGx9Zm9yKG49ZChlLG4pOyF0LmRvbmU7cisrLHQ9aC5uZXh0KCkpdD15KG4sZSxyLHQudmFsdWUsayksbnVsbCE9PXQmJihhJiZudWxsIT09dC5hbHRlcm5hdGUmJm4uZGVsZXRlKG51bGw9PT10LmtleT9yOnQua2V5KSxnPWYodCxnLHIpLG51bGw9PT1tP2w9dDptLnNpYmxpbmc9dCxtPXQpO2EmJm4uZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7TiYmVGcoZSxyKTtyZXR1cm4gbH1mdW5jdGlvbiBDKGEsZCxmLGgpe1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PXZhJiZudWxsPT09Zi5rZXkmJihmPWYucHJvcHMuY2hpbGRyZW4pO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYpe3N3aXRjaChmLiQkdHlwZW9mKXtjYXNlIHRhOmE6e2Zvcih2YXIgaz1cbmYua2V5LGw9ZDtudWxsIT09bDspe2lmKGwua2V5PT09ayl7az1mLnR5cGU7aWYoaz09PXZhKXtpZig3PT09bC50YWcpe2MoYSxsLnNpYmxpbmcpO2Q9ZShsLGYucHJvcHMuY2hpbGRyZW4pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9fWVsc2UgaWYobC5lbGVtZW50VHlwZT09PWt8fFwib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWsmJmsuJCR0eXBlb2Y9PT1GYSYma2goayk9PT1sLnR5cGUpe2MoYSxsLnNpYmxpbmcpO2Q9ZShsLGYucHJvcHMpO2QucmVmPWloKGEsbCxmKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWMoYSxsKTticmVha31lbHNlIGIoYSxsKTtsPWwuc2libGluZ31mLnR5cGU9PT12YT8oZD1xaChmLnByb3BzLmNoaWxkcmVuLGEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9b2goZi50eXBlLGYua2V5LGYucHJvcHMsbnVsbCxhLm1vZGUsaCksaC5yZWY9aWgoYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlIHVhOmE6e2ZvcihsPWYua2V5O251bGwhPT1cbmQ7KXtpZihkLmtleT09PWwpaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9ZC5zaWJsaW5nfWQ9cGgoZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSk7Y2FzZSBGYTpyZXR1cm4gbD1mLl9pbml0LEMoYSxkLGwoZi5fcGF5bG9hZCksaCl9aWYoYmIoZikpcmV0dXJuIG4oYSxkLGYsaCk7aWYoSWEoZikpcmV0dXJuIHYoYSxkLGYsaCk7amgoYSxmKX1yZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGYmJlwiXCIhPT1mfHxcIm51bWJlclwiPT09dHlwZW9mIGY/KGY9XCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYpLGQucmV0dXJuPWEsYT1kKTpcbihjKGEsZCksZD1uaChmLGEubW9kZSxoKSxkLnJldHVybj1hLGE9ZCksZyhhKSk6YyhhLGQpfXJldHVybiBDfXZhciByaD1saCghMCksc2g9bGgoITEpLHRoPXt9LHVoPU9mKHRoKSx2aD1PZih0aCksd2g9T2YodGgpO2Z1bmN0aW9uIHhoKGEpe2lmKGE9PT10aCl0aHJvdyBFcnJvcihwKDE3NCkpO3JldHVybiBhfWZ1bmN0aW9uIHloKGEsYil7SCh3aCxiKTtIKHZoLGEpO0godWgsdGgpO2E9Yi5ub2RlVHlwZTtzd2l0Y2goYSl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6aWIobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmE9OD09PWE/Yi5wYXJlbnROb2RlOmIsYj1hLm5hbWVzcGFjZVVSSXx8bnVsbCxhPWEudGFnTmFtZSxiPWliKGIsYSl9Ryh1aCk7SCh1aCxiKX1mdW5jdGlvbiB6aCgpe0codWgpO0codmgpO0cod2gpfVxuZnVuY3Rpb24gQWgoYSl7eGgod2guY3VycmVudCk7dmFyIGI9eGgodWguY3VycmVudCk7dmFyIGM9aWIoYixhLnR5cGUpO2IhPT1jJiYoSCh2aCxhKSxIKHVoLGMpKX1mdW5jdGlvbiBCaChhKXt2aC5jdXJyZW50PT09YSYmKEcodWgpLEcodmgpKX12YXIgUD1PZigwKTtcbmZ1bmN0aW9uIENoKGEpe2Zvcih2YXIgYj1hO251bGwhPT1iOyl7aWYoMTM9PT1iLnRhZyl7dmFyIGM9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbD09PWN8fFwiJD9cIj09PWMuZGF0YXx8XCIkIVwiPT09Yy5kYXRhKSlyZXR1cm4gYn1lbHNlIGlmKDE5PT09Yi50YWcmJnZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5yZXZlYWxPcmRlcil7aWYoMCE9PShiLmZsYWdzJjEyOCkpcmV0dXJuIGJ9ZWxzZSBpZihudWxsIT09Yi5jaGlsZCl7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfXJldHVybiBudWxsfXZhciBEaD1bXTtcbmZ1bmN0aW9uIEVoKCl7Zm9yKHZhciBhPTA7YTxEaC5sZW5ndGg7YSsrKURoW2FdLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5PW51bGw7RGgubGVuZ3RoPTB9dmFyIEZoPXNhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsR2g9c2EuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsSGg9MCxRPW51bGwsUj1udWxsLFM9bnVsbCxJaD0hMSxKaD0hMSxLaD0wLExoPTA7ZnVuY3Rpb24gVSgpe3Rocm93IEVycm9yKHAoMzIxKSk7fWZ1bmN0aW9uIE1oKGEsYil7aWYobnVsbD09PWIpcmV0dXJuITE7Zm9yKHZhciBjPTA7YzxiLmxlbmd0aCYmYzxhLmxlbmd0aDtjKyspaWYoIUNlKGFbY10sYltjXSkpcmV0dXJuITE7cmV0dXJuITB9XG5mdW5jdGlvbiBOaChhLGIsYyxkLGUsZil7SGg9ZjtRPWI7Yi5tZW1vaXplZFN0YXRlPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2IubGFuZXM9MDtGaC5jdXJyZW50PW51bGw9PT1hfHxudWxsPT09YS5tZW1vaXplZFN0YXRlP09oOlBoO2E9YyhkLGUpO2lmKEpoKXtmPTA7ZG97Smg9ITE7S2g9MDtpZigyNTw9Zil0aHJvdyBFcnJvcihwKDMwMSkpO2YrPTE7Uz1SPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO0ZoLmN1cnJlbnQ9UWg7YT1jKGQsZSl9d2hpbGUoSmgpfUZoLmN1cnJlbnQ9Umg7Yj1udWxsIT09UiYmbnVsbCE9PVIubmV4dDtIaD0wO1M9Uj1RPW51bGw7SWg9ITE7aWYoYil0aHJvdyBFcnJvcihwKDMwMCkpO3JldHVybiBhfWZ1bmN0aW9uIFNoKCl7dmFyIGE9MCE9PUtoO0toPTA7cmV0dXJuIGF9XG5mdW5jdGlvbiBUaCgpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwsYmFzZVF1ZXVlOm51bGwscXVldWU6bnVsbCxuZXh0Om51bGx9O251bGw9PT1TP1EubWVtb2l6ZWRTdGF0ZT1TPWE6Uz1TLm5leHQ9YTtyZXR1cm4gU31mdW5jdGlvbiBVaCgpe2lmKG51bGw9PT1SKXt2YXIgYT1RLmFsdGVybmF0ZTthPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsfWVsc2UgYT1SLm5leHQ7dmFyIGI9bnVsbD09PVM/US5tZW1vaXplZFN0YXRlOlMubmV4dDtpZihudWxsIT09YilTPWIsUj1hO2Vsc2V7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IocCgzMTApKTtSPWE7YT17bWVtb2l6ZWRTdGF0ZTpSLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOlIuYmFzZVN0YXRlLGJhc2VRdWV1ZTpSLmJhc2VRdWV1ZSxxdWV1ZTpSLnF1ZXVlLG5leHQ6bnVsbH07bnVsbD09PVM/US5tZW1vaXplZFN0YXRlPVM9YTpTPVMubmV4dD1hfXJldHVybiBTfVxuZnVuY3Rpb24gVmgoYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiBXaChhKXt2YXIgYj1VaCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcihwKDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPVIsZT1kLmJhc2VRdWV1ZSxmPWMucGVuZGluZztpZihudWxsIT09Zil7aWYobnVsbCE9PWUpe3ZhciBnPWUubmV4dDtlLm5leHQ9Zi5uZXh0O2YubmV4dD1nfWQuYmFzZVF1ZXVlPWU9ZjtjLnBlbmRpbmc9bnVsbH1pZihudWxsIT09ZSl7Zj1lLm5leHQ7ZD1kLmJhc2VTdGF0ZTt2YXIgaD1nPW51bGwsaz1udWxsLGw9Zjtkb3t2YXIgbT1sLmxhbmU7aWYoKEhoJm0pPT09bSludWxsIT09ayYmKGs9ay5uZXh0PXtsYW5lOjAsYWN0aW9uOmwuYWN0aW9uLGhhc0VhZ2VyU3RhdGU6bC5oYXNFYWdlclN0YXRlLGVhZ2VyU3RhdGU6bC5lYWdlclN0YXRlLG5leHQ6bnVsbH0pLGQ9bC5oYXNFYWdlclN0YXRlP2wuZWFnZXJTdGF0ZTphKGQsbC5hY3Rpb24pO2Vsc2V7dmFyIHc9e2xhbmU6bSxhY3Rpb246bC5hY3Rpb24saGFzRWFnZXJTdGF0ZTpsLmhhc0VhZ2VyU3RhdGUsXG5lYWdlclN0YXRlOmwuZWFnZXJTdGF0ZSxuZXh0Om51bGx9O251bGw9PT1rPyhoPWs9dyxnPWQpOms9ay5uZXh0PXc7US5sYW5lc3w9bTt6Z3w9bX1sPWwubmV4dH13aGlsZShudWxsIT09bCYmbCE9PWYpO251bGw9PT1rP2c9ZDprLm5leHQ9aDtDZShkLGIubWVtb2l6ZWRTdGF0ZSl8fChvZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWQ7Yi5iYXNlU3RhdGU9ZztiLmJhc2VRdWV1ZT1rO2MubGFzdFJlbmRlcmVkU3RhdGU9ZH1hPWMuaW50ZXJsZWF2ZWQ7aWYobnVsbCE9PWEpe2U9YTtkbyBmPWUubGFuZSxRLmxhbmVzfD1mLHpnfD1mLGU9ZS5uZXh0O3doaWxlKGUhPT1hKX1lbHNlIG51bGw9PT1lJiYoYy5sYW5lcz0wKTtyZXR1cm5bYi5tZW1vaXplZFN0YXRlLGMuZGlzcGF0Y2hdfVxuZnVuY3Rpb24gWGgoYSl7dmFyIGI9VWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IocCgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1jLmRpc3BhdGNoLGU9Yy5wZW5kaW5nLGY9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1lKXtjLnBlbmRpbmc9bnVsbDt2YXIgZz1lPWUubmV4dDtkbyBmPWEoZixnLmFjdGlvbiksZz1nLm5leHQ7d2hpbGUoZyE9PWUpO0NlKGYsYi5tZW1vaXplZFN0YXRlKXx8KG9nPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtudWxsPT09Yi5iYXNlUXVldWUmJihiLmJhc2VTdGF0ZT1mKTtjLmxhc3RSZW5kZXJlZFN0YXRlPWZ9cmV0dXJuW2YsZF19ZnVuY3Rpb24gWWgoKXt9XG5mdW5jdGlvbiBaaChhLGIpe3ZhciBjPVEsZD1VaCgpLGU9YigpLGY9IUNlKGQubWVtb2l6ZWRTdGF0ZSxlKTtmJiYoZC5tZW1vaXplZFN0YXRlPWUsb2c9ITApO2Q9ZC5xdWV1ZTskaChhaS5iaW5kKG51bGwsYyxkLGEpLFthXSk7aWYoZC5nZXRTbmFwc2hvdCE9PWJ8fGZ8fG51bGwhPT1TJiZTLm1lbW9pemVkU3RhdGUudGFnJjEpe2MuZmxhZ3N8PTIwNDg7YmkoOSxjaS5iaW5kKG51bGwsYyxkLGUsYiksdm9pZCAwLG51bGwpO2lmKG51bGw9PT1KKXRocm93IEVycm9yKHAoMzQ5KSk7MCE9PShIaCYzMCl8fGRpKGMsYixlKX1yZXR1cm4gZX1mdW5jdGlvbiBkaShhLGIsYyl7YS5mbGFnc3w9MTYzODQ7YT17Z2V0U25hcHNob3Q6Yix2YWx1ZTpjfTtiPVEudXBkYXRlUXVldWU7bnVsbD09PWI/KGI9e2xhc3RFZmZlY3Q6bnVsbCxzdG9yZXM6bnVsbH0sUS51cGRhdGVRdWV1ZT1iLGIuc3RvcmVzPVthXSk6KGM9Yi5zdG9yZXMsbnVsbD09PWM/Yi5zdG9yZXM9W2FdOmMucHVzaChhKSl9XG5mdW5jdGlvbiBjaShhLGIsYyxkKXtiLnZhbHVlPWM7Yi5nZXRTbmFwc2hvdD1kO2VpKGIpJiZFZyhhLDEsLTEpfWZ1bmN0aW9uIGFpKGEsYixjKXtyZXR1cm4gYyhmdW5jdGlvbigpe2VpKGIpJiZFZyhhLDEsLTEpfSl9ZnVuY3Rpb24gZWkoYSl7dmFyIGI9YS5nZXRTbmFwc2hvdDthPWEudmFsdWU7dHJ5e3ZhciBjPWIoKTtyZXR1cm4hQ2UoYSxjKX1jYXRjaChkKXtyZXR1cm4hMH19ZnVuY3Rpb24gZmkoYSl7dmFyIGI9VGgoKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSYmKGE9YSgpKTtiLm1lbW9pemVkU3RhdGU9Yi5iYXNlU3RhdGU9YTthPXtwZW5kaW5nOm51bGwsaW50ZXJsZWF2ZWQ6bnVsbCxsYW5lczowLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjpWaCxsYXN0UmVuZGVyZWRTdGF0ZTphfTtiLnF1ZXVlPWE7YT1hLmRpc3BhdGNoPWdpLmJpbmQobnVsbCxRLGEpO3JldHVybltiLm1lbW9pemVkU3RhdGUsYV19XG5mdW5jdGlvbiBiaShhLGIsYyxkKXthPXt0YWc6YSxjcmVhdGU6YixkZXN0cm95OmMsZGVwczpkLG5leHQ6bnVsbH07Yj1RLnVwZGF0ZVF1ZXVlO251bGw9PT1iPyhiPXtsYXN0RWZmZWN0Om51bGwsc3RvcmVzOm51bGx9LFEudXBkYXRlUXVldWU9YixiLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihjPWIubGFzdEVmZmVjdCxudWxsPT09Yz9iLmxhc3RFZmZlY3Q9YS5uZXh0PWE6KGQ9Yy5uZXh0LGMubmV4dD1hLGEubmV4dD1kLGIubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9ZnVuY3Rpb24gaGkoKXtyZXR1cm4gVWgoKS5tZW1vaXplZFN0YXRlfWZ1bmN0aW9uIGlpKGEsYixjLGQpe3ZhciBlPVRoKCk7US5mbGFnc3w9YTtlLm1lbW9pemVkU3RhdGU9YmkoMXxiLGMsdm9pZCAwLHZvaWQgMD09PWQ/bnVsbDpkKX1cbmZ1bmN0aW9uIGppKGEsYixjLGQpe3ZhciBlPVVoKCk7ZD12b2lkIDA9PT1kP251bGw6ZDt2YXIgZj12b2lkIDA7aWYobnVsbCE9PVIpe3ZhciBnPVIubWVtb2l6ZWRTdGF0ZTtmPWcuZGVzdHJveTtpZihudWxsIT09ZCYmTWgoZCxnLmRlcHMpKXtlLm1lbW9pemVkU3RhdGU9YmkoYixjLGYsZCk7cmV0dXJufX1RLmZsYWdzfD1hO2UubWVtb2l6ZWRTdGF0ZT1iaSgxfGIsYyxmLGQpfWZ1bmN0aW9uIGtpKGEsYil7cmV0dXJuIGlpKDgzOTA2NTYsOCxhLGIpfWZ1bmN0aW9uICRoKGEsYil7cmV0dXJuIGppKDIwNDgsOCxhLGIpfWZ1bmN0aW9uIGxpKGEsYil7cmV0dXJuIGppKDQsMixhLGIpfWZ1bmN0aW9uIG1pKGEsYil7cmV0dXJuIGppKDQsNCxhLGIpfVxuZnVuY3Rpb24gbmkoYSxiKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYT1hKCksYihhKSxmdW5jdGlvbigpe2IobnVsbCl9O2lmKG51bGwhPT1iJiZ2b2lkIDAhPT1iKXJldHVybiBhPWEoKSxiLmN1cnJlbnQ9YSxmdW5jdGlvbigpe2IuY3VycmVudD1udWxsfX1mdW5jdGlvbiBvaShhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIGppKDQsNCxuaS5iaW5kKG51bGwsYixhKSxjKX1mdW5jdGlvbiBwaSgpe31mdW5jdGlvbiBxaShhLGIpe3ZhciBjPVVoKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZNaChiLGRbMV0pKXJldHVybiBkWzBdO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1cbmZ1bmN0aW9uIHJpKGEsYil7dmFyIGM9VWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJk1oKGIsZFsxXSkpcmV0dXJuIGRbMF07YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfWZ1bmN0aW9uIHNpKGEsYil7dmFyIGM9RTtFPTAhPT1jJiY0PmM/Yzo0O2EoITApO3ZhciBkPUdoLnRyYW5zaXRpb247R2gudHJhbnNpdGlvbj17fTt0cnl7YSghMSksYigpfWZpbmFsbHl7RT1jLEdoLnRyYW5zaXRpb249ZH19ZnVuY3Rpb24gdGkoKXtyZXR1cm4gVWgoKS5tZW1vaXplZFN0YXRlfWZ1bmN0aW9uIHVpKGEsYixjKXt2YXIgZD1EZyhhKTtjPXtsYW5lOmQsYWN0aW9uOmMsaGFzRWFnZXJTdGF0ZTohMSxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfTt2aShhKT93aShiLGMpOih4aShhLGIsYyksYz1NKCksYT1FZyhhLGQsYyksbnVsbCE9PWEmJnlpKGEsYixkKSl9XG5mdW5jdGlvbiBnaShhLGIsYyl7dmFyIGQ9RGcoYSksZT17bGFuZTpkLGFjdGlvbjpjLGhhc0VhZ2VyU3RhdGU6ITEsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH07aWYodmkoYSkpd2koYixlKTtlbHNle3hpKGEsYixlKTt2YXIgZj1hLmFsdGVybmF0ZTtpZigwPT09YS5sYW5lcyYmKG51bGw9PT1mfHwwPT09Zi5sYW5lcykmJihmPWIubGFzdFJlbmRlcmVkUmVkdWNlcixudWxsIT09ZikpdHJ5e3ZhciBnPWIubGFzdFJlbmRlcmVkU3RhdGUsaD1mKGcsYyk7ZS5oYXNFYWdlclN0YXRlPSEwO2UuZWFnZXJTdGF0ZT1oO2lmKENlKGgsZykpcmV0dXJufWNhdGNoKGspe31maW5hbGx5e31jPU0oKTthPUVnKGEsZCxjKTtudWxsIT09YSYmeWkoYSxiLGQpfX1mdW5jdGlvbiB2aShhKXt2YXIgYj1hLmFsdGVybmF0ZTtyZXR1cm4gYT09PVF8fG51bGwhPT1iJiZiPT09UX1cbmZ1bmN0aW9uIHdpKGEsYil7Smg9SWg9ITA7dmFyIGM9YS5wZW5kaW5nO251bGw9PT1jP2IubmV4dD1iOihiLm5leHQ9Yy5uZXh0LGMubmV4dD1iKTthLnBlbmRpbmc9Yn1mdW5jdGlvbiB4aShhLGIsYyl7bnVsbCE9PUomJjAhPT0oYS5tb2RlJjEpJiYwPT09KEsmMik/KGE9Yi5pbnRlcmxlYXZlZCxudWxsPT09YT8oYy5uZXh0PWMsbnVsbD09PXFnP3FnPVtiXTpxZy5wdXNoKGIpKTooYy5uZXh0PWEubmV4dCxhLm5leHQ9YyksYi5pbnRlcmxlYXZlZD1jKTooYT1iLnBlbmRpbmcsbnVsbD09PWE/Yy5uZXh0PWM6KGMubmV4dD1hLm5leHQsYS5uZXh0PWMpLGIucGVuZGluZz1jKX1mdW5jdGlvbiB5aShhLGIsYyl7aWYoMCE9PShjJjQxOTQyNDApKXt2YXIgZD1iLmxhbmVzO2QmPWEucGVuZGluZ0xhbmVzO2N8PWQ7Yi5sYW5lcz1jO3ljKGEsYyl9fVxudmFyIFJoPXtyZWFkQ29udGV4dDpwZyx1c2VDYWxsYmFjazpVLHVzZUNvbnRleHQ6VSx1c2VFZmZlY3Q6VSx1c2VJbXBlcmF0aXZlSGFuZGxlOlUsdXNlSW5zZXJ0aW9uRWZmZWN0OlUsdXNlTGF5b3V0RWZmZWN0OlUsdXNlTWVtbzpVLHVzZVJlZHVjZXI6VSx1c2VSZWY6VSx1c2VTdGF0ZTpVLHVzZURlYnVnVmFsdWU6VSx1c2VEZWZlcnJlZFZhbHVlOlUsdXNlVHJhbnNpdGlvbjpVLHVzZU11dGFibGVTb3VyY2U6VSx1c2VTeW5jRXh0ZXJuYWxTdG9yZTpVLHVzZUlkOlUsdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxPaD17cmVhZENvbnRleHQ6cGcsdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXtUaCgpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfSx1c2VDb250ZXh0OnBnLHVzZUVmZmVjdDpraSx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gaWkoNDE5NDMwOCxcbjQsbmkuYmluZChudWxsLGIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBpaSg0MTk0MzA4LDQsYSxiKX0sdXNlSW5zZXJ0aW9uRWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIGlpKDQsMixhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9VGgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX0sdXNlUmVkdWNlcjpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9VGgoKTtiPXZvaWQgMCE9PWM/YyhiKTpiO2QubWVtb2l6ZWRTdGF0ZT1kLmJhc2VTdGF0ZT1iO2E9e3BlbmRpbmc6bnVsbCxpbnRlcmxlYXZlZDpudWxsLGxhbmVzOjAsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOmEsbGFzdFJlbmRlcmVkU3RhdGU6Yn07ZC5xdWV1ZT1hO2E9YS5kaXNwYXRjaD11aS5iaW5kKG51bGwsUSxhKTtyZXR1cm5bZC5tZW1vaXplZFN0YXRlLGFdfSx1c2VSZWY6ZnVuY3Rpb24oYSl7dmFyIGI9XG5UaCgpO2E9e2N1cnJlbnQ6YX07cmV0dXJuIGIubWVtb2l6ZWRTdGF0ZT1hfSx1c2VTdGF0ZTpmaSx1c2VEZWJ1Z1ZhbHVlOnBpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7dmFyIGI9ZmkoYSksYz1iWzBdLGQ9YlsxXTtraShmdW5jdGlvbigpe3ZhciBiPUdoLnRyYW5zaXRpb247R2gudHJhbnNpdGlvbj17fTt0cnl7ZChhKX1maW5hbGx5e0doLnRyYW5zaXRpb249Yn19LFthXSk7cmV0dXJuIGN9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1maSghMSksYj1hWzBdO2E9c2kuYmluZChudWxsLGFbMV0pO1RoKCkubWVtb2l6ZWRTdGF0ZT1hO3JldHVybltiLGFdfSx1c2VNdXRhYmxlU291cmNlOmZ1bmN0aW9uKCl7fSx1c2VTeW5jRXh0ZXJuYWxTdG9yZTpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9USxlPVRoKCk7aWYoTil7aWYodm9pZCAwPT09Yyl0aHJvdyBFcnJvcihwKDQwNykpO2M9YygpfWVsc2V7Yz1iKCk7aWYobnVsbD09PUopdGhyb3cgRXJyb3IocCgzNDkpKTtcbjAhPT0oSGgmMzApfHxkaShkLGIsYyl9ZS5tZW1vaXplZFN0YXRlPWM7dmFyIGY9e3ZhbHVlOmMsZ2V0U25hcHNob3Q6Yn07ZS5xdWV1ZT1mO2tpKGFpLmJpbmQobnVsbCxkLGYsYSksW2FdKTtkLmZsYWdzfD0yMDQ4O2JpKDksY2kuYmluZChudWxsLGQsZixjLGIpLHZvaWQgMCxudWxsKTtyZXR1cm4gY30sdXNlSWQ6ZnVuY3Rpb24oKXt2YXIgYT1UaCgpLGI9Si5pZGVudGlmaWVyUHJlZml4O2lmKE4pe3ZhciBjPVNnO3ZhciBkPVJnO2M9KGQmfigxPDwzMi1sYyhkKS0xKSkudG9TdHJpbmcoMzIpK2M7Yj1cIjpcIitiK1wiUlwiK2M7Yz1LaCsrOzA8YyYmKGIrPVwiSFwiK2MudG9TdHJpbmcoMzIpKTtiKz1cIjpcIn1lbHNlIGM9TGgrKyxiPVwiOlwiK2IrXCJyXCIrYy50b1N0cmluZygzMikrXCI6XCI7cmV0dXJuIGEubWVtb2l6ZWRTdGF0ZT1ifSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LFBoPXtyZWFkQ29udGV4dDpwZyx1c2VDYWxsYmFjazpxaSx1c2VDb250ZXh0OnBnLHVzZUVmZmVjdDokaCx1c2VJbXBlcmF0aXZlSGFuZGxlOm9pLFxudXNlSW5zZXJ0aW9uRWZmZWN0OmxpLHVzZUxheW91dEVmZmVjdDptaSx1c2VNZW1vOnJpLHVzZVJlZHVjZXI6V2gsdXNlUmVmOmhpLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIFdoKFZoKX0sdXNlRGVidWdWYWx1ZTpwaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPVdoKFZoKSxjPWJbMF0sZD1iWzFdOyRoKGZ1bmN0aW9uKCl7dmFyIGI9R2gudHJhbnNpdGlvbjtHaC50cmFuc2l0aW9uPXt9O3RyeXtkKGEpfWZpbmFsbHl7R2gudHJhbnNpdGlvbj1ifX0sW2FdKTtyZXR1cm4gY30sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBhPVdoKFZoKVswXSxiPVVoKCkubWVtb2l6ZWRTdGF0ZTtyZXR1cm5bYSxiXX0sdXNlTXV0YWJsZVNvdXJjZTpZaCx1c2VTeW5jRXh0ZXJuYWxTdG9yZTpaaCx1c2VJZDp0aSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LFFoPXtyZWFkQ29udGV4dDpwZyx1c2VDYWxsYmFjazpxaSx1c2VDb250ZXh0OnBnLHVzZUVmZmVjdDokaCxcbnVzZUltcGVyYXRpdmVIYW5kbGU6b2ksdXNlSW5zZXJ0aW9uRWZmZWN0OmxpLHVzZUxheW91dEVmZmVjdDptaSx1c2VNZW1vOnJpLHVzZVJlZHVjZXI6WGgsdXNlUmVmOmhpLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIFhoKFZoKX0sdXNlRGVidWdWYWx1ZTpwaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPVhoKFZoKSxjPWJbMF0sZD1iWzFdOyRoKGZ1bmN0aW9uKCl7dmFyIGI9R2gudHJhbnNpdGlvbjtHaC50cmFuc2l0aW9uPXt9O3RyeXtkKGEpfWZpbmFsbHl7R2gudHJhbnNpdGlvbj1ifX0sW2FdKTtyZXR1cm4gY30sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBhPVhoKFZoKVswXSxiPVVoKCkubWVtb2l6ZWRTdGF0ZTtyZXR1cm5bYSxiXX0sdXNlTXV0YWJsZVNvdXJjZTpZaCx1c2VTeW5jRXh0ZXJuYWxTdG9yZTpaaCx1c2VJZDp0aSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9O1xuZnVuY3Rpb24gemkoYSxiKXt0cnl7dmFyIGM9XCJcIixkPWI7ZG8gYys9TmEoZCksZD1kLnJldHVybjt3aGlsZShkKTt2YXIgZT1jfWNhdGNoKGYpe2U9XCJcXG5FcnJvciBnZW5lcmF0aW5nIHN0YWNrOiBcIitmLm1lc3NhZ2UrXCJcXG5cIitmLnN0YWNrfXJldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOmV9fWZ1bmN0aW9uIEFpKGEsYil7dHJ5e2NvbnNvbGUuZXJyb3IoYi52YWx1ZSl9Y2F0Y2goYyl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGM7fSl9fXZhciBCaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcDtmdW5jdGlvbiBDaShhLGIsYyl7Yz11ZygtMSxjKTtjLnRhZz0zO2MucGF5bG9hZD17ZWxlbWVudDpudWxsfTt2YXIgZD1iLnZhbHVlO2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXtEaXx8KERpPSEwLEVpPWQpO0FpKGEsYil9O3JldHVybiBjfVxuZnVuY3Rpb24gRmkoYSxiLGMpe2M9dWcoLTEsYyk7Yy50YWc9Mzt2YXIgZD1hLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZT1iLnZhbHVlO2MucGF5bG9hZD1mdW5jdGlvbigpe3JldHVybiBkKGUpfTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7QWkoYSxiKX19dmFyIGY9YS5zdGF0ZU5vZGU7bnVsbCE9PWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLmNvbXBvbmVudERpZENhdGNoJiYoYy5jYWxsYmFjaz1mdW5jdGlvbigpe0FpKGEsYik7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09R2k/R2k9bmV3IFNldChbdGhpc10pOkdpLmFkZCh0aGlzKSk7dmFyIGM9Yi5zdGFjazt0aGlzLmNvbXBvbmVudERpZENhdGNoKGIudmFsdWUse2NvbXBvbmVudFN0YWNrOm51bGwhPT1jP2M6XCJcIn0pfSk7cmV0dXJuIGN9XG5mdW5jdGlvbiBIaShhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7aWYobnVsbD09PWQpe2Q9YS5waW5nQ2FjaGU9bmV3IEJpO3ZhciBlPW5ldyBTZXQ7ZC5zZXQoYixlKX1lbHNlIGU9ZC5nZXQoYiksdm9pZCAwPT09ZSYmKGU9bmV3IFNldCxkLnNldChiLGUpKTtlLmhhcyhjKXx8KGUuYWRkKGMpLGE9SWkuYmluZChudWxsLGEsYixjKSxiLnRoZW4oYSxhKSl9ZnVuY3Rpb24gSmkoYSl7ZG97dmFyIGI7aWYoYj0xMz09PWEudGFnKWI9YS5tZW1vaXplZFN0YXRlLGI9bnVsbCE9PWI/bnVsbCE9PWIuZGVoeWRyYXRlZD8hMDohMTohMDtpZihiKXJldHVybiBhO2E9YS5yZXR1cm59d2hpbGUobnVsbCE9PWEpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gS2koYSxiLGMsZCxlKXtpZigwPT09KGEubW9kZSYxKSlyZXR1cm4gYT09PWI/YS5mbGFnc3w9NjU1MzY6KGEuZmxhZ3N8PTEyOCxjLmZsYWdzfD0xMzEwNzIsYy5mbGFncyY9LTUyODA1LDE9PT1jLnRhZyYmKG51bGw9PT1jLmFsdGVybmF0ZT9jLnRhZz0xNzooYj11ZygtMSwxKSxiLnRhZz0yLHZnKGMsYikpKSxjLmxhbmVzfD0xKSxhO2EuZmxhZ3N8PTY1NTM2O2EubGFuZXM9ZTtyZXR1cm4gYX12YXIgTGksTWksTmksT2k7XG5MaT1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1iLmNoaWxkO251bGwhPT1jOyl7aWYoNT09PWMudGFnfHw2PT09Yy50YWcpYS5hcHBlbmRDaGlsZChjLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09Yy50YWcmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX07TWk9ZnVuY3Rpb24oKXt9O1xuTmk9ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9YS5tZW1vaXplZFByb3BzO2lmKGUhPT1kKXthPWIuc3RhdGVOb2RlO3hoKHVoLmN1cnJlbnQpO3ZhciBmPW51bGw7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOmU9V2EoYSxlKTtkPVdhKGEsZCk7Zj1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6ZT1BKHt9LGUse3ZhbHVlOnZvaWQgMH0pO2Q9QSh7fSxkLHt2YWx1ZTp2b2lkIDB9KTtmPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmU9ZGIoYSxlKTtkPWRiKGEsZCk7Zj1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihhLm9uY2xpY2s9d2YpfXJiKGMsZCk7dmFyIGc7Yz1udWxsO2ZvcihsIGluIGUpaWYoIWQuaGFzT3duUHJvcGVydHkobCkmJmUuaGFzT3duUHJvcGVydHkobCkmJm51bGwhPWVbbF0paWYoXCJzdHlsZVwiPT09bCl7dmFyIGg9ZVtsXTtmb3IoZyBpbiBoKWguaGFzT3duUHJvcGVydHkoZykmJlxuKGN8fChjPXt9KSxjW2ddPVwiXCIpfWVsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1sJiZcImNoaWxkcmVuXCIhPT1sJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09bCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWwmJlwiYXV0b0ZvY3VzXCIhPT1sJiYoZGEuaGFzT3duUHJvcGVydHkobCk/Znx8KGY9W10pOihmPWZ8fFtdKS5wdXNoKGwsbnVsbCkpO2ZvcihsIGluIGQpe3ZhciBrPWRbbF07aD1udWxsIT1lP2VbbF06dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkobCkmJmshPT1oJiYobnVsbCE9a3x8bnVsbCE9aCkpaWYoXCJzdHlsZVwiPT09bClpZihoKXtmb3IoZyBpbiBoKSFoLmhhc093blByb3BlcnR5KGcpfHxrJiZrLmhhc093blByb3BlcnR5KGcpfHwoY3x8KGM9e30pLGNbZ109XCJcIik7Zm9yKGcgaW4gaylrLmhhc093blByb3BlcnR5KGcpJiZoW2ddIT09a1tnXSYmKGN8fChjPXt9KSxjW2ddPWtbZ10pfWVsc2UgY3x8KGZ8fChmPVtdKSxmLnB1c2gobCxcbmMpKSxjPWs7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWw/KGs9az9rLl9faHRtbDp2b2lkIDAsaD1oP2guX19odG1sOnZvaWQgMCxudWxsIT1rJiZoIT09ayYmKGY9Znx8W10pLnB1c2gobCxrKSk6XCJjaGlsZHJlblwiPT09bD9cInN0cmluZ1wiIT09dHlwZW9mIGsmJlwibnVtYmVyXCIhPT10eXBlb2Yga3x8KGY9Znx8W10pLnB1c2gobCxcIlwiK2spOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1sJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09bCYmKGRhLmhhc093blByb3BlcnR5KGwpPyhudWxsIT1rJiZcIm9uU2Nyb2xsXCI9PT1sJiZGKFwic2Nyb2xsXCIsYSksZnx8aD09PWt8fChmPVtdKSk6KGY9Znx8W10pLnB1c2gobCxrKSl9YyYmKGY9Znx8W10pLnB1c2goXCJzdHlsZVwiLGMpO3ZhciBsPWY7aWYoYi51cGRhdGVRdWV1ZT1sKWIuZmxhZ3N8PTR9fTtPaT1mdW5jdGlvbihhLGIsYyxkKXtjIT09ZCYmKGIuZmxhZ3N8PTQpfTtcbmZ1bmN0aW9uIFBpKGEsYil7aWYoIU4pc3dpdGNoKGEudGFpbE1vZGUpe2Nhc2UgXCJoaWRkZW5cIjpiPWEudGFpbDtmb3IodmFyIGM9bnVsbDtudWxsIT09YjspbnVsbCE9PWIuYWx0ZXJuYXRlJiYoYz1iKSxiPWIuc2libGluZztudWxsPT09Yz9hLnRhaWw9bnVsbDpjLnNpYmxpbmc9bnVsbDticmVhaztjYXNlIFwiY29sbGFwc2VkXCI6Yz1hLnRhaWw7Zm9yKHZhciBkPW51bGw7bnVsbCE9PWM7KW51bGwhPT1jLmFsdGVybmF0ZSYmKGQ9YyksYz1jLnNpYmxpbmc7bnVsbD09PWQ/Ynx8bnVsbD09PWEudGFpbD9hLnRhaWw9bnVsbDphLnRhaWwuc2libGluZz1udWxsOmQuc2libGluZz1udWxsfX1cbmZ1bmN0aW9uIFYoYSl7dmFyIGI9bnVsbCE9PWEuYWx0ZXJuYXRlJiZhLmFsdGVybmF0ZS5jaGlsZD09PWEuY2hpbGQsYz0wLGQ9MDtpZihiKWZvcih2YXIgZT1hLmNoaWxkO251bGwhPT1lOyljfD1lLmxhbmVzfGUuY2hpbGRMYW5lcyxkfD1lLnN1YnRyZWVGbGFncyYxNDY4MDA2NCxkfD1lLmZsYWdzJjE0NjgwMDY0LGUucmV0dXJuPWEsZT1lLnNpYmxpbmc7ZWxzZSBmb3IoZT1hLmNoaWxkO251bGwhPT1lOyljfD1lLmxhbmVzfGUuY2hpbGRMYW5lcyxkfD1lLnN1YnRyZWVGbGFncyxkfD1lLmZsYWdzLGUucmV0dXJuPWEsZT1lLnNpYmxpbmc7YS5zdWJ0cmVlRmxhZ3N8PWQ7YS5jaGlsZExhbmVzPWM7cmV0dXJuIGJ9XG5mdW5jdGlvbiBRaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHM7V2coYik7c3dpdGNoKGIudGFnKXtjYXNlIDI6Y2FzZSAxNjpjYXNlIDE1OmNhc2UgMDpjYXNlIDExOmNhc2UgNzpjYXNlIDg6Y2FzZSAxMjpjYXNlIDk6Y2FzZSAxNDpyZXR1cm4gVihiKSxudWxsO2Nhc2UgMTpyZXR1cm4gVGYoYi50eXBlKSYmVWYoKSxWKGIpLG51bGw7Y2FzZSAzOmQ9Yi5zdGF0ZU5vZGU7emgoKTtHKFFmKTtHKEkpO0VoKCk7ZC5wZW5kaW5nQ29udGV4dCYmKGQuY29udGV4dD1kLnBlbmRpbmdDb250ZXh0LGQucGVuZGluZ0NvbnRleHQ9bnVsbCk7aWYobnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKWZoKGIpP2IuZmxhZ3N8PTQ6bnVsbD09PWF8fGEubWVtb2l6ZWRTdGF0ZS5pc0RlaHlkcmF0ZWQmJjA9PT0oYi5mbGFncyYyNTYpfHwoYi5mbGFnc3w9MTAyNCxudWxsIT09WmcmJihSaShaZyksWmc9bnVsbCkpO01pKGEsYik7VihiKTtyZXR1cm4gbnVsbDtjYXNlIDU6QmgoYik7dmFyIGU9eGgod2guY3VycmVudCk7XG5jPWIudHlwZTtpZihudWxsIT09YSYmbnVsbCE9Yi5zdGF0ZU5vZGUpTmkoYSxiLGMsZCxlKSxhLnJlZiE9PWIucmVmJiYoYi5mbGFnc3w9NTEyLGIuZmxhZ3N8PTIwOTcxNTIpO2Vsc2V7aWYoIWQpe2lmKG51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcihwKDE2NikpO1YoYik7cmV0dXJuIG51bGx9YT14aCh1aC5jdXJyZW50KTtpZihmaChiKSl7ZD1iLnN0YXRlTm9kZTtjPWIudHlwZTt2YXIgZj1iLm1lbW9pemVkUHJvcHM7ZFtJZl09YjtkW0pmXT1mO2E9MCE9PShiLm1vZGUmMSk7c3dpdGNoKGMpe2Nhc2UgXCJkaWFsb2dcIjpGKFwiY2FuY2VsXCIsZCk7RihcImNsb3NlXCIsZCk7YnJlYWs7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpGKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihlPTA7ZTxmZi5sZW5ndGg7ZSsrKUYoZmZbZV0sZCk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkYoXCJlcnJvclwiLGQpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkYoXCJlcnJvclwiLFxuZCk7RihcImxvYWRcIixkKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkYoXCJ0b2dnbGVcIixkKTticmVhaztjYXNlIFwiaW5wdXRcIjpYYShkLGYpO0YoXCJpbnZhbGlkXCIsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmQuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFmLm11bHRpcGxlfTtGKFwiaW52YWxpZFwiLGQpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmViKGQsZiksRihcImludmFsaWRcIixkKX1yYihjLGYpO2U9bnVsbDtmb3IodmFyIGcgaW4gZilpZihmLmhhc093blByb3BlcnR5KGcpKXt2YXIgaD1mW2ddO1wiY2hpbGRyZW5cIj09PWc/XCJzdHJpbmdcIj09PXR5cGVvZiBoP2QudGV4dENvbnRlbnQhPT1oJiYodmYoZC50ZXh0Q29udGVudCxoLGEpLGU9W1wiY2hpbGRyZW5cIixoXSk6XCJudW1iZXJcIj09PXR5cGVvZiBoJiZkLnRleHRDb250ZW50IT09XCJcIitoJiYodmYoZC50ZXh0Q29udGVudCxoLGEpLGU9W1wiY2hpbGRyZW5cIixcIlwiK2hdKTpkYS5oYXNPd25Qcm9wZXJ0eShnKSYmbnVsbCE9aCYmXCJvblNjcm9sbFwiPT09XG5nJiZGKFwic2Nyb2xsXCIsZCl9c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOlRhKGQpO2FiKGQsZiwhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VGEoZCk7Z2IoZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJvcHRpb25cIjpicmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLm9uQ2xpY2smJihkLm9uY2xpY2s9d2YpfWQ9ZTtiLnVwZGF0ZVF1ZXVlPWQ7bnVsbCE9PWQmJihiLmZsYWdzfD00KX1lbHNle2c9OT09PWUubm9kZVR5cGU/ZTplLm93bmVyRG9jdW1lbnQ7XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hJiYoYT1oYihjKSk7XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP1wic2NyaXB0XCI9PT1jPyhhPWcuY3JlYXRlRWxlbWVudChcImRpdlwiKSxhLmlubmVySFRNTD1cIjxzY3JpcHQ+XFx4M2Mvc2NyaXB0PlwiLGE9YS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpKTpcInN0cmluZ1wiPT09dHlwZW9mIGQuaXM/YT1nLmNyZWF0ZUVsZW1lbnQoYyx7aXM6ZC5pc30pOlxuKGE9Zy5jcmVhdGVFbGVtZW50KGMpLFwic2VsZWN0XCI9PT1jJiYoZz1hLGQubXVsdGlwbGU/Zy5tdWx0aXBsZT0hMDpkLnNpemUmJihnLnNpemU9ZC5zaXplKSkpOmE9Zy5jcmVhdGVFbGVtZW50TlMoYSxjKTthW0lmXT1iO2FbSmZdPWQ7TGkoYSxiLCExLCExKTtiLnN0YXRlTm9kZT1hO2E6e2c9c2IoYyxkKTtzd2l0Y2goYyl7Y2FzZSBcImRpYWxvZ1wiOkYoXCJjYW5jZWxcIixhKTtGKFwiY2xvc2VcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpGKFwibG9hZFwiLGEpO2U9ZDticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoZT0wO2U8ZmYubGVuZ3RoO2UrKylGKGZmW2VdLGEpO2U9ZDticmVhaztjYXNlIFwic291cmNlXCI6RihcImVycm9yXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkYoXCJlcnJvclwiLGEpO0YoXCJsb2FkXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RihcInRvZ2dsZVwiLFxuYSk7ZT1kO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOlhhKGEsZCk7ZT1XYShhLGQpO0YoXCJpbnZhbGlkXCIsYSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmU9ZDticmVhaztjYXNlIFwic2VsZWN0XCI6YS5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIWQubXVsdGlwbGV9O2U9QSh7fSxkLHt2YWx1ZTp2b2lkIDB9KTtGKFwiaW52YWxpZFwiLGEpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmViKGEsZCk7ZT1kYihhLGQpO0YoXCJpbnZhbGlkXCIsYSk7YnJlYWs7ZGVmYXVsdDplPWR9cmIoYyxlKTtoPWU7Zm9yKGYgaW4gaClpZihoLmhhc093blByb3BlcnR5KGYpKXt2YXIgaz1oW2ZdO1wic3R5bGVcIj09PWY/cGIoYSxrKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1mPyhrPWs/ay5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJmtiKGEsaykpOlwiY2hpbGRyZW5cIj09PWY/XCJzdHJpbmdcIj09PXR5cGVvZiBrPyhcInRleHRhcmVhXCIhPT1jfHxcIlwiIT09aykmJmxiKGEsayk6XCJudW1iZXJcIj09PXR5cGVvZiBrJiZsYihhLFxuXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ZiYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWYmJlwiYXV0b0ZvY3VzXCIhPT1mJiYoZGEuaGFzT3duUHJvcGVydHkoZik/bnVsbCE9ayYmXCJvblNjcm9sbFwiPT09ZiYmRihcInNjcm9sbFwiLGEpOm51bGwhPWsmJnJhKGEsZixrLGcpKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6VGEoYSk7YWIoYSxkLCExKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpUYShhKTtnYihhKTticmVhaztjYXNlIFwib3B0aW9uXCI6bnVsbCE9ZC52YWx1ZSYmYS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIrUWEoZC52YWx1ZSkpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLm11bHRpcGxlPSEhZC5tdWx0aXBsZTtmPWQudmFsdWU7bnVsbCE9Zj9jYihhLCEhZC5tdWx0aXBsZSxmLCExKTpudWxsIT1kLmRlZmF1bHRWYWx1ZSYmY2IoYSwhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGUub25DbGljayYmXG4oYS5vbmNsaWNrPXdmKX1zd2l0Y2goYyl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjpkPSEhZC5hdXRvRm9jdXM7YnJlYWsgYTtjYXNlIFwiaW1nXCI6ZD0hMDticmVhayBhO2RlZmF1bHQ6ZD0hMX19ZCYmKGIuZmxhZ3N8PTQpfW51bGwhPT1iLnJlZiYmKGIuZmxhZ3N8PTUxMixiLmZsYWdzfD0yMDk3MTUyKX1WKGIpO3JldHVybiBudWxsO2Nhc2UgNjppZihhJiZudWxsIT1iLnN0YXRlTm9kZSlPaShhLGIsYS5tZW1vaXplZFByb3BzLGQpO2Vsc2V7aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBkJiZudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IocCgxNjYpKTtjPXhoKHdoLmN1cnJlbnQpO3hoKHVoLmN1cnJlbnQpO2lmKGZoKGIpKXtkPWIuc3RhdGVOb2RlO2M9Yi5tZW1vaXplZFByb3BzO2RbSWZdPWI7aWYoZj1kLm5vZGVWYWx1ZSE9PWMpaWYoYT1YZyxudWxsIT09YSlzd2l0Y2goZz0wIT09KGEubW9kZSYxKSxhLnRhZyl7Y2FzZSAzOnZmKGQubm9kZVZhbHVlLFxuYyxnKTticmVhaztjYXNlIDU6ITAhPT1hLm1lbW9pemVkUHJvcHNbdm9pZCAwXSYmdmYoZC5ub2RlVmFsdWUsYyxnKX1mJiYoYi5mbGFnc3w9NCl9ZWxzZSBkPSg5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZCksZFtJZl09YixiLnN0YXRlTm9kZT1kfVYoYik7cmV0dXJuIG51bGw7Y2FzZSAxMzpHKFApO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKE4mJm51bGwhPT1ZZyYmMCE9PShiLm1vZGUmMSkmJjA9PT0oYi5mbGFncyYxMjgpKXtmb3IoZD1ZZztkOylkPUZmKGQubmV4dFNpYmxpbmcpO2doKCk7Yi5mbGFnc3w9OTg1NjA7cmV0dXJuIGJ9aWYobnVsbCE9PWQmJm51bGwhPT1kLmRlaHlkcmF0ZWQpe2Q9ZmgoYik7aWYobnVsbD09PWEpe2lmKCFkKXRocm93IEVycm9yKHAoMzE4KSk7ZD1iLm1lbW9pemVkU3RhdGU7ZD1udWxsIT09ZD9kLmRlaHlkcmF0ZWQ6bnVsbDtpZighZCl0aHJvdyBFcnJvcihwKDMxNykpO2RbSWZdPWJ9ZWxzZSBnaCgpLDA9PT1cbihiLmZsYWdzJjEyOCkmJihiLm1lbW9pemVkU3RhdGU9bnVsbCksYi5mbGFnc3w9NDtWKGIpO3JldHVybiBudWxsfW51bGwhPT1aZyYmKFJpKFpnKSxaZz1udWxsKTtpZigwIT09KGIuZmxhZ3MmMTI4KSlyZXR1cm4gYi5sYW5lcz1jLGI7ZD1udWxsIT09ZDtjPSExO251bGw9PT1hP2ZoKGIpOmM9bnVsbCE9PWEubWVtb2l6ZWRTdGF0ZTtkJiYhYyYmKGIuY2hpbGQuZmxhZ3N8PTgxOTIsMCE9PShiLm1vZGUmMSkmJihudWxsPT09YXx8MCE9PShQLmN1cnJlbnQmMSk/MD09PVcmJihXPTMpOlNpKCkpKTtudWxsIT09Yi51cGRhdGVRdWV1ZSYmKGIuZmxhZ3N8PTQpO1YoYik7cmV0dXJuIG51bGw7Y2FzZSA0OnJldHVybiB6aCgpLE1pKGEsYiksbnVsbD09PWEmJm5mKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLFYoYiksbnVsbDtjYXNlIDEwOnJldHVybiBsZyhiLnR5cGUuX2NvbnRleHQpLFYoYiksbnVsbDtjYXNlIDE3OnJldHVybiBUZihiLnR5cGUpJiZVZigpLFYoYiksbnVsbDtjYXNlIDE5OkcoUCk7XG5mPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsPT09ZilyZXR1cm4gVihiKSxudWxsO2Q9MCE9PShiLmZsYWdzJjEyOCk7Zz1mLnJlbmRlcmluZztpZihudWxsPT09ZylpZihkKVBpKGYsITEpO2Vsc2V7aWYoMCE9PVd8fG51bGwhPT1hJiYwIT09KGEuZmxhZ3MmMTI4KSlmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7Zz1DaChhKTtpZihudWxsIT09Zyl7Yi5mbGFnc3w9MTI4O1BpKGYsITEpO2Q9Zy51cGRhdGVRdWV1ZTtudWxsIT09ZCYmKGIudXBkYXRlUXVldWU9ZCxiLmZsYWdzfD00KTtiLnN1YnRyZWVGbGFncz0wO2Q9Yztmb3IoYz1iLmNoaWxkO251bGwhPT1jOylmPWMsYT1kLGYuZmxhZ3MmPTE0NjgwMDY2LGc9Zi5hbHRlcm5hdGUsbnVsbD09PWc/KGYuY2hpbGRMYW5lcz0wLGYubGFuZXM9YSxmLmNoaWxkPW51bGwsZi5zdWJ0cmVlRmxhZ3M9MCxmLm1lbW9pemVkUHJvcHM9bnVsbCxmLm1lbW9pemVkU3RhdGU9bnVsbCxmLnVwZGF0ZVF1ZXVlPW51bGwsZi5kZXBlbmRlbmNpZXM9bnVsbCxcbmYuc3RhdGVOb2RlPW51bGwpOihmLmNoaWxkTGFuZXM9Zy5jaGlsZExhbmVzLGYubGFuZXM9Zy5sYW5lcyxmLmNoaWxkPWcuY2hpbGQsZi5zdWJ0cmVlRmxhZ3M9MCxmLmRlbGV0aW9ucz1udWxsLGYubWVtb2l6ZWRQcm9wcz1nLm1lbW9pemVkUHJvcHMsZi5tZW1vaXplZFN0YXRlPWcubWVtb2l6ZWRTdGF0ZSxmLnVwZGF0ZVF1ZXVlPWcudXBkYXRlUXVldWUsZi50eXBlPWcudHlwZSxhPWcuZGVwZW5kZW5jaWVzLGYuZGVwZW5kZW5jaWVzPW51bGw9PT1hP251bGw6e2xhbmVzOmEubGFuZXMsZmlyc3RDb250ZXh0OmEuZmlyc3RDb250ZXh0fSksYz1jLnNpYmxpbmc7SChQLFAuY3VycmVudCYxfDIpO3JldHVybiBiLmNoaWxkfWE9YS5zaWJsaW5nfW51bGwhPT1mLnRhaWwmJkQoKT5UaSYmKGIuZmxhZ3N8PTEyOCxkPSEwLFBpKGYsITEpLGIubGFuZXM9NDE5NDMwNCl9ZWxzZXtpZighZClpZihhPUNoKGcpLG51bGwhPT1hKXtpZihiLmZsYWdzfD0xMjgsZD0hMCxjPWEudXBkYXRlUXVldWUsXG5udWxsIT09YyYmKGIudXBkYXRlUXVldWU9YyxiLmZsYWdzfD00KSxQaShmLCEwKSxudWxsPT09Zi50YWlsJiZcImhpZGRlblwiPT09Zi50YWlsTW9kZSYmIWcuYWx0ZXJuYXRlJiYhTilyZXR1cm4gVihiKSxudWxsfWVsc2UgMipEKCktZi5yZW5kZXJpbmdTdGFydFRpbWU+VGkmJjEwNzM3NDE4MjQhPT1jJiYoYi5mbGFnc3w9MTI4LGQ9ITAsUGkoZiwhMSksYi5sYW5lcz00MTk0MzA0KTtmLmlzQmFja3dhcmRzPyhnLnNpYmxpbmc9Yi5jaGlsZCxiLmNoaWxkPWcpOihjPWYubGFzdCxudWxsIT09Yz9jLnNpYmxpbmc9ZzpiLmNoaWxkPWcsZi5sYXN0PWcpfWlmKG51bGwhPT1mLnRhaWwpcmV0dXJuIGI9Zi50YWlsLGYucmVuZGVyaW5nPWIsZi50YWlsPWIuc2libGluZyxmLnJlbmRlcmluZ1N0YXJ0VGltZT1EKCksYi5zaWJsaW5nPW51bGwsYz1QLmN1cnJlbnQsSChQLGQ/YyYxfDI6YyYxKSxiO1YoYik7cmV0dXJuIG51bGw7Y2FzZSAyMjpjYXNlIDIzOnJldHVybiBVaSgpLGQ9bnVsbCE9PVxuYi5tZW1vaXplZFN0YXRlLG51bGwhPT1hJiZudWxsIT09YS5tZW1vaXplZFN0YXRlIT09ZCYmKGIuZmxhZ3N8PTgxOTIpLGQmJjAhPT0oYi5tb2RlJjEpPzAhPT0oVmkmMTA3Mzc0MTgyNCkmJihWKGIpLGIuc3VidHJlZUZsYWdzJjYmJihiLmZsYWdzfD04MTkyKSk6VihiKSxudWxsO2Nhc2UgMjQ6cmV0dXJuIG51bGw7Y2FzZSAyNTpyZXR1cm4gbnVsbH10aHJvdyBFcnJvcihwKDE1NixiLnRhZykpO312YXIgV2k9c2EuUmVhY3RDdXJyZW50T3duZXIsb2c9ITE7ZnVuY3Rpb24gWGkoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT9zaChiLG51bGwsYyxkKTpyaChiLGEuY2hpbGQsYyxkKX1cbmZ1bmN0aW9uIFlpKGEsYixjLGQsZSl7Yz1jLnJlbmRlcjt2YXIgZj1iLnJlZjtuZyhiLGUpO2Q9TmgoYSxiLGMsZCxmLGUpO2M9U2goKTtpZihudWxsIT09YSYmIW9nKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5mbGFncyY9LTIwNTMsYS5sYW5lcyY9fmUsWmkoYSxiLGUpO04mJmMmJlZnKGIpO2IuZmxhZ3N8PTE7WGkoYSxiLGQsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiAkaShhLGIsYyxkLGUpe2lmKG51bGw9PT1hKXt2YXIgZj1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJiFhaihmKSYmdm9pZCAwPT09Zi5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZixiaihhLGIsZixkLGUpO2E9b2goYy50eXBlLG51bGwsZCxiLGIubW9kZSxlKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9Zj1hLmNoaWxkO2lmKDA9PT0oYS5sYW5lcyZlKSl7dmFyIGc9Zi5tZW1vaXplZFByb3BzO2M9Yy5jb21wYXJlO2M9bnVsbCE9PWM/YzpEZTtpZihjKGcsZCkmJmEucmVmPT09Yi5yZWYpcmV0dXJuIFppKGEsYixlKX1iLmZsYWdzfD0xO2E9bWgoZixkKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBiaihhLGIsYyxkLGUpe2lmKG51bGwhPT1hJiZEZShhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWYpaWYob2c9ITEsMCE9PShhLmxhbmVzJmUpKTAhPT0oYS5mbGFncyYxMzEwNzIpJiYob2c9ITApO2Vsc2UgcmV0dXJuIGIubGFuZXM9YS5sYW5lcyxaaShhLGIsZSk7cmV0dXJuIGNqKGEsYixjLGQsZSl9XG5mdW5jdGlvbiBkaihhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1kLmNoaWxkcmVuLGY9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGw7aWYoXCJoaWRkZW5cIj09PWQubW9kZSlpZigwPT09KGIubW9kZSYxKSliLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczowLGNhY2hlUG9vbDpudWxsfSxIKGVqLFZpKSxWaXw9YztlbHNlIGlmKDAhPT0oYyYxMDczNzQxODI0KSliLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczowLGNhY2hlUG9vbDpudWxsfSxkPW51bGwhPT1mP2YuYmFzZUxhbmVzOmMsSChlaixWaSksVml8PWQ7ZWxzZSByZXR1cm4gYT1udWxsIT09Zj9mLmJhc2VMYW5lc3xjOmMsYi5sYW5lcz1iLmNoaWxkTGFuZXM9MTA3Mzc0MTgyNCxiLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczphLGNhY2hlUG9vbDpudWxsfSxiLnVwZGF0ZVF1ZXVlPW51bGwsSChlaixWaSksVml8PWEsbnVsbDtlbHNlIG51bGwhPT1mPyhkPWYuYmFzZUxhbmVzfGMsYi5tZW1vaXplZFN0YXRlPW51bGwpOlxuZD1jLEgoZWosVmkpLFZpfD1kO1hpKGEsYixlLGMpO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIGZqKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZmxhZ3N8PTUxMixiLmZsYWdzfD0yMDk3MTUyfWZ1bmN0aW9uIGNqKGEsYixjLGQsZSl7dmFyIGY9VGYoYyk/UmY6SS5jdXJyZW50O2Y9U2YoYixmKTtuZyhiLGUpO2M9TmgoYSxiLGMsZCxmLGUpO2Q9U2goKTtpZihudWxsIT09YSYmIW9nKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5mbGFncyY9LTIwNTMsYS5sYW5lcyY9fmUsWmkoYSxiLGUpO04mJmQmJlZnKGIpO2IuZmxhZ3N8PTE7WGkoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBnaihhLGIsYyxkLGUpe2lmKFRmKGMpKXt2YXIgZj0hMDtYZihiKX1lbHNlIGY9ITE7bmcoYixlKTtpZihudWxsPT09Yi5zdGF0ZU5vZGUpbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9MiksSGcoYixjLGQpLEpnKGIsYyxkLGUpLGQ9ITA7ZWxzZSBpZihudWxsPT09YSl7dmFyIGc9Yi5zdGF0ZU5vZGUsaD1iLm1lbW9pemVkUHJvcHM7Zy5wcm9wcz1oO3ZhciBrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPXBnKGwpOihsPVRmKGMpP1JmOkkuY3VycmVudCxsPVNmKGIsbCkpO3ZhciBtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLHc9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO3d8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZJZyhiLGcsZCxsKTtyZz0hMTt2YXIgdT1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT11O3lnKGIsZCxnLGUpO2s9Yi5tZW1vaXplZFN0YXRlO2ghPT1kfHx1IT09a3x8UWYuY3VycmVudHx8cmc/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoQ2coYixjLG0sZCksaz1iLm1lbW9pemVkU3RhdGUpLChoPXJnfHxHZyhiLGMsaCxkLHUsayxsKSk/KHd8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudHx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudCYmZy5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSksXCJmdW5jdGlvblwiPT09XG50eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZmxhZ3N8PTQxOTQzMDgpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00MTk0MzA4KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9ayksZy5wcm9wcz1kLGcuc3RhdGU9ayxnLmNvbnRleHQ9bCxkPWgpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZmxhZ3N8PTQxOTQzMDgpLGQ9ITEpfWVsc2V7Zz1iLnN0YXRlTm9kZTt0ZyhhLGIpO2g9Yi5tZW1vaXplZFByb3BzO2w9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOmZnKGIudHlwZSxoKTtnLnByb3BzPWw7dz1iLnBlbmRpbmdQcm9wczt1PWcuY29udGV4dDtrPWMuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBrJiZudWxsIT09az9rPXBnKGspOihrPVRmKGMpP1JmOkkuY3VycmVudCxrPVNmKGIsaykpO3ZhciB5PWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOyhtPVwiZnVuY3Rpb25cIj09PVxudHlwZW9mIHl8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09d3x8dSE9PWspJiZJZyhiLGcsZCxrKTtyZz0hMTt1PWIubWVtb2l6ZWRTdGF0ZTtnLnN0YXRlPXU7eWcoYixkLGcsZSk7dmFyIG49Yi5tZW1vaXplZFN0YXRlO2ghPT13fHx1IT09bnx8UWYuY3VycmVudHx8cmc/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiB5JiYoQ2coYixjLHksZCksbj1iLm1lbW9pemVkU3RhdGUpLChsPXJnfHxHZyhiLGMsbCxkLHUsbixrKXx8ITEpPyhtfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJlxuZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsbixrKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLG4saykpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlJiYoYi5mbGFnc3w9MTAyNCkpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnU9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmdT09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTEwMjQpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1uKSxnLnByb3BzPWQsZy5zdGF0ZT1uLGcuY29udGV4dD1cbmssZD1sKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZ1PT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnU9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD0xMDI0KSxkPSExKX1yZXR1cm4gaGooYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24gaGooYSxiLGMsZCxlLGYpe2ZqKGEsYik7dmFyIGc9MCE9PShiLmZsYWdzJjEyOCk7aWYoIWQmJiFnKXJldHVybiBlJiZZZihiLGMsITEpLFppKGEsYixmKTtkPWIuc3RhdGVOb2RlO1dpLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZmxhZ3N8PTE7bnVsbCE9PWEmJmc/KGIuY2hpbGQ9cmgoYixhLmNoaWxkLG51bGwsZiksYi5jaGlsZD1yaChiLG51bGwsaCxmKSk6WGkoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmWWYoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiBpaihhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P1ZmKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJlZmKGEsYi5jb250ZXh0LCExKTt5aChhLGIuY29udGFpbmVySW5mbyl9XG5mdW5jdGlvbiBqaihhLGIsYyxkLGUpe2doKCk7aGgoZSk7Yi5mbGFnc3w9MjU2O1hpKGEsYixjLGQpO3JldHVybiBiLmNoaWxkfXZhciBraj17ZGVoeWRyYXRlZDpudWxsLHRyZWVDb250ZXh0Om51bGwscmV0cnlMYW5lOjB9O2Z1bmN0aW9uIGxqKGEpe3JldHVybntiYXNlTGFuZXM6YSxjYWNoZVBvb2w6bnVsbH19XG5mdW5jdGlvbiBtaihhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1QLmN1cnJlbnQsZj0hMSxnPTAhPT0oYi5mbGFncyYxMjgpLGg7KGg9Zyl8fChoPW51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlPyExOjAhPT0oZSYyKSk7aWYoaClmPSEwLGIuZmxhZ3MmPS0xMjk7ZWxzZSBpZihudWxsPT09YXx8bnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSllfD0xO0goUCxlJjEpO2lmKG51bGw9PT1hKXtkaChiKTthPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YSYmKGE9YS5kZWh5ZHJhdGVkLG51bGwhPT1hKSlyZXR1cm4gMD09PShiLm1vZGUmMSk/Yi5sYW5lcz0xOlwiJCFcIj09PWEuZGF0YT9iLmxhbmVzPTg6Yi5sYW5lcz0xMDczNzQxODI0LG51bGw7ZT1kLmNoaWxkcmVuO2E9ZC5mYWxsYmFjaztyZXR1cm4gZj8oZD1iLm1vZGUsZj1iLmNoaWxkLGU9e21vZGU6XCJoaWRkZW5cIixjaGlsZHJlbjplfSwwPT09KGQmMSkmJm51bGwhPT1mPyhmLmNoaWxkTGFuZXM9MCxmLnBlbmRpbmdQcm9wcz1cbmUpOmY9bmooZSxkLDAsbnVsbCksYT1xaChhLGQsYyxudWxsKSxmLnJldHVybj1iLGEucmV0dXJuPWIsZi5zaWJsaW5nPWEsYi5jaGlsZD1mLGIuY2hpbGQubWVtb2l6ZWRTdGF0ZT1saihjKSxiLm1lbW9pemVkU3RhdGU9a2osYSk6b2ooYixlKX1lPWEubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZSl7aD1lLmRlaHlkcmF0ZWQ7aWYobnVsbCE9PWgpe2lmKGcpe2lmKGIuZmxhZ3MmMjU2KXJldHVybiBiLmZsYWdzJj0tMjU3LHBqKGEsYixjLEVycm9yKHAoNDIyKSkpO2lmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpcmV0dXJuIGIuY2hpbGQ9YS5jaGlsZCxiLmZsYWdzfD0xMjgsbnVsbDtmPWQuZmFsbGJhY2s7ZT1iLm1vZGU7ZD1uaih7bW9kZTpcInZpc2libGVcIixjaGlsZHJlbjpkLmNoaWxkcmVufSxlLDAsbnVsbCk7Zj1xaChmLGUsYyxudWxsKTtmLmZsYWdzfD0yO2QucmV0dXJuPWI7Zi5yZXR1cm49YjtkLnNpYmxpbmc9ZjtiLmNoaWxkPWQ7MCE9PShiLm1vZGUmMSkmJnJoKGIsYS5jaGlsZCxcbm51bGwsYyk7Yi5jaGlsZC5tZW1vaXplZFN0YXRlPWxqKGMpO2IubWVtb2l6ZWRTdGF0ZT1rajtyZXR1cm4gZn1pZigwPT09KGIubW9kZSYxKSliPXBqKGEsYixjLG51bGwpO2Vsc2UgaWYoXCIkIVwiPT09aC5kYXRhKWI9cGooYSxiLGMsRXJyb3IocCg0MTkpKSk7ZWxzZSBpZihkPTAhPT0oYyZhLmNoaWxkTGFuZXMpLG9nfHxkKXtkPUo7aWYobnVsbCE9PWQpe3N3aXRjaChjJi1jKXtjYXNlIDQ6Zj0yO2JyZWFrO2Nhc2UgMTY6Zj04O2JyZWFrO2Nhc2UgNjQ6Y2FzZSAxMjg6Y2FzZSAyNTY6Y2FzZSA1MTI6Y2FzZSAxMDI0OmNhc2UgMjA0ODpjYXNlIDQwOTY6Y2FzZSA4MTkyOmNhc2UgMTYzODQ6Y2FzZSAzMjc2ODpjYXNlIDY1NTM2OmNhc2UgMTMxMDcyOmNhc2UgMjYyMTQ0OmNhc2UgNTI0Mjg4OmNhc2UgMTA0ODU3NjpjYXNlIDIwOTcxNTI6Y2FzZSA0MTk0MzA0OmNhc2UgODM4ODYwODpjYXNlIDE2Nzc3MjE2OmNhc2UgMzM1NTQ0MzI6Y2FzZSA2NzEwODg2NDpmPTMyO2JyZWFrO2Nhc2UgNTM2ODcwOTEyOmY9XG4yNjg0MzU0NTY7YnJlYWs7ZGVmYXVsdDpmPTB9ZD0wIT09KGYmKGQuc3VzcGVuZGVkTGFuZXN8YykpPzA6ZjswIT09ZCYmZCE9PWUucmV0cnlMYW5lJiYoZS5yZXRyeUxhbmU9ZCxFZyhhLGQsLTEpKX1TaSgpO2I9cGooYSxiLGMsRXJyb3IocCg0MjEpKSl9ZWxzZVwiJD9cIj09PWguZGF0YT8oYi5mbGFnc3w9MTI4LGIuY2hpbGQ9YS5jaGlsZCxiPXFqLmJpbmQobnVsbCxhKSxoLl9yZWFjdFJldHJ5PWIsYj1udWxsKTooYz1lLnRyZWVDb250ZXh0LFlnPUZmKGgubmV4dFNpYmxpbmcpLFhnPWIsTj0hMCxaZz1udWxsLG51bGwhPT1jJiYoT2dbUGcrK109UmcsT2dbUGcrK109U2csT2dbUGcrK109UWcsUmc9Yy5pZCxTZz1jLm92ZXJmbG93LFFnPWIpLGI9b2ooYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbiksYi5mbGFnc3w9NDA5Nik7cmV0dXJuIGJ9aWYoZilyZXR1cm4gZD1yaihhLGIsZC5jaGlsZHJlbixkLmZhbGxiYWNrLGMpLGY9Yi5jaGlsZCxlPWEuY2hpbGQubWVtb2l6ZWRTdGF0ZSxcbmYubWVtb2l6ZWRTdGF0ZT1udWxsPT09ZT9saihjKTp7YmFzZUxhbmVzOmUuYmFzZUxhbmVzfGMsY2FjaGVQb29sOm51bGx9LGYuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXMmfmMsYi5tZW1vaXplZFN0YXRlPWtqLGQ7Yz1zaihhLGIsZC5jaGlsZHJlbixjKTtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gY31pZihmKXJldHVybiBkPXJqKGEsYixkLmNoaWxkcmVuLGQuZmFsbGJhY2ssYyksZj1iLmNoaWxkLGU9YS5jaGlsZC5tZW1vaXplZFN0YXRlLGYubWVtb2l6ZWRTdGF0ZT1udWxsPT09ZT9saihjKTp7YmFzZUxhbmVzOmUuYmFzZUxhbmVzfGMsY2FjaGVQb29sOm51bGx9LGYuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXMmfmMsYi5tZW1vaXplZFN0YXRlPWtqLGQ7Yz1zaihhLGIsZC5jaGlsZHJlbixjKTtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gY31cbmZ1bmN0aW9uIG9qKGEsYil7Yj1uaih7bW9kZTpcInZpc2libGVcIixjaGlsZHJlbjpifSxhLm1vZGUsMCxudWxsKTtiLnJldHVybj1hO3JldHVybiBhLmNoaWxkPWJ9ZnVuY3Rpb24gc2ooYSxiLGMsZCl7dmFyIGU9YS5jaGlsZDthPWUuc2libGluZztjPW1oKGUse21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46Y30pOzA9PT0oYi5tb2RlJjEpJiYoYy5sYW5lcz1kKTtjLnJldHVybj1iO2Muc2libGluZz1udWxsO251bGwhPT1hJiYoZD1iLmRlbGV0aW9ucyxudWxsPT09ZD8oYi5kZWxldGlvbnM9W2FdLGIuZmxhZ3N8PTE2KTpkLnB1c2goYSkpO3JldHVybiBiLmNoaWxkPWN9XG5mdW5jdGlvbiByaihhLGIsYyxkLGUpe3ZhciBmPWIubW9kZTthPWEuY2hpbGQ7dmFyIGc9YS5zaWJsaW5nLGg9e21vZGU6XCJoaWRkZW5cIixjaGlsZHJlbjpjfTswPT09KGYmMSkmJmIuY2hpbGQhPT1hPyhjPWIuY2hpbGQsYy5jaGlsZExhbmVzPTAsYy5wZW5kaW5nUHJvcHM9aCxiLmRlbGV0aW9ucz1udWxsKTooYz1taChhLGgpLGMuc3VidHJlZUZsYWdzPWEuc3VidHJlZUZsYWdzJjE0NjgwMDY0KTtudWxsIT09Zz9kPW1oKGcsZCk6KGQ9cWgoZCxmLGUsbnVsbCksZC5mbGFnc3w9Mik7ZC5yZXR1cm49YjtjLnJldHVybj1iO2Muc2libGluZz1kO2IuY2hpbGQ9YztyZXR1cm4gZH1mdW5jdGlvbiBwaihhLGIsYyxkKXtudWxsIT09ZCYmaGgoZCk7cmgoYixhLmNoaWxkLG51bGwsYyk7YT1vaihiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuKTthLmZsYWdzfD0yO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBhfVxuZnVuY3Rpb24gdGooYSxiLGMpe2EubGFuZXN8PWI7dmFyIGQ9YS5hbHRlcm5hdGU7bnVsbCE9PWQmJihkLmxhbmVzfD1iKTttZyhhLnJldHVybixiLGMpfWZ1bmN0aW9uIHVqKGEsYixjLGQsZSl7dmFyIGY9YS5tZW1vaXplZFN0YXRlO251bGw9PT1mP2EubWVtb2l6ZWRTdGF0ZT17aXNCYWNrd2FyZHM6YixyZW5kZXJpbmc6bnVsbCxyZW5kZXJpbmdTdGFydFRpbWU6MCxsYXN0OmQsdGFpbDpjLHRhaWxNb2RlOmV9OihmLmlzQmFja3dhcmRzPWIsZi5yZW5kZXJpbmc9bnVsbCxmLnJlbmRlcmluZ1N0YXJ0VGltZT0wLGYubGFzdD1kLGYudGFpbD1jLGYudGFpbE1vZGU9ZSl9XG5mdW5jdGlvbiB2aihhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1kLnJldmVhbE9yZGVyLGY9ZC50YWlsO1hpKGEsYixkLmNoaWxkcmVuLGMpO2Q9UC5jdXJyZW50O2lmKDAhPT0oZCYyKSlkPWQmMXwyLGIuZmxhZ3N8PTEyODtlbHNle2lmKG51bGwhPT1hJiYwIT09KGEuZmxhZ3MmMTI4KSlhOmZvcihhPWIuY2hpbGQ7bnVsbCE9PWE7KXtpZigxMz09PWEudGFnKW51bGwhPT1hLm1lbW9pemVkU3RhdGUmJnRqKGEsYyxiKTtlbHNlIGlmKDE5PT09YS50YWcpdGooYSxjLGIpO2Vsc2UgaWYobnVsbCE9PWEuY2hpbGQpe2EuY2hpbGQucmV0dXJuPWE7YT1hLmNoaWxkO2NvbnRpbnVlfWlmKGE9PT1iKWJyZWFrIGE7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxhLnJldHVybj09PWIpYnJlYWsgYTthPWEucmV0dXJufWEuc2libGluZy5yZXR1cm49YS5yZXR1cm47YT1hLnNpYmxpbmd9ZCY9MX1IKFAsZCk7aWYoMD09PShiLm1vZGUmMSkpYi5tZW1vaXplZFN0YXRlPVxubnVsbDtlbHNlIHN3aXRjaChlKXtjYXNlIFwiZm9yd2FyZHNcIjpjPWIuY2hpbGQ7Zm9yKGU9bnVsbDtudWxsIT09YzspYT1jLmFsdGVybmF0ZSxudWxsIT09YSYmbnVsbD09PUNoKGEpJiYoZT1jKSxjPWMuc2libGluZztjPWU7bnVsbD09PWM/KGU9Yi5jaGlsZCxiLmNoaWxkPW51bGwpOihlPWMuc2libGluZyxjLnNpYmxpbmc9bnVsbCk7dWooYiwhMSxlLGMsZik7YnJlYWs7Y2FzZSBcImJhY2t3YXJkc1wiOmM9bnVsbDtlPWIuY2hpbGQ7Zm9yKGIuY2hpbGQ9bnVsbDtudWxsIT09ZTspe2E9ZS5hbHRlcm5hdGU7aWYobnVsbCE9PWEmJm51bGw9PT1DaChhKSl7Yi5jaGlsZD1lO2JyZWFrfWE9ZS5zaWJsaW5nO2Uuc2libGluZz1jO2M9ZTtlPWF9dWooYiwhMCxjLG51bGwsZik7YnJlYWs7Y2FzZSBcInRvZ2V0aGVyXCI6dWooYiwhMSxudWxsLG51bGwsdm9pZCAwKTticmVhaztkZWZhdWx0OmIubWVtb2l6ZWRTdGF0ZT1udWxsfXJldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gWmkoYSxiLGMpe251bGwhPT1hJiYoYi5kZXBlbmRlbmNpZXM9YS5kZXBlbmRlbmNpZXMpO3pnfD1iLmxhbmVzO2lmKDA9PT0oYyZiLmNoaWxkTGFuZXMpKXJldHVybiBudWxsO2lmKG51bGwhPT1hJiZiLmNoaWxkIT09YS5jaGlsZCl0aHJvdyBFcnJvcihwKDE1MykpO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7Yz1taChhLGEucGVuZGluZ1Byb3BzKTtiLmNoaWxkPWM7Zm9yKGMucmV0dXJuPWI7bnVsbCE9PWEuc2libGluZzspYT1hLnNpYmxpbmcsYz1jLnNpYmxpbmc9bWgoYSxhLnBlbmRpbmdQcm9wcyksYy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIHdqKGEsYixjKXtzd2l0Y2goYi50YWcpe2Nhc2UgMzppaihiKTtnaCgpO2JyZWFrO2Nhc2UgNTpBaChiKTticmVhaztjYXNlIDE6VGYoYi50eXBlKSYmWGYoYik7YnJlYWs7Y2FzZSA0OnloKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7Y2FzZSAxMDp2YXIgZD1iLnR5cGUuX2NvbnRleHQsZT1iLm1lbW9pemVkUHJvcHMudmFsdWU7SChnZyxkLl9jdXJyZW50VmFsdWUpO2QuX2N1cnJlbnRWYWx1ZT1lO2JyZWFrO2Nhc2UgMTM6ZD1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQpe2lmKG51bGwhPT1kLmRlaHlkcmF0ZWQpcmV0dXJuIEgoUCxQLmN1cnJlbnQmMSksYi5mbGFnc3w9MTI4LG51bGw7aWYoMCE9PShjJmIuY2hpbGQuY2hpbGRMYW5lcykpcmV0dXJuIG1qKGEsYixjKTtIKFAsUC5jdXJyZW50JjEpO2E9WmkoYSxiLGMpO3JldHVybiBudWxsIT09YT9hLnNpYmxpbmc6bnVsbH1IKFAsUC5jdXJyZW50JjEpO2JyZWFrO2Nhc2UgMTk6ZD0wIT09KGMmXG5iLmNoaWxkTGFuZXMpO2lmKDAhPT0oYS5mbGFncyYxMjgpKXtpZihkKXJldHVybiB2aihhLGIsYyk7Yi5mbGFnc3w9MTI4fWU9Yi5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYoZS5yZW5kZXJpbmc9bnVsbCxlLnRhaWw9bnVsbCxlLmxhc3RFZmZlY3Q9bnVsbCk7SChQLFAuY3VycmVudCk7aWYoZClicmVhaztlbHNlIHJldHVybiBudWxsO2Nhc2UgMjI6Y2FzZSAyMzpyZXR1cm4gYi5sYW5lcz0wLGRqKGEsYixjKX1yZXR1cm4gWmkoYSxiLGMpfVxuZnVuY3Rpb24geGooYSxiKXtXZyhiKTtzd2l0Y2goYi50YWcpe2Nhc2UgMTpyZXR1cm4gVGYoYi50eXBlKSYmVWYoKSxhPWIuZmxhZ3MsYSY2NTUzNj8oYi5mbGFncz1hJi02NTUzN3wxMjgsYik6bnVsbDtjYXNlIDM6cmV0dXJuIHpoKCksRyhRZiksRyhJKSxFaCgpLGE9Yi5mbGFncywwIT09KGEmNjU1MzYpJiYwPT09KGEmMTI4KT8oYi5mbGFncz1hJi02NTUzN3wxMjgsYik6bnVsbDtjYXNlIDU6cmV0dXJuIEJoKGIpLG51bGw7Y2FzZSAxMzpHKFApO2E9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1hJiZudWxsIT09YS5kZWh5ZHJhdGVkKXtpZihudWxsPT09Yi5hbHRlcm5hdGUpdGhyb3cgRXJyb3IocCgzNDApKTtnaCgpfWE9Yi5mbGFncztyZXR1cm4gYSY2NTUzNj8oYi5mbGFncz1hJi02NTUzN3wxMjgsYik6bnVsbDtjYXNlIDE5OnJldHVybiBHKFApLG51bGw7Y2FzZSA0OnJldHVybiB6aCgpLG51bGw7Y2FzZSAxMDpyZXR1cm4gbGcoYi50eXBlLl9jb250ZXh0KSxudWxsO2Nhc2UgMjI6Y2FzZSAyMzpyZXR1cm4gVWkoKSxcbm51bGw7Y2FzZSAyNDpyZXR1cm4gbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX12YXIgeWo9ITEsemo9ITEsQWo9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQsWD1udWxsO2Z1bmN0aW9uIEJqKGEsYil7dmFyIGM9YS5yZWY7aWYobnVsbCE9PWMpaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMpdHJ5e2MobnVsbCl9Y2F0Y2goZCl7Q2ooYSxiLGQpfWVsc2UgYy5jdXJyZW50PW51bGx9ZnVuY3Rpb24gRGooYSxiLGMpe3RyeXtjKCl9Y2F0Y2goZCl7Q2ooYSxiLGQpfX12YXIgRWo9ITE7XG5mdW5jdGlvbiBGaihhLGIpe2E9SGUoKTtpZihJZShhKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW4gYSl2YXIgYz17c3RhcnQ6YS5zZWxlY3Rpb25TdGFydCxlbmQ6YS5zZWxlY3Rpb25FbmR9O2Vsc2UgYTp7Yz0oYz1hLm93bmVyRG9jdW1lbnQpJiZjLmRlZmF1bHRWaWV3fHx3aW5kb3c7dmFyIGQ9Yy5nZXRTZWxlY3Rpb24mJmMuZ2V0U2VsZWN0aW9uKCk7aWYoZCYmMCE9PWQucmFuZ2VDb3VudCl7Yz1kLmFuY2hvck5vZGU7dmFyIGU9ZC5hbmNob3JPZmZzZXQsZj1kLmZvY3VzTm9kZTtkPWQuZm9jdXNPZmZzZXQ7dHJ5e2Mubm9kZVR5cGUsZi5ub2RlVHlwZX1jYXRjaChPKXtjPW51bGw7YnJlYWsgYX12YXIgZz0wLGg9LTEsaz0tMSxsPTAsbT0wLHc9YSx1PW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgeTs7KXt3IT09Y3x8MCE9PWUmJjMhPT13Lm5vZGVUeXBlfHwoaD1nK2UpO3chPT1mfHwwIT09ZCYmMyE9PXcubm9kZVR5cGV8fChrPWcrZCk7Mz09PXcubm9kZVR5cGUmJihnKz13Lm5vZGVWYWx1ZS5sZW5ndGgpO1xuaWYobnVsbD09PSh5PXcuZmlyc3RDaGlsZCkpYnJlYWs7dT13O3c9eX1mb3IoOzspe2lmKHc9PT1hKWJyZWFrIGI7dT09PWMmJisrbD09PWUmJihoPWcpO3U9PT1mJiYrK209PT1kJiYoaz1nKTtpZihudWxsIT09KHk9dy5uZXh0U2libGluZykpYnJlYWs7dz11O3U9dy5wYXJlbnROb2RlfXc9eX1jPS0xPT09aHx8LTE9PT1rP251bGw6e3N0YXJ0OmgsZW5kOmt9fWVsc2UgYz1udWxsfWM9Y3x8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgYz1udWxsO3hmPXtmb2N1c2VkRWxlbTphLHNlbGVjdGlvblJhbmdlOmN9O2ZvcihYPWI7bnVsbCE9PVg7KWlmKGI9WCxhPWIuY2hpbGQsMCE9PShiLnN1YnRyZWVGbGFncyYxMDI4KSYmbnVsbCE9PWEpYS5yZXR1cm49YixYPWE7ZWxzZSBmb3IoO251bGwhPT1YOyl7Yj1YO3RyeXt2YXIgbj1iLmFsdGVybmF0ZTtpZigwIT09KGIuZmxhZ3MmMTAyNCkpc3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmJyZWFrO2Nhc2UgMTppZihudWxsIT09XG5uKXt2YXIgdj1uLm1lbW9pemVkUHJvcHMsQz1uLm1lbW9pemVkU3RhdGUsdD1iLnN0YXRlTm9kZSxyPXQuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoYi5lbGVtZW50VHlwZT09PWIudHlwZT92OmZnKGIudHlwZSx2KSxDKTt0Ll9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlPXJ9YnJlYWs7Y2FzZSAzOnZhciB4PWIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87aWYoMT09PXgubm9kZVR5cGUpeC50ZXh0Q29udGVudD1cIlwiO2Vsc2UgaWYoOT09PXgubm9kZVR5cGUpe3ZhciBCPXguYm9keTtudWxsIT1CJiYoQi50ZXh0Q29udGVudD1cIlwiKX1icmVhaztjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OmJyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IocCgxNjMpKTt9fWNhdGNoKE8pe0NqKGIsYi5yZXR1cm4sTyl9YT1iLnNpYmxpbmc7aWYobnVsbCE9PWEpe2EucmV0dXJuPWIucmV0dXJuO1g9YTticmVha31YPWIucmV0dXJufW49RWo7RWo9ITE7cmV0dXJuIG59XG5mdW5jdGlvbiBHaihhLGIsYyl7dmFyIGQ9Yi51cGRhdGVRdWV1ZTtkPW51bGwhPT1kP2QubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1kKXt2YXIgZT1kPWQubmV4dDtkb3tpZigoZS50YWcmYSk9PT1hKXt2YXIgZj1lLmRlc3Ryb3k7ZS5kZXN0cm95PXZvaWQgMDt2b2lkIDAhPT1mJiZEaihiLGMsZil9ZT1lLm5leHR9d2hpbGUoZSE9PWQpfX1mdW5jdGlvbiBIaihhLGIpe2I9Yi51cGRhdGVRdWV1ZTtiPW51bGwhPT1iP2IubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1iKXt2YXIgYz1iPWIubmV4dDtkb3tpZigoYy50YWcmYSk9PT1hKXt2YXIgZD1jLmNyZWF0ZTtjLmRlc3Ryb3k9ZCgpfWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX19ZnVuY3Rpb24gSWooYSl7dmFyIGI9YS5yZWY7aWYobnVsbCE9PWIpe3ZhciBjPWEuc3RhdGVOb2RlO3N3aXRjaChhLnRhZyl7Y2FzZSA1OmE9YzticmVhaztkZWZhdWx0OmE9Y31cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmIuY3VycmVudD1hfX1cbmZ1bmN0aW9uIEpqKGEsYixjKXtpZihpYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGljLm9uQ29tbWl0RmliZXJVbm1vdW50KXRyeXtpYy5vbkNvbW1pdEZpYmVyVW5tb3VudChoYyxiKX1jYXRjaChnKXt9c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6YT1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hJiYoYT1hLmxhc3RFZmZlY3QsbnVsbCE9PWEpKXt2YXIgZD1hPWEubmV4dDtkb3t2YXIgZT1kLGY9ZS5kZXN0cm95O2U9ZS50YWc7dm9pZCAwIT09ZiYmKDAhPT0oZSYyKT9EaihiLGMsZik6MCE9PShlJjQpJiZEaihiLGMsZikpO2Q9ZC5uZXh0fXdoaWxlKGQhPT1hKX1icmVhaztjYXNlIDE6QmooYixjKTthPWIuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLmNvbXBvbmVudFdpbGxVbm1vdW50KXRyeXthLnByb3BzPWIubWVtb2l6ZWRQcm9wcyxhLnN0YXRlPWIubWVtb2l6ZWRTdGF0ZSxhLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2goZyl7Q2ooYixcbmMsZyl9YnJlYWs7Y2FzZSA1OkJqKGIsYyk7YnJlYWs7Y2FzZSA0OktqKGEsYixjKX19ZnVuY3Rpb24gTGooYSl7dmFyIGI9YS5hbHRlcm5hdGU7bnVsbCE9PWImJihhLmFsdGVybmF0ZT1udWxsLExqKGIpKTthLmNoaWxkPW51bGw7YS5kZWxldGlvbnM9bnVsbDthLnNpYmxpbmc9bnVsbDs1PT09YS50YWcmJihiPWEuc3RhdGVOb2RlLG51bGwhPT1iJiYoZGVsZXRlIGJbSWZdLGRlbGV0ZSBiW0pmXSxkZWxldGUgYltqZl0sZGVsZXRlIGJbS2ZdLGRlbGV0ZSBiW0xmXSkpO2Euc3RhdGVOb2RlPW51bGw7YS5yZXR1cm49bnVsbDthLmRlcGVuZGVuY2llcz1udWxsO2EubWVtb2l6ZWRQcm9wcz1udWxsO2EubWVtb2l6ZWRTdGF0ZT1udWxsO2EucGVuZGluZ1Byb3BzPW51bGw7YS5zdGF0ZU5vZGU9bnVsbDthLnVwZGF0ZVF1ZXVlPW51bGx9ZnVuY3Rpb24gTWooYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9XG5mdW5jdGlvbiBOaihhKXthOmZvcig7Oyl7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxNaihhLnJldHVybikpcmV0dXJuIG51bGw7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2ZvcihhPWEuc2libGluZzs1IT09YS50YWcmJjYhPT1hLnRhZyYmMTghPT1hLnRhZzspe2lmKGEuZmxhZ3MmMiljb250aW51ZSBhO2lmKG51bGw9PT1hLmNoaWxkfHw0PT09YS50YWcpY29udGludWUgYTtlbHNlIGEuY2hpbGQucmV0dXJuPWEsYT1hLmNoaWxkfWlmKCEoYS5mbGFncyYyKSlyZXR1cm4gYS5zdGF0ZU5vZGV9fVxuZnVuY3Rpb24gT2ooYSl7YTp7Zm9yKHZhciBiPWEucmV0dXJuO251bGwhPT1iOyl7aWYoTWooYikpYnJlYWsgYTtiPWIucmV0dXJufXRocm93IEVycm9yKHAoMTYwKSk7fXZhciBjPWI7c3dpdGNoKGMudGFnKXtjYXNlIDU6Yj1jLnN0YXRlTm9kZTtjLmZsYWdzJjMyJiYobGIoYixcIlwiKSxjLmZsYWdzJj0tMzMpO2M9TmooYSk7UGooYSxjLGIpO2JyZWFrO2Nhc2UgMzpjYXNlIDQ6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2M9TmooYSk7UWooYSxjLGIpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IocCgxNjEpKTt9fVxuZnVuY3Rpb24gUWooYSxiLGMpe3ZhciBkPWEudGFnO2lmKDU9PT1kfHw2PT09ZClhPWEuc3RhdGVOb2RlLGI/OD09PWMubm9kZVR5cGU/Yy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLGIpOmMuaW5zZXJ0QmVmb3JlKGEsYik6KDg9PT1jLm5vZGVUeXBlPyhiPWMucGFyZW50Tm9kZSxiLmluc2VydEJlZm9yZShhLGMpKTooYj1jLGIuYXBwZW5kQ2hpbGQoYSkpLGM9Yy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwhPT1jJiZ2b2lkIDAhPT1jfHxudWxsIT09Yi5vbmNsaWNrfHwoYi5vbmNsaWNrPXdmKSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKFFqKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspUWooYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gUGooYSxiLGMpe3ZhciBkPWEudGFnO2lmKDU9PT1kfHw2PT09ZClhPWEuc3RhdGVOb2RlLGI/Yy5pbnNlcnRCZWZvcmUoYSxiKTpjLmFwcGVuZENoaWxkKGEpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihQaihhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KVBqKGEsYixjKSxhPWEuc2libGluZ31cbmZ1bmN0aW9uIEtqKGEsYixjKXtmb3IodmFyIGQ9YixlPSExLGYsZzs7KXtpZighZSl7ZT1kLnJldHVybjthOmZvcig7Oyl7aWYobnVsbD09PWUpdGhyb3cgRXJyb3IocCgxNjApKTtmPWUuc3RhdGVOb2RlO3N3aXRjaChlLnRhZyl7Y2FzZSA1Omc9ITE7YnJlYWsgYTtjYXNlIDM6Zj1mLmNvbnRhaW5lckluZm87Zz0hMDticmVhayBhO2Nhc2UgNDpmPWYuY29udGFpbmVySW5mbztnPSEwO2JyZWFrIGF9ZT1lLnJldHVybn1lPSEwfWlmKDU9PT1kLnRhZ3x8Nj09PWQudGFnKXthOmZvcih2YXIgaD1hLGs9ZCxsPWMsbT1rOzspaWYoSmooaCxtLGwpLG51bGwhPT1tLmNoaWxkJiY0IT09bS50YWcpbS5jaGlsZC5yZXR1cm49bSxtPW0uY2hpbGQ7ZWxzZXtpZihtPT09aylicmVhayBhO2Zvcig7bnVsbD09PW0uc2libGluZzspe2lmKG51bGw9PT1tLnJldHVybnx8bS5yZXR1cm49PT1rKWJyZWFrIGE7bT1tLnJldHVybn1tLnNpYmxpbmcucmV0dXJuPW0ucmV0dXJuO209bS5zaWJsaW5nfWc/KGg9XG5mLGs9ZC5zdGF0ZU5vZGUsOD09PWgubm9kZVR5cGU/aC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGspOmgucmVtb3ZlQ2hpbGQoaykpOmYucmVtb3ZlQ2hpbGQoZC5zdGF0ZU5vZGUpfWVsc2UgaWYoMTg9PT1kLnRhZylnPyhoPWYsaz1kLnN0YXRlTm9kZSw4PT09aC5ub2RlVHlwZT9FZihoLnBhcmVudE5vZGUsayk6MT09PWgubm9kZVR5cGUmJkVmKGgsayksWWMoaCkpOkVmKGYsZC5zdGF0ZU5vZGUpO2Vsc2UgaWYoND09PWQudGFnKXtpZihudWxsIT09ZC5jaGlsZCl7Zj1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2c9ITA7ZC5jaGlsZC5yZXR1cm49ZDtkPWQuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYoSmooYSxkLGMpLG51bGwhPT1kLmNoaWxkKXtkLmNoaWxkLnJldHVybj1kO2Q9ZC5jaGlsZDtjb250aW51ZX1pZihkPT09YilicmVhaztmb3IoO251bGw9PT1kLnNpYmxpbmc7KXtpZihudWxsPT09ZC5yZXR1cm58fGQucmV0dXJuPT09YilyZXR1cm47ZD1kLnJldHVybjs0PT09ZC50YWcmJlxuKGU9ITEpfWQuc2libGluZy5yZXR1cm49ZC5yZXR1cm47ZD1kLnNpYmxpbmd9fVxuZnVuY3Rpb24gUmooYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpHaigzLGIsYi5yZXR1cm4pO0hqKDMsYik7R2ooNSxiLGIucmV0dXJuKTtyZXR1cm47Y2FzZSAxOnJldHVybjtjYXNlIDU6dmFyIGM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7dmFyIGQ9Yi5tZW1vaXplZFByb3BzLGU9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7YT1iLnR5cGU7dmFyIGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYobnVsbCE9PWYpe1wiaW5wdXRcIj09PWEmJlwicmFkaW9cIj09PWQudHlwZSYmbnVsbCE9ZC5uYW1lJiZZYShjLGQpO3NiKGEsZSk7Yj1zYihhLGQpO2ZvcihlPTA7ZTxmLmxlbmd0aDtlKz0yKXt2YXIgZz1mW2VdLGg9ZltlKzFdO1wic3R5bGVcIj09PWc/cGIoYyxoKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP2tiKGMsaCk6XCJjaGlsZHJlblwiPT09Zz9sYihjLGgpOnJhKGMsZyxoLGIpfXN3aXRjaChhKXtjYXNlIFwiaW5wdXRcIjpaYShjLFxuZCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6ZmIoYyxkKTticmVhaztjYXNlIFwic2VsZWN0XCI6YT1jLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGUsYy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlPSEhZC5tdWx0aXBsZSxmPWQudmFsdWUsbnVsbCE9Zj9jYihjLCEhZC5tdWx0aXBsZSxmLCExKTphIT09ISFkLm11bHRpcGxlJiYobnVsbCE9ZC5kZWZhdWx0VmFsdWU/Y2IoYywhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApOmNiKGMsISFkLm11bHRpcGxlLGQubXVsdGlwbGU/W106XCJcIiwhMSkpfWNbSmZdPWR9fXJldHVybjtjYXNlIDY6aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHAoMTYyKSk7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPWIubWVtb2l6ZWRQcm9wcztyZXR1cm47Y2FzZSAzOm51bGwhPT1hJiZhLm1lbW9pemVkU3RhdGUuaXNEZWh5ZHJhdGVkJiZZYyhiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTtyZXR1cm47Y2FzZSAxMjpyZXR1cm47Y2FzZSAxMzpTaihiKTtcbnJldHVybjtjYXNlIDE5OlNqKGIpO3JldHVybjtjYXNlIDE3OnJldHVybn10aHJvdyBFcnJvcihwKDE2MykpO31mdW5jdGlvbiBTaihhKXt2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbD09PWMmJihjPWEuc3RhdGVOb2RlPW5ldyBBaik7Yi5mb3JFYWNoKGZ1bmN0aW9uKGIpe3ZhciBkPVRqLmJpbmQobnVsbCxhLGIpO2MuaGFzKGIpfHwoYy5hZGQoYiksYi50aGVuKGQsZCkpfSl9fVxuZnVuY3Rpb24gVWooYSxiKXtmb3IoWD1iO251bGwhPT1YOyl7Yj1YO3ZhciBjPWIuZGVsZXRpb25zO2lmKG51bGwhPT1jKWZvcih2YXIgZD0wO2Q8Yy5sZW5ndGg7ZCsrKXt2YXIgZT1jW2RdO3RyeXtLaihhLGUsYik7dmFyIGY9ZS5hbHRlcm5hdGU7bnVsbCE9PWYmJihmLnJldHVybj1udWxsKTtlLnJldHVybj1udWxsfWNhdGNoKEwpe0NqKGUsYixMKX19Yz1iLmNoaWxkO2lmKDAhPT0oYi5zdWJ0cmVlRmxhZ3MmMTI4NTQpJiZudWxsIT09YyljLnJldHVybj1iLFg9YztlbHNlIGZvcig7bnVsbCE9PVg7KXtiPVg7dHJ5e3ZhciBnPWIuZmxhZ3M7ZyYzMiYmbGIoYi5zdGF0ZU5vZGUsXCJcIik7aWYoZyY1MTIpe3ZhciBoPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1oKXt2YXIgaz1oLnJlZjtudWxsIT09ayYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBrP2sobnVsbCk6ay5jdXJyZW50PW51bGwpfX1pZihnJjgxOTIpc3dpdGNoKGIudGFnKXtjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe3ZhciBsPVxuYi5hbHRlcm5hdGU7aWYobnVsbD09PWx8fG51bGw9PT1sLm1lbW9pemVkU3RhdGUpVmo9RCgpfWJyZWFrO2Nhc2UgMjI6dmFyIG09bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSx3PWIuYWx0ZXJuYXRlLHU9bnVsbCE9PXcmJm51bGwhPT13Lm1lbW9pemVkU3RhdGU7Yz1iO2E6e2Q9YztlPW07Zm9yKHZhciB5PW51bGwsbj1kOzspe2lmKDU9PT1uLnRhZyl7aWYobnVsbD09PXkpe3k9bjt2YXIgdj1uLnN0YXRlTm9kZTtpZihlKXt2YXIgQz12LnN0eWxlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBDLnNldFByb3BlcnR5P0Muc2V0UHJvcGVydHkoXCJkaXNwbGF5XCIsXCJub25lXCIsXCJpbXBvcnRhbnRcIik6Qy5kaXNwbGF5PVwibm9uZVwifWVsc2V7dmFyIHQ9bi5zdGF0ZU5vZGUscj1uLm1lbW9pemVkUHJvcHMuc3R5bGUseD12b2lkIDAhPT1yJiZudWxsIT09ciYmci5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/ci5kaXNwbGF5Om51bGw7dC5zdHlsZS5kaXNwbGF5PW9iKFwiZGlzcGxheVwiLHgpfX19ZWxzZSBpZig2PT09XG5uLnRhZyludWxsPT09eSYmKG4uc3RhdGVOb2RlLm5vZGVWYWx1ZT1lP1wiXCI6bi5tZW1vaXplZFByb3BzKTtlbHNlIGlmKCgyMiE9PW4udGFnJiYyMyE9PW4udGFnfHxudWxsPT09bi5tZW1vaXplZFN0YXRlfHxuPT09ZCkmJm51bGwhPT1uLmNoaWxkKXtuLmNoaWxkLnJldHVybj1uO249bi5jaGlsZDtjb250aW51ZX1pZihuPT09ZClicmVhaztmb3IoO251bGw9PT1uLnNpYmxpbmc7KXtpZihudWxsPT09bi5yZXR1cm58fG4ucmV0dXJuPT09ZClicmVhayBhO3k9PT1uJiYoeT1udWxsKTtuPW4ucmV0dXJufXk9PT1uJiYoeT1udWxsKTtuLnNpYmxpbmcucmV0dXJuPW4ucmV0dXJuO249bi5zaWJsaW5nfX1pZihtJiYhdSYmMCE9PShjLm1vZGUmMSkpe1g9Yztmb3IodmFyIEI9Yy5jaGlsZDtudWxsIT09Qjspe2ZvcihjPVg9QjtudWxsIT09WDspe2Q9WDt2YXIgTz1kLmNoaWxkO3N3aXRjaChkLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OkdqKDQsZCxkLnJldHVybik7YnJlYWs7XG5jYXNlIDE6QmooZCxkLnJldHVybik7dmFyIFQ9ZC5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIFQuY29tcG9uZW50V2lsbFVubW91bnQpe3ZhciB6YT1kLnJldHVybjt0cnl7VC5wcm9wcz1kLm1lbW9pemVkUHJvcHMsVC5zdGF0ZT1kLm1lbW9pemVkU3RhdGUsVC5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKEwpe0NqKGQsemEsTCl9fWJyZWFrO2Nhc2UgNTpCaihkLGQucmV0dXJuKTticmVhaztjYXNlIDIyOmlmKG51bGwhPT1kLm1lbW9pemVkU3RhdGUpe1dqKGMpO2NvbnRpbnVlfX1udWxsIT09Tz8oTy5yZXR1cm49ZCxYPU8pOldqKGMpfUI9Qi5zaWJsaW5nfX19c3dpdGNoKGcmNDEwMil7Y2FzZSAyOk9qKGIpO2IuZmxhZ3MmPS0zO2JyZWFrO2Nhc2UgNjpPaihiKTtiLmZsYWdzJj0tMztSaihiLmFsdGVybmF0ZSxiKTticmVhaztjYXNlIDQwOTY6Yi5mbGFncyY9LTQwOTc7YnJlYWs7Y2FzZSA0MTAwOmIuZmxhZ3MmPS00MDk3O1JqKGIuYWx0ZXJuYXRlLGIpO1xuYnJlYWs7Y2FzZSA0OlJqKGIuYWx0ZXJuYXRlLGIpfX1jYXRjaChMKXtDaihiLGIucmV0dXJuLEwpfWM9Yi5zaWJsaW5nO2lmKG51bGwhPT1jKXtjLnJldHVybj1iLnJldHVybjtYPWM7YnJlYWt9WD1iLnJldHVybn19fWZ1bmN0aW9uIFhqKGEsYixjKXtYPWE7WWooYSxiLGMpfVxuZnVuY3Rpb24gWWooYSxiLGMpe2Zvcih2YXIgZD0wIT09KGEubW9kZSYxKTtudWxsIT09WDspe3ZhciBlPVgsZj1lLmNoaWxkO2lmKDIyPT09ZS50YWcmJmQpe3ZhciBnPW51bGwhPT1lLm1lbW9pemVkU3RhdGV8fHlqO2lmKCFnKXt2YXIgaD1lLmFsdGVybmF0ZSxrPW51bGwhPT1oJiZudWxsIT09aC5tZW1vaXplZFN0YXRlfHx6ajtoPXlqO3ZhciBsPXpqO3lqPWc7aWYoKHpqPWspJiYhbClmb3IoWD1lO251bGwhPT1YOylnPVgsaz1nLmNoaWxkLDIyPT09Zy50YWcmJm51bGwhPT1nLm1lbW9pemVkU3RhdGU/WmooZSk6bnVsbCE9PWs/KGsucmV0dXJuPWcsWD1rKTpaaihlKTtmb3IoO251bGwhPT1mOylYPWYsWWooZixiLGMpLGY9Zi5zaWJsaW5nO1g9ZTt5aj1oO3pqPWx9YWsoYSxiLGMpfWVsc2UgMCE9PShlLnN1YnRyZWVGbGFncyY4NzcyKSYmbnVsbCE9PWY/KGYucmV0dXJuPWUsWD1mKTphayhhLGIsYyl9fVxuZnVuY3Rpb24gYWsoYSl7Zm9yKDtudWxsIT09WDspe3ZhciBiPVg7aWYoMCE9PShiLmZsYWdzJjg3NzIpKXt2YXIgYz1iLmFsdGVybmF0ZTt0cnl7aWYoMCE9PShiLmZsYWdzJjg3NzIpKXN3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTp6anx8SGooNSxiKTticmVhaztjYXNlIDE6dmFyIGQ9Yi5zdGF0ZU5vZGU7aWYoYi5mbGFncyY0JiYhemopaWYobnVsbD09PWMpZC5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIGU9Yi5lbGVtZW50VHlwZT09PWIudHlwZT9jLm1lbW9pemVkUHJvcHM6ZmcoYi50eXBlLGMubWVtb2l6ZWRQcm9wcyk7ZC5jb21wb25lbnREaWRVcGRhdGUoZSxjLm1lbW9pemVkU3RhdGUsZC5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9dmFyIGY9Yi51cGRhdGVRdWV1ZTtudWxsIT09ZiYmQWcoYixmLGQpO2JyZWFrO2Nhc2UgMzp2YXIgZz1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1nKXtjPW51bGw7aWYobnVsbCE9PWIuY2hpbGQpc3dpdGNoKGIuY2hpbGQudGFnKXtjYXNlIDU6Yz1cbmIuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTpjPWIuY2hpbGQuc3RhdGVOb2RlfUFnKGIsZyxjKX1icmVhaztjYXNlIDU6dmFyIGg9Yi5zdGF0ZU5vZGU7aWYobnVsbD09PWMmJmIuZmxhZ3MmNCl7Yz1oO3ZhciBrPWIubWVtb2l6ZWRQcm9wcztzd2l0Y2goYi50eXBlKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOmsuYXV0b0ZvY3VzJiZjLmZvY3VzKCk7YnJlYWs7Y2FzZSBcImltZ1wiOmsuc3JjJiYoYy5zcmM9ay5zcmMpfX1icmVhaztjYXNlIDY6YnJlYWs7Y2FzZSA0OmJyZWFrO2Nhc2UgMTI6YnJlYWs7Y2FzZSAxMzppZihudWxsPT09Yi5tZW1vaXplZFN0YXRlKXt2YXIgbD1iLmFsdGVybmF0ZTtpZihudWxsIT09bCl7dmFyIG09bC5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1tKXt2YXIgdz1tLmRlaHlkcmF0ZWQ7bnVsbCE9PXcmJlljKHcpfX19YnJlYWs7Y2FzZSAxOTpjYXNlIDE3OmNhc2UgMjE6Y2FzZSAyMjpjYXNlIDIzOmJyZWFrO1xuZGVmYXVsdDp0aHJvdyBFcnJvcihwKDE2MykpO316anx8Yi5mbGFncyY1MTImJklqKGIpfWNhdGNoKHUpe0NqKGIsYi5yZXR1cm4sdSl9fWlmKGI9PT1hKXtYPW51bGw7YnJlYWt9Yz1iLnNpYmxpbmc7aWYobnVsbCE9PWMpe2MucmV0dXJuPWIucmV0dXJuO1g9YzticmVha31YPWIucmV0dXJufX1mdW5jdGlvbiBXaihhKXtmb3IoO251bGwhPT1YOyl7dmFyIGI9WDtpZihiPT09YSl7WD1udWxsO2JyZWFrfXZhciBjPWIuc2libGluZztpZihudWxsIT09Yyl7Yy5yZXR1cm49Yi5yZXR1cm47WD1jO2JyZWFrfVg9Yi5yZXR1cm59fVxuZnVuY3Rpb24gWmooYSl7Zm9yKDtudWxsIT09WDspe3ZhciBiPVg7dHJ5e3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTp2YXIgYz1iLnJldHVybjt0cnl7SGooNCxiKX1jYXRjaChrKXtDaihiLGMsayl9YnJlYWs7Y2FzZSAxOnZhciBkPWIuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZE1vdW50KXt2YXIgZT1iLnJldHVybjt0cnl7ZC5jb21wb25lbnREaWRNb3VudCgpfWNhdGNoKGspe0NqKGIsZSxrKX19dmFyIGY9Yi5yZXR1cm47dHJ5e0lqKGIpfWNhdGNoKGspe0NqKGIsZixrKX1icmVhaztjYXNlIDU6dmFyIGc9Yi5yZXR1cm47dHJ5e0lqKGIpfWNhdGNoKGspe0NqKGIsZyxrKX19fWNhdGNoKGspe0NqKGIsYi5yZXR1cm4sayl9aWYoYj09PWEpe1g9bnVsbDticmVha312YXIgaD1iLnNpYmxpbmc7aWYobnVsbCE9PWgpe2gucmV0dXJuPWIucmV0dXJuO1g9aDticmVha31YPWIucmV0dXJufX1cbnZhciBiaz1NYXRoLmNlaWwsY2s9c2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixkaz1zYS5SZWFjdEN1cnJlbnRPd25lcixlaz1zYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyxLPTAsSj1udWxsLFk9bnVsbCxaPTAsVmk9MCxlaj1PZigwKSxXPTAsZms9bnVsbCx6Zz0wLGdrPTAsaGs9MCxpaz1udWxsLGprPW51bGwsVmo9MCxUaT1JbmZpbml0eSxEaT0hMSxFaT1udWxsLEdpPW51bGwsa2s9ITEsbGs9bnVsbCxtaz0wLG5rPTAsb2s9bnVsbCxwaz0tMSxxaz0wO2Z1bmN0aW9uIE0oKXtyZXR1cm4gMCE9PShLJjYpP0QoKTotMSE9PXBrP3BrOnBrPUQoKX1cbmZ1bmN0aW9uIERnKGEpe2lmKDA9PT0oYS5tb2RlJjEpKXJldHVybiAxO2lmKDAhPT0oSyYyKSYmMCE9PVopcmV0dXJuIFomLVo7aWYobnVsbCE9PWVnLnRyYW5zaXRpb24pcmV0dXJuIDA9PT1xayYmKGE9b2Msb2M8PD0xLDA9PT0ob2MmNDE5NDI0MCkmJihvYz02NCkscWs9YSkscWs7YT1FO2lmKDAhPT1hKXJldHVybiBhO2E9d2luZG93LmV2ZW50O2E9dm9pZCAwPT09YT8xNjplZChhLnR5cGUpO3JldHVybiBhfWZ1bmN0aW9uIEVnKGEsYixjKXtpZig1MDxuayl0aHJvdyBuaz0wLG9rPW51bGwsRXJyb3IocCgxODUpKTt2YXIgZD1yayhhLGIpO2lmKG51bGw9PT1kKXJldHVybiBudWxsO3djKGQsYixjKTtpZigwPT09KEsmMil8fGQhPT1KKWQ9PT1KJiYoMD09PShLJjIpJiYoZ2t8PWIpLDQ9PT1XJiZzayhkLFopKSx0ayhkLGMpLDE9PT1iJiYwPT09SyYmMD09PShhLm1vZGUmMSkmJihUaT1EKCkrNTAwLCRmJiZkZygpKTtyZXR1cm4gZH1cbmZ1bmN0aW9uIHJrKGEsYil7YS5sYW5lc3w9Yjt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmKGMubGFuZXN8PWIpO2M9YTtmb3IoYT1hLnJldHVybjtudWxsIT09YTspYS5jaGlsZExhbmVzfD1iLGM9YS5hbHRlcm5hdGUsbnVsbCE9PWMmJihjLmNoaWxkTGFuZXN8PWIpLGM9YSxhPWEucmV0dXJuO3JldHVybiAzPT09Yy50YWc/Yy5zdGF0ZU5vZGU6bnVsbH1cbmZ1bmN0aW9uIHRrKGEsYil7dmFyIGM9YS5jYWxsYmFja05vZGU7dGMoYSxiKTt2YXIgZD1yYyhhLGE9PT1KP1o6MCk7aWYoMD09PWQpbnVsbCE9PWMmJlpiKGMpLGEuY2FsbGJhY2tOb2RlPW51bGwsYS5jYWxsYmFja1ByaW9yaXR5PTA7ZWxzZSBpZihiPWQmLWQsYS5jYWxsYmFja1ByaW9yaXR5IT09Yil7bnVsbCE9YyYmWmIoYyk7aWYoMT09PWIpMD09PWEudGFnP2NnKHVrLmJpbmQobnVsbCxhKSk6YmcodWsuYmluZChudWxsLGEpKSxEZihmdW5jdGlvbigpezA9PT1LJiZkZygpfSksYz1udWxsO2Vsc2V7c3dpdGNoKHpjKGQpKXtjYXNlIDE6Yz1jYzticmVhaztjYXNlIDQ6Yz1kYzticmVhaztjYXNlIDE2OmM9ZWM7YnJlYWs7Y2FzZSA1MzY4NzA5MTI6Yz1nYzticmVhaztkZWZhdWx0OmM9ZWN9Yz12ayhjLHdrLmJpbmQobnVsbCxhKSl9YS5jYWxsYmFja1ByaW9yaXR5PWI7YS5jYWxsYmFja05vZGU9Y319XG5mdW5jdGlvbiB3ayhhLGIpe3BrPS0xO3FrPTA7aWYoMCE9PShLJjYpKXRocm93IEVycm9yKHAoMzI3KSk7dmFyIGM9YS5jYWxsYmFja05vZGU7aWYoeGsoKSYmYS5jYWxsYmFja05vZGUhPT1jKXJldHVybiBudWxsO3ZhciBkPXJjKGEsYT09PUo/WjowKTtpZigwPT09ZClyZXR1cm4gbnVsbDtpZigwIT09KGQmMzApfHwwIT09KGQmYS5leHBpcmVkTGFuZXMpfHxiKWI9eWsoYSxkKTtlbHNle2I9ZDt2YXIgZT1LO0t8PTI7dmFyIGY9emsoKTtpZihKIT09YXx8WiE9PWIpVGk9RCgpKzUwMCxBayhhLGIpO2RvIHRyeXtCaygpO2JyZWFrfWNhdGNoKGgpe0NrKGEsaCl9d2hpbGUoMSk7a2coKTtjay5jdXJyZW50PWY7Sz1lO251bGwhPT1ZP2I9MDooSj1udWxsLFo9MCxiPVcpfWlmKDAhPT1iKXsyPT09YiYmKGU9dWMoYSksMCE9PWUmJihkPWUsYj1EayhhLGUpKSk7aWYoMT09PWIpdGhyb3cgYz1mayxBayhhLDApLHNrKGEsZCksdGsoYSxEKCkpLGM7aWYoNj09PWIpc2soYSxkKTtlbHNle2U9XG5hLmN1cnJlbnQuYWx0ZXJuYXRlO2lmKDA9PT0oZCYzMCkmJiFFayhlKSYmKGI9eWsoYSxkKSwyPT09YiYmKGY9dWMoYSksMCE9PWYmJihkPWYsYj1EayhhLGYpKSksMT09PWIpKXRocm93IGM9ZmssQWsoYSwwKSxzayhhLGQpLHRrKGEsRCgpKSxjO2EuZmluaXNoZWRXb3JrPWU7YS5maW5pc2hlZExhbmVzPWQ7c3dpdGNoKGIpe2Nhc2UgMDpjYXNlIDE6dGhyb3cgRXJyb3IocCgzNDUpKTtjYXNlIDI6RmsoYSxqayk7YnJlYWs7Y2FzZSAzOnNrKGEsZCk7aWYoKGQmMTMwMDIzNDI0KT09PWQmJihiPVZqKzUwMC1EKCksMTA8Yikpe2lmKDAhPT1yYyhhLDApKWJyZWFrO2U9YS5zdXNwZW5kZWRMYW5lcztpZigoZSZkKSE9PWQpe00oKTthLnBpbmdlZExhbmVzfD1hLnN1c3BlbmRlZExhbmVzJmU7YnJlYWt9YS50aW1lb3V0SGFuZGxlPXpmKEZrLmJpbmQobnVsbCxhLGprKSxiKTticmVha31GayhhLGprKTticmVhaztjYXNlIDQ6c2soYSxkKTtpZigoZCY0MTk0MjQwKT09PWQpYnJlYWs7Yj1cbmEuZXZlbnRUaW1lcztmb3IoZT0tMTswPGQ7KXt2YXIgZz0zMS1sYyhkKTtmPTE8PGc7Zz1iW2ddO2c+ZSYmKGU9Zyk7ZCY9fmZ9ZD1lO2Q9RCgpLWQ7ZD0oMTIwPmQ/MTIwOjQ4MD5kPzQ4MDoxMDgwPmQ/MTA4MDoxOTIwPmQ/MTkyMDozRTM+ZD8zRTM6NDMyMD5kPzQzMjA6MTk2MCpiayhkLzE5NjApKS1kO2lmKDEwPGQpe2EudGltZW91dEhhbmRsZT16ZihGay5iaW5kKG51bGwsYSxqayksZCk7YnJlYWt9RmsoYSxqayk7YnJlYWs7Y2FzZSA1OkZrKGEsamspO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IocCgzMjkpKTt9fX10ayhhLEQoKSk7cmV0dXJuIGEuY2FsbGJhY2tOb2RlPT09Yz93ay5iaW5kKG51bGwsYSk6bnVsbH1mdW5jdGlvbiBEayhhLGIpe3ZhciBjPWlrO2EuY3VycmVudC5tZW1vaXplZFN0YXRlLmlzRGVoeWRyYXRlZCYmKEFrKGEsYikuZmxhZ3N8PTI1Nik7YT15ayhhLGIpOzIhPT1hJiYoYj1qayxqaz1jLG51bGwhPT1iJiZSaShiKSk7cmV0dXJuIGF9XG5mdW5jdGlvbiBSaShhKXtudWxsPT09ams/ams9YTpqay5wdXNoLmFwcGx5KGprLGEpfWZ1bmN0aW9uIEVrKGEpe2Zvcih2YXIgYj1hOzspe2lmKGIuZmxhZ3MmMTYzODQpe3ZhciBjPWIudXBkYXRlUXVldWU7aWYobnVsbCE9PWMmJihjPWMuc3RvcmVzLG51bGwhPT1jKSlmb3IodmFyIGQ9MDtkPGMubGVuZ3RoO2QrKyl7dmFyIGU9Y1tkXSxmPWUuZ2V0U25hcHNob3Q7ZT1lLnZhbHVlO3RyeXtpZighQ2UoZigpLGUpKXJldHVybiExfWNhdGNoKGcpe3JldHVybiExfX19Yz1iLmNoaWxkO2lmKGIuc3VidHJlZUZsYWdzJjE2Mzg0JiZudWxsIT09YyljLnJldHVybj1iLGI9YztlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiEwO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuITB9XG5mdW5jdGlvbiBzayhhLGIpe2ImPX5oaztiJj1+Z2s7YS5zdXNwZW5kZWRMYW5lc3w9YjthLnBpbmdlZExhbmVzJj1+Yjtmb3IoYT1hLmV4cGlyYXRpb25UaW1lczswPGI7KXt2YXIgYz0zMS1sYyhiKSxkPTE8PGM7YVtjXT0tMTtiJj1+ZH19ZnVuY3Rpb24gdWsoYSl7aWYoMCE9PShLJjYpKXRocm93IEVycm9yKHAoMzI3KSk7eGsoKTt2YXIgYj1yYyhhLDApO2lmKDA9PT0oYiYxKSlyZXR1cm4gdGsoYSxEKCkpLG51bGw7dmFyIGM9eWsoYSxiKTtpZigwIT09YS50YWcmJjI9PT1jKXt2YXIgZD11YyhhKTswIT09ZCYmKGI9ZCxjPURrKGEsZCkpfWlmKDE9PT1jKXRocm93IGM9ZmssQWsoYSwwKSxzayhhLGIpLHRrKGEsRCgpKSxjO2lmKDY9PT1jKXRocm93IEVycm9yKHAoMzQ1KSk7YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkTGFuZXM9YjtGayhhLGprKTt0ayhhLEQoKSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBHayhhLGIpe3ZhciBjPUs7S3w9MTt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtLPWMsMD09PUsmJihUaT1EKCkrNTAwLCRmJiZkZygpKX19ZnVuY3Rpb24gSGsoYSl7bnVsbCE9PWxrJiYwPT09bGsudGFnJiYwPT09KEsmNikmJnhrKCk7dmFyIGI9SztLfD0xO3ZhciBjPWVrLnRyYW5zaXRpb24sZD1FO3RyeXtpZihlay50cmFuc2l0aW9uPW51bGwsRT0xLGEpcmV0dXJuIGEoKX1maW5hbGx5e0U9ZCxlay50cmFuc2l0aW9uPWMsSz1iLDA9PT0oSyY2KSYmZGcoKX19ZnVuY3Rpb24gVWkoKXtWaT1lai5jdXJyZW50O0coZWopfVxuZnVuY3Rpb24gQWsoYSxiKXthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRMYW5lcz0wO3ZhciBjPWEudGltZW91dEhhbmRsZTstMSE9PWMmJihhLnRpbWVvdXRIYW5kbGU9LTEsQWYoYykpO2lmKG51bGwhPT1ZKWZvcihjPVkucmV0dXJuO251bGwhPT1jOyl7dmFyIGQ9YztXZyhkKTtzd2l0Y2goZC50YWcpe2Nhc2UgMTpkPWQudHlwZS5jaGlsZENvbnRleHRUeXBlcztudWxsIT09ZCYmdm9pZCAwIT09ZCYmVWYoKTticmVhaztjYXNlIDM6emgoKTtHKFFmKTtHKEkpO0VoKCk7YnJlYWs7Y2FzZSA1OkJoKGQpO2JyZWFrO2Nhc2UgNDp6aCgpO2JyZWFrO2Nhc2UgMTM6RyhQKTticmVhaztjYXNlIDE5OkcoUCk7YnJlYWs7Y2FzZSAxMDpsZyhkLnR5cGUuX2NvbnRleHQpO2JyZWFrO2Nhc2UgMjI6Y2FzZSAyMzpVaSgpfWM9Yy5yZXR1cm59Sj1hO1k9YT1taChhLmN1cnJlbnQsbnVsbCk7Wj1WaT1iO1c9MDtmaz1udWxsO2hrPWdrPXpnPTA7ams9aWs9bnVsbDtpZihudWxsIT09cWcpe2ZvcihiPVxuMDtiPHFnLmxlbmd0aDtiKyspaWYoYz1xZ1tiXSxkPWMuaW50ZXJsZWF2ZWQsbnVsbCE9PWQpe2MuaW50ZXJsZWF2ZWQ9bnVsbDt2YXIgZT1kLm5leHQsZj1jLnBlbmRpbmc7aWYobnVsbCE9PWYpe3ZhciBnPWYubmV4dDtmLm5leHQ9ZTtkLm5leHQ9Z31jLnBlbmRpbmc9ZH1xZz1udWxsfXJldHVybiBhfVxuZnVuY3Rpb24gQ2soYSxiKXtkb3t2YXIgYz1ZO3RyeXtrZygpO0ZoLmN1cnJlbnQ9Umg7aWYoSWgpe2Zvcih2YXIgZD1RLm1lbW9pemVkU3RhdGU7bnVsbCE9PWQ7KXt2YXIgZT1kLnF1ZXVlO251bGwhPT1lJiYoZS5wZW5kaW5nPW51bGwpO2Q9ZC5uZXh0fUloPSExfUhoPTA7Uz1SPVE9bnVsbDtKaD0hMTtLaD0wO2RrLmN1cnJlbnQ9bnVsbDtpZihudWxsPT09Y3x8bnVsbD09PWMucmV0dXJuKXtXPTE7Zms9YjtZPW51bGw7YnJlYWt9YTp7dmFyIGY9YSxnPWMucmV0dXJuLGg9YyxrPWI7Yj1aO2guZmxhZ3N8PTMyNzY4O2lmKG51bGwhPT1rJiZcIm9iamVjdFwiPT09dHlwZW9mIGsmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBrLnRoZW4pe3ZhciBsPWssbT1oLHc9bS50YWc7aWYoMD09PShtLm1vZGUmMSkmJigwPT09d3x8MTE9PT13fHwxNT09PXcpKXt2YXIgdT1tLmFsdGVybmF0ZTt1PyhtLnVwZGF0ZVF1ZXVlPXUudXBkYXRlUXVldWUsbS5tZW1vaXplZFN0YXRlPXUubWVtb2l6ZWRTdGF0ZSxcbm0ubGFuZXM9dS5sYW5lcyk6KG0udXBkYXRlUXVldWU9bnVsbCxtLm1lbW9pemVkU3RhdGU9bnVsbCl9dmFyIHk9SmkoZyk7aWYobnVsbCE9PXkpe3kuZmxhZ3MmPS0yNTc7S2koeSxnLGgsZixiKTt5Lm1vZGUmMSYmSGkoZixsLGIpO2I9eTtrPWw7dmFyIG49Yi51cGRhdGVRdWV1ZTtpZihudWxsPT09bil7dmFyIHY9bmV3IFNldDt2LmFkZChrKTtiLnVwZGF0ZVF1ZXVlPXZ9ZWxzZSBuLmFkZChrKTticmVhayBhfWVsc2V7aWYoMD09PShiJjEpKXtIaShmLGwsYik7U2koKTticmVhayBhfWs9RXJyb3IocCg0MjYpKX19ZWxzZSBpZihOJiZoLm1vZGUmMSl7dmFyIEM9SmkoZyk7aWYobnVsbCE9PUMpezA9PT0oQy5mbGFncyY2NTUzNikmJihDLmZsYWdzfD0yNTYpO0tpKEMsZyxoLGYsYik7aGgoayk7YnJlYWsgYX19Zj1rOzQhPT1XJiYoVz0yKTtudWxsPT09aWs/aWs9W2ZdOmlrLnB1c2goZik7az16aShrLGgpO2g9Zztkb3tzd2l0Y2goaC50YWcpe2Nhc2UgMzpoLmZsYWdzfD02NTUzNjtcbmImPS1iO2gubGFuZXN8PWI7dmFyIHQ9Q2koaCxrLGIpO3hnKGgsdCk7YnJlYWsgYTtjYXNlIDE6Zj1rO3ZhciByPWgudHlwZSx4PWguc3RhdGVOb2RlO2lmKDA9PT0oaC5mbGFncyYxMjgpJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHIuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxudWxsIT09eCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHguY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09R2l8fCFHaS5oYXMoeCkpKSl7aC5mbGFnc3w9NjU1MzY7YiY9LWI7aC5sYW5lc3w9Yjt2YXIgQj1GaShoLGYsYik7eGcoaCxCKTticmVhayBhfX1oPWgucmV0dXJufXdoaWxlKG51bGwhPT1oKX1JayhjKX1jYXRjaChPKXtiPU87WT09PWMmJm51bGwhPT1jJiYoWT1jPWMucmV0dXJuKTtjb250aW51ZX1icmVha313aGlsZSgxKX1mdW5jdGlvbiB6aygpe3ZhciBhPWNrLmN1cnJlbnQ7Y2suY3VycmVudD1SaDtyZXR1cm4gbnVsbD09PWE/Umg6YX1cbmZ1bmN0aW9uIFNpKCl7aWYoMD09PVd8fDM9PT1XfHwyPT09VylXPTQ7bnVsbD09PUp8fDA9PT0oemcmMjY4NDM1NDU1KSYmMD09PShnayYyNjg0MzU0NTUpfHxzayhKLFopfWZ1bmN0aW9uIHlrKGEsYil7dmFyIGM9SztLfD0yO3ZhciBkPXprKCk7Sj09PWEmJlo9PT1ifHxBayhhLGIpO2RvIHRyeXtKaygpO2JyZWFrfWNhdGNoKGUpe0NrKGEsZSl9d2hpbGUoMSk7a2coKTtLPWM7Y2suY3VycmVudD1kO2lmKG51bGwhPT1ZKXRocm93IEVycm9yKHAoMjYxKSk7Sj1udWxsO1o9MDtyZXR1cm4gV31mdW5jdGlvbiBKaygpe2Zvcig7bnVsbCE9PVk7KUtrKFkpfWZ1bmN0aW9uIEJrKCl7Zm9yKDtudWxsIT09WSYmISRiKCk7KUtrKFkpfWZ1bmN0aW9uIEtrKGEpe3ZhciBiPUxrKGEuYWx0ZXJuYXRlLGEsVmkpO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09Yj9JayhhKTpZPWI7ZGsuY3VycmVudD1udWxsfVxuZnVuY3Rpb24gSWsoYSl7dmFyIGI9YTtkb3t2YXIgYz1iLmFsdGVybmF0ZTthPWIucmV0dXJuO2lmKDA9PT0oYi5mbGFncyYzMjc2OCkpe2lmKGM9UWkoYyxiLFZpKSxudWxsIT09Yyl7WT1jO3JldHVybn19ZWxzZXtjPXhqKGMsYik7aWYobnVsbCE9PWMpe2MuZmxhZ3MmPTMyNzY3O1k9YztyZXR1cm59aWYobnVsbCE9PWEpYS5mbGFnc3w9MzI3NjgsYS5zdWJ0cmVlRmxhZ3M9MCxhLmRlbGV0aW9ucz1udWxsO2Vsc2V7Vz02O1k9bnVsbDtyZXR1cm59fWI9Yi5zaWJsaW5nO2lmKG51bGwhPT1iKXtZPWI7cmV0dXJufVk9Yj1hfXdoaWxlKG51bGwhPT1iKTswPT09VyYmKFc9NSl9ZnVuY3Rpb24gRmsoYSxiKXt2YXIgYz1FLGQ9ZWsudHJhbnNpdGlvbjt0cnl7ZWsudHJhbnNpdGlvbj1udWxsLEU9MSxNayhhLGIsYyl9ZmluYWxseXtlay50cmFuc2l0aW9uPWQsRT1jfXJldHVybiBudWxsfVxuZnVuY3Rpb24gTWsoYSxiLGMpe2RvIHhrKCk7d2hpbGUobnVsbCE9PWxrKTtpZigwIT09KEsmNikpdGhyb3cgRXJyb3IocCgzMjcpKTt2YXIgZD1hLmZpbmlzaGVkV29yayxlPWEuZmluaXNoZWRMYW5lcztpZihudWxsPT09ZClyZXR1cm4gbnVsbDthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRMYW5lcz0wO2lmKGQ9PT1hLmN1cnJlbnQpdGhyb3cgRXJyb3IocCgxNzcpKTthLmNhbGxiYWNrTm9kZT1udWxsO2EuY2FsbGJhY2tQcmlvcml0eT0wO3ZhciBmPWQubGFuZXN8ZC5jaGlsZExhbmVzO3hjKGEsZik7YT09PUomJihZPUo9bnVsbCxaPTApOzA9PT0oZC5zdWJ0cmVlRmxhZ3MmMjA2NCkmJjA9PT0oZC5mbGFncyYyMDY0KXx8a2t8fChraz0hMCx2ayhlYyxmdW5jdGlvbigpe3hrKCk7cmV0dXJuIG51bGx9KSk7Zj0wIT09KGQuZmxhZ3MmMTU5OTApO2lmKDAhPT0oZC5zdWJ0cmVlRmxhZ3MmMTU5OTApfHxmKXtmPWVrLnRyYW5zaXRpb247ZWsudHJhbnNpdGlvbj1udWxsO3ZhciBnPVxuRTtFPTE7dmFyIGg9SztLfD00O2RrLmN1cnJlbnQ9bnVsbDtGaihhLGQpO1VqKGEsZCxlKTtKZSh4Zik7eGY9bnVsbDthLmN1cnJlbnQ9ZDtYaihkLGEsZSk7YWMoKTtLPWg7RT1nO2VrLnRyYW5zaXRpb249Zn1lbHNlIGEuY3VycmVudD1kO2trJiYoa2s9ITEsbGs9YSxtaz1lKTtmPWEucGVuZGluZ0xhbmVzOzA9PT1mJiYoR2k9bnVsbCk7amMoZC5zdGF0ZU5vZGUsYyk7dGsoYSxEKCkpO2lmKG51bGwhPT1iKWZvcihjPWEub25SZWNvdmVyYWJsZUVycm9yLGQ9MDtkPGIubGVuZ3RoO2QrKyljKGJbZF0pO2lmKERpKXRocm93IERpPSExLGE9RWksRWk9bnVsbCxhOzAhPT0obWsmMSkmJjAhPT1hLnRhZyYmeGsoKTtmPWEucGVuZGluZ0xhbmVzOzAhPT0oZiYxKT9hPT09b2s/bmsrKzoobms9MCxvaz1hKTpuaz0wO2RnKCk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiB4aygpe2lmKG51bGwhPT1sayl7dmFyIGE9emMobWspLGI9ZWsudHJhbnNpdGlvbixjPUU7dHJ5e2VrLnRyYW5zaXRpb249bnVsbDtFPTE2PmE/MTY6YTtpZihudWxsPT09bGspdmFyIGQ9ITE7ZWxzZXthPWxrO2xrPW51bGw7bWs9MDtpZigwIT09KEsmNikpdGhyb3cgRXJyb3IocCgzMzEpKTt2YXIgZT1LO0t8PTQ7Zm9yKFg9YS5jdXJyZW50O251bGwhPT1YOyl7dmFyIGY9WCxnPWYuY2hpbGQ7aWYoMCE9PShYLmZsYWdzJjE2KSl7dmFyIGg9Zi5kZWxldGlvbnM7aWYobnVsbCE9PWgpe2Zvcih2YXIgaz0wO2s8aC5sZW5ndGg7aysrKXt2YXIgbD1oW2tdO2ZvcihYPWw7bnVsbCE9PVg7KXt2YXIgbT1YO3N3aXRjaChtLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpHaig4LG0sZil9dmFyIHc9bS5jaGlsZDtpZihudWxsIT09dyl3LnJldHVybj1tLFg9dztlbHNlIGZvcig7bnVsbCE9PVg7KXttPVg7dmFyIHU9bS5zaWJsaW5nLHk9bS5yZXR1cm47TGoobSk7aWYobT09PVxubCl7WD1udWxsO2JyZWFrfWlmKG51bGwhPT11KXt1LnJldHVybj15O1g9dTticmVha31YPXl9fX12YXIgbj1mLmFsdGVybmF0ZTtpZihudWxsIT09bil7dmFyIHY9bi5jaGlsZDtpZihudWxsIT09dil7bi5jaGlsZD1udWxsO2Rve3ZhciBDPXYuc2libGluZzt2LnNpYmxpbmc9bnVsbDt2PUN9d2hpbGUobnVsbCE9PXYpfX1YPWZ9fWlmKDAhPT0oZi5zdWJ0cmVlRmxhZ3MmMjA2NCkmJm51bGwhPT1nKWcucmV0dXJuPWYsWD1nO2Vsc2UgYjpmb3IoO251bGwhPT1YOyl7Zj1YO2lmKDAhPT0oZi5mbGFncyYyMDQ4KSlzd2l0Y2goZi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6R2ooOSxmLGYucmV0dXJuKX12YXIgdD1mLnNpYmxpbmc7aWYobnVsbCE9PXQpe3QucmV0dXJuPWYucmV0dXJuO1g9dDticmVhayBifVg9Zi5yZXR1cm59fXZhciByPWEuY3VycmVudDtmb3IoWD1yO251bGwhPT1YOyl7Zz1YO3ZhciB4PWcuY2hpbGQ7aWYoMCE9PShnLnN1YnRyZWVGbGFncyYyMDY0KSYmbnVsbCE9PVxueCl4LnJldHVybj1nLFg9eDtlbHNlIGI6Zm9yKGc9cjtudWxsIT09WDspe2g9WDtpZigwIT09KGguZmxhZ3MmMjA0OCkpdHJ5e3N3aXRjaChoLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpIaig5LGgpfX1jYXRjaChPKXtDaihoLGgucmV0dXJuLE8pfWlmKGg9PT1nKXtYPW51bGw7YnJlYWsgYn12YXIgQj1oLnNpYmxpbmc7aWYobnVsbCE9PUIpe0IucmV0dXJuPWgucmV0dXJuO1g9QjticmVhayBifVg9aC5yZXR1cm59fUs9ZTtkZygpO2lmKGljJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgaWMub25Qb3N0Q29tbWl0RmliZXJSb290KXRyeXtpYy5vblBvc3RDb21taXRGaWJlclJvb3QoaGMsYSl9Y2F0Y2goTyl7fWQ9ITB9cmV0dXJuIGR9ZmluYWxseXtFPWMsZWsudHJhbnNpdGlvbj1ifX1yZXR1cm4hMX1mdW5jdGlvbiBOayhhLGIsYyl7Yj16aShjLGIpO2I9Q2koYSxiLDEpO3ZnKGEsYik7Yj1NKCk7YT1yayhhLDEpO251bGwhPT1hJiYod2MoYSwxLGIpLHRrKGEsYikpfVxuZnVuY3Rpb24gQ2ooYSxiLGMpe2lmKDM9PT1hLnRhZylOayhhLGEsYyk7ZWxzZSBmb3IoO251bGwhPT1iOyl7aWYoMz09PWIudGFnKXtOayhiLGEsYyk7YnJlYWt9ZWxzZSBpZigxPT09Yi50YWcpe3ZhciBkPWIuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1HaXx8IUdpLmhhcyhkKSkpe2E9emkoYyxhKTthPUZpKGIsYSwxKTt2ZyhiLGEpO2E9TSgpO2I9cmsoYiwxKTtudWxsIT09YiYmKHdjKGIsMSxhKSx0ayhiLGEpKTticmVha319Yj1iLnJldHVybn19XG5mdW5jdGlvbiBJaShhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7bnVsbCE9PWQmJmQuZGVsZXRlKGIpO2I9TSgpO2EucGluZ2VkTGFuZXN8PWEuc3VzcGVuZGVkTGFuZXMmYztKPT09YSYmKFomYyk9PT1jJiYoND09PVd8fDM9PT1XJiYoWiYxMzAwMjM0MjQpPT09WiYmNTAwPkQoKS1Waj9BayhhLDApOmhrfD1jKTt0ayhhLGIpfWZ1bmN0aW9uIE9rKGEsYil7MD09PWImJigwPT09KGEubW9kZSYxKT9iPTE6KGI9cGMscGM8PD0xLDA9PT0ocGMmMTMwMDIzNDI0KSYmKHBjPTQxOTQzMDQpKSk7dmFyIGM9TSgpO2E9cmsoYSxiKTtudWxsIT09YSYmKHdjKGEsYixjKSx0ayhhLGMpKX1mdW5jdGlvbiBxaihhKXt2YXIgYj1hLm1lbW9pemVkU3RhdGUsYz0wO251bGwhPT1iJiYoYz1iLnJldHJ5TGFuZSk7T2soYSxjKX1cbmZ1bmN0aW9uIFRqKGEsYil7dmFyIGM9MDtzd2l0Y2goYS50YWcpe2Nhc2UgMTM6dmFyIGQ9YS5zdGF0ZU5vZGU7dmFyIGU9YS5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYoYz1lLnJldHJ5TGFuZSk7YnJlYWs7Y2FzZSAxOTpkPWEuc3RhdGVOb2RlO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IocCgzMTQpKTt9bnVsbCE9PWQmJmQuZGVsZXRlKGIpO09rKGEsYyl9dmFyIExrO1xuTGs9ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGwhPT1hKWlmKGEubWVtb2l6ZWRQcm9wcyE9PWIucGVuZGluZ1Byb3BzfHxRZi5jdXJyZW50KW9nPSEwO2Vsc2V7aWYoMD09PShhLmxhbmVzJmMpJiYwPT09KGIuZmxhZ3MmMTI4KSlyZXR1cm4gb2c9ITEsd2ooYSxiLGMpO29nPTAhPT0oYS5mbGFncyYxMzEwNzIpPyEwOiExfWVsc2Ugb2c9ITEsTiYmMCE9PShiLmZsYWdzJjEwNDg1NzYpJiZVZyhiLE5nLGIuaW5kZXgpO2IubGFuZXM9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjp2YXIgZD1iLnR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9Mik7YT1iLnBlbmRpbmdQcm9wczt2YXIgZT1TZihiLEkuY3VycmVudCk7bmcoYixjKTtlPU5oKG51bGwsYixkLGEsZSxjKTt2YXIgZj1TaCgpO2IuZmxhZ3N8PTE7XCJvYmplY3RcIj09PXR5cGVvZiBlJiZudWxsIT09ZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGUucmVuZGVyJiZ2b2lkIDA9PT1lLiQkdHlwZW9mP1xuKGIudGFnPTEsYi5tZW1vaXplZFN0YXRlPW51bGwsYi51cGRhdGVRdWV1ZT1udWxsLFRmKGQpPyhmPSEwLFhmKGIpKTpmPSExLGIubWVtb2l6ZWRTdGF0ZT1udWxsIT09ZS5zdGF0ZSYmdm9pZCAwIT09ZS5zdGF0ZT9lLnN0YXRlOm51bGwsc2coYiksZS51cGRhdGVyPUZnLGIuc3RhdGVOb2RlPWUsZS5fcmVhY3RJbnRlcm5hbHM9YixKZyhiLGQsYSxjKSxiPWhqKG51bGwsYixkLCEwLGYsYykpOihiLnRhZz0wLE4mJmYmJlZnKGIpLFhpKG51bGwsYixlLGMpLGI9Yi5jaGlsZCk7cmV0dXJuIGI7Y2FzZSAxNjpkPWIuZWxlbWVudFR5cGU7YTp7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9Mik7YT1iLnBlbmRpbmdQcm9wcztlPWQuX2luaXQ7ZD1lKGQuX3BheWxvYWQpO2IudHlwZT1kO2U9Yi50YWc9UGsoZCk7YT1mZyhkLGEpO3N3aXRjaChlKXtjYXNlIDA6Yj1jaihudWxsLGIsZCxhLGMpO2JyZWFrIGE7Y2FzZSAxOmI9Z2oobnVsbCxiLFxuZCxhLGMpO2JyZWFrIGE7Y2FzZSAxMTpiPVlpKG51bGwsYixkLGEsYyk7YnJlYWsgYTtjYXNlIDE0OmI9JGkobnVsbCxiLGQsZmcoZC50eXBlLGEpLGMpO2JyZWFrIGF9dGhyb3cgRXJyb3IocCgzMDYsZCxcIlwiKSk7fXJldHVybiBiO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6ZmcoZCxlKSxjaihhLGIsZCxlLGMpO2Nhc2UgMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6ZmcoZCxlKSxnaihhLGIsZCxlLGMpO2Nhc2UgMzphOntpaihiKTtpZihudWxsPT09YSl0aHJvdyBFcnJvcihwKDM4NykpO2Q9Yi5wZW5kaW5nUHJvcHM7Zj1iLm1lbW9pemVkU3RhdGU7ZT1mLmVsZW1lbnQ7dGcoYSxiKTt5ZyhiLGQsbnVsbCxjKTt2YXIgZz1iLm1lbW9pemVkU3RhdGU7ZD1nLmVsZW1lbnQ7aWYoZi5pc0RlaHlkcmF0ZWQpaWYoZj17ZWxlbWVudDpkLGlzRGVoeWRyYXRlZDohMSxcbmNhY2hlOmcuY2FjaGUsdHJhbnNpdGlvbnM6Zy50cmFuc2l0aW9uc30sYi51cGRhdGVRdWV1ZS5iYXNlU3RhdGU9ZixiLm1lbW9pemVkU3RhdGU9ZixiLmZsYWdzJjI1Nil7ZT1FcnJvcihwKDQyMykpO2I9amooYSxiLGQsYyxlKTticmVhayBhfWVsc2UgaWYoZCE9PWUpe2U9RXJyb3IocCg0MjQpKTtiPWpqKGEsYixkLGMsZSk7YnJlYWsgYX1lbHNlIGZvcihZZz1GZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLmZpcnN0Q2hpbGQpLFhnPWIsTj0hMCxaZz1udWxsLGM9c2goYixudWxsLGQsYyksYi5jaGlsZD1jO2M7KWMuZmxhZ3M9Yy5mbGFncyYtM3w0MDk2LGM9Yy5zaWJsaW5nO2Vsc2V7Z2goKTtpZihkPT09ZSl7Yj1aaShhLGIsYyk7YnJlYWsgYX1YaShhLGIsZCxjKX1iPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBBaChiKSxudWxsPT09YSYmZGgoYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpudWxsLGc9ZS5jaGlsZHJlbixcbnlmKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZ5ZihkLGYpJiYoYi5mbGFnc3w9MzIpLGZqKGEsYiksWGkoYSxiLGcsYyksYi5jaGlsZDtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZkaChiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIG1qKGEsYixjKTtjYXNlIDQ6cmV0dXJuIHloKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPXJoKGIsbnVsbCxkLGMpOlhpKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6ZmcoZCxlKSxZaShhLGIsZCxlLGMpO2Nhc2UgNzpyZXR1cm4gWGkoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBYaShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBYaShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEwOmE6e2Q9XG5iLnR5cGUuX2NvbnRleHQ7ZT1iLnBlbmRpbmdQcm9wcztmPWIubWVtb2l6ZWRQcm9wcztnPWUudmFsdWU7SChnZyxkLl9jdXJyZW50VmFsdWUpO2QuX2N1cnJlbnRWYWx1ZT1nO2lmKG51bGwhPT1mKWlmKENlKGYudmFsdWUsZykpe2lmKGYuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhUWYuY3VycmVudCl7Yj1aaShhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoZj1iLmNoaWxkLG51bGwhPT1mJiYoZi5yZXR1cm49Yik7bnVsbCE9PWY7KXt2YXIgaD1mLmRlcGVuZGVuY2llcztpZihudWxsIT09aCl7Zz1mLmNoaWxkO2Zvcih2YXIgaz1oLmZpcnN0Q29udGV4dDtudWxsIT09azspe2lmKGsuY29udGV4dD09PWQpe2lmKDE9PT1mLnRhZyl7az11ZygtMSxjJi1jKTtrLnRhZz0yO3ZhciBsPWYudXBkYXRlUXVldWU7aWYobnVsbCE9PWwpe2w9bC5zaGFyZWQ7dmFyIG09bC5wZW5kaW5nO251bGw9PT1tP2submV4dD1rOihrLm5leHQ9bS5uZXh0LG0ubmV4dD1rKTtsLnBlbmRpbmc9a319Zi5sYW5lc3w9XG5jO2s9Zi5hbHRlcm5hdGU7bnVsbCE9PWsmJihrLmxhbmVzfD1jKTttZyhmLnJldHVybixjLGIpO2gubGFuZXN8PWM7YnJlYWt9az1rLm5leHR9fWVsc2UgaWYoMTA9PT1mLnRhZylnPWYudHlwZT09PWIudHlwZT9udWxsOmYuY2hpbGQ7ZWxzZSBpZigxOD09PWYudGFnKXtnPWYucmV0dXJuO2lmKG51bGw9PT1nKXRocm93IEVycm9yKHAoMzQxKSk7Zy5sYW5lc3w9YztoPWcuYWx0ZXJuYXRlO251bGwhPT1oJiYoaC5sYW5lc3w9Yyk7bWcoZyxjLGIpO2c9Zi5zaWJsaW5nfWVsc2UgZz1mLmNoaWxkO2lmKG51bGwhPT1nKWcucmV0dXJuPWY7ZWxzZSBmb3IoZz1mO251bGwhPT1nOyl7aWYoZz09PWIpe2c9bnVsbDticmVha31mPWcuc2libGluZztpZihudWxsIT09Zil7Zi5yZXR1cm49Zy5yZXR1cm47Zz1mO2JyZWFrfWc9Zy5yZXR1cm59Zj1nfVhpKGEsYixlLmNoaWxkcmVuLGMpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDk6cmV0dXJuIGU9Yi50eXBlLGQ9Yi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sXG5uZyhiLGMpLGU9cGcoZSksZD1kKGUpLGIuZmxhZ3N8PTEsWGkoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDE0OnJldHVybiBkPWIudHlwZSxlPWZnKGQsYi5wZW5kaW5nUHJvcHMpLGU9ZmcoZC50eXBlLGUpLCRpKGEsYixkLGUsYyk7Y2FzZSAxNTpyZXR1cm4gYmooYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpmZyhkLGUpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpLGIudGFnPTEsVGYoZCk/KGE9ITAsWGYoYikpOmE9ITEsbmcoYixjKSxIZyhiLGQsZSksSmcoYixkLGUsYyksaGoobnVsbCxiLGQsITAsYSxjKTtjYXNlIDE5OnJldHVybiB2aihhLGIsYyk7Y2FzZSAyMjpyZXR1cm4gZGooYSxiLGMpfXRocm93IEVycm9yKHAoMTU2LGIudGFnKSk7fTtmdW5jdGlvbiB2ayhhLGIpe3JldHVybiBZYihhLGIpfVxuZnVuY3Rpb24gUWsoYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmRlcGVuZGVuY2llcz10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLnN1YnRyZWVGbGFncz10aGlzLmZsYWdzPTA7dGhpcy5kZWxldGlvbnM9bnVsbDt0aGlzLmNoaWxkTGFuZXM9dGhpcy5sYW5lcz0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gYWgoYSxiLGMsZCl7cmV0dXJuIG5ldyBRayhhLGIsYyxkKX1mdW5jdGlvbiBhaihhKXthPWEucHJvdG90eXBlO3JldHVybiEoIWF8fCFhLmlzUmVhY3RDb21wb25lbnQpfVxuZnVuY3Rpb24gUGsoYSl7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGFqKGEpPzE6MDtpZih2b2lkIDAhPT1hJiZudWxsIT09YSl7YT1hLiQkdHlwZW9mO2lmKGE9PT1CYSlyZXR1cm4gMTE7aWYoYT09PUVhKXJldHVybiAxNH1yZXR1cm4gMn1cbmZ1bmN0aW9uIG1oKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbD09PWM/KGM9YWgoYS50YWcsYixhLmtleSxhLm1vZGUpLGMuZWxlbWVudFR5cGU9YS5lbGVtZW50VHlwZSxjLnR5cGU9YS50eXBlLGMuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGMuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9Yyk6KGMucGVuZGluZ1Byb3BzPWIsYy50eXBlPWEudHlwZSxjLmZsYWdzPTAsYy5zdWJ0cmVlRmxhZ3M9MCxjLmRlbGV0aW9ucz1udWxsKTtjLmZsYWdzPWEuZmxhZ3MmMTQ2ODAwNjQ7Yy5jaGlsZExhbmVzPWEuY2hpbGRMYW5lcztjLmxhbmVzPWEubGFuZXM7Yy5jaGlsZD1hLmNoaWxkO2MubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7Yy5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtjLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7Yj1hLmRlcGVuZGVuY2llcztjLmRlcGVuZGVuY2llcz1udWxsPT09Yj9udWxsOntsYW5lczpiLmxhbmVzLGZpcnN0Q29udGV4dDpiLmZpcnN0Q29udGV4dH07XG5jLnNpYmxpbmc9YS5zaWJsaW5nO2MuaW5kZXg9YS5pbmRleDtjLnJlZj1hLnJlZjtyZXR1cm4gY31cbmZ1bmN0aW9uIG9oKGEsYixjLGQsZSxmKXt2YXIgZz0yO2Q9YTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlhaihhKSYmKGc9MSk7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpZz01O2Vsc2UgYTpzd2l0Y2goYSl7Y2FzZSB2YTpyZXR1cm4gcWgoYy5jaGlsZHJlbixlLGYsYik7Y2FzZSB3YTpnPTg7ZXw9ODticmVhaztjYXNlIHhhOnJldHVybiBhPWFoKDEyLGMsYixlfDIpLGEuZWxlbWVudFR5cGU9eGEsYS5sYW5lcz1mLGE7Y2FzZSBDYTpyZXR1cm4gYT1haCgxMyxjLGIsZSksYS5lbGVtZW50VHlwZT1DYSxhLmxhbmVzPWYsYTtjYXNlIERhOnJldHVybiBhPWFoKDE5LGMsYixlKSxhLmVsZW1lbnRUeXBlPURhLGEubGFuZXM9ZixhO2Nhc2UgR2E6cmV0dXJuIG5qKGMsZSxmLGIpO2RlZmF1bHQ6aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSB5YTpnPTEwO2JyZWFrIGE7Y2FzZSBBYTpnPTk7YnJlYWsgYTtjYXNlIEJhOmc9MTE7XG5icmVhayBhO2Nhc2UgRWE6Zz0xNDticmVhayBhO2Nhc2UgRmE6Zz0xNjtkPW51bGw7YnJlYWsgYX10aHJvdyBFcnJvcihwKDEzMCxudWxsPT1hP2E6dHlwZW9mIGEsXCJcIikpO31iPWFoKGcsYyxiLGUpO2IuZWxlbWVudFR5cGU9YTtiLnR5cGU9ZDtiLmxhbmVzPWY7cmV0dXJuIGJ9ZnVuY3Rpb24gcWgoYSxiLGMsZCl7YT1haCg3LGEsZCxiKTthLmxhbmVzPWM7cmV0dXJuIGF9ZnVuY3Rpb24gbmooYSxiLGMsZCl7YT1haCgyMixhLGQsYik7YS5lbGVtZW50VHlwZT1HYTthLmxhbmVzPWM7YS5zdGF0ZU5vZGU9e307cmV0dXJuIGF9ZnVuY3Rpb24gbmgoYSxiLGMpe2E9YWgoNixhLG51bGwsYik7YS5sYW5lcz1jO3JldHVybiBhfVxuZnVuY3Rpb24gcGgoYSxiLGMpe2I9YWgoNCxudWxsIT09YS5jaGlsZHJlbj9hLmNoaWxkcmVuOltdLGEua2V5LGIpO2IubGFuZXM9YztiLnN0YXRlTm9kZT17Y29udGFpbmVySW5mbzphLmNvbnRhaW5lckluZm8scGVuZGluZ0NoaWxkcmVuOm51bGwsaW1wbGVtZW50YXRpb246YS5pbXBsZW1lbnRhdGlvbn07cmV0dXJuIGJ9XG5mdW5jdGlvbiBSayhhLGIsYyxkLGUpe3RoaXMudGFnPWI7dGhpcy5jb250YWluZXJJbmZvPWE7dGhpcy5maW5pc2hlZFdvcms9dGhpcy5waW5nQ2FjaGU9dGhpcy5jdXJyZW50PXRoaXMucGVuZGluZ0NoaWxkcmVuPW51bGw7dGhpcy50aW1lb3V0SGFuZGxlPS0xO3RoaXMuY2FsbGJhY2tOb2RlPXRoaXMucGVuZGluZ0NvbnRleHQ9dGhpcy5jb250ZXh0PW51bGw7dGhpcy5jYWxsYmFja1ByaW9yaXR5PTA7dGhpcy5ldmVudFRpbWVzPXZjKDApO3RoaXMuZXhwaXJhdGlvblRpbWVzPXZjKC0xKTt0aGlzLmVudGFuZ2xlZExhbmVzPXRoaXMuZmluaXNoZWRMYW5lcz10aGlzLm11dGFibGVSZWFkTGFuZXM9dGhpcy5leHBpcmVkTGFuZXM9dGhpcy5waW5nZWRMYW5lcz10aGlzLnN1c3BlbmRlZExhbmVzPXRoaXMucGVuZGluZ0xhbmVzPTA7dGhpcy5lbnRhbmdsZW1lbnRzPXZjKDApO3RoaXMuaWRlbnRpZmllclByZWZpeD1kO3RoaXMub25SZWNvdmVyYWJsZUVycm9yPWU7dGhpcy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhPVxubnVsbH1mdW5jdGlvbiBTayhhLGIsYyxkLGUsZixnLGgsayl7YT1uZXcgUmsoYSxiLGMsaCxrKTsxPT09Yj8oYj0xLCEwPT09ZiYmKGJ8PTgpKTpiPTA7Zj1haCgzLG51bGwsbnVsbCxiKTthLmN1cnJlbnQ9ZjtmLnN0YXRlTm9kZT1hO2YubWVtb2l6ZWRTdGF0ZT17ZWxlbWVudDpkLGlzRGVoeWRyYXRlZDpjLGNhY2hlOm51bGwsdHJhbnNpdGlvbnM6bnVsbH07c2coZik7cmV0dXJuIGF9ZnVuY3Rpb24gVGsoYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjp1YSxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1cbmZ1bmN0aW9uIFVrKGEpe2lmKCFhKXJldHVybiBQZjthPWEuX3JlYWN0SW50ZXJuYWxzO2E6e2lmKFNiKGEpIT09YXx8MSE9PWEudGFnKXRocm93IEVycm9yKHAoMTcwKSk7dmFyIGI9YTtkb3tzd2l0Y2goYi50YWcpe2Nhc2UgMzpiPWIuc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYTtjYXNlIDE6aWYoVGYoYi50eXBlKSl7Yj1iLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDticmVhayBhfX1iPWIucmV0dXJufXdoaWxlKG51bGwhPT1iKTt0aHJvdyBFcnJvcihwKDE3MSkpO31pZigxPT09YS50YWcpe3ZhciBjPWEudHlwZTtpZihUZihjKSlyZXR1cm4gV2YoYSxjLGIpfXJldHVybiBifVxuZnVuY3Rpb24gVmsoYSxiLGMsZCxlLGYsZyxoLGspe2E9U2soYyxkLCEwLGEsZSxmLGcsaCxrKTthLmNvbnRleHQ9VWsobnVsbCk7Yz1hLmN1cnJlbnQ7ZD1NKCk7ZT1EZyhjKTtmPXVnKGQsZSk7Zi5jYWxsYmFjaz12b2lkIDAhPT1iJiZudWxsIT09Yj9iOm51bGw7dmcoYyxmKTthLmN1cnJlbnQubGFuZXM9ZTt3YyhhLGUsZCk7dGsoYSxkKTtyZXR1cm4gYX1mdW5jdGlvbiBXayhhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1NKCksZz1EZyhlKTtjPVVrKGMpO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9dWcoZixnKTtiLnBheWxvYWQ9e2VsZW1lbnQ6YX07ZD12b2lkIDA9PT1kP251bGw6ZDtudWxsIT09ZCYmKGIuY2FsbGJhY2s9ZCk7dmcoZSxiKTthPUVnKGUsZyxmKTtudWxsIT09YSYmd2coYSxlLGcpO3JldHVybiBnfVxuZnVuY3Rpb24gWGsoYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1mdW5jdGlvbiBZayhhLGIpe2E9YS5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1hJiZudWxsIT09YS5kZWh5ZHJhdGVkKXt2YXIgYz1hLnJldHJ5TGFuZTthLnJldHJ5TGFuZT0wIT09YyYmYzxiP2M6Yn19ZnVuY3Rpb24gWmsoYSxiKXtZayhhLGIpOyhhPWEuYWx0ZXJuYXRlKSYmWWsoYSxiKX1mdW5jdGlvbiAkaygpe3JldHVybiBudWxsfXZhciBhbD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgcmVwb3J0RXJyb3I/cmVwb3J0RXJyb3I6ZnVuY3Rpb24oYSl7Y29uc29sZS5lcnJvcihhKX07ZnVuY3Rpb24gYmwoYSl7dGhpcy5faW50ZXJuYWxSb290PWF9XG5jbC5wcm90b3R5cGUucmVuZGVyPWJsLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5faW50ZXJuYWxSb290O2lmKG51bGw9PT1iKXRocm93IEVycm9yKHAoNDA5KSk7V2soYSxiLG51bGwsbnVsbCl9O2NsLnByb3RvdHlwZS51bm1vdW50PWJsLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5faW50ZXJuYWxSb290O2lmKG51bGwhPT1hKXt0aGlzLl9pbnRlcm5hbFJvb3Q9bnVsbDt2YXIgYj1hLmNvbnRhaW5lckluZm87SGsoZnVuY3Rpb24oKXtXayhudWxsLGEsbnVsbCxudWxsKX0pO2JbcGZdPW51bGx9fTtmdW5jdGlvbiBjbChhKXt0aGlzLl9pbnRlcm5hbFJvb3Q9YX1cbmNsLnByb3RvdHlwZS51bnN0YWJsZV9zY2hlZHVsZUh5ZHJhdGlvbj1mdW5jdGlvbihhKXtpZihhKXt2YXIgYj1EYygpO2E9e2Jsb2NrZWRPbjpudWxsLHRhcmdldDphLHByaW9yaXR5OmJ9O2Zvcih2YXIgYz0wO2M8TWMubGVuZ3RoJiYwIT09YiYmYjxNY1tjXS5wcmlvcml0eTtjKyspO01jLnNwbGljZShjLDAsYSk7MD09PWMmJlJjKGEpfX07ZnVuY3Rpb24gZGwoYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUpfWZ1bmN0aW9uIGVsKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1mdW5jdGlvbiBmbCgpe31cbmZ1bmN0aW9uIGdsKGEsYixjLGQsZSl7aWYoZSl7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBmPWQ7ZD1mdW5jdGlvbigpe3ZhciBhPVhrKGcpO2YuY2FsbChhKX19dmFyIGc9VmsoYixkLGEsMCxudWxsLCExLCExLFwiXCIsZmwpO2EuX3JlYWN0Um9vdENvbnRhaW5lcj1nO2FbcGZdPWcuY3VycmVudDtuZig4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YSk7SGsoKTtyZXR1cm4gZ31mb3IoO2U9YS5sYXN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoZSk7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBoPWQ7ZD1mdW5jdGlvbigpe3ZhciBhPVhrKGspO2guY2FsbChhKX19dmFyIGs9U2soYSwwLCExLG51bGwsbnVsbCwhMSwhMSxcIlwiLGZsKTthLl9yZWFjdFJvb3RDb250YWluZXI9azthW3BmXT1rLmN1cnJlbnQ7bmYoOD09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmEpO0hrKGZ1bmN0aW9uKCl7V2soYixrLGMsZCl9KTtyZXR1cm4ga31cbmZ1bmN0aW9uIGhsKGEsYixjLGQsZSl7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe3ZhciBnPWY7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPVhrKGcpO2guY2FsbChhKX19V2soYixnLGEsZSl9ZWxzZSBnPWdsKGMsYixhLGUsZCk7cmV0dXJuIFhrKGcpfUFjPWZ1bmN0aW9uKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAzOnZhciBiPWEuc3RhdGVOb2RlO2lmKGIuY3VycmVudC5tZW1vaXplZFN0YXRlLmlzRGVoeWRyYXRlZCl7dmFyIGM9cWMoYi5wZW5kaW5nTGFuZXMpOzAhPT1jJiYoeWMoYixjfDEpLHRrKGIsRCgpKSwwPT09KEsmNikmJihUaT1EKCkrNTAwLGRnKCkpKX1icmVhaztjYXNlIDEzOnZhciBkPU0oKTtIayhmdW5jdGlvbigpe3JldHVybiBFZyhhLDEsZCl9KTtaayhhLDEpfX07QmM9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9TSgpO0VnKGEsMTM0MjE3NzI4LGIpO1prKGEsMTM0MjE3NzI4KX19O1xuQ2M9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9TSgpLGM9RGcoYSk7RWcoYSxjLGIpO1prKGEsYyl9fTtEYz1mdW5jdGlvbigpe3JldHVybiBFfTtFYz1mdW5jdGlvbihhLGIpe3ZhciBjPUU7dHJ5e3JldHVybiBFPWEsYigpfWZpbmFsbHl7RT1jfX07XG52Yj1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOlphKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1BYihkKTtpZighZSl0aHJvdyBFcnJvcihwKDkwKSk7VWEoZCk7WmEoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmZiKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZjYihhLCEhYy5tdWx0aXBsZSxiLCExKX19O0RiPUdrO0ViPUhrO1xudmFyIGlsPXt1c2luZ0NsaWVudEVudHJ5UG9pbnQ6ITEsRXZlbnRzOlt6YixwZSxBYixCYixDYixHa119LGpsPXtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpTYyxidW5kbGVUeXBlOjAsdmVyc2lvbjpcIjE4LjAuMC1mYzQ2ZGJhNjctMjAyMjAzMjlcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9O1xudmFyIGtsPXtidW5kbGVUeXBlOmpsLmJ1bmRsZVR5cGUsdmVyc2lvbjpqbC52ZXJzaW9uLHJlbmRlcmVyUGFja2FnZU5hbWU6amwucmVuZGVyZXJQYWNrYWdlTmFtZSxyZW5kZXJlckNvbmZpZzpqbC5yZW5kZXJlckNvbmZpZyxvdmVycmlkZUhvb2tTdGF0ZTpudWxsLG92ZXJyaWRlSG9va1N0YXRlRGVsZXRlUGF0aDpudWxsLG92ZXJyaWRlSG9va1N0YXRlUmVuYW1lUGF0aDpudWxsLG92ZXJyaWRlUHJvcHM6bnVsbCxvdmVycmlkZVByb3BzRGVsZXRlUGF0aDpudWxsLG92ZXJyaWRlUHJvcHNSZW5hbWVQYXRoOm51bGwsc2V0RXJyb3JIYW5kbGVyOm51bGwsc2V0U3VzcGVuc2VIYW5kbGVyOm51bGwsc2NoZWR1bGVVcGRhdGU6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjpzYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9V2IoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOmpsLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlfHxcbiRrLGZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaDpudWxsLHNjaGVkdWxlUmVmcmVzaDpudWxsLHNjaGVkdWxlUm9vdDpudWxsLHNldFJlZnJlc2hIYW5kbGVyOm51bGwsZ2V0Q3VycmVudEZpYmVyOm51bGwscmVjb25jaWxlclZlcnNpb246XCIxOC4wLjAtZmM0NmRiYTY3LTIwMjIwMzI5XCJ9O2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXt2YXIgbGw9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKCFsbC5pc0Rpc2FibGVkJiZsbC5zdXBwb3J0c0ZpYmVyKXRyeXtoYz1sbC5pbmplY3Qoa2wpLGljPWxsfWNhdGNoKGEpe319ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD1pbDtcbmV4cG9ydHMuY3JlYXRlUG9ydGFsPWZ1bmN0aW9uKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7aWYoIWRsKGIpKXRocm93IEVycm9yKHAoMjAwKSk7cmV0dXJuIFRrKGEsYixudWxsLGMpfTtleHBvcnRzLmNyZWF0ZVJvb3Q9ZnVuY3Rpb24oYSxiKXtpZighZGwoYSkpdGhyb3cgRXJyb3IocCgyOTkpKTt2YXIgYz0hMSxkPVwiXCIsZT1hbDtudWxsIT09YiYmdm9pZCAwIT09YiYmKCEwPT09Yi51bnN0YWJsZV9zdHJpY3RNb2RlJiYoYz0hMCksdm9pZCAwIT09Yi5pZGVudGlmaWVyUHJlZml4JiYoZD1iLmlkZW50aWZpZXJQcmVmaXgpLHZvaWQgMCE9PWIub25SZWNvdmVyYWJsZUVycm9yJiYoZT1iLm9uUmVjb3ZlcmFibGVFcnJvcikpO2I9U2soYSwxLCExLG51bGwsbnVsbCxjLCExLGQsZSk7YVtwZl09Yi5jdXJyZW50O25mKDg9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphKTtyZXR1cm4gbmV3IGJsKGIpfTtcbmV4cG9ydHMuZmluZERPTU5vZGU9ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFscztpZih2b2lkIDA9PT1iKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXIpdGhyb3cgRXJyb3IocCgxODgpKTthPU9iamVjdC5rZXlzKGEpLmpvaW4oXCIsXCIpO3Rocm93IEVycm9yKHAoMjY4LGEpKTt9YT1XYihiKTthPW51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGU7cmV0dXJuIGF9O2V4cG9ydHMuZmx1c2hTeW5jPWZ1bmN0aW9uKGEpe3JldHVybiBIayhhKX07ZXhwb3J0cy5oeWRyYXRlPWZ1bmN0aW9uKGEsYixjKXtpZighZWwoYikpdGhyb3cgRXJyb3IocCgyMDApKTtyZXR1cm4gaGwobnVsbCxhLGIsITAsYyl9O1xuZXhwb3J0cy5oeWRyYXRlUm9vdD1mdW5jdGlvbihhLGIsYyl7aWYoIWRsKGEpKXRocm93IEVycm9yKHAoNDA1KSk7dmFyIGQ9bnVsbCE9YyYmYy5oeWRyYXRlZFNvdXJjZXN8fG51bGwsZT0hMSxmPVwiXCIsZz1hbDtudWxsIT09YyYmdm9pZCAwIT09YyYmKCEwPT09Yy51bnN0YWJsZV9zdHJpY3RNb2RlJiYoZT0hMCksdm9pZCAwIT09Yy5pZGVudGlmaWVyUHJlZml4JiYoZj1jLmlkZW50aWZpZXJQcmVmaXgpLHZvaWQgMCE9PWMub25SZWNvdmVyYWJsZUVycm9yJiYoZz1jLm9uUmVjb3ZlcmFibGVFcnJvcikpO2I9VmsoYixudWxsLGEsMSxudWxsIT1jP2M6bnVsbCxlLCExLGYsZyk7YVtwZl09Yi5jdXJyZW50O25mKGEpO2lmKGQpZm9yKGE9MDthPGQubGVuZ3RoO2ErKyljPWRbYV0sZT1jLl9nZXRWZXJzaW9uLGU9ZShjLl9zb3VyY2UpLG51bGw9PWIubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT9iLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE9W2MsZV06Yi5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhLnB1c2goYyxcbmUpO3JldHVybiBuZXcgY2woYil9O2V4cG9ydHMucmVuZGVyPWZ1bmN0aW9uKGEsYixjKXtpZighZWwoYikpdGhyb3cgRXJyb3IocCgyMDApKTtyZXR1cm4gaGwobnVsbCxhLGIsITEsYyl9O2V4cG9ydHMudW5tb3VudENvbXBvbmVudEF0Tm9kZT1mdW5jdGlvbihhKXtpZighZWwoYSkpdGhyb3cgRXJyb3IocCg0MCkpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KEhrKGZ1bmN0aW9uKCl7aGwobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbDthW3BmXT1udWxsfSl9KSwhMCk6ITF9O2V4cG9ydHMudW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM9R2s7XG5leHBvcnRzLnVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyPWZ1bmN0aW9uKGEsYixjLGQpe2lmKCFlbChjKSl0aHJvdyBFcnJvcihwKDIwMCkpO2lmKG51bGw9PWF8fHZvaWQgMD09PWEuX3JlYWN0SW50ZXJuYWxzKXRocm93IEVycm9yKHAoMzgpKTtyZXR1cm4gaGwoYSxiLGMsITEsZCl9O2V4cG9ydHMudmVyc2lvbj1cIjE4LjAuMC1mYzQ2ZGJhNjctMjAyMjAzMjlcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIG0gPSByZXF1aXJlKCdyZWFjdC1kb20nKTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGV4cG9ydHMuY3JlYXRlUm9vdCA9IG0uY3JlYXRlUm9vdDtcbiAgZXhwb3J0cy5oeWRyYXRlUm9vdCA9IG0uaHlkcmF0ZVJvb3Q7XG59IGVsc2Uge1xuICB2YXIgaSA9IG0uX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ7XG4gIGV4cG9ydHMuY3JlYXRlUm9vdCA9IGZ1bmN0aW9uKGMsIG8pIHtcbiAgICBpLnVzaW5nQ2xpZW50RW50cnlQb2ludCA9IHRydWU7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBtLmNyZWF0ZVJvb3QoYywgbyk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gZmFsc2U7XG4gICAgfVxuICB9O1xuICBleHBvcnRzLmh5ZHJhdGVSb290ID0gZnVuY3Rpb24oYywgaCwgbykge1xuICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIG0uaHlkcmF0ZVJvb3QoYywgaCwgbyk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gZmFsc2U7XG4gICAgfVxuICB9O1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBjaGVja0RDRSgpIHtcbiAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuICBpZiAoXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIFRoaXMgYnJhbmNoIGlzIHVucmVhY2hhYmxlIGJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZFxuICAgIC8vIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgY29uZGl0aW9uIGlzIHRydWUgb25seSBpbiBkZXZlbG9wbWVudC5cbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XG4gICAgLy8gcHJvcGVybHkgYXBwbGllZC5cbiAgICAvLyBEb24ndCBjaGFuZ2UgdGhlIG1lc3NhZ2UuIFJlYWN0IERldlRvb2xzIHJlbGllcyBvbiBpdC4gQWxzbyBtYWtlIHN1cmVcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxuICAgIC8vIGEgZmFsc2UgcG9zaXRpdmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdeX14nKTtcbiAgfVxuICB0cnkge1xuICAgIC8vIFZlcmlmeSB0aGF0IHRoZSBjb2RlIGFib3ZlIGhhcyBiZWVuIGRlYWQgY29kZSBlbGltaW5hdGVkIChEQ0UnZCkuXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gRGV2VG9vbHMgc2hvdWxkbid0IGNyYXNoIFJlYWN0LCBubyBtYXR0ZXIgd2hhdC5cbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfVxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcbiAgLy8gRGV2VG9vbHMgY2FuIHJlcG9ydCBiYWQgbWluaWZpY2F0aW9uIGR1cmluZyBpbmplY3Rpb24uXG4gIGNoZWNrRENFKCk7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqXG4gKiBAbGljZW5zZSBSZWFjdFxuICogcmVhY3QtanN4LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuJ3VzZSBzdHJpY3QnO3ZhciBmPXJlcXVpcmUoXCJyZWFjdFwiKSxrPVN5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpLGw9U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpLG09T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxuPWYuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQuUmVhY3RDdXJyZW50T3duZXIscD17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gcShjLGEsZyl7dmFyIGIsZD17fSxlPW51bGwsaD1udWxsO3ZvaWQgMCE9PWcmJihlPVwiXCIrZyk7dm9pZCAwIT09YS5rZXkmJihlPVwiXCIrYS5rZXkpO3ZvaWQgMCE9PWEucmVmJiYoaD1hLnJlZik7Zm9yKGIgaW4gYSltLmNhbGwoYSxiKSYmIXAuaGFzT3duUHJvcGVydHkoYikmJihkW2JdPWFbYl0pO2lmKGMmJmMuZGVmYXVsdFByb3BzKWZvcihiIGluIGE9Yy5kZWZhdWx0UHJvcHMsYSl2b2lkIDA9PT1kW2JdJiYoZFtiXT1hW2JdKTtyZXR1cm57JCR0eXBlb2Y6ayx0eXBlOmMsa2V5OmUscmVmOmgscHJvcHM6ZCxfb3duZXI6bi5jdXJyZW50fX1leHBvcnRzLkZyYWdtZW50PWw7ZXhwb3J0cy5qc3g9cTtleHBvcnRzLmpzeHM9cTtcbiIsIi8qKlxuICogQGxpY2Vuc2UgUmVhY3RcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0Jzt2YXIgbD1TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKSxuPVN5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIikscD1TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIikscT1TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIikscj1TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIiksdD1TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIiksdT1TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKSx2PVN5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKSx3PVN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKSx4PVN5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpLHk9U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIiksej1TeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gQShhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9eiYmYVt6XXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfVxudmFyIEI9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEM9T2JqZWN0LmFzc2lnbixEPXt9O2Z1bmN0aW9uIEUoYSxiLGUpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RDt0aGlzLnVwZGF0ZXI9ZXx8Qn1FLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O1xuRS5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtpZihcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hKXRocm93IEVycm9yKFwic2V0U3RhdGUoLi4uKTogdGFrZXMgYW4gb2JqZWN0IG9mIHN0YXRlIHZhcmlhYmxlcyB0byB1cGRhdGUgb3IgYSBmdW5jdGlvbiB3aGljaCByZXR1cm5zIGFuIG9iamVjdCBvZiBzdGF0ZSB2YXJpYWJsZXMuXCIpO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07RS5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07ZnVuY3Rpb24gRigpe31GLnByb3RvdHlwZT1FLnByb3RvdHlwZTtmdW5jdGlvbiBHKGEsYixlKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUQ7dGhpcy51cGRhdGVyPWV8fEJ9dmFyIEg9Ry5wcm90b3R5cGU9bmV3IEY7XG5ILmNvbnN0cnVjdG9yPUc7QyhILEUucHJvdG90eXBlKTtILmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBJPUFycmF5LmlzQXJyYXksSj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LEs9e2N1cnJlbnQ6bnVsbH0sTD17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gTShhLGIsZSl7dmFyIGQsYz17fSxrPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGQgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGs9XCJcIitiLmtleSksYilKLmNhbGwoYixkKSYmIUwuaGFzT3duUHJvcGVydHkoZCkmJihjW2RdPWJbZF0pO3ZhciBnPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZyljLmNoaWxkcmVuPWU7ZWxzZSBpZigxPGcpe2Zvcih2YXIgZj1BcnJheShnKSxtPTA7bTxnO20rKylmW21dPWFyZ3VtZW50c1ttKzJdO2MuY2hpbGRyZW49Zn1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoZCBpbiBnPWEuZGVmYXVsdFByb3BzLGcpdm9pZCAwPT09Y1tkXSYmKGNbZF09Z1tkXSk7cmV0dXJueyQkdHlwZW9mOmwsdHlwZTphLGtleTprLHJlZjpoLHByb3BzOmMsX293bmVyOksuY3VycmVudH19XG5mdW5jdGlvbiBOKGEsYil7cmV0dXJueyQkdHlwZW9mOmwsdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBPKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1sfWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrYS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgUD0vXFwvKy9nO2Z1bmN0aW9uIFEoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoXCJcIithLmtleSk6Yi50b1N0cmluZygzNil9XG5mdW5jdGlvbiBSKGEsYixlLGQsYyl7dmFyIGs9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWt8fFwiYm9vbGVhblwiPT09aylhPW51bGw7dmFyIGg9ITE7aWYobnVsbD09PWEpaD0hMDtlbHNlIHN3aXRjaChrKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmg9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGw6Y2FzZSBuOmg9ITB9fWlmKGgpcmV0dXJuIGg9YSxjPWMoaCksYT1cIlwiPT09ZD9cIi5cIitRKGgsMCk6ZCxJKGMpPyhlPVwiXCIsbnVsbCE9YSYmKGU9YS5yZXBsYWNlKFAsXCIkJi9cIikrXCIvXCIpLFIoYyxiLGUsXCJcIixmdW5jdGlvbihhKXtyZXR1cm4gYX0pKTpudWxsIT1jJiYoTyhjKSYmKGM9TihjLGUrKCFjLmtleXx8aCYmaC5rZXk9PT1jLmtleT9cIlwiOihcIlwiK2Mua2V5KS5yZXBsYWNlKFAsXCIkJi9cIikrXCIvXCIpK2EpKSxiLnB1c2goYykpLDE7aD0wO2Q9XCJcIj09PWQ/XCIuXCI6ZCtcIjpcIjtpZihJKGEpKWZvcih2YXIgZz0wO2c8YS5sZW5ndGg7ZysrKXtrPVxuYVtnXTt2YXIgZj1kK1EoayxnKTtoKz1SKGssYixlLGYsYyl9ZWxzZSBpZihmPUEoYSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGc9MDshKGs9YS5uZXh0KCkpLmRvbmU7KWs9ay52YWx1ZSxmPWQrUShrLGcrKyksaCs9UihrLGIsZSxmLGMpO2Vsc2UgaWYoXCJvYmplY3RcIj09PWspdGhyb3cgYj1TdHJpbmcoYSksRXJyb3IoXCJPYmplY3RzIGFyZSBub3QgdmFsaWQgYXMgYSBSZWFjdCBjaGlsZCAoZm91bmQ6IFwiKyhcIltvYmplY3QgT2JqZWN0XVwiPT09Yj9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjpiKStcIikuIElmIHlvdSBtZWFudCB0byByZW5kZXIgYSBjb2xsZWN0aW9uIG9mIGNoaWxkcmVuLCB1c2UgYW4gYXJyYXkgaW5zdGVhZC5cIik7cmV0dXJuIGh9XG5mdW5jdGlvbiBTKGEsYixlKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBkPVtdLGM9MDtSKGEsZCxcIlwiLFwiXCIsZnVuY3Rpb24oYSl7cmV0dXJuIGIuY2FsbChlLGEsYysrKX0pO3JldHVybiBkfWZ1bmN0aW9uIFQoYSl7aWYoLTE9PT1hLl9zdGF0dXMpe3ZhciBiPWEuX3Jlc3VsdDtiPWIoKTtiLnRoZW4oZnVuY3Rpb24oYil7aWYoMD09PWEuX3N0YXR1c3x8LTE9PT1hLl9zdGF0dXMpYS5fc3RhdHVzPTEsYS5fcmVzdWx0PWJ9LGZ1bmN0aW9uKGIpe2lmKDA9PT1hLl9zdGF0dXN8fC0xPT09YS5fc3RhdHVzKWEuX3N0YXR1cz0yLGEuX3Jlc3VsdD1ifSk7LTE9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MCxhLl9yZXN1bHQ9Yil9aWYoMT09PWEuX3N0YXR1cylyZXR1cm4gYS5fcmVzdWx0LmRlZmF1bHQ7dGhyb3cgYS5fcmVzdWx0O31cbnZhciBVPXtjdXJyZW50Om51bGx9LFY9e3RyYW5zaXRpb246bnVsbH0sVz17UmVhY3RDdXJyZW50RGlzcGF0Y2hlcjpVLFJlYWN0Q3VycmVudEJhdGNoQ29uZmlnOlYsUmVhY3RDdXJyZW50T3duZXI6S307ZXhwb3J0cy5DaGlsZHJlbj17bWFwOlMsZm9yRWFjaDpmdW5jdGlvbihhLGIsZSl7UyhhLGZ1bmN0aW9uKCl7Yi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LGUpfSxjb3VudDpmdW5jdGlvbihhKXt2YXIgYj0wO1MoYSxmdW5jdGlvbigpe2IrK30pO3JldHVybiBifSx0b0FycmF5OmZ1bmN0aW9uKGEpe3JldHVybiBTKGEsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KXx8W119LG9ubHk6ZnVuY3Rpb24oYSl7aWYoIU8oYSkpdGhyb3cgRXJyb3IoXCJSZWFjdC5DaGlsZHJlbi5vbmx5IGV4cGVjdGVkIHRvIHJlY2VpdmUgYSBzaW5nbGUgUmVhY3QgZWxlbWVudCBjaGlsZC5cIik7cmV0dXJuIGF9fTtleHBvcnRzLkNvbXBvbmVudD1FO2V4cG9ydHMuRnJhZ21lbnQ9cDtcbmV4cG9ydHMuUHJvZmlsZXI9cjtleHBvcnRzLlB1cmVDb21wb25lbnQ9RztleHBvcnRzLlN0cmljdE1vZGU9cTtleHBvcnRzLlN1c3BlbnNlPXc7ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD1XO1xuZXhwb3J0cy5jbG9uZUVsZW1lbnQ9ZnVuY3Rpb24oYSxiLGUpe2lmKG51bGw9PT1hfHx2b2lkIDA9PT1hKXRocm93IEVycm9yKFwiUmVhY3QuY2xvbmVFbGVtZW50KC4uLik6IFRoZSBhcmd1bWVudCBtdXN0IGJlIGEgUmVhY3QgZWxlbWVudCwgYnV0IHlvdSBwYXNzZWQgXCIrYStcIi5cIik7dmFyIGQ9Qyh7fSxhLnByb3BzKSxjPWEua2V5LGs9YS5yZWYsaD1hLl9vd25lcjtpZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYsaD1LLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoYz1cIlwiK2Iua2V5KTtpZihhLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMpdmFyIGc9YS50eXBlLmRlZmF1bHRQcm9wcztmb3IoZiBpbiBiKUouY2FsbChiLGYpJiYhTC5oYXNPd25Qcm9wZXJ0eShmKSYmKGRbZl09dm9pZCAwPT09YltmXSYmdm9pZCAwIT09Zz9nW2ZdOmJbZl0pfXZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZilkLmNoaWxkcmVuPWU7ZWxzZSBpZigxPGYpe2c9QXJyYXkoZik7XG5mb3IodmFyIG09MDttPGY7bSsrKWdbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1nfXJldHVybnskJHR5cGVvZjpsLHR5cGU6YS50eXBlLGtleTpjLHJlZjprLHByb3BzOmQsX293bmVyOmh9fTtleHBvcnRzLmNyZWF0ZUNvbnRleHQ9ZnVuY3Rpb24oYSl7YT17JCR0eXBlb2Y6dSxfY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGwsX2RlZmF1bHRWYWx1ZTpudWxsLF9nbG9iYWxOYW1lOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnQsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX07ZXhwb3J0cy5jcmVhdGVFbGVtZW50PU07ZXhwb3J0cy5jcmVhdGVGYWN0b3J5PWZ1bmN0aW9uKGEpe3ZhciBiPU0uYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifTtleHBvcnRzLmNyZWF0ZVJlZj1mdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fTtcbmV4cG9ydHMuZm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6dixyZW5kZXI6YX19O2V4cG9ydHMuaXNWYWxpZEVsZW1lbnQ9TztleHBvcnRzLmxhenk9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnksX3BheWxvYWQ6e19zdGF0dXM6LTEsX3Jlc3VsdDphfSxfaW5pdDpUfX07ZXhwb3J0cy5tZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJueyQkdHlwZW9mOngsdHlwZTphLGNvbXBhcmU6dm9pZCAwPT09Yj9udWxsOmJ9fTtleHBvcnRzLnN0YXJ0VHJhbnNpdGlvbj1mdW5jdGlvbihhKXt2YXIgYj1WLnRyYW5zaXRpb247Vi50cmFuc2l0aW9uPXt9O3RyeXthKCl9ZmluYWxseXtWLnRyYW5zaXRpb249Yn19O2V4cG9ydHMudW5zdGFibGVfYWN0PWZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoXCJhY3QoLi4uKSBpcyBub3Qgc3VwcG9ydGVkIGluIHByb2R1Y3Rpb24gYnVpbGRzIG9mIFJlYWN0LlwiKTt9O1xuZXhwb3J0cy51c2VDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3JldHVybiBVLmN1cnJlbnQudXNlQ2FsbGJhY2soYSxiKX07ZXhwb3J0cy51c2VDb250ZXh0PWZ1bmN0aW9uKGEpe3JldHVybiBVLmN1cnJlbnQudXNlQ29udGV4dChhKX07ZXhwb3J0cy51c2VEZWJ1Z1ZhbHVlPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVzZURlZmVycmVkVmFsdWU9ZnVuY3Rpb24oYSl7cmV0dXJuIFUuY3VycmVudC51c2VEZWZlcnJlZFZhbHVlKGEpfTtleHBvcnRzLnVzZUVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBVLmN1cnJlbnQudXNlRWZmZWN0KGEsYil9O2V4cG9ydHMudXNlSWQ9ZnVuY3Rpb24oKXtyZXR1cm4gVS5jdXJyZW50LnVzZUlkKCl9O2V4cG9ydHMudXNlSW1wZXJhdGl2ZUhhbmRsZT1mdW5jdGlvbihhLGIsZSl7cmV0dXJuIFUuY3VycmVudC51c2VJbXBlcmF0aXZlSGFuZGxlKGEsYixlKX07XG5leHBvcnRzLnVzZUluc2VydGlvbkVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBVLmN1cnJlbnQudXNlSW5zZXJ0aW9uRWZmZWN0KGEsYil9O2V4cG9ydHMudXNlTGF5b3V0RWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFUuY3VycmVudC51c2VMYXlvdXRFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VNZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFUuY3VycmVudC51c2VNZW1vKGEsYil9O2V4cG9ydHMudXNlUmVkdWNlcj1mdW5jdGlvbihhLGIsZSl7cmV0dXJuIFUuY3VycmVudC51c2VSZWR1Y2VyKGEsYixlKX07ZXhwb3J0cy51c2VSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIFUuY3VycmVudC51c2VSZWYoYSl9O2V4cG9ydHMudXNlU3RhdGU9ZnVuY3Rpb24oYSl7cmV0dXJuIFUuY3VycmVudC51c2VTdGF0ZShhKX07ZXhwb3J0cy51c2VTeW5jRXh0ZXJuYWxTdG9yZT1mdW5jdGlvbihhLGIsZSl7cmV0dXJuIFUuY3VycmVudC51c2VTeW5jRXh0ZXJuYWxTdG9yZShhLGIsZSl9O1xuZXhwb3J0cy51c2VUcmFuc2l0aW9uPWZ1bmN0aW9uKCl7cmV0dXJuIFUuY3VycmVudC51c2VUcmFuc2l0aW9uKCl9O2V4cG9ydHMudmVyc2lvbj1cIjE4LjAuMC1mYzQ2ZGJhNjctMjAyMjAzMjlcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKipcbiAqIEBsaWNlbnNlIFJlYWN0XG4gKiBzY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuJ3VzZSBzdHJpY3QnO2Z1bmN0aW9uIGYoYSxiKXt2YXIgYz1hLmxlbmd0aDthLnB1c2goYik7YTpmb3IoOzA8Yzspe3ZhciBkPWMtMT4+PjEsZT1hW2RdO2lmKDA8ZyhlLGIpKWFbZF09YixhW2NdPWUsYz1kO2Vsc2UgYnJlYWsgYX19ZnVuY3Rpb24gaChhKXtyZXR1cm4gMD09PWEubGVuZ3RoP251bGw6YVswXX1mdW5jdGlvbiBrKGEpe2lmKDA9PT1hLmxlbmd0aClyZXR1cm4gbnVsbDt2YXIgYj1hWzBdLGM9YS5wb3AoKTtpZihjIT09Yil7YVswXT1jO2E6Zm9yKHZhciBkPTAsZT1hLmxlbmd0aCx3PWU+Pj4xO2Q8dzspe3ZhciBtPTIqKGQrMSktMSxDPWFbbV0sbj1tKzEseD1hW25dO2lmKDA+ZyhDLGMpKW48ZSYmMD5nKHgsQyk/KGFbZF09eCxhW25dPWMsZD1uKTooYVtkXT1DLGFbbV09YyxkPW0pO2Vsc2UgaWYobjxlJiYwPmcoeCxjKSlhW2RdPXgsYVtuXT1jLGQ9bjtlbHNlIGJyZWFrIGF9fXJldHVybiBifVxuZnVuY3Rpb24gZyhhLGIpe3ZhciBjPWEuc29ydEluZGV4LWIuc29ydEluZGV4O3JldHVybiAwIT09Yz9jOmEuaWQtYi5pZH1pZihcIm9iamVjdFwiPT09dHlwZW9mIHBlcmZvcm1hbmNlJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgcGVyZm9ybWFuY2Uubm93KXt2YXIgbD1wZXJmb3JtYW5jZTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBsLm5vdygpfX1lbHNle3ZhciBwPURhdGUscT1wLm5vdygpO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHAubm93KCktcX19dmFyIHI9W10sdD1bXSx1PTEsdj1udWxsLHk9Myx6PSExLEE9ITEsQj0hMSxEPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6bnVsbCxFPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0Om51bGwsRj1cInVuZGVmaW5lZFwiIT09dHlwZW9mIHNldEltbWVkaWF0ZT9zZXRJbW1lZGlhdGU6bnVsbDtcblwidW5kZWZpbmVkXCIhPT10eXBlb2YgbmF2aWdhdG9yJiZ2b2lkIDAhPT1uYXZpZ2F0b3Iuc2NoZWR1bGluZyYmdm9pZCAwIT09bmF2aWdhdG9yLnNjaGVkdWxpbmcuaXNJbnB1dFBlbmRpbmcmJm5hdmlnYXRvci5zY2hlZHVsaW5nLmlzSW5wdXRQZW5kaW5nLmJpbmQobmF2aWdhdG9yLnNjaGVkdWxpbmcpO2Z1bmN0aW9uIEcoYSl7Zm9yKHZhciBiPWgodCk7bnVsbCE9PWI7KXtpZihudWxsPT09Yi5jYWxsYmFjaylrKHQpO2Vsc2UgaWYoYi5zdGFydFRpbWU8PWEpayh0KSxiLnNvcnRJbmRleD1iLmV4cGlyYXRpb25UaW1lLGYocixiKTtlbHNlIGJyZWFrO2I9aCh0KX19ZnVuY3Rpb24gSChhKXtCPSExO0coYSk7aWYoIUEpaWYobnVsbCE9PWgocikpQT0hMCxJKEopO2Vsc2V7dmFyIGI9aCh0KTtudWxsIT09YiYmSyhILGIuc3RhcnRUaW1lLWEpfX1cbmZ1bmN0aW9uIEooYSxiKXtBPSExO0ImJihCPSExLEUoTCksTD0tMSk7ej0hMDt2YXIgYz15O3RyeXtHKGIpO2Zvcih2PWgocik7bnVsbCE9PXYmJighKHYuZXhwaXJhdGlvblRpbWU+Yil8fGEmJiFNKCkpOyl7dmFyIGQ9di5jYWxsYmFjaztpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7di5jYWxsYmFjaz1udWxsO3k9di5wcmlvcml0eUxldmVsO3ZhciBlPWQodi5leHBpcmF0aW9uVGltZTw9Yik7Yj1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlP3YuY2FsbGJhY2s9ZTp2PT09aChyKSYmayhyKTtHKGIpfWVsc2UgayhyKTt2PWgocil9aWYobnVsbCE9PXYpdmFyIHc9ITA7ZWxzZXt2YXIgbT1oKHQpO251bGwhPT1tJiZLKEgsbS5zdGFydFRpbWUtYik7dz0hMX1yZXR1cm4gd31maW5hbGx5e3Y9bnVsbCx5PWMsej0hMX19dmFyIE49ITEsTz1udWxsLEw9LTEsUD01LFE9LTE7XG5mdW5jdGlvbiBNKCl7cmV0dXJuIGV4cG9ydHMudW5zdGFibGVfbm93KCktUTxQPyExOiEwfWZ1bmN0aW9uIFIoKXtpZihudWxsIT09Tyl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtRPWE7dmFyIGI9ITA7dHJ5e2I9TyghMCxhKX1maW5hbGx5e2I/UygpOihOPSExLE89bnVsbCl9fWVsc2UgTj0hMX12YXIgUztpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgRilTPWZ1bmN0aW9uKCl7RihSKX07ZWxzZSBpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIE1lc3NhZ2VDaGFubmVsKXt2YXIgVD1uZXcgTWVzc2FnZUNoYW5uZWwsVT1ULnBvcnQyO1QucG9ydDEub25tZXNzYWdlPVI7Uz1mdW5jdGlvbigpe1UucG9zdE1lc3NhZ2UobnVsbCl9fWVsc2UgUz1mdW5jdGlvbigpe0QoUiwwKX07ZnVuY3Rpb24gSShhKXtPPWE7Tnx8KE49ITAsUygpKX1mdW5jdGlvbiBLKGEsYil7TD1EKGZ1bmN0aW9uKCl7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sYil9XG5leHBvcnRzLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01O2V4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtleHBvcnRzLnVuc3RhYmxlX0xvd1ByaW9yaXR5PTQ7ZXhwb3J0cy51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zO2V4cG9ydHMudW5zdGFibGVfUHJvZmlsaW5nPW51bGw7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7YS5jYWxsYmFjaz1udWxsfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7QXx8enx8KEE9ITAsSShKKSl9O1xuZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbihhKXswPmF8fDEyNTxhP2NvbnNvbGUuZXJyb3IoXCJmb3JjZUZyYW1lUmF0ZSB0YWtlcyBhIHBvc2l0aXZlIGludCBiZXR3ZWVuIDAgYW5kIDEyNSwgZm9yY2luZyBmcmFtZSByYXRlcyBoaWdoZXIgdGhhbiAxMjUgZnBzIGlzIG5vdCBzdXBwb3J0ZWRcIik6UD0wPGE/TWF0aC5mbG9vcigxRTMvYSk6NX07ZXhwb3J0cy51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbD1mdW5jdGlvbigpe3JldHVybiB5fTtleHBvcnRzLnVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIGgocil9O2V4cG9ydHMudW5zdGFibGVfbmV4dD1mdW5jdGlvbihhKXtzd2l0Y2goeSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6dmFyIGI9MzticmVhaztkZWZhdWx0OmI9eX12YXIgYz15O3k9Yjt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e3k9Y319O2V4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O1xuZXhwb3J0cy51bnN0YWJsZV9yZXF1ZXN0UGFpbnQ9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9eTt5PWE7dHJ5e3JldHVybiBiKCl9ZmluYWxseXt5PWN9fTtcbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jPyhjPWMuZGVsYXksYz1cIm51bWJlclwiPT09dHlwZW9mIGMmJjA8Yz9kK2M6ZCk6Yz1kO3N3aXRjaChhKXtjYXNlIDE6dmFyIGU9LTE7YnJlYWs7Y2FzZSAyOmU9MjUwO2JyZWFrO2Nhc2UgNTplPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSA0OmU9MUU0O2JyZWFrO2RlZmF1bHQ6ZT01RTN9ZT1jK2U7YT17aWQ6dSsrLGNhbGxiYWNrOmIscHJpb3JpdHlMZXZlbDphLHN0YXJ0VGltZTpjLGV4cGlyYXRpb25UaW1lOmUsc29ydEluZGV4Oi0xfTtjPmQ/KGEuc29ydEluZGV4PWMsZih0LGEpLG51bGw9PT1oKHIpJiZhPT09aCh0KSYmKEI/KEUoTCksTD0tMSk6Qj0hMCxLKEgsYy1kKSkpOihhLnNvcnRJbmRleD1lLGYocixhKSxBfHx6fHwoQT0hMCxJKEopKSk7cmV0dXJuIGF9O1xuZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1NO2V4cG9ydHMudW5zdGFibGVfd3JhcENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPXk7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGM9eTt5PWI7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e3k9Y319fTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKipcbiAqIEEgbG9hZGVyIGZvciBmZXRjaGluZyByZW1vdGUgc2NyaXB0c1xuICovXG5leHBvcnQgY2xhc3MgRHluYW1pY0xpYkxvYWRlciB7XG4gIHByaXZhdGUgbGlicmFyeUNhY2hlID0gbmV3IE1hcDxzdHJpbmcsIFNjcmlwdEZldGNoZXI8dW5rbm93bj4+KCk7XG5cbiAgLyoqXG4gICAqIEZldGNoIGEgbGlicmFyeSBmcm9tIGBwYXRoYFxuICAgKlxuICAgKiBAcGFyYW0gcGF0aFxuICAgKiBAcGFyYW0gd2luZG93S2V5IElmIFdlYnBhY2sgYnVpbHQgdGhlIGxpYnJhcnkgdXNpbmcgYGxpYnJhcnlUYXJnZXQ6ICd3aW5kb3cnYCwgdGhpcyBpcyB0aGUgYGxpYnJhcnlgIHBhcmFtIGluIHRoZSB3ZWJwYWNrIGNvbmZpZ1xuICAgKi9cbiAgcHVibGljIGxvYWQ8VD4ocGF0aDogc3RyaW5nLCB3aW5kb3dLZXk/OiBzdHJpbmcpOiBQcm9taXNlPFQ+IHtcbiAgICBjb25zdCBzY3JpcHRGZXRjaGVyID0gdGhpcy5saWJyYXJ5Q2FjaGUuZ2V0KHBhdGgpIGFzIFNjcmlwdEZldGNoZXI8VD4gfHwgbmV3IFNjcmlwdEZldGNoZXI8VD4ocGF0aCwgd2luZG93S2V5KTtcbiAgICB0aGlzLmxpYnJhcnlDYWNoZS5zZXQocGF0aCwgc2NyaXB0RmV0Y2hlcik7XG5cbiAgICByZXR1cm4gc2NyaXB0RmV0Y2hlci5saWJyYXJ5O1xuICB9XG59XG5cbi8qKlxuICogRmV0Y2hlcyBhIHNjcmlwdFxuICovXG5jbGFzcyBTY3JpcHRGZXRjaGVyPFQ+IHtcbiAgcHJpdmF0ZSBsaWJyYXJ5UmVzb2x2ZXIhOiAobGliOiBUKSA9PiB2b2lkO1xuICBwcml2YXRlIGxpYnJhcnlSZWplY3RlciE6IChlcnI6IHN0cmluZykgPT4gdm9pZDtcbiAgcHJpdmF0ZSBfbGlicmFyeVByb21pc2U6IFByb21pc2U8VD47XG5cbiAgY29uc3RydWN0b3IocGF0aDogc3RyaW5nLCB3aW5kb3dLZXk/OiBzdHJpbmcpIHtcbiAgICB0aGlzLl9saWJyYXJ5UHJvbWlzZSA9IG5ldyBQcm9taXNlPFQ+KChyZXMsIHJlaikgPT4ge1xuICAgICAgdGhpcy5saWJyYXJ5UmVzb2x2ZXIgPSByZXM7XG4gICAgICB0aGlzLmxpYnJhcnlSZWplY3RlciA9IHJlajtcbiAgICB9KTtcbiAgICB0aGlzLmZldGNoKHBhdGgsIHdpbmRvd0tleSk7XG4gIH1cblxuICBwcml2YXRlIGFzeW5jIGZldGNoKHBhdGg6IHN0cmluZywgd2luZG93S2V5Pzogc3RyaW5nKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IG1vZHVsZSA9IGF3YWl0IGltcG9ydCgvKiB3ZWJwYWNrSWdub3JlOiB0cnVlICovIHBhdGgpO1xuICAgICAgY29uc3QgbGliID0geyAuLi5tb2R1bGUgfTtcblxuICAgICAgLy8gaWYgdGhlIGB3aW5kb3dLZXlgIGFyZyB3YXMgcHJvdmlkZWQgYW5kIHRoZSBsaWJyYXJ5J3MgY29udGVudHMgd2VyZSBhdHRhY2hlZCB0byB0aGUgd2luZG93LCBhc3NpZ24gdGhhdCB0byB0aGUgYGxpYmAgb2JqZWN0XG4gICAgICBpZiAod2luZG93S2V5ICYmIHdpbmRvd0tleSBpbiB3aW5kb3cpIHtcbiAgICAgICAgY29uc3QgbGliT2JqZWN0ID0gd2luZG93W3dpbmRvd0tleSBhcyBrZXlvZiBXaW5kb3ddIHx8IHt9O1xuICAgICAgICBPYmplY3QuYXNzaWduKGxpYiwgbGliT2JqZWN0KTtcbiAgICAgICAgZGVsZXRlIHdpbmRvd1t3aW5kb3dLZXkgYXMga2V5b2YgV2luZG93XTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5saWJyYXJ5UmVzb2x2ZXIobGliKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICB0aGlzLmxpYnJhcnlSZWplY3RlcihlKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQSBwcm9taXNlIG9mIHRoZSBsaWJyYXJ5IGJlaW5nIGxvYWRlZFxuICAgKi9cbiAgcHVibGljIGdldCBsaWJyYXJ5KCk6IFByb21pc2U8VD4ge1xuICAgIHJldHVybiB0aGlzLl9saWJyYXJ5UHJvbWlzZTtcbiAgfVxuXG59XG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbl9fd2VicGFja19yZXF1aXJlX18ubSA9IF9fd2VicGFja19tb2R1bGVzX187XG5cbiIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZiA9IHt9O1xuLy8gVGhpcyBmaWxlIGNvbnRhaW5zIG9ubHkgdGhlIGVudHJ5IGNodW5rLlxuLy8gVGhlIGNodW5rIGxvYWRpbmcgZnVuY3Rpb24gZm9yIGFkZGl0aW9uYWwgY2h1bmtzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmUgPSAoY2h1bmtJZCkgPT4ge1xuXHRyZXR1cm4gUHJvbWlzZS5hbGwoT2JqZWN0LmtleXMoX193ZWJwYWNrX3JlcXVpcmVfXy5mKS5yZWR1Y2UoKHByb21pc2VzLCBrZXkpID0+IHtcblx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmZba2V5XShjaHVua0lkLCBwcm9taXNlcyk7XG5cdFx0cmV0dXJuIHByb21pc2VzO1xuXHR9LCBbXSkpO1xufTsiLCIvLyBUaGlzIGZ1bmN0aW9uIGFsbG93IHRvIHJlZmVyZW5jZSBhc3luYyBjaHVua3Ncbl9fd2VicGFja19yZXF1aXJlX18udSA9IChjaHVua0lkKSA9PiB7XG5cdC8vIHJldHVybiB1cmwgZm9yIGZpbGVuYW1lcyBiYXNlZCBvbiB0ZW1wbGF0ZVxuXHRyZXR1cm4gXCJcIiArIGNodW5rSWQgKyBcIi5pbmRleC5qc1wiO1xufTsiLCIvLyBUaGlzIGZ1bmN0aW9uIGFsbG93IHRvIHJlZmVyZW5jZSBhc3luYyBjaHVua3Ncbl9fd2VicGFja19yZXF1aXJlX18ubWluaUNzc0YgPSAoY2h1bmtJZCkgPT4ge1xuXHQvLyByZXR1cm4gdXJsIGZvciBmaWxlbmFtZXMgYmFzZWQgb24gdGVtcGxhdGVcblx0cmV0dXJuIHVuZGVmaW5lZDtcbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gKGV4cG9ydHMpID0+IHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07IiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0ICYmIGRvY3VtZW50LmN1cnJlbnRTY3JpcHQudGFnTmFtZS50b1VwcGVyQ2FzZSgpID09PSAnU0NSSVBUJylcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyYztcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSB7XG5cdFx0XHR2YXIgaSA9IHNjcmlwdHMubGVuZ3RoIC0gMTtcblx0XHRcdHdoaWxlIChpID4gLTEgJiYgKCFzY3JpcHRVcmwgfHwgIS9eaHR0cChzPyk6Ly50ZXN0KHNjcmlwdFVybCkpKSBzY3JpcHRVcmwgPSBzY3JpcHRzW2ktLV0uc3JjO1xuXHRcdH1cblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiLy8gbm8gYmFzZVVSSVxuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuLy8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4vLyBbcmVzb2x2ZSwgcmVqZWN0LCBQcm9taXNlXSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbnZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG5cdDI4NTogMFxufTtcblxuX193ZWJwYWNrX3JlcXVpcmVfXy5mLmogPSAoY2h1bmtJZCwgcHJvbWlzZXMpID0+IHtcblx0XHQvLyBKU09OUCBjaHVuayBsb2FkaW5nIGZvciBqYXZhc2NyaXB0XG5cdFx0dmFyIGluc3RhbGxlZENodW5rRGF0YSA9IF9fd2VicGFja19yZXF1aXJlX18ubyhpbnN0YWxsZWRDaHVua3MsIGNodW5rSWQpID8gaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdIDogdW5kZWZpbmVkO1xuXHRcdGlmKGluc3RhbGxlZENodW5rRGF0YSAhPT0gMCkgeyAvLyAwIG1lYW5zIFwiYWxyZWFkeSBpbnN0YWxsZWRcIi5cblxuXHRcdFx0Ly8gYSBQcm9taXNlIG1lYW5zIFwiY3VycmVudGx5IGxvYWRpbmdcIi5cblx0XHRcdGlmKGluc3RhbGxlZENodW5rRGF0YSkge1xuXHRcdFx0XHRwcm9taXNlcy5wdXNoKGluc3RhbGxlZENodW5rRGF0YVsyXSk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRpZih0cnVlKSB7IC8vIGFsbCBjaHVua3MgaGF2ZSBKU1xuXHRcdFx0XHRcdC8vIHNldHVwIFByb21pc2UgaW4gY2h1bmsgY2FjaGVcblx0XHRcdFx0XHR2YXIgcHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IChpbnN0YWxsZWRDaHVua0RhdGEgPSBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gPSBbcmVzb2x2ZSwgcmVqZWN0XSkpO1xuXHRcdFx0XHRcdHByb21pc2VzLnB1c2goaW5zdGFsbGVkQ2h1bmtEYXRhWzJdID0gcHJvbWlzZSk7XG5cblx0XHRcdFx0XHQvLyBzdGFydCBjaHVuayBsb2FkaW5nXG5cdFx0XHRcdFx0dmFyIHVybCA9IF9fd2VicGFja19yZXF1aXJlX18ucCArIF9fd2VicGFja19yZXF1aXJlX18udShjaHVua0lkKTtcblx0XHRcdFx0XHQvLyBjcmVhdGUgZXJyb3IgYmVmb3JlIHN0YWNrIHVud291bmQgdG8gZ2V0IHVzZWZ1bCBzdGFja3RyYWNlIGxhdGVyXG5cdFx0XHRcdFx0dmFyIGVycm9yID0gbmV3IEVycm9yKCk7XG5cdFx0XHRcdFx0dmFyIGxvYWRpbmdFbmRlZCA9IChldmVudCkgPT4ge1xuXHRcdFx0XHRcdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGluc3RhbGxlZENodW5rcywgY2h1bmtJZCkpIHtcblx0XHRcdFx0XHRcdFx0aW5zdGFsbGVkQ2h1bmtEYXRhID0gaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdO1xuXHRcdFx0XHRcdFx0XHRpZihpbnN0YWxsZWRDaHVua0RhdGEgIT09IDApIGluc3RhbGxlZENodW5rc1tjaHVua0lkXSA9IHVuZGVmaW5lZDtcblx0XHRcdFx0XHRcdFx0aWYoaW5zdGFsbGVkQ2h1bmtEYXRhKSB7XG5cdFx0XHRcdFx0XHRcdFx0dmFyIGVycm9yVHlwZSA9IGV2ZW50ICYmIChldmVudC50eXBlID09PSAnbG9hZCcgPyAnbWlzc2luZycgOiBldmVudC50eXBlKTtcblx0XHRcdFx0XHRcdFx0XHR2YXIgcmVhbFNyYyA9IGV2ZW50ICYmIGV2ZW50LnRhcmdldCAmJiBldmVudC50YXJnZXQuc3JjO1xuXHRcdFx0XHRcdFx0XHRcdGVycm9yLm1lc3NhZ2UgPSAnTG9hZGluZyBjaHVuayAnICsgY2h1bmtJZCArICcgZmFpbGVkLlxcbignICsgZXJyb3JUeXBlICsgJzogJyArIHJlYWxTcmMgKyAnKSc7XG5cdFx0XHRcdFx0XHRcdFx0ZXJyb3IubmFtZSA9ICdDaHVua0xvYWRFcnJvcic7XG5cdFx0XHRcdFx0XHRcdFx0ZXJyb3IudHlwZSA9IGVycm9yVHlwZTtcblx0XHRcdFx0XHRcdFx0XHRlcnJvci5yZXF1ZXN0ID0gcmVhbFNyYztcblx0XHRcdFx0XHRcdFx0XHRpbnN0YWxsZWRDaHVua0RhdGFbMV0oZXJyb3IpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmwodXJsLCBsb2FkaW5nRW5kZWQsIFwiY2h1bmstXCIgKyBjaHVua0lkLCBjaHVua0lkKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cbn07XG5cbi8vIG5vIHByZWZldGNoaW5nXG5cbi8vIG5vIHByZWxvYWRlZFxuXG4vLyBubyBITVJcblxuLy8gbm8gSE1SIG1hbmlmZXN0XG5cbi8vIG5vIG9uIGNodW5rcyBsb2FkZWRcblxuLy8gaW5zdGFsbCBhIEpTT05QIGNhbGxiYWNrIGZvciBjaHVuayBsb2FkaW5nXG52YXIgd2VicGFja0pzb25wQ2FsbGJhY2sgPSAocGFyZW50Q2h1bmtMb2FkaW5nRnVuY3Rpb24sIGRhdGEpID0+IHtcblx0dmFyIFtjaHVua0lkcywgbW9yZU1vZHVsZXMsIHJ1bnRpbWVdID0gZGF0YTtcblx0Ly8gYWRkIFwibW9yZU1vZHVsZXNcIiB0byB0aGUgbW9kdWxlcyBvYmplY3QsXG5cdC8vIHRoZW4gZmxhZyBhbGwgXCJjaHVua0lkc1wiIGFzIGxvYWRlZCBhbmQgZmlyZSBjYWxsYmFja1xuXHR2YXIgbW9kdWxlSWQsIGNodW5rSWQsIGkgPSAwO1xuXHRpZihjaHVua0lkcy5zb21lKChpZCkgPT4gKGluc3RhbGxlZENodW5rc1tpZF0gIT09IDApKSkge1xuXHRcdGZvcihtb2R1bGVJZCBpbiBtb3JlTW9kdWxlcykge1xuXHRcdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKG1vcmVNb2R1bGVzLCBtb2R1bGVJZCkpIHtcblx0XHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tW21vZHVsZUlkXSA9IG1vcmVNb2R1bGVzW21vZHVsZUlkXTtcblx0XHRcdH1cblx0XHR9XG5cdFx0aWYocnVudGltZSkgdmFyIHJlc3VsdCA9IHJ1bnRpbWUoX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cdH1cblx0aWYocGFyZW50Q2h1bmtMb2FkaW5nRnVuY3Rpb24pIHBhcmVudENodW5rTG9hZGluZ0Z1bmN0aW9uKGRhdGEpO1xuXHRmb3IoO2kgPCBjaHVua0lkcy5sZW5ndGg7IGkrKykge1xuXHRcdGNodW5rSWQgPSBjaHVua0lkc1tpXTtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oaW5zdGFsbGVkQ2h1bmtzLCBjaHVua0lkKSAmJiBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0pIHtcblx0XHRcdGluc3RhbGxlZENodW5rc1tjaHVua0lkXVswXSgpO1xuXHRcdH1cblx0XHRpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gPSAwO1xuXHR9XG5cbn1cblxudmFyIGNodW5rTG9hZGluZ0dsb2JhbCA9IHNlbGZbXCJ3ZWJwYWNrQ2h1bmttcF93ZWJnbFwiXSA9IHNlbGZbXCJ3ZWJwYWNrQ2h1bmttcF93ZWJnbFwiXSB8fCBbXTtcbmNodW5rTG9hZGluZ0dsb2JhbC5mb3JFYWNoKHdlYnBhY2tKc29ucENhbGxiYWNrLmJpbmQobnVsbCwgMCkpO1xuY2h1bmtMb2FkaW5nR2xvYmFsLnB1c2ggPSB3ZWJwYWNrSnNvbnBDYWxsYmFjay5iaW5kKG51bGwsIGNodW5rTG9hZGluZ0dsb2JhbC5wdXNoLmJpbmQoY2h1bmtMb2FkaW5nR2xvYmFsKSk7IiwiLyogZXNsaW50LWRpc2FibGUgKi9cblxudmFyIHN0YXR1c0VsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3RhdHVzJyk7XG5mdW5jdGlvbiByZXBvcnQocHJlZml4LCBtZXNzYWdlKSB7XG4gIHZhciBtc2cgPSAobWVzc2FnZSkgPyBtZXNzYWdlIDogJyc7XG4gIHN0YXR1c0VsZW1lbnQuY2xhc3NOYW1lID0gKHByZWZpeD09PSdFcnJvcjogJykgPyAnZXJyb3InIDogJyc7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNzdGF0dXMgc3BhbicpLnRleHRDb250ZW50ID0gcHJlZml4ICsgbWVzc2FnZTtcbiAgaWYgKHByZWZpeCA9PT0gJ0Vycm9yOiAnKSB7XG4gICAgY29uc29sZS53YXJuKG1zZyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gcmVwb3J0RXJyb3IobWVzc2FnZSkge1xuICByZXBvcnQoJ0Vycm9yOiAnLCBtZXNzYWdlKTtcbn1cbmZ1bmN0aW9uIHJlcG9ydENvbXBsZXRpb24obWVzc2FnZSkge1xuICByZXBvcnQoJ09LOiAnLCBtZXNzYWdlKTtcbn1cbmZ1bmN0aW9uIHJlcG9ydEJ1c3koKSB7XG4gIHJlcG9ydCgnV29ya2luZyAuLi4nKTtcbn1cblxuZnVuY3Rpb24gY2xlYXJTZWxlY3RvcihzZWxlY3Rvcikge1xuICB3aGlsZSAoc2VsZWN0b3IubGFzdENoaWxkKSB7XG4gICAgc2VsZWN0b3IucmVtb3ZlQ2hpbGQoc2VsZWN0b3IubGFzdENoaWxkKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gb25Db25uZWN0KHNob3djYXNlLCBzaG93Y2FzZUVsZW1lbnQpIHtcbiAgY29uc29sZS5sb2coXCJTSE9XQ0FTRSBJUyBDT05ORUNURURcIik7XG5cbiAgc2V0dXBNYXR0ZXJ0YWdDb250cm9scyhzaG93Y2FzZSk7XG5cbiAgY29uc3Qgc3dlZXBDb2xsZWN0aW9uID0ge307XG4gIGNvbnN0IHN3ZWVwU2VsZWN0b3JzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnc3dlZXAtc2VsZWN0b3InKTtcbiAgW10uc2xpY2UuY2FsbChzd2VlcFNlbGVjdG9ycykuZm9yRWFjaChmdW5jdGlvbiAoc2VsZWN0b3IpIHtcbiAgICBjbGVhclNlbGVjdG9yKHNlbGVjdG9yKTtcbiAgICBzaG93Y2FzZS5Td2VlcC5kYXRhLnN1YnNjcmliZSh7XG4gICAgICBvbkFkZGVkKGluZGV4LCBpdGVtKSB7XG4gICAgICAgIHN3ZWVwQ29sbGVjdGlvbltpbmRleF0gPSBpdGVtO1xuICAgICAgfSxcbiAgICAgIG9uUmVtb3ZlZChpbmRleCkge1xuICAgICAgICBkZWxldGUgc3dlZXBDb2xsZWN0aW9uW2luZGV4XTtcbiAgICAgIH0sXG4gICAgICBvbkNvbGxlY3Rpb25VcGRhdGVkKGNvbGxlY3Rpb24pIHtcbiAgICAgICAgaWYgKHNlbGVjdG9yLmhhc0NoaWxkTm9kZXMoKSkgcmV0dXJuO1xuICAgICAgICBmb3IgKGNvbnN0IHN3ZWVwSWQgaW4gY29sbGVjdGlvbikge1xuICAgICAgICAgIHZhciBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcbiAgICAgICAgICBvcHRpb24udmFsdWUgPSBzd2VlcElkO1xuICAgICAgICAgIG9wdGlvbi50ZXh0ID0gc3dlZXBJZDtcbiAgICAgICAgICBzZWxlY3Rvci5hcHBlbmRDaGlsZChvcHRpb24pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xuXG5cbiAgdmFyIGNhbWVyYVBvc2U7XG4gIHZhciB0YWdzID0ge307XG5cbiAgc2hvd2Nhc2UuTWF0dGVydGFnLmRhdGEuc3Vic2NyaWJlKHtcbiAgICBvbkNvbGxlY3Rpb25VcGRhdGVkKGNvbGxlY3Rpb24pIHtcbiAgICAgIHRhZ3MgPSBjb2xsZWN0aW9uO1xuICAgIH0sXG4gIH0pO1xuICBzaG93Y2FzZVxuICAgIC5vbihzaG93Y2FzZS5Nb2RlbC5FdmVudC5NT0RFTF9MT0FERUQsIGZ1bmN0aW9uIChtb2RlbERhdGEpIHtcbiAgICAgIHJlcG9ydENvbXBsZXRpb24oJ01vZGVsIHN1Y2Nlc3NmdWxseSBsb2FkZWQnKTtcbiAgICB9KVxuICAgIC5vbihzaG93Y2FzZS5Nb2RlLkV2ZW50LkNIQU5HRV9TVEFSVCwgZnVuY3Rpb24gKG9sZE1vZGUsIG5ld01vZGUpIHtcbiAgICAgIHJlcG9ydENvbXBsZXRpb24oJ21vdmVkIHRvIG1vZGU6ICcgKyBuZXdNb2RlICsgJyBmcm9tICcgKyBvbGRNb2RlKTtcbiAgICB9KVxuICAgIC5vbihzaG93Y2FzZS5DYW1lcmEuRXZlbnQuTU9WRSwgZnVuY3Rpb24gKHBvc2UpIHtcbiAgICAgIGNhbWVyYVBvc2UgPSBwb3NlO1xuICAgIH0pXG4gICAgLm9uKHNob3djYXNlLk1hdHRlcnRhZy5FdmVudC5DTElDSywgKGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbiAodGFnSWQpIHtcbiAgICAgICAgdmFyIGNsaWNrZWRUYWcgPSB0YWdzW3RhZ0lkXTtcbiAgICAgICAgdmFyIGRpc2NXb3JsZFBvc2l0aW9uID0ge307XG4gICAgICAgIHZhciBzY3JlZW5Qb3NpdGlvbiA9IHt9O1xuICAgICAgICBzaG93Y2FzZS5NYXR0ZXJ0YWcuZ2V0RGlzY1Bvc2l0aW9uKGNsaWNrZWRUYWcsIGRpc2NXb3JsZFBvc2l0aW9uKTtcbiAgICAgICAgc2hvd2Nhc2UuQ29udmVyc2lvbi53b3JsZFRvU2NyZWVuKGRpc2NXb3JsZFBvc2l0aW9uLCBjYW1lcmFQb3NlLCB7XG4gICAgICAgICAgdzogc2hvd2Nhc2VFbGVtZW50LmNsaWVudFdpZHRoLFxuICAgICAgICAgIGg6IHNob3djYXNlRWxlbWVudC5jbGllbnRIZWlnaHQsXG4gICAgICAgIH0sIHNjcmVlblBvc2l0aW9uKTtcblxuICAgICAgICBjb25zb2xlLmxvZygnY2xpY2tlZCcsIHRhZ0lkKTtcbiAgICAgICAgY29uc29sZS5sb2coJ3dpdGggYSB3b3JsZCBwb3NpdGlvbiBvZicsIGRpc2NXb3JsZFBvc2l0aW9uKTtcbiAgICAgICAgY29uc29sZS5sb2coJ2FuZCBhIHNjcmVlbiBwb3NpdGlvbiBvZicsIHNjcmVlblBvc2l0aW9uKTtcbiAgICAgIH1cbiAgICB9KSgpKTtcblxuICAvLyBNb3ZlIGluIGEgZGlyZWN0aW9uXG4gIFtdLnNsaWNlLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLm5hdkJ1dHRvbicpKS5mb3JFYWNoKGZ1bmN0aW9uIChidXR0b24pIHtcbiAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIHZhciB2YWx1ZSA9IHRoaXMuZ2V0QXR0cmlidXRlKCdkYXRhLWRpcmVjdGlvbicpO1xuICAgICAgcmVwb3J0QnVzeSgpO1xuICAgICAgc2hvd2Nhc2UuQ2FtZXJhLm1vdmVJbkRpcmVjdGlvbihzaG93Y2FzZS5DYW1lcmEuRGlyZWN0aW9uW3ZhbHVlXSlcbiAgICAgIC50aGVuKGZ1bmN0aW9uIChtZXNzYWdlKSB7XG4gICAgICAgIHJlcG9ydENvbXBsZXRpb24oIG1lc3NhZ2UpO1xuICAgICAgfSwgZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgICAgcmVwb3J0RXJyb3IoZXJyb3IpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwYW4nKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcG9zaXRpb25YID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Bvc2l0aW9uWCcpO1xuICAgIHZhciBwb3NpdGlvblogPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncG9zaXRpb25aJyk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgcmVwb3J0QnVzeSgpO1xuICAgICAgc2hvd2Nhc2UuQ2FtZXJhLnBhbih7XG4gICAgICAgIHg6IHBhcnNlRmxvYXQocG9zaXRpb25YLnZhbHVlKSB8fCAwLFxuICAgICAgICB6OiBwYXJzZUZsb2F0KHBvc2l0aW9uWi52YWx1ZSkgfHwgMCxcbiAgICAgIH0pXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uIChtZXNzYWdlKSB7XG4gICAgICAgICAgcmVwb3J0Q29tcGxldGlvbihcIkNhbWVyYS5wYW4gY29tcGxldGVcIik7XG4gICAgICAgIH0sIGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAgIHJlcG9ydEVycm9yKGVycm9yKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgfSgpKTtcblxuICAvLyBSb3RhdGUgaW4gYSBzaW5nbGUgZGlyZWN0aW9uXG4gIFtkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGlsdFVwJyksXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RpbHREb3duJyksXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3JvdGF0ZUxlZnQnKSxcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm90YXRlUmlnaHQnKV0uZm9yRWFjaChmdW5jdGlvbiAoYnV0dG9uKSB7XG4gICAgdmFyIGFuZ2xlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3JvdGF0aW9uJyk7XG4gICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICB2YXIgZGlyZWN0aW9uID0gdGhpcy5nZXRBdHRyaWJ1dGUoJ2RhdGEtZGlyZWN0aW9uJyk7XG4gICAgICByZXBvcnRCdXN5KCk7XG4gICAgICBzaG93Y2FzZS5DYW1lcmEucm90YXRlSW5EaXJlY3Rpb24oc2hvd2Nhc2UuQ2FtZXJhLkRpcmVjdGlvbltkaXJlY3Rpb25dLCBwYXJzZUZsb2F0KGFuZ2xlLnZhbHVlKSlcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKG1lc3NhZ2UpIHtcbiAgICAgICAgICByZXBvcnRDb21wbGV0aW9uKFwiUm90YXRpb24gY29tcGxldGU6IFwiICk7XG4gICAgICAgIH0sIGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAgIHJlcG9ydEVycm9yKGVycm9yKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIHNob3djYXNlLkNhbWVyYS5yb3RhdGVJbkRpcmVjdGlvbiA9IGZ1bmN0aW9uIChkaXJlY3Rpb24sIGFuZ2xlKSB7XG4gICAgcmV0dXJuIHNob3djYXNlLkNhbWVyYS5yb3RhdGUoXG4gICAgICBkaXJlY3Rpb24gPT09IHNob3djYXNlLkNhbWVyYS5EaXJlY3Rpb25bJ1JJR0hUJ10gPyBhbmdsZSA6IChkaXJlY3Rpb24gPT09IHNob3djYXNlLkNhbWVyYS5EaXJlY3Rpb25bJ0xFRlQnXSA/IC1hbmdsZSA6IDApLFxuICAgICAgZGlyZWN0aW9uID09PSBzaG93Y2FzZS5DYW1lcmEuRGlyZWN0aW9uWydVUCddID8gYW5nbGUgOiAgKGRpcmVjdGlvbiA9PT0gc2hvd2Nhc2UuQ2FtZXJhLkRpcmVjdGlvblsnRE9XTiddID8gLWFuZ2xlIDogMCkpO1xuICB9O1xuXG4gIC8vIFJvdGF0ZSBhbG9uZyB0aGUgeCBhbmQgeSBjb29yZGluYXRlc1xuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZnJlZVJvdGF0ZScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgIHZhciByb3RhdGlvblggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm90YXRpb25YJyk7XG4gICAgdmFyIHJvdGF0aW9uWSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb3RhdGlvblknKTtcbiAgICB2YXIgcm90YXRpb25TcGVlZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb3RhdGlvblNwZWVkJyk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgdmFyIHggPSByb3RhdGlvblgudmFsdWUgfHwgMDtcbiAgICAgIHZhciB5ID0gcm90YXRpb25ZLnZhbHVlIHx8IDA7XG4gICAgICByZXBvcnRCdXN5KCk7XG4gICAgICBzaG93Y2FzZS5DYW1lcmEucm90YXRlKHBhcnNlRmxvYXQoeCksIHBhcnNlRmxvYXQoeSksIHsgc3BlZWQ6IHBhcnNlRmxvYXQocm90YXRpb25TcGVlZC52YWx1ZSkgfSlcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKG1lc3NhZ2UpIHtcbiAgICAgICAgICByZXBvcnRDb21wbGV0aW9uKCdGcmVlIHJvdGF0aW9uIGNvbXBsZXRlOicpO1xuICAgICAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICByZXBvcnRFcnJvciggZXJyb3IpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICB9KCkpO1xuXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdvcmllbnQnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcm90YXRpb25YID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3JvdGF0aW9uWCcpO1xuICAgIHZhciByb3RhdGlvblkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm90YXRpb25ZJyk7XG4gICAgdmFyIHJvdGF0aW9uU3BlZWQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm90YXRpb25TcGVlZCcpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIHZhciB4ID0gcm90YXRpb25YLnZhbHVlIHx8IDA7XG4gICAgICB2YXIgeSA9IHJvdGF0aW9uWS52YWx1ZSB8fCAwO1xuICAgICAgcmVwb3J0QnVzeSgpO1xuICAgICAgc2hvd2Nhc2UuQ2FtZXJhLnNldFJvdGF0aW9uKHt4OiBwYXJzZUZsb2F0KHgpLCB5OiBwYXJzZUZsb2F0KHkpfSwgeyBzcGVlZDogcGFyc2VGbG9hdChyb3RhdGlvblNwZWVkLnZhbHVlKSB9KVxuICAgICAgICAudGhlbihmdW5jdGlvbiAobWVzc2FnZSkge1xuICAgICAgICAgIHJlcG9ydENvbXBsZXRpb24oYCBPcmllbnQgY29tcGxldGU6IGApO1xuICAgICAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICByZXBvcnRFcnJvciggZXJyb3IpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICB9KCkpO1xuXG4gIC8vIENoYW5nZSBtb2Rlc1xuICBbXS5zbGljZS5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5tb2RlQnV0dG9uJykpLmZvckVhY2goZnVuY3Rpb24gKGJ1dHRvbikge1xuICAgIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgdmFyIGZseVN0eWxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21vZGVTdHlsZXMnKTtcbiAgICAgIHZhciB0cmFuc2l0aW9uID0gc2hvd2Nhc2UuTW9kZS5UcmFuc2l0aW9uVHlwZVtmbHlTdHlsZS52YWx1ZV07XG4gICAgICB2YXIgdmFsdWUgPSB0aGlzLmdldEF0dHJpYnV0ZSgnaWQnKTtcbiAgICAgIHJlcG9ydEJ1c3koKTtcbiAgICAgIHNob3djYXNlLk1vZGUubW92ZVRvKHNob3djYXNlLk1vZGUuTW9kZVt2YWx1ZV0sIHtcbiAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNpdGlvbixcbiAgICAgIH0pXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uIChtZXNzYWdlKSB7XG4gICAgICAgICAgcmVwb3J0Q29tcGxldGlvbihtZXNzYWdlKTtcbiAgICAgICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgICAgcmVwb3J0RXJyb3IoZXJyb3IpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21vdmVUb1N3ZWVwJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHN3ZWVwSWQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3dlZXBJZHMnKTtcbiAgICB2YXIgZmx5U3R5bGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZmx5U3R5bGVzJyk7XG4gICAgdmFyIHN3ZWVwUm90YXRpb25YID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N3ZWVwUm90YXRpb25YJyk7XG4gICAgdmFyIHN3ZWVwUm90YXRpb25ZID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N3ZWVwUm90YXRpb25ZJyk7XG4gICAgdmFyIHN3ZWVwVHJhbnNpdGlvblRpbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3dlZXBUcmFuc2l0aW9uVGltZScpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIHZhciBzd2VlcCA9IHN3ZWVwSWQudmFsdWU7XG4gICAgICB2YXIgdHJhbnNpdGlvbiA9IHNob3djYXNlLlN3ZWVwLlRyYW5zaXRpb25bZmx5U3R5bGUudmFsdWVdO1xuICAgICAgdmFyIHJvdGF0aW9uID0ge1xuICAgICAgICB4OiBzd2VlcFJvdGF0aW9uWC52YWx1ZSB8fCAwLFxuICAgICAgICB5OiBzd2VlcFJvdGF0aW9uWS52YWx1ZSB8fCAwLFxuICAgICAgfVxuICAgICAgdmFyIHRyYW5zaXRpb25UaW1lID0gc3dlZXBUcmFuc2l0aW9uVGltZS52YWx1ZTtcbiAgICAgIHJlcG9ydEJ1c3koKTtcbiAgICAgIHNob3djYXNlLlN3ZWVwLm1vdmVUbyhzd2VlcCwge1xuICAgICAgICByb3RhdGlvbjogcm90YXRpb24sXG4gICAgICAgIHRyYW5zaXRpb246IHRyYW5zaXRpb24sXG4gICAgICAgIHRyYW5zaXRpb25UaW1lOiB0cmFuc2l0aW9uVGltZSxcbiAgICAgIH0pXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uIChzd2VlcElkKSB7XG4gICAgICAgICAgcmVwb3J0Q29tcGxldGlvbignbW92ZWQgdG8gc3dlZXAgJyArIHN3ZWVwSWQpXG4gICAgICAgIH0sIGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAgIHJlcG9ydEVycm9yKGVycm9yKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgfSgpKTtcblxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2NyZWVuc2hvdCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgIHZhciBwcmV2aWV3ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NjcmVlbnNob3QtcHJldmlldycpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIHNob3djYXNlLlJlbmRlcmVyLnRha2VTY3JlZW5TaG90KHVuZGVmaW5lZCwge1xuICAgICAgICBtYXR0ZXJ0YWdzOiBmYWxzZSxcbiAgICAgIH0pXG4gICAgICAudGhlbihmdW5jdGlvbiAoc3NVcmwpIHtcbiAgICAgICAgcHJldmlldy5zZXRBdHRyaWJ1dGUoJ3NyYycsIHNzVXJsKTtcbiAgICAgIH0pO1xuICAgIH07XG4gIH0oKSk7XG5cbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2VxdWlyZWN0YW5nbGUnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcHJldmlldyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzY3JlZW5zaG90LXByZXZpZXcnKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBzaG93Y2FzZS5SZW5kZXJlci50YWtlRXF1aXJlY3Rhbmd1bGFyKClcbiAgICAgIC50aGVuKGZ1bmN0aW9uIChzc1VybCkge1xuICAgICAgICBwcmV2aWV3LnNldEF0dHJpYnV0ZSgnc3JjJywgc3NVcmwpO1xuICAgICAgfSk7XG4gICAgfTtcbiAgfSgpKTtcblxuICBzaG93Y2FzZS5Td2VlcC5jdXJyZW50LnN1YnNjcmliZShmdW5jdGlvbiAoY3VycmVudFN3ZWVwKSB7XG4gICAgaWYgKGN1cnJlbnRTd2VlcC5zaWQgPT09ICcnKSB7XG4gICAgICBjb25zb2xlLmxvZygnTm90IGN1cnJlbnRseSBzdGF0aW9uZWQgYXQgYSBzd2VlcCBwb3NpdGlvbicpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmxvZyhjdXJyZW50U3dlZXApO1xuICAgIH1cbiAgfSk7XG5cbiAgLy8gUG9wdWxhdGUgYWxsIG9mIHRoZSBtYXR0ZXJ0YWcgc2VsZWN0b3JzXG4gIHBvcHVsYXRlTWF0dGVydGFnU2VsZWN0b3JzKHNob3djYXNlKTtcblxuICB2YXIgcG9pbnRlclN1YnNjcmlwdGlvbiA9IG51bGw7XG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdnZXRQb2ludGVyJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHBvaW50ZXJPdXRwdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncG9pbnRlcicpO1xuICAgIGlmICghcG9pbnRlclN1YnNjcmlwdGlvbikge1xuICAgICAgcG9pbnRlclN1YnNjcmlwdGlvbiA9IHNob3djYXNlLlBvaW50ZXIuaW50ZXJzZWN0aW9uLnN1YnNjcmliZShmdW5jdGlvbiAobW91c2UpIHtcbiAgICAgICAgcG9pbnRlck91dHB1dC5pbm5lclRleHQgPSBKU09OLnN0cmluZ2lmeShtb3VzZSk7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcG9pbnRlclN1YnNjcmlwdGlvbi5jYW5jZWwoKTtcbiAgICAgIHBvaW50ZXJTdWJzY3JpcHRpb24gPSBudWxsO1xuICAgIH1cbiAgfSk7XG5cbiAgc2hvd2Nhc2UuQ2FtZXJhLnpvb20uc3Vic2NyaWJlKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgbGV2ZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY3VycmVudC16b29tLWxldmVsJyk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICh6b29tKSB7XG4gICAgICBsZXZlbC5pbm5lclRleHQgPSB6b29tLmxldmVsLnRvRml4ZWQoNSk7XG4gICAgfVxuICB9KCkpO1xuXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd6b29tLWJ5JykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGRlbHRhID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3pvb20tYnktdmFsJyk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIHNob3djYXNlLkNhbWVyYS56b29tQnkoZGVsdGEudmFsdWUpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uIChuZXdab29tKSB7XG4gICAgICAgICAgcmVwb3J0Q29tcGxldGlvbignWm9vbWVkIGJ5ICcgKyBkZWx0YS52YWx1ZSArICcgdG8gJyArIG5ld1pvb20pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICB9KCkpO1xuXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd6b29tLXRvJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGxldmVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3pvb20tdG8tdmFsJyk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIHNob3djYXNlLkNhbWVyYS56b29tVG8obGV2ZWwudmFsdWUpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uIChuZXdab29tKSB7XG4gICAgICAgICAgcmVwb3J0Q29tcGxldGlvbignWm9vbWVkIHRvICcgKyBuZXdab29tKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgfSgpKTtcblxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnem9vbS1yZXNldCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgIHNob3djYXNlLkNhbWVyYS56b29tUmVzZXQoKVxuICAgICAgLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgICByZXBvcnRDb21wbGV0aW9uKCdyZXNldCB6b29tJyk7XG4gICAgICB9KTtcbiAgfSk7XG5cbiAgYWRkU3dlZXBUb2dnbGUoc2hvd2Nhc2UsIHN3ZWVwQ29sbGVjdGlvbik7XG59XG5cbmZ1bmN0aW9uIGFkZFN3ZWVwVG9nZ2xlKHNob3djYXNlLCBzd2VlcENvbGxlY3Rpb24pIHtcbiAgdmFyIHN3ZWVwU2VsZWN0b3IgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3dlZXAtZW5hYmxlLXNlbGVjdG9yJyk7XG4gIHZhciBjdXJyZW50RW5hYmxlbWVudE1hcCA9IHt9O1xuICB2YXIgZW5hYmxlU3dlZXAgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3dlZXAtZW5hYmxlJyk7XG5cbiAgc3dlZXBTZWxlY3Rvci5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGN1cnJlbnRFbmFibGVtZW50ID0gc3dlZXBDb2xsZWN0aW9uW3N3ZWVwU2VsZWN0b3IudmFsdWVdLmVuYWJsZWQ7XG4gICAgZW5hYmxlU3dlZXAuY2hlY2tlZCA9IGN1cnJlbnRFbmFibGVtZW50O1xuICB9KTtcblxuICBmdW5jdGlvbiBvbkVuYWJsZWRDaGFuZ2UoKSB7XG4gICAgY3VycmVudEVuYWJsZW1lbnRNYXBbc3dlZXBTZWxlY3Rvci52YWx1ZV0gPSBlbmFibGVTd2VlcC5jaGVja2VkO1xuXG4gICAgaWYgKGVuYWJsZVN3ZWVwLmNoZWNrZWQpIHtcbiAgICAgIHNob3djYXNlLlN3ZWVwLmVuYWJsZShzd2VlcFNlbGVjdG9yLnZhbHVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2hvd2Nhc2UuU3dlZXAuZGlzYWJsZShzd2VlcFNlbGVjdG9yLnZhbHVlKTtcbiAgICB9XG4gIH1cblxuICBlbmFibGVTd2VlcC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBvbkVuYWJsZWRDaGFuZ2UpO1xufVxuXG5mdW5jdGlvbiBwb3B1bGF0ZU1hdHRlcnRhZ1NlbGVjdG9ycyhzaG93Y2FzZSkge1xuICBzaG93Y2FzZS5NYXR0ZXJ0YWcuZGF0YS5zdWJzY3JpYmUoZnVuY3Rpb24gKCkge1xuICAgIHZhciB0YWdTZWxlY3RvcnMgPSBbXS5zbGljZS5jYWxsKGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ21hdHRlcnRhZy1zZWxlY3RvcicpKTtcbiAgICB0YWdTZWxlY3RvcnMuZm9yRWFjaChmdW5jdGlvbiAoc2VsZWN0b3IpIHtcbiAgICAgIHdoaWxlIChzZWxlY3Rvci5sYXN0Q2hpbGQpIHtcbiAgICAgICAgc2VsZWN0b3IucmVtb3ZlQ2hpbGQoc2VsZWN0b3IubGFzdENoaWxkKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICB2YXIgdGFnU2VsZWN0b3JPcHRpb25zTWFwID0ge307XG5cbiAgICBmdW5jdGlvbiBjcmVhdGVPcHRpb24odGFnKSB7XG4gICAgICB2YXIgb3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG4gICAgICBvcHRpb24udmFsdWUgPSB0YWcuc2lkO1xuICAgICAgb3B0aW9uLnRleHQgPSB0YWcubGFiZWwgfHwgJyhubyBsYWJlbCknO1xuXG4gICAgICByZXR1cm4gb3B0aW9uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgb25BZGRlZChpbmRleCwgdGFnKSB7XG4gICAgICAgIHRhZ1NlbGVjdG9ycy5mb3JFYWNoKGZ1bmN0aW9uIChzZWxlY3Rvcikge1xuICAgICAgICAgIHZhciBvcHRpb24gPSBjcmVhdGVPcHRpb24odGFnKTtcbiAgICAgICAgICB0YWdTZWxlY3Rvck9wdGlvbnNNYXBbaW5kZXhdID0gdGFnU2VsZWN0b3JPcHRpb25zTWFwW2luZGV4XSB8fCBbXTtcbiAgICAgICAgICB0YWdTZWxlY3Rvck9wdGlvbnNNYXBbaW5kZXhdLnB1c2gob3B0aW9uKTtcbiAgICAgICAgICBsZXQgbmV4dENoaWxkID0gc2VsZWN0b3IuZmlyc3RDaGlsZDtcbiAgICAgICAgICB3aGlsZSAobmV4dENoaWxkICYmIG9wdGlvbi50ZXh0LmxvY2FsZUNvbXBhcmUobmV4dENoaWxkLnRleHQpID4gMCkge1xuICAgICAgICAgICAgbmV4dENoaWxkID0gbmV4dENoaWxkLm5leHRTaWJsaW5nO1xuICAgICAgICAgIH1cbiAgICAgICAgICBzZWxlY3Rvci5pbnNlcnRCZWZvcmUob3B0aW9uLCBuZXh0Q2hpbGQpO1xuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBvblJlbW92ZWQoaW5kZXgpIHtcbiAgICAgICAgdmFyIG9wdGlvbnMgPSB0YWdTZWxlY3Rvck9wdGlvbnNNYXBbaW5kZXhdIHx8IFtdO1xuICAgICAgICBvcHRpb25zLmZvckVhY2goZnVuY3Rpb24gKG9wdGlvbikge1xuICAgICAgICAgIG9wdGlvbi5wYXJlbnRFbGVtZW50LnJlbW92ZUNoaWxkKG9wdGlvbik7XG4gICAgICAgIH0pO1xuICAgICAgICBkZWxldGUgdGFnU2VsZWN0b3JPcHRpb25zTWFwW2luZGV4XTtcbiAgICAgIH0sXG4gICAgICBvblVwZGF0ZWQoaW5kZXgsIHRhZykge1xuICAgICAgICB2YXIgb3B0aW9ucyA9IHRhZ1NlbGVjdG9yT3B0aW9uc01hcFtpbmRleF0gfHwgW107XG4gICAgICAgIG9wdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAob3B0aW9uKSB7XG4gICAgICAgICAgb3B0aW9uLnRleHQgPSB0YWcubGFiZWw7XG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICB9O1xuICB9KCkpO1xufVxuXG5cbmZ1bmN0aW9uIHNldHVwTWF0dGVydGFnQ29udHJvbHMoc2hvd2Nhc2UpIHtcbiAgY29uc3Qgc2VsZWN0ZWRUYWcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWF0dGVydGFnLXNlbGVjdG9yJyk7XG4gIHNldHVwTWF0dGVydGFnUHJldmVudChzaG93Y2FzZSwgc2VsZWN0ZWRUYWcpO1xuXG4gIC8vIGFkZFxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGFnLWFkZCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RhZy1hZGQtdGl0bGUnKTtcbiAgICBjb25zdCBkZXNjID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RhZy1hZGQtZGVzYycpO1xuICAgIGNvbnN0IHBvc1ggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGFnLWFkZC1wb3MteCcpO1xuICAgIGNvbnN0IHBvc1kgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGFnLWFkZC1wb3MteScpO1xuICAgIGNvbnN0IHBvc1ogPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGFnLWFkZC1wb3MteicpO1xuICAgIGNvbnN0IG5vcm1YID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RhZy1hZGQtbm9ybS14Jyk7XG4gICAgY29uc3Qgbm9ybVkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGFnLWFkZC1ub3JtLXknKTtcbiAgICBjb25zdCBub3JtWiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YWctYWRkLW5vcm0teicpO1xuICAgIGNvbnN0IG1lZGlhVHlwZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YWctYWRkLW10eXBlJyk7XG4gICAgY29uc3QgbWVkaWFTcmMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGFnLWFkZC1tc3JjJyk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgc2hvd2Nhc2UuTWF0dGVydGFnLmFkZCh7XG4gICAgICAgIGxhYmVsOiB0aXRsZS52YWx1ZSxcbiAgICAgICAgZGVzY3JpcHRpb246IGRlc2MudmFsdWUsXG4gICAgICAgIGFuY2hvclBvc2l0aW9uOiB7XG4gICAgICAgICAgeDogcGFyc2VGbG9hdChwb3NYLnZhbHVlKSxcbiAgICAgICAgICB5OiBwYXJzZUZsb2F0KHBvc1kudmFsdWUpLFxuICAgICAgICAgIHo6IHBhcnNlRmxvYXQocG9zWi52YWx1ZSksXG4gICAgICAgIH0sXG4gICAgICAgIHN0ZW1WZWN0b3I6IHtcbiAgICAgICAgICB4OiBwYXJzZUZsb2F0KG5vcm1YLnZhbHVlKSxcbiAgICAgICAgICB5OiBwYXJzZUZsb2F0KG5vcm1ZLnZhbHVlKSxcbiAgICAgICAgICB6OiBwYXJzZUZsb2F0KG5vcm1aLnZhbHVlKSxcbiAgICAgICAgfSxcbiAgICAgICAgbWVkaWE6IG1lZGlhVHlwZS52YWx1ZSA9PT0gJycgPyB1bmRlZmluZWQgOiB7XG4gICAgICAgICAgdHlwZTptZWRpYVR5cGUudmFsdWUsXG4gICAgICAgICAgc3JjOiBtZWRpYVNyYy52YWx1ZSxcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfTtcbiAgfSgpKTtcblxuICAvLyBtb3ZlXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YWctbW92ZScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IHBvc1ggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGFnLW1vdmUtcG9zLXgnKTtcbiAgICBjb25zdCBwb3NZID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RhZy1tb3ZlLXBvcy15Jyk7XG4gICAgY29uc3QgcG9zWiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YWctbW92ZS1wb3MteicpO1xuICAgIGNvbnN0IG5vcm1YID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RhZy1tb3ZlLW5vcm0teCcpO1xuICAgIGNvbnN0IG5vcm1ZID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RhZy1tb3ZlLW5vcm0teScpO1xuICAgIGNvbnN0IG5vcm1aID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RhZy1tb3ZlLW5vcm0teicpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIHNob3djYXNlLk1hdHRlcnRhZy5lZGl0UG9zaXRpb24oc2VsZWN0ZWRUYWcudmFsdWUsIHtcbiAgICAgICAgYW5jaG9yUG9zaXRpb246IHtcbiAgICAgICAgICB4OiBwYXJzZUZsb2F0KHBvc1gudmFsdWUpLFxuICAgICAgICAgIHk6IHBhcnNlRmxvYXQocG9zWS52YWx1ZSksXG4gICAgICAgICAgejogcGFyc2VGbG9hdChwb3NaLnZhbHVlKSxcbiAgICAgICAgfSxcbiAgICAgICAgc3RlbVZlY3Rvcjoge1xuICAgICAgICAgIHg6IHBhcnNlRmxvYXQobm9ybVgudmFsdWUpLFxuICAgICAgICAgIHk6IHBhcnNlRmxvYXQobm9ybVkudmFsdWUpLFxuICAgICAgICAgIHo6IHBhcnNlRmxvYXQobm9ybVoudmFsdWUpLFxuICAgICAgICB9LFxuICAgICAgfSk7XG4gICAgfTtcbiAgfSgpKTtcblxuICAvLyByZW1vdmVcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21hdHRlcnRhZy1yZW1vdmUnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICBzaG93Y2FzZS5NYXR0ZXJ0YWcucmVtb3ZlKHNlbGVjdGVkVGFnLnZhbHVlKTtcbiAgfSk7XG5cbiAgLy8gcG9wdWxhdGUgbWVkaWEgdHlwZSBzZWxlY3RvcnNcbiAgdmFyIHRhZ01lZGlhdHlwZVNlbGVjdG9ycyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ210YWctbWVkaWEtdHlwZScpO1xuICBmb3IgKGNvbnN0IHNlbGVjdG9yIG9mIHRhZ01lZGlhdHlwZVNlbGVjdG9ycykge1xuICAgIGNsZWFyU2VsZWN0b3Ioc2VsZWN0b3IpO1xuICAgIHZhciBkZWZhdWx0T3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG4gICAgZGVmYXVsdE9wdGlvbi52YWx1ZSA9ICcnO1xuICAgIGRlZmF1bHRPcHRpb24udGV4dCA9IFwiKHNlbGVjdClcIlxuICAgIHNlbGVjdG9yLmFwcGVuZENoaWxkKGRlZmF1bHRPcHRpb24pO1xuICAgIGZvciAodmFyIG1lZGlhVHlwZSBpbiBzaG93Y2FzZS5NYXR0ZXJ0YWcuTWVkaWFUeXBlKSB7XG4gICAgICB2YXIgb3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG4gICAgICBvcHRpb24udmFsdWUgPSBzaG93Y2FzZS5NYXR0ZXJ0YWcuTWVkaWFUeXBlW21lZGlhVHlwZV07XG4gICAgICBvcHRpb24udGV4dCA9IG1lZGlhVHlwZTtcbiAgICAgIHNlbGVjdG9yLmFwcGVuZENoaWxkKG9wdGlvbik7XG4gICAgfVxuICB9XG5cbiAgLy8gTWF0dGVydGFnIEVkaXRcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21hdHRlcnRhZy1lZGl0JykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgICB2YXIgdGFnRWRpdFRpdGxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RhZy1lZGl0LXRpdGxlJyk7XG4gICAgdmFyIHRhZ0VkaXRNZWRpYSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YWctZWRpdC1tZWRpYScpO1xuICAgIHZhciB0YWdFZGl0RGVzYyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YWctZWRpdC1kZXNjJyk7XG4gICAgdmFyIHRhZ01lZGlhdHlwZVNlbGVjdG9yID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RhZy1lZGl0LW1lZGlhdHlwZScpXG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgcmVwb3J0QnVzeSgpO1xuICAgICAgc2hvd2Nhc2UuTWF0dGVydGFnLmVkaXRCaWxsYm9hcmQoc2VsZWN0ZWRUYWcudmFsdWUsIHtcbiAgICAgICAgLy8gZG9uJ3Qgc2VuZCBlbXB0eSBzdHJpbmcgaWYgaW5wdXQgZmllbGQgd2FzIGVtcHR5XG4gICAgICAgIGxhYmVsOiB0YWdFZGl0VGl0bGUudmFsdWUgfHwgdW5kZWZpbmVkLFxuICAgICAgICBkZXNjcmlwdGlvbjogdGFnRWRpdERlc2MudmFsdWUgfHwgdW5kZWZpbmVkLFxuICAgICAgICBtZWRpYTogdGFnTWVkaWF0eXBlU2VsZWN0b3IudmFsdWUgIT09ICcnID8ge1xuICAgICAgICAgIHNyYzogdGFnRWRpdE1lZGlhLnZhbHVlLFxuICAgICAgICAgIHR5cGU6IHRhZ01lZGlhdHlwZVNlbGVjdG9yLnZhbHVlLFxuICAgICAgICB9IDogdW5kZWZpbmVkLFxuICAgICAgfSlcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHRhZ0xhYmVsID0gc2VsZWN0ZWRUYWcub3B0aW9uc1tzZWxlY3RlZFRhZy5zZWxlY3RlZEluZGV4XS5pbm5lclRleHQ7XG4gICAgICAgICAgICByZXBvcnRDb21wbGV0aW9uKGBlZGl0ZWQgWyR7dGFnTGFiZWx9XSwgKFNJRD0ke3NlbGVjdGVkVGFnLnZhbHVlfSlgKTtcbiAgICAgICAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICAgIHJlcG9ydEVycm9yKGVycm9yKTtcbiAgICAgICAgICB9KTtcbiAgICB9O1xuICB9KCkpO1xuXG4gIC8vIGNvbG9yXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YWctZWRpdC1jb2xvcicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IHIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGFnLWNvbG9yLXInKTtcbiAgICBjb25zdCBnID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RhZy1jb2xvci1nJyk7XG4gICAgY29uc3QgYiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YWctY29sb3ItYicpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBzaG93Y2FzZS5NYXR0ZXJ0YWcuZWRpdENvbG9yKHNlbGVjdGVkVGFnLnZhbHVlLCB7XG4gICAgICAgIHI6IHBhcnNlRmxvYXQoci52YWx1ZSksXG4gICAgICAgIGc6IHBhcnNlRmxvYXQoZy52YWx1ZSksXG4gICAgICAgIGI6IHBhcnNlRmxvYXQoYi52YWx1ZSksXG4gICAgICB9KTtcbiAgICB9O1xuICB9KCkpO1xuXG4gIC8vIHN0ZW1cbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RhZy1lZGl0LXN0ZW0nKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCBzdGVtSGVpZ2h0RWx0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N0ZW0taGVpZ2h0Jyk7XG4gICAgY29uc3Qgc3RlbVZpc2libGVFbHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3RlbS12aXNpYmxlJyk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNvbnN0IHN0ZW1IZWlnaHQgPSBwYXJzZUZsb2F0KHN0ZW1IZWlnaHRFbHQudmFsdWUpO1xuICAgICAgY29uc3Qgc3RlbVZpc2libGUgPSBzdGVtVmlzaWJsZUVsdC5jaGVja2VkO1xuICAgICAgc2hvd2Nhc2UuTWF0dGVydGFnLmVkaXRTdGVtKHNlbGVjdGVkVGFnLnZhbHVlLCB7XG4gICAgICAgIHN0ZW1IZWlnaHQsIHN0ZW1WaXNpYmxlXG4gICAgICB9KTtcbiAgICB9O1xuICB9KCkpO1xuXG4gIC8vIE1hdHRlcnRhZyBPcGFjaXR5XG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYXR0ZXJ0YWctb3BhY2l0eS1lZGl0JykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgY29uc3QgdGFnRWRpdE9wYWNpdHkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWF0dGVydGFnLW9wYWNpdHknKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgc2hvd2Nhc2UuTWF0dGVydGFnLmVkaXRPcGFjaXR5KHNlbGVjdGVkVGFnLnZhbHVlLCBwYXJzZUZsb2F0KHRhZ0VkaXRPcGFjaXR5LnZhbHVlKSk7XG4gICAgfTtcbiAgfSgpKTtcblxuICAvLyBNYXR0ZXJ0YWcgSW5qZWN0XG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbmplY3RIVE1MJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgY29uc3Qgd2lkZ2V0VyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYXR0ZXJ0YWctaHRtbC13Jyk7XG4gICAgY29uc3Qgd2lkZ2V0SCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYXR0ZXJ0YWctaHRtbC1oJyk7XG4gICAgY29uc3Qgd2lkZ2V0U291cmNlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2luamVjdGVkSFRNTCcpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBzaG93Y2FzZS5NYXR0ZXJ0YWcuaW5qZWN0SFRNTChzZWxlY3RlZFRhZy52YWx1ZSwgd2lkZ2V0U291cmNlLnZhbHVlLCB7XG4gICAgICAgIGdsb2JhbFZhcmlhYmxlTWFwOiB7XG4gICAgICAgICAgb246ICdvbicsXG4gICAgICAgICAgb2ZmOiAnb2ZmJyxcbiAgICAgICAgICBzZW5kOiAnc2VuZCcsXG4gICAgICAgICAgdGFnOiAndGFnJyxcbiAgICAgICAgfSxcbiAgICAgICAgc2l6ZToge1xuICAgICAgICAgIHc6IHdpZGdldFcudmFsdWUgfHwgMCxcbiAgICAgICAgICBoOiB3aWRnZXRILnZhbHVlIHx8IDAsXG4gICAgICAgIH0sXG4gICAgICB9KVxuICAgICAgICAudGhlbihmdW5jdGlvbiAocG0pIHtcbiAgICAgICAgICBmdW5jdGlvbiBnZW5Db2xvcigpIHtcbiAgICAgICAgICAgIGxldCByZ2IgPSAnJztcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNjsgKytpKSB7XG4gICAgICAgICAgICAgIHJnYiArPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxNikudG9TdHJpbmcoMTYpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuICcjJyArIHJnYjtcbiAgICAgICAgICB9XG4gICAgICAgICAgLy8gZGlyZWN0bHkgY29tbXVuaWNhdGUgd2l0aCB0aGUgaWZyYW1lIHRoYXQgd2FzIGp1c3QgaW5qZWN0ZWRcbiAgICAgICAgICBwbS5vbignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ3BhZ2UgcmVjZWl2ZWQnLCBlKTtcbiAgICAgICAgICAgIGNvbnN0IG5ld0NvbG9yID0gZ2VuQ29sb3IoKTtcbiAgICAgICAgICAgIHBtLnNlbmQoJ3VwZGF0ZS5idXR0b24nLCBuZXdDb2xvciwgbmV3Q29sb3IudG9TdHJpbmcoKSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gIH0oKSk7XG5cbiAgLy8gTWF0dGVydGFnIE5hdmlnYXRpb25cbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25hdmlnYXRlVG9UYWcnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgbmF2aWdhdGlvblR5cGVTZWxlY3RvciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYXR0ZXJ0YWctbmF2aWdhdGlvbi10eXBlJyk7XG4gICAgdmFyIGZvcmNlTmF2aWdhdGlvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYXR0ZXJ0YWctbmF2aWdhdGlvbi1mb3JjZScpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXBvcnRCdXN5KCk7XG4gICAgICBzaG93Y2FzZS5NYXR0ZXJ0YWcubmF2aWdhdGVUb1RhZyhzZWxlY3RlZFRhZy52YWx1ZSwgc2hvd2Nhc2UuTWF0dGVydGFnLlRyYW5zaXRpb25bbmF2aWdhdGlvblR5cGVTZWxlY3Rvci52YWx1ZV0sIGZvcmNlTmF2aWdhdGlvbi5jaGVja2VkKVxuICAgICAgICAudGhlbihmdW5jdGlvbiAoaW5mbykge1xuICAgICAgICAgICAgdmFyIHRhZ0xhYmVsID0gc2VsZWN0ZWRUYWcub3B0aW9uc1tzZWxlY3RlZFRhZy5zZWxlY3RlZEluZGV4XS5pbm5lclRleHQ7XG4gICAgICAgICAgICByZXBvcnRDb21wbGV0aW9uKCdtb3ZlZCB0byBbJyArIHRhZ0xhYmVsICsgJ10sIChTSUQ9JyArIHNlbGVjdGVkVGFnLnZhbHVlICsgJyknKTtcbiAgICAgICAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICAgIHJlcG9ydEVycm9yKGVycm9yKTtcbiAgICAgICAgICB9KTtcbiAgICB9O1xuICB9KCkpO1xufVxuXG5mdW5jdGlvbiBzZXR1cE1hdHRlcnRhZ1ByZXZlbnQoc2hvd2Nhc2UsIHNlbGVjdGVkVGFnKSB7XG4gIHZhciBjdXJyZW50TG9ja3MgPSB7fTtcbiAgICB2YXIgbG9ja0JpbGxib2FyZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YWctbG9jay1iYicpO1xuICAgIHZhciBsb2NrTmF2aWdhdGlvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YWctbG9jay1uYXYnKTtcblxuICAgIGZ1bmN0aW9uIGdldExvY2tzKCkge1xuICAgICAgdmFyIGN1cnJlbnRMb2NrID0gY3VycmVudExvY2tzW3NlbGVjdGVkVGFnLnZhbHVlXTtcbiAgICAgIC8vIHNldCBkZWZhdWx0IGZvciB0aGUgbG9ja3MgaWYgdGhleSBhcmVuJ3QgaW4gdGhlIGNvbnRhaW5lclxuICAgICAgaWYgKCFjdXJyZW50TG9jaykge1xuICAgICAgICBjdXJyZW50TG9jayA9IHtcbiAgICAgICAgICBiaWxsYm9hcmQ6IHRydWUsXG4gICAgICAgICAgbmF2aWdhdGlvbjogdHJ1ZSxcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICAgIGN1cnJlbnRMb2Nrc1tzZWxlY3RlZFRhZy52YWx1ZV0gPSBjdXJyZW50TG9jaztcblxuICAgICAgcmV0dXJuIGN1cnJlbnRMb2NrO1xuICAgIH1cblxuICAgIHNlbGVjdGVkVGFnLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIHNldCB0aGUgY2hlY2tib3hlcyB0byB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGVcbiAgICAgIHZhciBjdXJyZW50TG9jayA9IGdldExvY2tzKCk7XG4gICAgICBsb2NrQmlsbGJvYXJkLmNoZWNrZWQgPSBjdXJyZW50TG9jay5iaWxsYm9hcmQ7XG4gICAgICBsb2NrTmF2aWdhdGlvbi5jaGVja2VkID0gY3VycmVudExvY2submF2aWdhdGlvbjtcbiAgICB9KTtcblxuICAgIGZ1bmN0aW9uIG9uTG9ja3NDaGFuZ2UoKSB7XG4gICAgICAvLyB1cGRhdGUgdGhlIHN0YXRlIG9mIHRoZSBsb2Nrc1xuICAgICAgdmFyIGN1cnJlbnRMb2NrID0gZ2V0TG9ja3MoKTtcbiAgICAgIGN1cnJlbnRMb2NrLmJpbGxib2FyZCA9IGxvY2tCaWxsYm9hcmQuY2hlY2tlZDtcbiAgICAgIGN1cnJlbnRMb2NrLm5hdmlnYXRpb24gPSBsb2NrTmF2aWdhdGlvbi5jaGVja2VkO1xuXG4gICAgICBzaG93Y2FzZS5NYXR0ZXJ0YWcucHJldmVudEFjdGlvbihzZWxlY3RlZFRhZy52YWx1ZSwge1xuICAgICAgICBvcGVuaW5nOiAhY3VycmVudExvY2suYmlsbGJvYXJkLFxuICAgICAgICBuYXZpZ2F0aW5nOiAhY3VycmVudExvY2submF2aWdhdGlvbixcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGxvY2tCaWxsYm9hcmQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgb25Mb2Nrc0NoYW5nZSk7XG4gICAgbG9ja05hdmlnYXRpb24uYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgb25Mb2Nrc0NoYW5nZSk7XG59XG4iLCJpbXBvcnQgdHlwZSB7IENTU1Byb3BlcnRpZXMsIFByb3BzV2l0aENoaWxkcmVuIH0gZnJvbSAncmVhY3QnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBoZWFkZXI6IHN0cmluZztcbn1cblxuY29uc3QgY29udHJvbFBhbmVsU3R5bGU6IENTU1Byb3BlcnRpZXMgPSB7XG4gIG92ZXJmbG93WTogJ2F1dG8nLFxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIENvbnRyb2xQYW5lbChwcm9wczogUHJvcHNXaXRoQ2hpbGRyZW48UHJvcHM+KTogSlNYLkVsZW1lbnQge1xuICByZXR1cm4gKFxuICAgIDxkaXYgc3R5bGU9e2NvbnRyb2xQYW5lbFN0eWxlfSBjbGFzc05hbWU9e2Bjb250cm9sUGFuZWxgfT5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtgY29udHJvbFBhbmVsSGVhZGVyYH0+e3Byb3BzLmhlYWRlcn08L2Rpdj5cbiAgICAgIHtwcm9wcy5jaGlsZHJlbn1cbiAgICA8L2Rpdj5cbiAgKTtcbn1cbiIsImltcG9ydCB0eXBlIHsgSW50ZXJuYWxNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuaW1wb3J0IHsgRnJhZ21lbnQsIHVzZUNhbGxiYWNrLCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuXG50eXBlIFByb3BzID0ge1xuICBzZGs6IEludGVybmFsTXBTZGsuTXBTZGs7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBHZXRWaWV3cyhwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IHNwYWNlSWRJbnB1dCA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcbiAgY29uc3QgW3RleHQsIHNldFRleHRdID0gdXNlU3RhdGU8c3RyaW5nPignJyk7XG5cbiAgY29uc3Qgb25DbGljayA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcblxuICAgIGlmIChzcGFjZUlkSW5wdXQuY3VycmVudCkge1xuICAgICAgY29uc3Qgdmlld3MgPSBhd2FpdCBwcm9wcy5zZGsuQVBJLmdldFZpZXdzKHNwYWNlSWRJbnB1dC5jdXJyZW50LnZhbHVlKTtcbiAgICAgIHNldFRleHQoYHZpZXdzOiAke0pTT04uc3RyaW5naWZ5KHZpZXdzKX1gKTtcbiAgICB9XG4gIH0sIFtwcm9wcy5zZGsuQVBJXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8RnJhZ21lbnQ+XG4gICAgICA8ZGl2PlxuICAgICAgICA8bGFiZWwgaHRtbEZvcj0nc3BhY2UtaWQnPnNwYWNlSWQ6IDwvbGFiZWw+XG4gICAgICAgIDxpbnB1dCByZWY9e3NwYWNlSWRJbnB1dH0gaWQ9J3NwYWNlLWlkJyB0eXBlPSdzdHJpbmcnIC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxidXR0b24gb25DbGljaz17b25DbGlja30+UmVnaXN0ZXI8L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgICAgPHRleHRhcmVhXG4gICAgICAgIHN0eWxlPXt7IHdpZHRoOiAnMTAwJScsIGhlaWdodDogJzgwJScgfX1cbiAgICAgICAgcmVhZE9ubHlcbiAgICAgICAgdmFsdWU9e3RleHR9XG4gICAgICAvPlxuICAgIDwvRnJhZ21lbnQ+XG4gICk7XG59XG4iLCJpbXBvcnQgdHlwZSB7IE1wU2RrLCBJbnRlcm5hbE1wU2RrIH0gZnJvbSAnQHNkay90eXBlcyc7XG5pbXBvcnQgeyBDb250cm9sUGFuZWwgfSBmcm9tICcuLi9Db250cm9sUGFuZWwnO1xuaW1wb3J0IHsgR2V0Vmlld3MgfSBmcm9tICcuL0dldFZpZXdzJztcblxudHlwZSBQcm9wcyA9IHtcbiAgc2RrOiBNcFNkaztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIEFQSShwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxDb250cm9sUGFuZWwgaGVhZGVyPXsnQVBJIC0gZ2V0Vmlld3MnfT5cbiAgICAgICAgPEdldFZpZXdzIHNkaz17cHJvcHMuc2RrIGFzIHVua25vd24gYXMgSW50ZXJuYWxNcFNkay5NcFNka30gLz5cbiAgICAgIDwvQ29udHJvbFBhbmVsPlxuICAgIDwvPlxuICApO1xufVxuIiwiaW1wb3J0IHR5cGUgeyBDU1NQcm9wZXJ0aWVzLCBTeW50aGV0aWNFdmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBJT2JzZXJ2YWJsZSB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuXG5pbnRlcmZhY2UgUHJvcHM8VD4ge1xuICBuYW1lOiBzdHJpbmc7XG4gIG9ic2VydmFibGU6IElPYnNlcnZhYmxlPFQ+XG59XG5cbmNvbnN0IHRleHRBcmVhU3R5bGU6IENTU1Byb3BlcnRpZXMgPSB7XG4gIGhlaWdodDogNTAsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gT2JzZXJ2YWJsZTxUPihwcm9wczogUHJvcHM8VD4pOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IFsgdmFsdWUsIHNldFZhbHVlXSA9IHVzZVN0YXRlPHN0cmluZz4oJycpO1xuICBjb25zdCBbIGlzU3Vic2NyaWJlZCwgc3Vic2NyaWJlIF0gPSB1c2VTdGF0ZShmYWxzZSk7XG5cbiAgY29uc3Qgc3ViID0gdXNlUmVmPGFueT4obnVsbCk7XG5cbiAgY29uc3QgZG9TdWJzY3JpcHRpb24gPSB1c2VDYWxsYmFjaygoZXZlbnQ6IFN5bnRoZXRpY0V2ZW50PEhUTUxJbnB1dEVsZW1lbnQ+KSA9PiB7XG4gICAgY29uc3QgeyBjdXJyZW50VGFyZ2V0OiBjaGVja2JveCB9ID0gZXZlbnQ7XG4gICAgaWYgKGNoZWNrYm94LmNoZWNrZWQpIHtcbiAgICAgIHN1Yi5jdXJyZW50ID0gcHJvcHMub2JzZXJ2YWJsZS5zdWJzY3JpYmUoe1xuICAgICAgICBvbkNoYW5nZWQoZGF0YTogVCkge1xuICAgICAgICAgIC8vIGlmIHRoaXMgaXMgYW4gb2JqZWN0LCBwcmVwYXJlIHRvIG1ha2UgYWx0ZXJhdGlvbnNcbiAgICAgICAgICBpZiAoZGF0YSAhPT0gbnVsbCAmJiB0eXBlb2YgZGF0YSA9PT0gJ29iamVjdCcgJiYgIUFycmF5LmlzQXJyYXkoZGF0YSkpe1xuICAgICAgICAgICAgY29uc3QgbmV3VmFsdWUgPSB7IC4uLmRhdGEgfSBhcyBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPjtcbiAgICAgICAgICAgIC8vIHNwZWNpYWwgY2FzZXMgZm9yIHRoaW5ncyBsaWtlIGBTZXRgIHRoYXQgb3RoZXJ3aXNlIGl0IHN0cmluZ2lmaWVzIHRvIGB7fWBcbiAgICAgICAgICAgIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKG5ld1ZhbHVlKSkge1xuICAgICAgICAgICAgICBjb25zdCBwcm9wVmFsdWUgPSBkYXRhW2tleSBhcyBrZXlvZiB0eXBlb2YgZGF0YV07XG4gICAgICAgICAgICAgIC8vIHN0cmluZ2lmeSBhIGBTZXRgIHRvIGxvb2sgbGlrZSBhbiBhcnJheVxuICAgICAgICAgICAgICBpZiAocHJvcFZhbHVlIGluc3RhbmNlb2YgU2V0KSB7XG4gICAgICAgICAgICAgICAgbmV3VmFsdWVba2V5XSA9IFsuLi5wcm9wVmFsdWUudmFsdWVzKCldO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZXRWYWx1ZShKU09OLnN0cmluZ2lmeShuZXdWYWx1ZSkpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBpZiBkYXRhIGlzbid0IGFuIG9iamVjdCwgcGFzcyBpdCBhcy1pc1xuICAgICAgICAgICAgc2V0VmFsdWUoSlNPTi5zdHJpbmdpZnkoZGF0YSkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdWIuY3VycmVudC5jYW5jZWwoKTtcbiAgICAgIHN1Yi5jdXJyZW50ID0gbnVsbDtcblxuICAgICAgc2V0VmFsdWUoJycpO1xuICAgIH1cblxuICAgIHN1YnNjcmliZShjaGVja2JveC5jaGVja2VkKTtcbiAgfSwgW3Byb3BzLm9ic2VydmFibGVdKTtcblxuICBjb25zdCBzZXJpYWxpemVkID0gaXNTdWJzY3JpYmVkID8gdmFsdWUgOiAnbm90IHN1YmJlZCc7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgT2JzZXJ2YWJsZToge3Byb3BzLm5hbWV9XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIHN1YnNjcmliZTogPGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG9uQ2hhbmdlPXtkb1N1YnNjcmlwdGlvbn0gLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPHRleHRhcmVhIHJvd3M9ezN9IHN0eWxlPXt0ZXh0QXJlYVN0eWxlfSByZWFkT25seSB2YWx1ZT17c2VyaWFsaXplZH0gZGlzYWJsZWQ9eyFpc1N1YnNjcmliZWR9Lz5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufVxuIiwiaW1wb3J0IHR5cGUgeyBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuaW1wb3J0IHsgRnJhZ21lbnQsIHVzZUNhbGxiYWNrLCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBzZGs6IE1wU2RrO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gVHJhY2socHJvcHM6IFByb3BzKTogSlNYLkVsZW1lbnQge1xuICBjb25zdCB0ZXh0QXJlYSA9IHVzZVJlZjxIVE1MVGV4dEFyZWFFbGVtZW50PihudWxsKTtcbiAgY29uc3QgZXZlbnRUeXBlSW5wdXQgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG4gIGNvbnN0IHZlcnNpb25JbnB1dCA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcbiAgY29uc3QgYWx3YXlzVHJhY2sgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG4gIGNvbnN0IFttZXNzYWdlLCBzZXRNZXNzYWdlXSA9IHVzZVN0YXRlPHN0cmluZz4oJycpO1xuICBjb25zdCB0cmFjayA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBpZiAodGV4dEFyZWEuY3VycmVudD8udmFsdWUpIHtcbiAgICAgIGxldCBqc29uO1xuICAgICAgdHJ5IHtcbiAgICAgICAganNvbiA9IEpTT04ucGFyc2UodGV4dEFyZWEuY3VycmVudD8udmFsdWUpO1xuICAgICAgfVxuICAgICAgY2F0Y2goZSkge1xuICAgICAgICBzZXRNZXNzYWdlKGUpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBwcm9wcy5zZGsuQXBwLnRyYWNrKGV2ZW50VHlwZUlucHV0LmN1cnJlbnQ/LnZhbHVlIHx8ICd0ZXN0RXZlbnQnLCB7XG4gICAgICAgIHZlcnNpb246IHZlcnNpb25JbnB1dC5jdXJyZW50Py52YWx1ZUFzTnVtYmVyIHx8IDEsXG4gICAgICAgIGFsd2F5c1RyYWNrOiBhbHdheXNUcmFjay5jdXJyZW50Py5jaGVja2VkLFxuICAgICAgICByZWNvcmRzOiBqc29uLFxuICAgICAgfSk7XG4gICAgfVxuICB9LCBbcHJvcHMuc2RrLkFwcCwgc2V0TWVzc2FnZV0pO1xuXG4gIHJldHVybiAoXG4gICAgPEZyYWdtZW50PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGxhYmVsIGh0bWxGb3I9J2FwcC1ldmVudHR5cGUnPmV2ZW50VHlwZTogPC9sYWJlbD5cbiAgICAgICAgPGlucHV0IHJlZj17ZXZlbnRUeXBlSW5wdXR9IGNsYXNzTmFtZT0nc21hbGwtaW5wdXQnIGlkPSdhcHAtZXZlbnR0eXBlJyBkZWZhdWx0VmFsdWU9J3Rlc3RFdmVudCcgdHlwZT0nc3RyaW5nJy8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxsYWJlbCBodG1sRm9yPSdhcHAtdmVyc2lvbic+ZXZlbnRUeXBlOiA8L2xhYmVsPlxuICAgICAgICA8aW5wdXQgcmVmPXt2ZXJzaW9uSW5wdXR9IGNsYXNzTmFtZT0nc21hbGwtaW5wdXQnIGlkPSdhcHAtdmVyc2lvbicgZGVmYXVsdFZhbHVlPScxJyBzdGVwPScxJyB0eXBlPSdudW1iZXInLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPHRleHRhcmVhXG4gICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgaGVpZ2h0OiAnN2VtJyxcbiAgICAgICAgfX1cbiAgICAgICAgcmVmPXtcbiAgICAgICAgICB0ZXh0QXJlYVxuICAgICAgICB9XG4gICAgICAgIGRlZmF1bHRWYWx1ZT17XG4gICAgICAgICAgJydcbiAgICAgICAgfVxuICAgICAgLz5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxsYWJlbCBodG1sRm9yPSdhbHdheXNUcmFjayc+YWx3YXlzVHJhY2s6IDwvbGFiZWw+XG4gICAgICAgIDxpbnB1dCByZWY9e2Fsd2F5c1RyYWNrfSBjbGFzc05hbWU9J3NtYWxsLWlucHV0JyBpZD0nYWx3YXlzVHJhY2snIGRlZmF1bHRDaGVja2VkPXt0cnVlfSB0eXBlPSdjaGVja2JveCcvPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2PlxuICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e3RyYWNrfT5UcmFjayBJdDwvYnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGlkPSdzZXR0aW5ncy1nZXQtbWVzc2FnZSc+e21lc3NhZ2V9PC9kaXY+XG4gICAgPC9GcmFnbWVudD5cbiAgKTtcbn1cbiIsImltcG9ydCB0eXBlIHsgTXBTZGsgfSBmcm9tICdAc2RrL3R5cGVzJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICcuLi9PYnNlcnZhYmxlJztcbmltcG9ydCB7IENvbnRyb2xQYW5lbCB9IGZyb20gJy4uL0NvbnRyb2xQYW5lbCc7XG5pbXBvcnQgeyBUcmFjayB9IGZyb20gJy4vdHJhY2snO1xuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2RrOiBNcFNkaztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIEFwcChwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxDb250cm9sUGFuZWwgaGVhZGVyPXsnQXBwLmZlYXR1cmVzJ30+XG4gICAgICAgIDxPYnNlcnZhYmxlXG4gICAgICAgICAgb2JzZXJ2YWJsZT17cHJvcHMuc2RrLkFwcC5mZWF0dXJlc31cbiAgICAgICAgICBuYW1lPXsnRmVhdHVyZXMnfVxuICAgICAgICAvPlxuICAgICAgPC9Db250cm9sUGFuZWw+XG4gICAgICA8Q29udHJvbFBhbmVsIGhlYWRlcj17J0FwcC50cmFjayd9PlxuICAgICAgICA8VHJhY2sgc2RrPXtwcm9wcy5zZGt9Lz5cbiAgICAgIDwvQ29udHJvbFBhbmVsPlxuICAgIDwvPlxuICApO1xufVxuIiwiaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBzZGs6IE1wU2RrO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gQXBwTG9jYWxlR2V0TGFuZ3VhZ2VDb2RlKHByb3BzOiBQcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgY29uc3QgW2xvY2FsZSwgc2V0TG9jYWxlXSA9IHVzZVN0YXRlPHN0cmluZz4oJycpO1xuXG4gIGNvbnN0IGdldExvY2FsZSA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBuZXdWYWx1ZSA9IGF3YWl0IHByb3BzLnNkay5BcHAuTG9jYWxlLmdldExhbmd1YWdlQ29kZSgpO1xuICAgIHNldExvY2FsZShgdmFsdWU6JHtuZXdWYWx1ZX1gKTtcbiAgfSwgW3Byb3BzLnNkay5BcHAuTG9jYWxlXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtnZXRMb2NhbGV9PmdldDwvYnV0dG9uPlxuICAgICAge2xvY2FsZX1cbiAgICA8Lz5cbiAgKTtcbn1cbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VTdGF0ZSwgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBzZGs6IE1wU2RrO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gQXBwTG9jYWxlR2V0VChwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IFt0cmFuc2xhdGlvbiwgc2V0VHJhbnNsYXRpb25dID0gdXNlU3RhdGU8c3RyaW5nPignJyk7XG4gIGNvbnN0IGlucHV0VmFsdWUgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG5cbiAgY29uc3QgZ2V0VCA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICBjb25zdCB0ID0gYXdhaXQgcHJvcHMuc2RrLkFwcC5Mb2NhbGUuZ2V0VCgpO1xuICAgIGlmIChpbnB1dFZhbHVlLmN1cnJlbnQ/LnZhbHVlKSB7XG4gICAgICBjb25zdCByZXR1cm5WYWx1ZSA9IHQoaW5wdXRWYWx1ZS5jdXJyZW50LnZhbHVlKTtcbiAgICAgIHNldFRyYW5zbGF0aW9uKGB2YWx1ZTogJHtyZXR1cm5WYWx1ZX1gKTtcbiAgICB9XG4gIH0sIFtwcm9wcy5zZGsuQXBwLkxvY2FsZV0pO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdj5cbiAgICAgIDxpbnB1dCByZWY9e2lucHV0VmFsdWV9IGRlZmF1bHRWYWx1ZT1cIkVYUExPUkVfM0RfU1BBQ0VcIiAvPlxuICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtnZXRUfT50PC9idXR0b24+XG4gICAgICA8YnIgLz5cbiAgICAgIHt0cmFuc2xhdGlvbn1cbiAgICA8L2Rpdj5cbiAgKTtcbn1cbiIsImltcG9ydCB0eXBlIHsgTXBTZGsgfSBmcm9tICdAc2RrL3R5cGVzJztcbmltcG9ydCB7IEFwcExvY2FsZUdldExhbmd1YWdlQ29kZSB9IGZyb20gJy4vQXBwTG9jYWxlR2V0TGFuZ3VhZ2VDb2RlJztcbmltcG9ydCB7IEFwcExvY2FsZUdldFQgfSBmcm9tICcuL0FwcExvY2FsZUdldFQnO1xuaW1wb3J0IHsgQ29udHJvbFBhbmVsIH0gZnJvbSAnLi4vQ29udHJvbFBhbmVsJztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2RrOiBNcFNkaztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIEFwcExvY2FsZShwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxDb250cm9sUGFuZWwgaGVhZGVyPXsnQXBwLkxvY2FsZSd9PlxuICAgICAgICA8QXBwTG9jYWxlR2V0TGFuZ3VhZ2VDb2RlIHNkaz17cHJvcHMuc2RrfSAvPlxuICAgICAgICA8QXBwTG9jYWxlR2V0VCBzZGs9e3Byb3BzLnNka30gLz5cbiAgICAgIDwvQ29udHJvbFBhbmVsPlxuICAgIDwvPlxuICApO1xufVxuIiwiaW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgdHlwZSBFZmZlY3Q8VCA9IHZvaWQ+ID0gKCkgPT4gVDtcblxuLyoqXG4gKiBFbXVsYXRlIHRoZSBjbGFzcyBjb21wb25lbnQgc3R5bGUgYGNvbXBvbmVudERpZE1vdW50YCBhbmQgcnVuIGFuIGBlZmZlY3RgIHdoZW4gdGhpcyBjb21wb25lbnQgbW91bnRzLlxuICogQWxzbyBzdXBwb3J0cyBhIGBjb21wb25lbnRXaWxsVW5tb3VudGAgc3R5bGUgY2FsbGJhY2sgYnkgcmV0dXJuaW5nIGFub3RoZXIgZWZmZWN0IGZyb20gYGVmZmVjdGBcbiAqXG4gKiBgYGB0c1xuICogdXNlRGlkTW91bnQoKCkgPT4ge1xuICogICAvLyBjb21wb25lbnREaWRNb3VudCBjb2RlXG4gKiAgIHJldHVybiAoKSA9PiB7XG4gKiAgICAgLy8gY29tcG9uZW50V2lsbFVubW91bnQgY29kZVxuICogICB9O1xuICogfSk7XG4gKiBgYGBcbiAqIEBwYXJhbSBlZmZlY3RcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVzZURpZE1vdW50KGVmZmVjdDogRWZmZWN0PHZvaWQgfCBFZmZlY3Q+KTogdm9pZCB7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgcmV0dXJuIGVmZmVjdCgpO1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzXG4gIH0sIFtdKTtcbn1cbiIsImltcG9ydCB7IHR5cGUgQ2hhbmdlRXZlbnQsIHVzZUNhbGxiYWNrLCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBJT2JzZXJ2YWJsZU1hcCB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuaW1wb3J0IHsgdXNlRGlkTW91bnQgfSBmcm9tICcuLi9ob29rcy91c2VEaWRNb3VudCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2VsZWN0b3JQcm9wczxUPiB7XG4gIGNvbGxlY3Rpb246IElPYnNlcnZhYmxlTWFwPFQ+O1xuICBvbkNoYW5nZWQ/KGtleTogc3RyaW5nLCB2YWx1ZTogVCB8IHVuZGVmaW5lZCk6IHZvaWQ7XG4gIGZpbHRlcj8oaXRlbTogVCk6IGJvb2xlYW47XG4gIHNvcnQ/KGl0ZW0xOiBULCBpdGVtMjogVCk6IG51bWJlcjtcbiAgLyoqIHRoZSBzdHJpbmcgdG8gc2hvdyBmb3IgZWFjaCBvcHRpb24gaW4gdGhlIHNlbGVjdG9yICovXG4gIG9wdGlvbkxhYmVsPyhpdGVtOiBUKTogc3RyaW5nO1xuICAvKiogdGhlIHN0cmluZyB0byBzaG93IGluIHRoZSBvcHRpb24ncyBob3ZlciB0ZXh0ICovXG4gIGhvdmVyTGFiZWw/KGl0ZW06IFQpOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBDb2xsZWN0aW9uU2VsZWN0PFQ+KHtcbiAgY29sbGVjdGlvbjogb2JzZXJ2YWJsZSxcbiAgb25DaGFuZ2VkLFxuICBmaWx0ZXIsXG4gIHNvcnQsXG4gIG9wdGlvbkxhYmVsLFxuICBob3ZlckxhYmVsLFxufTogU2VsZWN0b3JQcm9wczxUPik6IEpTWC5FbGVtZW50IHtcbiAgY29uc3QgW2F2YWlsYWJsZU9wdGlvbnMsIHNldEF2YWlsYWJsZU9wdGlvbnNdID0gdXNlU3RhdGUobmV3IE1hcDxzdHJpbmcsIFQ+KCkpO1xuICBjb25zdCBbc2VsZWN0ZWQsIHNldFNlbGVjdGVkXSA9IHVzZVN0YXRlKCcnKTtcbiAgY29uc3Qgc2VsZWN0UmVmID0gdXNlUmVmPEhUTUxTZWxlY3RFbGVtZW50PihudWxsKTtcblxuICBjb25zdCBvblNlbGVjdGVkQ2hhbmdlZCA9IHVzZUNhbGxiYWNrKChldmVudDogQ2hhbmdlRXZlbnQ8SFRNTFNlbGVjdEVsZW1lbnQ+KSA9PiB7XG4gICAgc2V0U2VsZWN0ZWQoZXZlbnQuY3VycmVudFRhcmdldC52YWx1ZSk7XG4gICAgaWYgKG9uQ2hhbmdlZCkge1xuICAgICAgY29uc3Qga2V5ID0gZXZlbnQudGFyZ2V0LnZhbHVlO1xuICAgICAgb25DaGFuZ2VkKGtleSwgYXZhaWxhYmxlT3B0aW9ucy5nZXQoa2V5KSBhcyBUKTtcbiAgICB9XG4gIH0sIFthdmFpbGFibGVPcHRpb25zLCBvbkNoYW5nZWRdKTtcblxuICB1c2VEaWRNb3VudCgoKSA9PiB7XG4gICAgY29uc3Qgc3Vic2NyaXB0aW9uID0gb2JzZXJ2YWJsZS5zdWJzY3JpYmUoe1xuICAgICAgb25BZGRlZChpZHgsIGl0ZW0pIHtcbiAgICAgICAgaWYgKCFmaWx0ZXIgfHwgZmlsdGVyKGl0ZW0pKSB7XG4gICAgICAgICAgYXZhaWxhYmxlT3B0aW9ucy5zZXQoaWR4LCBpdGVtKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIG9uUmVtb3ZlZChpZHgpIHtcbiAgICAgICAgYXZhaWxhYmxlT3B0aW9ucy5kZWxldGUoaWR4KTtcbiAgICAgIH0sXG4gICAgICBvblVwZGF0ZWQoaWR4LCBpdGVtKSB7XG4gICAgICAgIGlmICghZmlsdGVyIHx8IGZpbHRlcihpdGVtKSkge1xuICAgICAgICAgIGF2YWlsYWJsZU9wdGlvbnMuc2V0KGlkeCwgaXRlbSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYXZhaWxhYmxlT3B0aW9ucy5kZWxldGUoaWR4KTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIG9uQ29sbGVjdGlvblVwZGF0ZWQoY29sbGVjdGlvbikge1xuICAgICAgICBjb25zdCBrZXkgPSBjb2xsZWN0aW9uW3NlbGVjdGVkXSA/IHNlbGVjdGVkIDogT2JqZWN0LmtleXMoY29sbGVjdGlvbilbMF07XG4gICAgICAgIGlmIChvbkNoYW5nZWQpIHtcbiAgICAgICAgICBpZiAoa2V5KSB7XG4gICAgICAgICAgICBvbkNoYW5nZWQoa2V5LCBhdmFpbGFibGVPcHRpb25zLmdldChrZXkpIGFzIFQpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBvbkNoYW5nZWQoJycsIHVuZGVmaW5lZCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHNldEF2YWlsYWJsZU9wdGlvbnMobmV3IE1hcChhdmFpbGFibGVPcHRpb25zKSk7XG4gICAgICAgIHNldFNlbGVjdGVkKGtleSAhPT0gdW5kZWZpbmVkID8ga2V5IDogJycpO1xuICAgICAgfSxcbiAgICB9KTtcblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBzdWJzY3JpcHRpb24uY2FuY2VsKCk7XG4gICAgfTtcbiAgfSk7XG5cbiAgLy8gc29ydCBiYXNlZCBvbiB0aGUga2V5ICh0aGUgaWQgb2YgaXRlbXMgaW4gdGhlIGNvbGxlY3Rpb24pXG4gIGNvbnN0IGFsbEVudHJpZXMgPSBbLi4uYXZhaWxhYmxlT3B0aW9ucy5lbnRyaWVzKCldO1xuICBjb25zdCBzb3J0ZWRFbnRyaWVzID0gYWxsRW50cmllcy5zb3J0KChbLCBpdGVtMV0sIFssIGl0ZW0yXSkgPT4ge1xuICAgIGlmIChzb3J0KSB7XG4gICAgICByZXR1cm4gc29ydChpdGVtMSwgaXRlbTIpO1xuICAgIH1cbiAgICByZXR1cm4gMDtcbiAgfSk7XG5cbiAgZnVuY3Rpb24gcmVuZGVyT3B0aW9ucyhlbnRyaWVzOiBBcnJheTxbc3RyaW5nLCBUXT4pIHtcbiAgICByZXR1cm4gZW50cmllcy5tYXAoKFtrLCB2XSkgPT4ge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPG9wdGlvblxuICAgICAgICAgIGtleT17a31cbiAgICAgICAgICB2YWx1ZT17a31cbiAgICAgICAgICB0aXRsZT17aG92ZXJMYWJlbD8uKHYpfVxuICAgICAgICA+XG4gICAgICAgICAge29wdGlvbkxhYmVsID8gb3B0aW9uTGFiZWwodikgOiBrfVxuICAgICAgICA8L29wdGlvbj5cbiAgICAgICk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxzZWxlY3RcbiAgICAgIHJlZj17c2VsZWN0UmVmfVxuICAgICAgY2xhc3NOYW1lPXsnY29sbGVjdGlvbi1zZWxlY3Rvcid9XG4gICAgICBvbkNoYW5nZT17b25TZWxlY3RlZENoYW5nZWR9XG4gICAgICB2YWx1ZT17c2VsZWN0ZWR9XG4gICAgPlxuICAgICAge3NvcnRlZEVudHJpZXMubGVuZ3RoID4gMCA/XG4gICAgICAgIHJlbmRlck9wdGlvbnMoc29ydGVkRW50cmllcykgOlxuICAgICAgICA8b3B0aW9uIHZhbHVlPScnPnsnKG5vIHZhbHVlcyknfTwvb3B0aW9uPn1cbiAgICA8L3NlbGVjdD5cbiAgKTtcbn1cbiIsImltcG9ydCB0eXBlIHsgTXBTZGsgfSBmcm9tICdAc2RrL3R5cGVzJztcbmltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB0eXBlIHsgU2VsZWN0b3JQcm9wcyB9IGZyb20gJy4vQ29sbGVjdGlvblNlbGVjdG9yJztcbmltcG9ydCB7IENvbGxlY3Rpb25TZWxlY3QgfSBmcm9tICcuL0NvbGxlY3Rpb25TZWxlY3Rvcic7XG5pbXBvcnQgeyBDb250cm9sUGFuZWwgfSBmcm9tICcuL0NvbnRyb2xQYW5lbCc7XG5cbnR5cGUgVHJhbnNmb3Jtc0ZvcjxUPiA9IHtcbiAgW0sgaW4gIGtleW9mIFRdOiAoaXRlbTogVFtLXSkgPT4gdW5rbm93bjtcbn1cblxudHlwZSBQcm9wczxUPiA9IFNlbGVjdG9yUHJvcHM8VD4gJiB7XG4gIGNvbGxlY3Rpb246IE1wU2RrLklPYnNlcnZhYmxlTWFwPFQ+O1xuICBsYWJlbDogc3RyaW5nO1xuICAvKiogaWYgdGhlIG9iamVjdCB0byBpbnNlcGN0IGhhcyBnZXR0ZXJzLCBwcm92aWRpbmcgdGhlaXIga2V5cyBoZXJlIHdpbGwgZW51bWVyYXRlIGFuZCBpbmNsdWRlIHRoZW0gaW4gdGhlIG91dHB1dCAqL1xuICBhZGRpdGlvbmFsUHJvcGVydGllcz86IEFycmF5PGtleW9mIFQ+O1xuICBwcm9wZXJ0eVRyYW5zZm9ybXM/OiBQYXJ0aWFsPFRyYW5zZm9ybXNGb3I8VD4+O1xufTtcblxuLyoqXG4gKiBJbnBzZWN0IGFuIFNESyBDb2xsZWN0aW9uIGJ5IHNob3dpbmcgdGhlIHNlbGVjdGVkIGl0ZW0ncyBjb250ZW50cyBpbiBhIHRleHRhcmVhLlxuICogVGhpcyBpcyBhbiBleHRlbnNpb25zIG9mIHRoZSBgQ29sbGVjdGlvblNlbGVjdGAgYW5kIGFjY2VwdHMgYWxsIHRoZSBzYW1lIHByb3BzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gQ29sbGVjdGlvbkluc3BlY3RvcjxUPihwcm9wczogUHJvcHM8VD4pOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IFtzZWxlY3RlZEl0ZW0sIHNlbGVjdEl0ZW1dID0gdXNlU3RhdGU8VCB8IG51bGw+KCk7XG5cbiAgY29uc3Qgb25DaGFuZ2VkID0gdXNlQ2FsbGJhY2soKGlkOiBzdHJpbmcsIGl0ZW06IFQgfCBudWxsKSA9PiB7XG4gICAgaWYgKCFpdGVtKSB7XG4gICAgICBzZWxlY3RJdGVtKG51bGwpO1xuICAgICAgcHJvcHMub25DaGFuZ2VkPy4oJycsIHVuZGVmaW5lZCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IG91dHB1dCA9IHsgLi4uaXRlbSB9O1xuICAgICAgKHByb3BzLmFkZGl0aW9uYWxQcm9wZXJ0aWVzIHx8IFtdKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgb3V0cHV0W2tleV0gPSBpdGVtW2tleV07XG4gICAgICB9KTtcblxuICAgICAgc2VsZWN0SXRlbShvdXRwdXQpO1xuICAgICAgcHJvcHMub25DaGFuZ2VkPy4oaWQsIGl0ZW0pO1xuICAgIH1cbiAgfSwgW3Byb3BzXSk7XG5cbiAgZnVuY3Rpb24gc2VyaWFsaXplT3V0cHV0KGl0ZW06IFQpOiBzdHJpbmcge1xuICAgIGNvbnN0IG91dHB1dCA9IHsgLi4uaXRlbSB9IGFzIFJlY29yZDxzdHJpbmcsIHVua25vd24+O1xuICAgIGlmIChwcm9wcy5wcm9wZXJ0eVRyYW5zZm9ybXMpIHtcbiAgICAgIC8vIHR5cGVzY3JpcHQgbWFrZXMgaXQgUkVFRUVFQUFBQUxMTCBoYXJkIHRvIGRvIGFuIE9iamVjdC5lbnRyaWVzIGZvciBhbiBvYmplY3QgdGhhdCBkb2Vzbid0IGhhdmUgXCJzdGFuZGFyZFwiIHN0cmluZyBrZXlzLi4uXG4gICAgICBjb25zdCB0cmFuc2Zvcm1SZWNvcmQgPSBwcm9wcy5wcm9wZXJ0eVRyYW5zZm9ybXMgYXMgUmVjb3JkPHN0cmluZywgVHJhbnNmb3Jtc0ZvcjxUPltrZXlvZiBUXT47XG4gICAgICBmb3IgKGNvbnN0IFtrZXksIHRyYW5zZm9ybV0gb2YgT2JqZWN0LmVudHJpZXM8VHJhbnNmb3Jtc0ZvcjxUPltrZXlvZiBUXT4odHJhbnNmb3JtUmVjb3JkKSkge1xuICAgICAgICBvdXRwdXRba2V5XSA9IHRyYW5zZm9ybShpdGVtW2tleSBhcyBrZXlvZiBUXSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KG91dHB1dCwgbnVsbCwgJyAgJyk7XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxDb250cm9sUGFuZWwgaGVhZGVyPXtgJHtwcm9wcy5sYWJlbH0gLSBTZWxlY3RvcmB9PlxuICAgICAgPGRpdj5cbiAgICAgICAge3Byb3BzLmxhYmVsICsgJzonfVxuICAgICAgICA8Q29sbGVjdGlvblNlbGVjdFxuICAgICAgICAgIGNvbGxlY3Rpb249e3Byb3BzLmNvbGxlY3Rpb259XG4gICAgICAgICAgb25DaGFuZ2VkPXtvbkNoYW5nZWR9XG4gICAgICAgICAgc29ydD17cHJvcHMuc29ydH1cbiAgICAgICAgICBvcHRpb25MYWJlbD17cHJvcHMub3B0aW9uTGFiZWx9XG4gICAgICAgICAgaG92ZXJMYWJlbD17cHJvcHMuaG92ZXJMYWJlbH1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPHRleHRhcmVhXG4gICAgICAgICAgc3R5bGU9e3sgd2lkdGg6ICcxMDAlJywgaGVpZ2h0OiAnODAlJyB9fVxuICAgICAgICAgIHJlYWRPbmx5XG4gICAgICAgICAgdmFsdWU9e3NlbGVjdGVkSXRlbSA/IHNlcmlhbGl6ZU91dHB1dChzZWxlY3RlZEl0ZW0pIDogJyd9XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICA8L0NvbnRyb2xQYW5lbD5cbiAgKTtcbn1cbiIsImltcG9ydCB0eXBlIHsgTXBTZGsgfSBmcm9tICdAc2RrL3R5cGVzJztcbmltcG9ydCB7IEZyYWdtZW50LCB1c2VDYWxsYmFjaywgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlRGlkTW91bnQgfSBmcm9tICcuLi8uLi9ob29rcy91c2VEaWRNb3VudCc7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHNkazogTXBTZGs7XG4gIG9uUmVnaXN0ZXIoaWQ6IHN0cmluZywgc3JjOiBzdHJpbmcpOiB2b2lkO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gUmVnaXN0ZXIocHJvcHM6IFByb3BzKTogSlNYLkVsZW1lbnQge1xuICBjb25zdCBpZElucHV0ID0gdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwpO1xuICBjb25zdCBzcmNJbnB1dCA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcblxuICBjb25zdCByZWdpc3RlciA9IHVzZUNhbGxiYWNrKGFzeW5jIChpZDogc3RyaW5nLCBzcmM6IHN0cmluZykgPT4ge1xuICAgIGF3YWl0IHByb3BzLnNkay5Bc3NldC5yZWdpc3RlclRleHR1cmUoaWQsIHNyYyk7XG4gICAgcHJvcHMub25SZWdpc3RlcihpZCwgc3JjKTtcbiAgfSwgW3Byb3BzXSk7XG5cbiAgY29uc3QgcmVnaXN0ZXJUZXh0dXJlID0gdXNlQ2FsbGJhY2soYXN5bmMgKCkgPT4ge1xuICAgIGlmIChpZElucHV0LmN1cnJlbnQgJiYgc3JjSW5wdXQuY3VycmVudCkge1xuICAgICAgcmVnaXN0ZXIoaWRJbnB1dC5jdXJyZW50LnZhbHVlLCBzcmNJbnB1dC5jdXJyZW50LnZhbHVlKTtcbiAgICB9XG4gIH0sIFtyZWdpc3Rlcl0pO1xuXG4gIHVzZURpZE1vdW50KCgpID0+IHtcbiAgICBjb25zdCBpbml0aWFsSWNvbnM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gPSB7XG4gICAgICBDaHJvbWU6ICAnaW1hZ2VzL2Nocm9tZS5wbmcnLFxuICAgICAgRmlyZWZveDogJ2ltYWdlcy9maXJlZm94LnBuZycsXG4gICAgICBFZGdlOiAgICAnaW1hZ2VzL2VkZ2UucG5nJyxcbiAgICAgIFJlZEtleVNWRzogJ2ltYWdlcy8nICsgZW5jb2RlVVJJQ29tcG9uZW50KCdtYW5hZ2VtZW50K3Blcm1pc3Npb25zLXNpbXBsZV93LnN2ZycpLFxuICAgICAgUmVkUGluUE5HOiAnaW1hZ2VzLzM2MF9wbGFjZW1lbnRfcGluX21hc2sucG5nJyxcbiAgICAgIFVWR3JpZEpQRzogJ2ltYWdlcy91dl9ncmlkX29wZW5nbC5qcGcnLFxuICAgIH07XG4gICAgZm9yIChjb25zdCBrZXkgaW4gaW5pdGlhbEljb25zKSB7XG4gICAgICByZWdpc3RlcihrZXksIGluaXRpYWxJY29uc1trZXldKTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiAoXG4gICAgPEZyYWdtZW50PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGxhYmVsIGh0bWxGb3I9J2Fzc2V0LWlkJz5pZDogPC9sYWJlbD5cbiAgICAgICAgPGlucHV0IHJlZj17aWRJbnB1dH0gY2xhc3NOYW1lPSdzbWFsbC1pbnB1dCcgaWQ9J2Fzc2V0LWlkJyB0eXBlPSdzdHJpbmcnLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGxhYmVsIGh0bWxGb3I9J2Fzc2V0LXNyYyc+c3JjOiA8L2xhYmVsPlxuICAgICAgICA8aW5wdXQgcmVmPXtzcmNJbnB1dH0gY2xhc3NOYW1lPSdzbWFsbC1pbnB1dCcgaWQ9J2Fzc2V0LXNyYycgdHlwZT0nc3RyaW5nJy8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxidXR0b24gaWQ9J2Fzc2V0LXJlZ2lzdGVyJyBvbkNsaWNrPXtyZWdpc3RlclRleHR1cmV9PlJlZ2lzdGVyPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICA8L0ZyYWdtZW50PlxuICApO1xufVxuIiwiaW1wb3J0IHR5cGUgeyBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuaW1wb3J0IFJlYWN0LCB7IEZyYWdtZW50LCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IENvbGxlY3Rpb25JbnNwZWN0b3IgfSBmcm9tICcuLi9Db2xsZWN0aW9uSW5zcGVjdG9yJztcbmltcG9ydCB7IEFzc2V0Q29sbGVjdGlvbkFkYXB0ZXIgfSBmcm9tICcuL0Fzc2V0Q29sbGVjdGlvbic7XG5pbXBvcnQgeyBDb250cm9sUGFuZWwgfSBmcm9tICcuLi9Db250cm9sUGFuZWwnO1xuaW1wb3J0IHsgUmVnaXN0ZXIgfSBmcm9tICcuL1JlZ2lzdGVyJztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2RrOiBNcFNkaztcbiAgYXNzZXRzOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+O1xuICBzZXRBc3NldHM6IFJlYWN0LkRpc3BhdGNoPFJlYWN0LlNldFN0YXRlQWN0aW9uPFJlY29yZDxzdHJpbmcsIHN0cmluZz4+PjtcbiAgc2V0U2VsZWN0ZWRBc3NldChhc3NldElkOiBzdHJpbmcpOiB2b2lkO1xufVxuXG5jb25zdCBhc3NldENvbGxlY3Rpb24gPSBuZXcgQXNzZXRDb2xsZWN0aW9uQWRhcHRlcigpO1xuXG5leHBvcnQgZnVuY3Rpb24gQXNzZXQocHJvcHM6IFByb3BzKTogSlNYLkVsZW1lbnQge1xuICBjb25zdCBvblJlZ2lzdGVyID0gdXNlQ2FsbGJhY2soKGlkOiBzdHJpbmcsIHNyYzogc3RyaW5nKSA9PiB7XG4gICAgcHJvcHMuc2V0QXNzZXRzKChjdXJyZW50QXNzZXRzKSA9PiAoe1xuICAgICAgLi4uY3VycmVudEFzc2V0cyxcbiAgICAgIFtpZF06IHNyYyxcbiAgICB9KSk7XG4gICAgYXNzZXRDb2xsZWN0aW9uLmFkZChpZCwgeyBpZCwgc3JjIH0pO1xuICB9LCBbcHJvcHNdKTtcblxuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDxDb2xsZWN0aW9uSW5zcGVjdG9yXG4gICAgICAgIGNvbGxlY3Rpb249e2Fzc2V0Q29sbGVjdGlvbn1cbiAgICAgICAgbGFiZWw9eydBc3NldCd9XG4gICAgICAgIG9uQ2hhbmdlZD17cHJvcHMuc2V0U2VsZWN0ZWRBc3NldH1cbiAgICAgIC8+XG5cbiAgICAgIDxDb250cm9sUGFuZWwgaGVhZGVyPXsnQXNzZXQgLSBSZWdpc3Rlcid9PlxuICAgICAgICA8UmVnaXN0ZXIgc2RrPXtwcm9wcy5zZGt9IG9uUmVnaXN0ZXI9e29uUmVnaXN0ZXJ9IC8+XG4gICAgICA8L0NvbnRyb2xQYW5lbD5cbiAgICA8L0ZyYWdtZW50PlxuICApO1xufVxuXG4iLCJpbXBvcnQgdHlwZSB7IE1wU2RrIH0gZnJvbSAnQHNkay90eXBlcyc7XG5cbmV4cG9ydCB0eXBlIEFzc2V0ID0ge1xuICBpZDogc3RyaW5nO1xuICBzcmM6IHN0cmluZztcbn07XG4vKipcbiAqIFNpbmNlIHdlIGRvbnQnIGV4cG9zZSBhIGNvbGxlY3Rpb24gb2YgbXBTZGsuQXNzZXRcbiAqL1xuZXhwb3J0IGNsYXNzIEFzc2V0Q29sbGVjdGlvbkFkYXB0ZXIge1xuICBwcml2YXRlIG9ic2VydmVycyA9IG5ldyBTZXQ8TXBTZGsuSU1hcE9ic2VydmVyPEFzc2V0Pj4oKTtcbiAgcHJpdmF0ZSBhc3NldHM6IE1wU2RrLkRpY3Rpb25hcnk8QXNzZXQ+ID0ge1xuICAgICpbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICAgIGZvciAoY29uc3Qga2V5IGluIHRoaXMuYXNzZXRzKSB7XG4gICAgICAgIHlpZWxkIFtrZXksIHRoaXMuYXNzZXRzW2tleV1dO1xuICAgICAgfVxuICAgIH0sXG4gIH07XG5cbiAgY29uc3RydWN0b3IoKSB7fVxuICBwdWJsaWMgc3Vic2NyaWJlKG9ic2VydmVyOiBNcFNkay5JTWFwT2JzZXJ2ZXI8QXNzZXQ+KTogTXBTZGsuSVN1YnNjcmlwdGlvbiB7XG4gICAgdGhpcy5vYnNlcnZlcnMuYWRkKG9ic2VydmVyKTtcbiAgICByZXR1cm4ge1xuICAgICAgY2FuY2VsOiAoKSA9PiB7XG4gICAgICAgIHRoaXMub2JzZXJ2ZXJzLmRlbGV0ZShvYnNlcnZlcik7XG4gICAgICB9LFxuICAgIH07XG4gIH1cblxuICBwdWJsaWMgd2FpdFVudGlsKGNvbmRpdGlvbjogTXBTZGsuSUNvbmRpdGlvbjxNcFNkay5EaWN0aW9uYXJ5PEFzc2V0Pj4gfCBNcFNkay5Db25kaXRpb25DYWxsYmFjazxNcFNkay5EaWN0aW9uYXJ5PEFzc2V0Pj4pOiBQcm9taXNlPE1wU2RrLkRpY3Rpb25hcnk8QXNzZXQ+PiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlcyA9PiB7XG4gICAgICBjb25zdCBvYnNlcnZlcjogTXBTZGsuSU1hcE9ic2VydmVyPEFzc2V0PiA9IHtcbiAgICAgICAgb25Db2xsZWN0aW9uVXBkYXRlZChjb2xsZWN0aW9uKSB7XG4gICAgICAgICAgY29uc3QgY29uZGl0aW9uQ2FsbGJhY2sgPSB0eXBlb2YgY29uZGl0aW9uID09PSAnZnVuY3Rpb24nID8gY29uZGl0aW9uIDogY29uZGl0aW9uLndhaXRVbnRpbC5iaW5kKGNvbmRpdGlvbik7XG4gICAgICAgICAgaWYgKGNvbmRpdGlvbkNhbGxiYWNrKGNvbGxlY3Rpb24pKSB7XG4gICAgICAgICAgICB0aGlzLm9ic2VydmVycy5kZWxldGUodGhpcyk7XG4gICAgICAgICAgICByZXMoY29sbGVjdGlvbik7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgfTtcblxuICAgICAgdGhpcy5vYnNlcnZlcnMuYWRkKG9ic2VydmVyKTtcbiAgICB9KTtcbiAgfVxuXG4gIHB1YmxpYyBhZGQoaWQ6IHN0cmluZywgYXNzZXQ6IEFzc2V0KTogdm9pZCB7XG4gICAgdGhpcy5hc3NldHNbaWRdID0gYXNzZXQ7XG4gICAgZm9yIChjb25zdCBvYnNlcnZlciBvZiB0aGlzLm9ic2VydmVycykge1xuICAgICAgb2JzZXJ2ZXIub25BZGRlZD8uKGlkLCBhc3NldCwgdGhpcy5hc3NldHMpO1xuICAgICAgb2JzZXJ2ZXIub25Db2xsZWN0aW9uVXBkYXRlZD8uKHRoaXMuYXNzZXRzKTtcbiAgICB9XG4gIH1cbn1cbiIsImltcG9ydCB0eXBlIHsgTXBTZGsgfSBmcm9tICdAc2RrL3R5cGVzJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICcuLi9PYnNlcnZhYmxlJztcbmltcG9ydCB7IENvbnRyb2xQYW5lbCB9IGZyb20gJy4uL0NvbnRyb2xQYW5lbCc7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHNkazogTXBTZGs7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBDYW1lcmEocHJvcHM6IFByb3BzKTogSlNYLkVsZW1lbnQge1xuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8Q29udHJvbFBhbmVsIGhlYWRlcj17J0NhbWVyYSAtIFBvc2UnfT5cbiAgICAgICAgPE9ic2VydmFibGUgb2JzZXJ2YWJsZT17cHJvcHMuc2RrLkNhbWVyYS5wb3NlfSBuYW1lPSdDYW1lcmEucG9zZScgLz5cbiAgICAgIDwvQ29udHJvbFBhbmVsPlxuICAgIDwvPlxuICApO1xufVxuIiwiaW1wb3J0IHR5cGUgeyBJT2JzZXJ2YWJsZSB9IGZyb20gJy4vZ2xvYmFsJztcblxuZXhwb3J0IG5hbWVzcGFjZSBBcHAge1xuXG4gICAvKipcbiAgICogYHZlcnNpb25gIC0gYWxsb3dzIHNlZ21lbnRpbmcgdGhlIGRhdGEgYnkgdmVyc2lvbi5cbiAgICogYHJlY29yZHNgIC0gYWNjZXB0cyBhbiBvYmplY3Qgb2YgcmVjb3JkcyB0byBiZSByZXBvcnRlZC5cbiAgICogYGFsd2F5c1RyYWNrYCAtIHdpbGwgZGlzYWJsZSB0aGUgZGVmYXVsdCBmaWx0ZXIgdGhhdCBpZ25vcmVzIHN1YnNlcXVlbnQgdHJhY2tpbmcgb2YgdGhlIHNhbWUgZmFjdC5cblxuICAgKiBAaGlkZGVuXG4gICAqIEBpbnRlcm5hbFxuICAgKiBAZXhwZXJpbWVudGFsXG4gICAqL1xuICBleHBvcnQgdHlwZSBUcmFja09wdGlvbnNUID0ge1xuICAgIHZlcnNpb24/OiBudW1iZXI7XG4gICAgYWx3YXlzVHJhY2s/OiBib29sZWFuO1xuICAgIHJlY29yZHM/OiBSZWNvcmQ8c3RyaW5nLCBudW1iZXJ8c3RyaW5nPjtcbiAgfTtcblxuICBleHBvcnQgZW51bSBFdmVudCB7XG4gICAgUEhBU0VfQ0hBTkdFID0gJ2FwcGxpY2F0aW9uLnBoYXNlY2hhbmdlJyxcbiAgfVxuICAvKipcbiAgICogQXBwbGljYXRpb24gcGhhc2VzIGFyZSByZXR1cm5lZCBhcyBwYXJ0IG9mIHRoZSBbW3N0YXRlXV0gb2JzZXJ2YWJsZS5cbiAgICpcbiAgICogYGBgXG4gICAqIG1wU2RrLkFwcC5zdGF0ZS5zdWJzY3JpYmUoZnVuY3Rpb24gKGFwcFN0YXRlKSB7XG4gICAqICBpZihhcHBTdGF0ZS5waGFzZSA9PT0gbXBTZGsuQXBwLlBoYXNlLkxPQURJTkcpIHtcbiAgICogICAgY29uc29sZS5sb2coJ1RoZSBhcHAgaGFzIHN0YXJ0ZWQgbG9hZGluZyEnKVxuICAgKiAgfVxuICAgKiAgaWYoYXBwU3RhdGUucGhhc2UgPT09IG1wU2RrLkFwcC5QaGFzZS5TVEFSVElORykge1xuICAgKiAgICBjb25zb2xlLmxvZygnVGhlIHRyYW5zaXRpb24gaW50byB0aGUgc3RhcnQgbG9jYXRpb24gYmVnaW5zIScpXG4gICAqICB9XG4gICAqICBpZihhcHBTdGF0ZS5waGFzZSA9PT0gbXBTZGsuQXBwLlBoYXNlLlBMQVlJTkcpIHtcbiAgICogICAgY29uc29sZS5sb2coJ1RoZSBhcHAgaXMgcmVhZHkgdG8gdGFrZSB1c2VyIGlucHV0IG5vdyEnKVxuICAgKiAgfVxuICAgKiB9KTtcbiAgICogYGBgXG4gICAqL1xuICBleHBvcnQgZW51bSBQaGFzZSB7XG4gICAgVU5JTklUSUFMSVpFRCA9ICdhcHBwaGFzZS51bmluaXRpYWxpemVkJyxcbiAgICBXQUlUSU5HID0gJ2FwcHBoYXNlLndhaXRpbmcnLFxuICAgIExPQURJTkcgPSAnYXBwcGhhc2UubG9hZGluZycsXG4gICAgU1RBUlRJTkcgPSAnYXBwcGhhc2Uuc3RhcnRpbmcnLFxuICAgIFBMQVlJTkcgPSAnYXBwcGhhc2UucGxheWluZycsXG4gICAgRVJST1IgPSAnYXBwcGhhc2UuZXJyb3InLFxuICB9XG5cbiAgLyoqXG4gICAqIEFwcGxpY2F0aW9uXG4gICAqL1xuICBleHBvcnQgZW51bSBBcHBsaWNhdGlvbiB7XG4gICAgVU5LTk9XTiA9ICdhcHBsaWNhdGlvbi51bmtub3duJyxcbiAgICBXRUJWUiA9ICdhcHBsaWNhdGlvbi53ZWJ2cicsXG4gICAgU0hPV0NBU0UgPSAnYXBwbGljYXRpb24uc2hvd2Nhc2UnLFxuICAgIFdPUktTSE9QID0gJ2FwcGxpY2F0aW9uLndvcmtzaG9wJyxcbiAgfVxuXG4gIC8qKlxuICAgKiBGZWF0dXJlIGF2YWlsYWJpbGl0eSBhbmQgYWN0aXZhdGlvbiBkYXRhIGlzIHJldHVybmVkIGFzIGEgcGFydCBvZiB0aGUgW1tmZWF0dXJlc11dIG9ic2VydmFibGUuXG4gICAqL1xuICBleHBvcnQgZW51bSBGZWF0dXJlIHtcbiAgICBSb29tQm91bmRzID0gJ2ZlYXR1cmUucm9vbWJvdW5kcycsXG4gICAgRGVmdXJuaXNoID0gJ2ZlYXR1cmUuZGVmdXJuaXNoJyxcbiAgfVxuXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBUaGlzIHR5cGUgaXMgdXNlZCBieSBkZXByZWNhdGVkIGZ1bmN0aW9uYWxpdHkuIFVzZSBbW3N0YXRlXV0gb2JzZXJ2YWJsZS5cbiAgICovXG4gIGV4cG9ydCB0eXBlIEFwcFN0YXRlID0ge1xuICAgIGFwcGxpY2F0aW9uOiBBcHBsaWNhdGlvbjtcbiAgICBwaGFzZTogUGhhc2U7XG4gIH07XG5cbiAgLyoqXG4gICAqICBBbiBvYnNlcnZhYmxlIGNvbGxlY3Rpb24gb2YgZmVhdHVyZXMgYW5kIHRoZWlyIHN0YXRlXG4gICAqICAndHJ1ZScgICAgICAtIEZlYXR1cmUgaXMgYXZhaWxhYmxlXG4gICAqICAnZmFsc2UnICAgICAtIEZlYXR1cmUgaXMgbm90IGF2YWlsYWJsZVxuICAgKiAgJ3VuZGVmaW5lZCcgLSBGZWF0dXJlIGF2YWlsYWJpbGl0eSBjYW5ub3QgYmUgZGV0ZXJtaW5lZC5cbiAgICovXG4gIGV4cG9ydCB0eXBlIEZlYXR1cmVzID0gUmVjb3JkPEZlYXR1cmUsIGJvb2xlYW4gfCB1bmRlZmluZWQ+O1xuXG4gIGV4cG9ydCB0eXBlIFN0YXRlID0ge1xuICAgIGFwcGxpY2F0aW9uOiBBcHBsaWNhdGlvbjtcbiAgICBwaGFzZTogUGhhc2U7XG4gICAgLyoqXG4gICAgICogQW4gb2JqZWN0IHdob3NlIGtleXMgYXJlIHBoYXNlcyBmcm9tIFtbUGhhc2VdXVxuICAgICAqIGFuZCB2YWx1ZXMgYXJlIGVwb2NoIHRpbWUgaW4gbWlsbGlzZWNvbmRzLlxuICAgICAqIFRoZSB0aW1lcyBhcmUgZmlsbGVkIGluIGFmdGVyIHRoZSBwaGFzZSBoYXMgcGFzc2VkLlxuICAgICAqIGBgYFxuICAgICAqIHtcbiAgICAgKiAgICBwaGFzZVRpbWVzOiB7XG4gICAgICogICAgICAnYXBwcGhhc2UudW5pbml0aWFsaXplZCc6IDE1NzAwODQxNTY1OTAsXG4gICAgICogICAgICAnYXBwcGhhc2Uud2FpdGluZyc6IDAsXG4gICAgICogICAgICAnYXBwcGhhc2UubG9hZGluZyc6IDAsXG4gICAgICogICAgICAnYXBwcGhhc2Uuc3RhcnRpbmcnOiAwLFxuICAgICAqICAgICAgJ2FwcHBoYXNlLnBsYXlpbmcnOiAwLFxuICAgICAqICAgICAgJ2FwcHBoYXNlLmVycm9yJzogMCxcbiAgICAgKiAgICB9XG4gICAgICogfVxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIHBoYXNlVGltZXM6IHtcbiAgICAgIFtwaGFzZTogc3RyaW5nXTogbnVtYmVyO1xuICAgIH07XG4gIH07XG4gIC8qKlxuICAgKiAgQXBwLkxvY2FsZSBNb2R1bGUgZm9yIEludGVybmFsIFVzZS5cbiAgICpcbiAgICogQGhpZGRlblxuICAgKiBAaW50ZXJuYWxcbiAgICogQGV4cGVyaW1lbnRhbFxuICAgKi9cbiAgZXhwb3J0IGRlY2xhcmUgbmFtZXNwYWNlIExvY2FsZSB7XG4gICAgLyoqXG4gICAgICogUmV0dXJuIHRoZSBsYW5ndWFnZSBjb2RlIGN1cnJlbnRseSB1c2VkIGJ5IFNob3djYXNlLlxuICAgICAqXG4gICAgICogYGBgXG4gICAgICogY29uc3QgbG9jYWxlID0gYXdhaXQgbXBTZGsuQXBwLkxvY2FsZS5nZXRMYW5ndWFnZUNvZGUoKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEByZXR1cm4gc3RyaW5nXG4gICAgICpcbiAgICAgKiBAaGlkZGVuXG4gICAgICogQGludGVybmFsXG4gICAgICogQGV4cGVyaW1lbnRhbFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGdldExhbmd1YWdlQ29kZSgpOiBQcm9taXNlPHN0cmluZz47XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgdHJhbnNsYXRpb24gZnVuY3Rpb24gdG8gdXNlIHdpdGggcmVnaXN0ZXJlZCBzdHJpbmdzLlxuICAgICAqXG4gICAgICogYGBgXG4gICAgICogY29uc3QgdCA9IG1wU2RrLkFwcC5Mb2NhbGUuZ2V0VCgpO1xuICAgICAqIGxldCBzdHJpbmcgPSB0KCdFWFBMT1JFXzNEX1NQQUNFJyk7XG4gICAgICogY29uc29sZS5sb2coc3RyaW5nKTtcbiAgICAgKiBgYGBcbiAgICAgKiBvdXRwdXQgKGlmIGxvY2FsZSBpcyAnZXMnKTpcbiAgICAgKiA+IEV4cGxvcmFyIGVsIGVzcGFjaW8gM0RcbiAgICAgKlxuICAgICAqIEByZXR1cm4gdChrZXk6IHN0cmluZywgb3B0aW9ucz86IG51bWJlcik6IHN0cmluZ1xuICAgICAqXG4gICAgICogQGhpZGRlblxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqIEBleHBlcmltZW50YWxcbiAgICAgKlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGdldFQoKTogUHJvbWlzZTwoa2V5OiBzdHJpbmcsIG9wdGlvbnM/OiBudW1iZXIpID0+IHN0cmluZz47XG4gIH1cblxufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFwcCB7XG4gIEV2ZW50OiB0eXBlb2YgQXBwLkV2ZW50O1xuICBGZWF0dXJlOiB0eXBlb2YgQXBwLkZlYXR1cmU7XG4gIFBoYXNlOiB0eXBlb2YgQXBwLlBoYXNlO1xuICBBcHBsaWNhdGlvbjogdHlwZW9mIEFwcC5BcHBsaWNhdGlvbjtcblxuICAvKipcbiAgICogQW4gb2JzZXJ2YWJsZSBsaXN0IG9mIGZlYXR1cmVzLCB0aGVpciBhdmFpbGFiaWxpdHkgYW5kIHRoZWlyIHByZXNlbmNlIGluIFNob3djYXNlLlxuICAgKlxuICAgKiBgYGB0eXBlc2NyaXB0XG4gICAqIEFwcC5mZWF0dXJlcy5zdWJzY3JpYmUoe1xuICAgKiAgIG9uQ2hhbmdlZChmZWF0dXJlcykge1xuICAgKiAgICAgLy8gcm9vbSBib3VuZHMgc2V0dGluZyBoYXMgY2hhbmdlZFxuICAgKiAgICAgaWYgKGZlYXR1cmVzW0FwcC5GZWF0dXJlLlJvb21Cb3VuZHNdICE9PSB1bmRlZmluZWQpIHtcbiAgICogICAgICAgY29uc29sZS5sb2coJ1Jvb21Cb3VuZHMgYXJlICcsIGZlYXR1cmVzW0FwcC5GZWF0dXJlLlJvb21Cb3VuZHNdID8gJ2F2YWlsYWJsZScgOiAndW5hdmFpbGFibGUnKTtcbiAgICogICAgIH1cbiAgICogICAgIGVsc2Uge1xuICAgKiAgICAgICBjb25zb2xlLmxvZygnUm9vbUJvdW5kcyBhcmUgdW5hdmFpbGFibGUuJyk7XG4gICAqICAgICB9XG4gICAqICAgfVxuICAgKiB9KTtcbiAgICogYGBgXG4gICAqIEBlbWJlZFxuICAgKiBAYnVuZGxlXG4gICAqIEBpbnRyb2R1Y2VkIDI0LjkuM1xuICAgKi9cbiAgZmVhdHVyZXM6IElPYnNlcnZhYmxlPEFwcC5GZWF0dXJlcz47XG5cbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFVzZSBbW3N0YXRlXV0gb2JzZXJ2YWJsZSB0byBnZXQgdGhlIGN1cnJlbnQgcGhhc2Ugb3IgYXBwbGljYXRpb24uXG4gICAqL1xuICBnZXRTdGF0ZSgpOiBQcm9taXNlPEFwcC5BcHBTdGF0ZT47XG5cbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFVzZSBbW3N0YXRlXV0gb2JzZXJ2YWJsZSB0byBnZXQgbG9hZCB0aW1lcy5cbiAgICovXG4gIGdldExvYWRUaW1lcygpOiBQcm9taXNlPHsgW2tleSBpbiBBcHAuUGhhc2VdOiBudWxsIHwgbnVtYmVyIH0+O1xuXG4gIC8qKlxuICAgKiBBbiBvYnNlcnZhYmxlIGFwcGxpY2F0aW9uIHN0YXRlIG9iamVjdC5cbiAgICpcbiAgICogYGBgXG4gICAqIG1wU2RrLkFwcC5zdGF0ZS5zdWJzY3JpYmUoZnVuY3Rpb24gKGFwcFN0YXRlKSB7XG4gICAqICAvLyBhcHAgc3RhdGUgaGFzIGNoYW5nZWRcbiAgICogIGNvbnNvbGUubG9nKCdUaGUgY3VycmVudCBhcHBsaWNhdGlvbjogJywgYXBwU3RhdGUuYXBwbGljYXRpb24pO1xuICAgKiAgY29uc29sZS5sb2coJ1RoZSBjdXJyZW50IHBoYXNlOiAnLCBhcHBTdGF0ZS5waGFzZSk7XG4gICAqICBjb25zb2xlLmxvZygnTG9hZGVkIGF0IHRpbWUgJywgYXBwU3RhdGUucGhhc2VUaW1lc1ttcFNkay5BcHAuUGhhc2UuTE9BRElOR10pO1xuICAgKiAgY29uc29sZS5sb2coJ1N0YXJ0ZWQgYXQgdGltZSAnLCBhcHBTdGF0ZS5waGFzZVRpbWVzW21wU2RrLkFwcC5QaGFzZS5TVEFSVElOR10pO1xuICAgKiB9KTtcbiAgICpcbiAgICogb3V0cHV0XG4gICAqID4gVGhlIGN1cnJlbnQgYXBwbGljYXRpb246IGFwcGxpY2F0aW9uLnNob3djYXNlXG4gICAqID4gVGhlIGN1cnJlbnQgcGhhc2U6IGFwcHBoYXNlLndhaXRpbmdcbiAgICogPiBMb2FkZWQgYXQgdGltZSAxNTcwMDg0MTU2NTkwXG4gICAqID4gU3RhcnRlZCBhdCB0aW1lIDE1NzAwODQxNTY4MjRcbiAgICogPlxuICAgKiBgYGBcbiAgICovXG4gIHN0YXRlOiBJT2JzZXJ2YWJsZTxBcHAuU3RhdGU+O1xuXG4gIExvY2FsZToge1xuICAgIC8qKlxuICAgICAqIFJldHVybiB0aGUgbGFuZ3VhZ2UgY29kZSBjdXJyZW50bHkgdXNlZCBieSBTaG93Y2FzZS5cbiAgICAgKlxuICAgICAqIGBgYFxuICAgICAqIGNvbnN0IGxvY2FsZSA9IGF3YWl0IG1wU2RrLkFwcC5Mb2NhbGUuZ2V0TGFuZ3VhZ2VDb2RlKCk7XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAcmV0dXJuIHN0cmluZ1xuICAgICAqXG4gICAgICogQGhpZGRlblxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqIEBleHBlcmltZW50YWxcbiAgICAgKi9cbiAgICBnZXRMYW5ndWFnZUNvZGUoKTogUHJvbWlzZTxzdHJpbmc+O1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSB0cmFuc2xhdGlvbiBmdW5jdGlvbiB0byB1c2Ugd2l0aCByZWdpc3RlcmVkIHN0cmluZ3MuXG4gICAgICogT3B0aW9ucyBjYW4gYmUgYSBudW1iZXIgdG8gc2hvdyBwbHVyYWxpdHkuXG4gICAgICpcbiAgICAgKiBgYGBcbiAgICAgKiBjb25zdCB0ID0gbXBTZGsuQXBwLkxvY2FsZS5nZXRUKCk7XG4gICAgICogbGV0IHN0cmluZyA9IHQoJ0VYUExPUkVfM0RfU1BBQ0UnKTtcbiAgICAgKiBjb25zb2xlLmxvZyhzdHJpbmcpO1xuICAgICAqIGBgYFxuICAgICAqIG91dHB1dCAoaWYgbG9jYWxlIGlzICdlcycpOlxuICAgICAqID4gRXhwbG9yYXIgZWwgZXNwYWNpbyAzRFxuICAgICAqXG4gICAgICogQHJldHVybiB0KGtleTogc3RyaW5nLCBvcHRpb25zPzogdW5rbm93bik6IHN0cmluZ1xuICAgICAqXG4gICAgICogQGhpZGRlblxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqIEBleHBlcmltZW50YWxcbiAgICAgKlxuICAgICAqL1xuICAgIGdldFQoKTogUHJvbWlzZTwoa2V5OiBzdHJpbmcsIG9wdGlvbnM/OiBudW1iZXIpID0+IHN0cmluZz47XG4gIH07XG5cbiAgICAvKipcbiAgICogQGhpZGRlblxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIElucHV0OiB7XG4gICAgLyoqXG4gICAgICogRW5hYmxlIGFsbCB1c2VyIGlucHV0XG4gICAgICovXG4gICAgZW5hYmxlKCk6IHZvaWQ7XG5cbiAgICAvKipcbiAgICAgKiBEaXNhYmxlIGFsbCB1c2VyIGlucHV0XG4gICAgICovXG4gICAgZGlzYWJsZSgpOiB2b2lkO1xuICB9XG5cbiAgLyoqXG4gICAqIFRyYWNrIGEgZmFjdC5cbiAgICpcbiAgICogQHBhcmFtIGV2ZW50VHlwZSB0aGUgbmFtZSBvZiB0aGUgZmFjdC4gVGhpcyBuYW1lIHNob3VsZCBiZSB1bmlxdWVseSBkZWZpbmVkIGZvciBlYWNoIGZhY3QuXG4gICAqIEBwYXJhbSBvcHRpb25zIGFuIG9iamVjdCB0aGF0IG9wdGlvbmFsbHkgc3VwcG9ydHMgYSB2ZXJzaW9uIGFuZCBhbiBvYmplY3Qgb2YgcmVjb3JkcyB0byBiZSByZXBvcnRlZC5cbiAgICpcbiAgICogYGBgXG4gICAqIG1wU2RrLkFwcC50cmFjaygnb3ZlcmxheS1jbGljaycsXG4gICAqIHtcbiAgICogICAgdmVyc2lvbjogMSxcbiAgICogICAgcmVjb3Jkczoge1xuICAgKiAgICAgIG51bWJlck9mVGltZXM6IDIsXG4gICAqICAgICAgb3ZlcmxheUlkOiAncm9vdC1vdmVybGF5JyxcbiAgICogICAgfSxcbiAgICogICAgYWx3YXlzVHJhY2s6IGZhbHNlLFxuICAgKiB9KVxuICAgKiBgYGBcbiAgICpcbiAgICogQGhpZGRlblxuICAgKiBAaW50ZXJuYWxcbiAgICpcbiAgICovXG4gIHRyYWNrKGV2ZW50VHlwZTogc3RyaW5nLCBvcHRpb25zPzogQXBwLlRyYWNrT3B0aW9uc1QpOiB2b2lkO1xufVxuIiwiZXhwb3J0IG5hbWVzcGFjZSBBc3NldCB7XG4gIC8qKlxuICAgKiBAaGlkZGVuXG4gICAqIEBpbnRlcm5hbFxuICAgKiBAZXhwZXJpbWVudGFsXG4gICAqL1xuICBleHBvcnQgdHlwZSBWckNvbG9ycGxhbk1ldGFkYXRhID0ge1xuICAgIGhlaWdodDogbnVtYmVyLFxuICAgIGltYWdlT3JpZ2luWDogbnVtYmVyLFxuICAgIGltYWdlT3JpZ2luWTogbnVtYmVyLFxuICAgIHJlc29sdXRpb25QcG06IG51bWJlcixcbiAgICB3aWR0aDogbnVtYmVyLFxuICB9XG5cbiAgLyoqXG4gICAqIEBoaWRkZW5cbiAgICogQGludGVybmFsXG4gICAqIEBleHBlcmltZW50YWxcbiAgICovXG4gIGV4cG9ydCB0eXBlIFZyQ29sb3JwbGFuRGF0YSA9IHtcbiAgICBkYXRhOiBWckNvbG9ycGxhbk1ldGFkYXRhLFxuICAgIGltYWdlRGF0YVVybHM6IHN0cmluZ1tdLFxuICB9XG5cbiAgLyoqXG4gICAqIEBoaWRkZW5cbiAgICogQGludGVybmFsXG4gICAqIEBleHBlcmltZW50YWxcbiAgICovXG4gIGV4cG9ydCBpbnRlcmZhY2UgSUF0dGFjaG1lbnQge1xuICAgIGlkOiBzdHJpbmc7XG4gICAgY3JlYXRlZDogRGF0ZTtcbiAgICBtZWRpYVR5cGU6IE1lZGlhVHlwZTtcbiAgICBjYXRlZ29yeTogQXR0YWNobWVudENhdGVnb3J5O1xuICAgIHBhcmVudElkPzogc3RyaW5nO1xuICAgIHBhcmVudFR5cGU6IFBhcmVudFR5cGU7XG4gICAgZmlsZW5hbWU/OiBzdHJpbmc7XG4gICAgYnl0ZXM/OiBudW1iZXI7XG4gICAgbWltZVR5cGU/OiBzdHJpbmc7XG4gICAgLyoqIHNvdXJjZSB1cmwgLSBwcmVmZXIgYHVybC5nZXQoKWAgb3ZlciB0aGlzLiAqL1xuICAgIHNyYzogc3RyaW5nO1xuICAgIC8qKiBleHBpcmluZyB1cmwgKi9cbiAgICB1cmw6IEV4cGlyaW5nUmVzb3VyY2U8c3RyaW5nPjtcbiAgICAvKiogZXhwaXJpbmcgdGh1bWJuYWlsIHVybCAqL1xuICAgIHRodW1ibmFpbFVybD86IEV4cGlyaW5nUmVzb3VyY2U8c3RyaW5nPjtcbiAgICBoZWlnaHQ6IG51bWJlcjtcbiAgICB3aWR0aDogbnVtYmVyO1xuICB9XG5cbiAgLyoqXG4gICAqIEBoaWRkZW5cbiAgICogQGludGVybmFsXG4gICAqIEBleHBlcmltZW50YWxcbiAgICovXG4gIGV4cG9ydCBlbnVtIE1lZGlhVHlwZSB7XG4gICAgSU1BR0UgPSAnaW1hZ2UnLFxuICAgIFBERiA9ICdwZGYnLFxuICAgIFZJREVPID0gJ3ZpZGVvJyxcbiAgICBSSUNIID0gJ3JpY2gnLFxuICAgIFpJUCA9ICd6aXAnLFxuICAgIFRFWFQgPSAndGV4dCcsXG4gICAgQVVESU8gPSAnYXVkaW8nLFxuICAgIE1PREVMID0gJ21vZGVsJyxcbiAgICBBUFBMSUNBVElPTiA9ICdhcHBsaWNhdGlvbicsXG4gIH1cblxuICAvKipcbiAgICogQGhpZGRlblxuICAgKiBAaW50ZXJuYWxcbiAgICogQGV4cGVyaW1lbnRhbFxuICAgKi9cbiAgZXhwb3J0IGVudW0gQXR0YWNobWVudENhdGVnb3J5IHtcbiAgICBFWFRFUk5BTCA9ICdleHRlcm5hbCcsXG4gICAgVVBMT0FEID0gJ3VwbG9hZCcsXG4gICAgU0FOREJPWCA9ICdzYW5kYm94JyxcbiAgfVxuXG4gIC8qKlxuICAgKiBAaGlkZGVuXG4gICAqIEBpbnRlcm5hbFxuICAgKiBAZXhwZXJpbWVudGFsXG4gICAqL1xuICBleHBvcnQgZW51bSBQYXJlbnRUeXBlIHtcbiAgICBDT01NRU5UID0gJ2NvbW1lbnQnLFxuICAgIE1BVFRFUlRBRyA9ICdtYXR0ZXJ0YWcnXG4gIH1cblxuICAvKipcbiAgICogQGhpZGRlblxuICAgKiBAaW50ZXJuYWxcbiAgICogQGV4cGVyaW1lbnRhbFxuICAgKi9cbiAgZXhwb3J0IHR5cGUgRXhwaXJpbmdSZXNvdXJjZTxUPiA9IHtcbiAgICBnZXQoKTogUHJvbWlzZTxUPjtcbiAgICBvblN0YWxlPzogKCkgPT4gUHJvbWlzZTx2b2lkPjtcbiAgICB2YWxpZFVudGlsOiBEYXRlIHwgbnVsbDtcbiAgICBnZXRDdXJyZW50VmFsdWUoKTogVDtcbiAgfVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFzc2V0IHtcblxuICAvKipcbiAgICogR2V0IGNvbG9ycGxhbiBkYXRhIFVSTHMgYW5kIG1ldGFkYXRhLiBUaGUgb3B0aW9uYWwgc2lkIGhhcyBvbmUgY2F2ZWF0LCBpdCBhc3N1bWVzIHRoYXQgdGhlIGZsb29yIGNvdW50IG9mIHRoZSBvdGhlciBzcGFjZSBpcyB0aGUgc2FtZSBhcyB0aGUgY3VycmVudCBzcGFjZS5cbiAgICogU2VlIGh0dHBzOi8vbWF0dGVycG9ydC5hdGxhc3NpYW4ubmV0L2Jyb3dzZS9KU1NESy0yMTYwXG4gICAqXG4gICAqIGBgYFxuICAgKiBjb25zdCB7IGRhdGEsIGltYWdlRGF0YVVybHMgfSA9IGF3YWl0IG1wU2RrLkFzc2V0LmdldFZyQ29sb3JwbGFucygpO1xuICAgKiBgYGBcbiAgICpcbiAgICogQHBhcmFtIHNpZCBBbiBvcHRpb25hbCBzdHJpbmcgc3BhY2Ugc2lkLiBVc2VkIHRvIGFjY2VzcyB0aGUgY29sb3JwbGFucyBvZiBvdGhlciBzcGFjZXMuIE9taXR0aW5nIHRoaXMgdmFsdWUgZGVmYXVsdHMgdG8gdGhlIGN1cnJlbnQgc3BhY2UuXG4gICAqXG4gICAqIEBoaWRkZW5cbiAgICogQGludGVybmFsXG4gICAqIEBleHBlcmltZW50YWxcbiAgICovXG4gIGdldFZyQ29sb3JwbGFucygpOiBQcm9taXNlPEFzc2V0LlZyQ29sb3JwbGFuRGF0YT47XG4gIC8qKlxuICogQGhpZGRlblxuICogQGludGVybmFsXG4gKiBAZXhwZXJpbWVudGFsXG4gKi9cbiAgZ2V0VnJDb2xvcnBsYW5zKHNpZDogc3RyaW5nKTogUHJvbWlzZTxBc3NldC5WckNvbG9ycGxhbkRhdGE+O1xuXG4gIC8qKlxuICAgKiBSZWdpc3RlciBhIHRleHR1cmUgdG8gdXNlIHdpdGggc3Vic2VxdWVudCBjYWxscyBsaWtlIFtbVGFnLmVkaXRJY29uXV0uXG4gICAqXG4gICAqICoqTm90ZSoqOiBJdCBpcyByZWNvbW1lbmRlZCB0byBob3N0IHlvdXIgb3duIGltYWdlcyB0byBtaXRpZ2F0ZSBjcm9zcyBvcmlnaW4gbGltaXRhdGlvbnMuXG4gICAqXG4gICAqIGBgYFxuICAgKiBtcFNkay5Bc3NldC5yZWdpc3RlclRleHR1cmUoJ2N1c3RvbVRleHR1cmVJZCcsICdodHRwczovL1tsaW5rLnRvL2ltYWdlXScpO1xuICAgKiBgYGBcbiAgICpcbiAgICogQHBhcmFtIGlkIEEgdXNlciBzcGVjaWZpZWQgc3RyaW5nIHRvIHVzZSBhcyBhIGxvb2t1cCBvZiB0aGlzIHRleHR1cmVcbiAgICogQHBhcmFtIGljb25TcmMgVGhlIHNyYyBvZiB0aGUgaWNvbiwgbGlrZSB0aGUgc3JjIG9mIGFuIFxcPGltZz5cbiAgICpcbiAgICogQGVtYmVkXG4gICAqIEBidW5kbGVcbiAgICogQGludHJvZHVjZWQgMy4xLjY4LjEyLTctZzg1ODY4ODk0NGFcbiAgICovXG4gICByZWdpc3RlclRleHR1cmUoaWQ6IHN0cmluZywgaWNvblNyYzogc3RyaW5nKTogUHJvbWlzZTx2b2lkPjtcblxuICAvKipcbiAgICogR2V0cyBhbiBhc3NldCBieSBzcGVjaWZpZWQgSUQuIFRocm93cyBhbiBlcnJvciBpZiBub1xuICAgKiBhc3NldCB3aXRoIHRoZSBkZXNpcmVkIElEIGV4aXN0cy5cbiAgICogYGBgXG4gICAqIG1wU2RrLkFzc2V0LmdldEFzc2V0QnlJZCgneW91ci1hc3NldC1pZCcpXG4gICAqICAgLnRoZW4oYXN5bmMgZnVuY3Rpb24oYXNzZXQpe1xuICAgKiAgICAgY29uc29sZS5sb2coJ0Fzc2V0IFVSTCBpcycsIGF3YWl0IGFzc2V0LnVybC5nZXQoKSk7XG4gICAqICAgfSk7XG4gICAqIGBgYFxuICAgKiBAcmV0dXJuIEEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIGRlc2lyZWQgYXNzZXQuXG4gICAqXG4gICAqIEBoaWRkZW5cbiAgICogQGludGVybmFsXG4gICAqIEBleHBlcmltZW50YWxcbiAgICovXG4gICBnZXRBc3NldEJ5SWQoaWQ6IHN0cmluZyk6IFByb21pc2U8QXNzZXQuSUF0dGFjaG1lbnQ+O1xuXG4gICAvKipcbiAgICAqIFJlZnJlc2ggYXNzZXRzIGZyb20gc2VydmVyLCBlbnN1cmluZyB0aGF0IGFsbCBhdHRhY2htZW50cyBhcmUgdXAgdG8gZGF0ZS5cbiAgICAqXG4gICAgKiBAaGlkZGVuXG4gICAgKiBAaW50ZXJuYWxcbiAgICAqIEBleHBlcmltZW50YWxcbiAgICAqL1xuICAgcmVmcmVzaEFzc2V0cygpOiBQcm9taXNlPHZvaWQ+O1xufVxuIiwiaW1wb3J0IHR5cGUgeyBNb2RlIH0gZnJvbSAnLi9tb2RlJztcbmltcG9ydCB0eXBlIHsgVmVjdG9yMywgVmVjdG9yMiwgSU9ic2VydmFibGUsIFJvdGF0aW9uLCBRdWF0ZXJuaW9uIH0gZnJvbSAnLi9nbG9iYWwnO1xuXG5leHBvcnQgbmFtZXNwYWNlIENhbWVyYSB7XG4gIGV4cG9ydCB0eXBlIFBvc2UgPSB7XG4gICAgcG9zaXRpb246IFZlY3RvcjM7XG4gICAgcm90YXRpb246IFZlY3RvcjI7XG4gICAgcHJvamVjdGlvbjogRmxvYXQzMkFycmF5O1xuICAgIHN3ZWVwOiBzdHJpbmc7XG4gICAgbW9kZTogTW9kZS5Nb2RlO1xuICB9O1xuXG4gIGV4cG9ydCBlbnVtIEV2ZW50IHtcbiAgICAvKiogQGV2ZW50ICovXG4gICAgTU9WRSA9ICdjYW1lcmEubW92ZScsXG4gIH1cblxuICBleHBvcnQgZW51bSBEaXJlY3Rpb24ge1xuICAgIEZPUldBUkQgPSAnRk9SV0FSRCcsXG4gICAgTEVGVCA9ICdMRUZUJyxcbiAgICBSSUdIVCA9ICdSSUdIVCcsXG4gICAgQkFDSyA9ICdCQUNLJyxcbiAgICBVUCA9ICdVUCcsXG4gICAgRE9XTiA9ICdET1dOJyxcbiAgfVxuXG4gIGV4cG9ydCB0eXBlIFJvdGF0ZU9wdGlvbnMgPSB7XG4gICAgLyoqXG4gICAgICogUm90YXRpb24gc3BlZWQgaW4gZGVncmVlcyBwZXIgc2Vjb25kLlxuICAgICAqL1xuICAgIHNwZWVkPzogbnVtYmVyO1xuICB9O1xuXG4gIGV4cG9ydCB0eXBlIFpvb21EYXRhID0ge1xuICAgIC8qKlxuICAgICAqIFRoZSBjdXJyZW50IHpvb20gbGV2ZWxcbiAgICAgKi9cbiAgICBsZXZlbDogbnVtYmVyO1xuICB9O1xuXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2FtZXJhIHtcbiAgRXZlbnQ6IHR5cGVvZiBDYW1lcmEuRXZlbnQ7XG4gIERpcmVjdGlvbjogdHlwZW9mIENhbWVyYS5EaXJlY3Rpb247XG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBjdXJyZW50IHN0YXRlIG9mIGNhbWVyYS5cbiAgICogYGBgXG4gICAqIG1wU2RrLkNhbWVyYS5nZXRQb3NlKClcbiAgICogICAudGhlbihmdW5jdGlvbihwb3NlKXtcbiAgICogICAgIGNvbnNvbGUubG9nKCdDdXJyZW50IHBvc2l0aW9uIGlzICcsIHBvc2UucG9zaXRpb24pO1xuICAgKiAgICAgY29uc29sZS5sb2coJ1JvdGF0aW9uIGFuZ2xlIGlzICcsIHBvc2Uucm90YXRpb24pO1xuICAgKiAgICAgY29uc29sZS5sb2coJ1N3ZWVwIFVVSUQgaXMgJywgcG9zZS5zd2VlcCk7XG4gICAqICAgICBjb25zb2xlLmxvZygnVmlldyBtb2RlIGlzICcsIHBvc2UubW9kZSk7XG4gICAqICAgfSk7XG4gICAqIGBgYFxuICAgKiBAcmV0dXJuIEEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIGNhbWVyYS5cbiAgICogQGRlcHJlY2F0ZWQgWW91IGNhbiB1c2UgdGhlIFtbcG9zZV1dIG9ic2VydmFibGUgcHJvcGVydHkgaW5zdGVhZC5cbiAgICovXG4gIGdldFBvc2UoKTogUHJvbWlzZTxDYW1lcmEuUG9zZT47XG5cbiAgLyoqXG4gICAqIEFuIG9ic2VydmFibGUgcG9zZSBkYXRhIG9iamVjdCB0aGF0IGNhbiBiZSBzdWJzY3JpYmVkIHRvLlxuICAgKlxuICAgKiBgYGBcbiAgICogbXBTZGsuQ2FtZXJhLnBvc2Uuc3Vic2NyaWJlKGZ1bmN0aW9uIChwb3NlKSB7XG4gICAqICAgLy8gQ2hhbmdlcyB0byB0aGUgQ2FtZXJhIHBvc2UgaGF2ZSBvY2N1cnJlZC5cbiAgICogICBjb25zb2xlLmxvZygnQ3VycmVudCBwb3NpdGlvbiBpcyAnLCBwb3NlLnBvc2l0aW9uKTtcbiAgICogICBjb25zb2xlLmxvZygnUm90YXRpb24gYW5nbGUgaXMgJywgcG9zZS5yb3RhdGlvbik7XG4gICAqICAgY29uc29sZS5sb2coJ1N3ZWVwIFVVSUQgaXMgJywgcG9zZS5zd2VlcCk7XG4gICAqICAgY29uc29sZS5sb2coJ1ZpZXcgbW9kZSBpcyAnLCBwb3NlLm1vZGUpO1xuICAgKiB9KTtcbiAgICogYGBgXG4gICAqL1xuICBwb3NlOiBJT2JzZXJ2YWJsZTxDYW1lcmEuUG9zZT47XG5cbiAgLyoqXG4gICAqIE1vdmVzIHVzZXIgdG8gYSBkaWZmZXJlbnQgc3dlZXAgcmVsYXRpdmUgdG8gdGhlaXIgY3VycmVudCBsb2NhdGlvblxuICAgKlxuICAgKiBgYGBcbiAgICogY29uc3QgbmV4dERpcmVjdGlvbiA9IG1wU2RrLkNhbWVyYS5EaXJlY3Rpb24uRk9SV0FSRDtcbiAgICpcbiAgICogbXBTZGsuQ2FtZXJhLm1vdmVJbkRpcmVjdGlvbihuZXh0RGlyZWN0aW9uKVxuICAgKiAgIC50aGVuKGZ1bmN0aW9uKCl7XG4gICAqICAgICBjb25zb2xlLmxvZygnVGhlIGNhbWVyYSBoYXMgbW92ZWQgZm9yd2FyZC4nKTtcbiAgICogICB9KVxuICAgKiAgIC5jYXRjaChmdW5jdGlvbigpe1xuICAgKiAgICAgY29uc29sZS53YXJuaW5nKCdBbiBlcnJvciBvY2N1cmVkIHdoaWxlIG1vdmluZyBpbiB0aGF0IGRpcmVjdGlvbi4nKTtcbiAgICogICB9KTtcbiAgICogYGBgXG4gICAqIEBwYXJhbSBkaXJlY3Rpb24gVGhlIGRpcmVjdGlvbi5cbiAgICogQHJldHVybiBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIGEgc3dlZXAgaGFzIGJlZW4gcmVhY2hlZC5cbiAgICpcbiAgICogKipFcnJvcnMqKlxuICAgKlxuICAgKiAqIEZhaWxzIGlmIGRpcmVjdGlvbiBpcyBub3Qgb25lIG9mIHRoZSBhYm92ZSBvcHRpb25zLlxuICAgKiAqIFdhcm5zIGlmIHlvdSBjYW7igJl0IG1vdmUgaW4gdGhhdCBkaXJlY3Rpb24gKGhpdCBhIHdhbGwpLlxuICAgKlxuICAgKiAqKk5vdGVzKipcbiAgICpcbiAgICogVGhpcyBpcyB0aGUgc2FtZSBiZWhhdmlvciBhcyBpZiB0aGUgdXNlciBwcmVzc2VzIHRoZSBhcnJvdyBrZXlzIHdoaWxlIGluIDNEIFNob3djYXNlLlxuICAgKlxuICAgKiAqIENhbWVyYS5EaXJlY3Rpb24uVVAgaXMgbGlrZSBtb3ZpbmcgZm9yd2FyZHNcbiAgICogKiBDYW1lcmEuRGlyZWN0aW9uLkRPV04gaXMgbGlrZSBtb3ZpbmcgYmFja3dhcmRzXG4gICAqXG4gICAqIFRoaXMgYWN0aW9uIGlzIGZvciBtb3ZpbmcgYmV0d2VlbiBzd2VlcHMgd2hpbGUgaW4gSW5zaWRlIFZpZXcuXG4gICAqL1xuICBtb3ZlSW5EaXJlY3Rpb24oZGlyZWN0aW9uOiBDYW1lcmEuRGlyZWN0aW9uKTogUHJvbWlzZTx2b2lkPjtcblxuICAvKipcbiAgICogUGFucyB0aGUgY2FtZXJhLlxuICAgKlxuICAgKiBgYGBcbiAgICogbXBTZGsuQ2FtZXJhLnBhbih7IHg6IDEsIHo6IDEgfSlcbiAgICogICAudGhlbihmdW5jdGlvbigpIHtcbiAgICogICAgIC8vIFBhbiBjb21wbGV0ZS5cbiAgICogICB9KVxuICAgKiAgIC5jYXRjaChmdW5jdGlvbihlcnJvcikge1xuICAgKiAgICAgLy8gUGFuIGVycm9yLlxuICAgKiAgIH0pO1xuICAgKiBgYGBcbiAgICpcbiAgICogQHBhcmFtIHBhcmFtcy54IEFic29sdXRlIHBvc2l0aW9uIG9mIHRoZSBzd2VlcCBvbiB0aGUgeCBheGlzLlxuICAgKiBAcGFyYW0gcGFyYW1zLnogQWJzb2x1dGUgcG9zaXRpb24gb2YgdGhlIHN3ZWVwIG9uIHRoZSB6IGF4aXMuXG4gICAqIEByZXR1cm4gQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2hlbiB0aGUgcGFuIGlzIGNvbXBsZXRlLlxuICAgKlxuICAgKiAqKkVycm9ycyoqXG4gICAqXG4gICAqICogV2FybnMgaWYgcGFuIHdhcyBzdWNjZXNzZnVsIGJ1dCB5b3UgaGl0IHRoZSBtb2RlbCBib3VuZHMuXG4gICAqICogRmFpbHMgaWYgeW91IGFyZSBhbHJlYWR5IGF0IHRoZSBtb2RlbCBib3VuZHMgYW5kIHlvdSBjYW5ub3QgbW92ZSBhbnkgZnVydGhlci5cbiAgICpcbiAgICogKipOb3RlcyoqXG4gICAqXG4gICAqIFRoZSBvcmllbnRhdGlvbiBvZiB0aGUgYXhlcyBkZXBlbmRzIG9uIHRoZSBzd2VlcCB5b3Ugd2VyZSBpbiBiZWZvcmUgZW50ZXJpbmdcbiAgICogRmxvb3JwbGFuIGFuZCB0aGUgYXNwZWN0IHJhdGlvIG9mIHdpbmRvdy5cbiAgICpcbiAgICogT25seSBhdmFpbGFibGUgaW4gRG9sbGhvdXNlIG9yIEZsb29ycGxhbiBWaWV3LiBUaGlzIGlzIHRoZSBzYW1lIGJlaGF2aW9yIGFzXG4gICAqIGlmIHRoZSB1c2VyIHVzZXMgdGhlIGtleWJvYXJkIHNob3J0Y3V0cyBXLCBBLCBTLCBhbmQgRCBvciB0aGUgYXJyb3cga2V5cy5cbiAgICpcbiAgICogVXNlIGBtcFNkay5DYW1lcmEucGFuKHsgeDogMCwgejogMCB9KTtgIHRvIHJldHVybiB0byBkaXJlY3RseSBhYm92ZSB0aGVcbiAgICogdmVyeSBmaXJzdCBzd2VlcCBzY2FubmVkLlxuICAgKi9cbiAgcGFuKHBhcmFtczogeyB4OiBudW1iZXIsIHo6IG51bWJlciB9KTogUHJvbWlzZTx2b2lkPjtcblxuICAvKipcbiAgICogUm90YXRlcyB0aGUgY2FtZXJhICh1c2Vy4oCZcyB2aWV3cG9pbnQpLlxuICAgKlxuICAgKiBgYGBcbiAgICogbXBTZGsuQ2FtZXJhLnJvdGF0ZSgxMCwgLTIwLCB7IHNwZWVkOiAyIH0pXG4gICAqICAgLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAqICAgICAvLyBDYW1lcmEgcm90YXRpb24gY29tcGxldGUuXG4gICAqICAgfSlcbiAgICogICAuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHtcbiAgICogICAgIC8vIENhbWVyYSByb3RhdGlvbiBlcnJvci5cbiAgICogICB9KTtcbiAgICogYGBgXG4gICAqXG4gICAqIEBwYXJhbSB2ZXJ0aWNhbCBIb3cgbWFueSBkZWdyZWVzIHRvIHJvdGF0ZSB1cCBvciBkb3duLlxuICAgKiBAcGFyYW0gaG9yaXpvbnRhbCBIb3cgbWFueSBkZWdyZWVzIHRvIHJvdGF0ZSBsZWZ0IG9yIHJpZ2h0LlxuICAgKiBAcGFyYW0gb3B0aW9uc1xuICAgKiBAcmV0dXJuIEEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gdGhlIHJvdGF0aW9uIGlzIGNvbXBsZXRlLlxuICAgKlxuICAgKiAqKkVycm9ycyoqXG4gICAqXG4gICAqICogV2FybnMgdG8gY29uc29sZSBpZiB5b3Ugcm90YXRlZCwgYnV0IHRoZW4geW91IGhpdCB0aGUgdmVydGljYWwgbGltaXQuXG4gICAqICogV2FybnMgaWYgdHJ5aW5nIHRvIHJvdGF0ZSB1cCBvciBkb3duIGluIEZsb29ycGxhbiBWaWV3LlxuICAgKiAqIEZhaWxzIGlmIG5vIG1vdmVtZW50IGJlY2F1c2UgeW91IGFyZSBhbHJlYWR5IGF0IGEgcm90YXRpb24gbGltaXQuXG4gICAqXG4gICAqICoqTm90ZXMqKlxuICAgKlxuICAgKiBJZiB1c2VyIGlzIGluIERvbGxob3VzZSBvciBGbG9vcnBsYW4gVmlldywgdGhlIGVudGlyZSBNYXR0ZXJwb3J0IFNwYWNlIGlzIHJvdGF0ZWQuXG4gICAqICogUG9zaXRpdmUgdmFsdWVzIGZvciBob3Jpem9udGFsIG1lYW5zIHRoZSBTcGFjZSByb3RhdGVzIGNsb2Nrd2lzZS5cbiAgICogKiBOZWdhdGl2ZSB2YWx1ZXMgZm9yIGhvcml6b250YWwgY291bnRlcmNsb2Nrd2lzZSByb3RhdGlvbnMuXG4gICAqICogSW4gRG9sbGhvdXNlIHZpZXcsIHZlcnRpY2FsIHJhbmdlcyBmcm9tIDDCsCAoaG9yaXpvbnRhbCkgdG8gODDCsCBhYm92ZSB0aGUgU3BhY2UuXG4gICAqICogSW4gRmxvb3JwbGFuIHZpZXcsIHRoZSB2ZXJ0aWNhbCB2YWx1ZSBpcyBpZ25vcmVkLlxuICAgKlxuICAgKiBJZiB0aGUgdXNlciBpcyBpbiBJbnNpZGUgVmlldyBvciAzNjDCuiBWaWV3LCB0aGVpciB2aWV3cG9pbnQgaXMgcm90YXRlZC5cbiAgICogKiBQb3NpdGl2ZSB2YWx1ZXMgZm9yIGhvcml6b250YWwgbWVhbnMgdGhlIHVzZXIgcm90YXRlcyBjbG9ja3dpc2UuXG4gICAqICogTmVnYXRpdmUgdmFsdWVzIGZvciBob3Jpem9udGFsIGFyZSBjb3VudGVyY2xvY2t3aXNlIHJvdGF0aW9ucy5cbiAgICogKiBWZXJ0aWNhbCByYW5nZXMgZnJvbSAtNzDCsCAoZG93bikgdG8gNzDCsCAodXApLlxuICAgKiAqIFRpbHRpbmcgdGhlIHZpZXcgKHNpbWlsYXIgdG8gdGlsdGluZyBvbmXigJlzIGhlYWQpIG5vdCBzdXBwb3J0ZWQuXG4gICAqXG4gICAqIFJvdGF0aW9uIGlzIHJlbGF0aXZlIHRvIHRoZSB1c2Vy4oCZcyBjdXJyZW50IHZpZXdwb2ludC5cbiAgICogVGhpcyBpcyB0aGUgc2FtZSBiZWhhdmlvciBhcyBpZiB0aGUgdXNlciB1c2VzIHRoZSBrZXlib2FyZCBzaG9ydGN1dHMgSSwgSiwgSywgYW5kIEwuXG4gICAqIFNwZWVkcyBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gemVybyBhcmUgbm90IGFsbG93ZWQuXG4gICAqL1xuICByb3RhdGUoaG9yaXpvbnRhbDogbnVtYmVyLCB2ZXJ0aWNhbDogbnVtYmVyLCBvcHRpb25zPzogQ2FtZXJhLlJvdGF0ZU9wdGlvbnMpOiBQcm9taXNlPHZvaWQ+O1xuXG4gIC8qKlxuICAgKiBAaGlkZGVuXG4gICAqIEBpbnRlcm5hbFxuICAgKlxuICAgKiBSb3RhdGVzIHRoZSBjYW1lcmEgYmV0d2VlbiB0d28gb3JpZW50YXRpb25zXG4gICAqXG4gICAqIEBwYXJhbSBzdGFydE9yaWVudGF0aW9uIE9yaWVudGF0aW9uIG9mIHRoZSBjYW1lcmEgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgdHJhbnNpdGlvbi5cbiAgICogQHBhcmFtIGVuZE9yaWVudGF0aW9uIE9yaWVudGF0aW9uIG9mIHRoZSBjYW1lcmEgYXQgdGhlIGVuZCBvZiB0aGUgdHJhbnNpdGlvbi5cbiAgICogQHBhcmFtIGR1cmF0aW9uIEhvdyBsb25nIHRoZSByb3RhdG9uIHNob3VsZCBsYXN0LCBpbiBtaWxsaXNlY29uZHMuXG4gICAqIEBwYXJhbSBmYWRlVG9CbGFjayBJZiB0cnVlLCB0aGUgc2NyZWVuIHdpbGwgZmFkZSB0byBibGFjaywgZm9sbG93ZWQgYnkgdGhlIGNhbWVyYSBpbnN0YW50bHkgdHJhbnNpdGlvbmluZyB0byB0aGUgZW5kIHJvdGF0aW9uLFxuICAgKiAgICAgICAgICAgICAgICAgICAgZm9sbG93ZWQgYnkgZmFkaW5nIHRoZSBzY2VuZSBpbiBhZ2Fpbi5cbiAgICogQHBhcmFtIGFsbG93T3ZlcmxhcHBpbmdUcmFuc2l0aW9ucyBJZiB0cnVlLCBkbyBub3QgcmVnaXN0ZXIgdGhpcyByb3RhdGlvbiB0cmFuc2l0aW9uIGFzIGFuIGV4dGVybmFsIHRyYW5zaXRpb24gd2l0aCB0aGUgY2FtZXJhXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kdWxlLiBUaGlzIG1lYW5zIHRoYXQgbXVsdGlwbGUgc2ltdWx0YW5lb3VzIGNhbWVyYSB0cmFuc2l0aW9ucyBhcmUgcG9zc2libGUsIHNvIGJlIHZlcnlcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXJlZnVsZSB3aXRoIHRoaXMgcGFyYW1ldGVyLiBEZWZhdWx0cyB0byBmYWxzZS5cbiAgICovXG4gIHJvdGF0ZUJldHdlZW5PcmllbnRhdGlvbnMoXG4gICAgc3RhcnRPcmllbnRhdGlvbjogUXVhdGVybmlvbixcbiAgICBlbmRPcmllbnRhdGlvbjogUXVhdGVybmlvbixcbiAgICBkdXJhdGlvbjogbnVtYmVyLFxuICAgIGZhZGVUb0JsYWNrOiBib29sZWFuLFxuICAgIGFsbG93T3ZlcmxhcHBpbmdUcmFuc2l0aW9uczogYm9vbGVhbixcbiAgKTogUHJvbWlzZTx2b2lkPjtcblxuICAvKipcbiAgICogQGhpZGRlblxuICAgKiBAaW50ZXJuYWxcbiAgICpcbiAgICogU3RvcCBhbnkgYWN0aXZlIGNhbWVyYSBvcGVyYXRpb25cbiAgICovXG4gIHN0b3AoKTogUHJvbWlzZTx2b2lkPjtcblxuICAvKipcbiAgICogU2V0cyB0aGUgb3JpZW50YXRpb24gb2YgdGhlIGNhbWVyYSAodXNlcuKAmXMgdmlld3BvaW50KSB3aGlsZSBpbiBQYW5vcmFtYSBWaWV3LlxuICAgKlxuICAgKiBgYGBcbiAgICogbXBTZGsuQ2FtZXJhLnNldFJvdGF0aW9uKHsgeDogMTAsIHk6IC0yMCB9LCB7IHNwZWVkOiAyIH0pXG4gICAqICAgLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAqICAgICAvLyBDYW1lcmEgcm90YXRpb24gY29tcGxldGUuXG4gICAqICAgfSlcbiAgICogICAuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHtcbiAgICogICAgIC8vIENhbWVyYSByb3RhdGlvbiBlcnJvci5cbiAgICogICB9KTtcbiAgICogYGBgXG4gICAqXG4gICAqIEBwYXJhbSByb3RhdGlvbiBUaGUgdGFyZ2V0IHJvdGF0aW9uXG4gICAqIEBwYXJhbSBvcHRpb25zXG4gICAqIEByZXR1cm4gQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2hlbiB0aGUgcm90YXRpb24gaXMgY29tcGxldGUuXG4gICAqXG4gICAqICoqRXJyb3JzKipcbiAgICogKiBGYWlscyBpZiB0aGUgY3VycmVudCB2aWV3IG1vZGUgaXMgbm90IFBhbm9yYW1hIFZpZXcuXG4gICAqXG4gICAqICoqTm90ZXMqKlxuICAgKiAqIEEgdGFyZ2V0IHJvdGF0aW9uIGNhbiBiZSByZXRyaWV2ZWQgZnJvbSBbW0NhbWVyYS5wb3NlXV1cbiAgICogKiBSb3RhdGlvbiBpcyBhYnNvbHV0ZSBzbyBtdWx0aXBsZSBjYWxscyB3aWxsIG5vdCBmdXJ0aGVyIGNoYW5nZSBvcmllbnRhdGlvbiAoZmxvYXRpbmcgcG9pbnQgZXJyb3Igbm90d2l0aHN0YW5kaW5nKS5cbiAgICogKiBTcGVlZHMgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIHplcm8gYXJlIG5vdCBhbGxvd2VkLlxuICAgKi9cbiAgc2V0Um90YXRpb24ocm90YXRpb246IFJvdGF0aW9uLCBvcHRpb25zPzogQ2FtZXJhLlJvdGF0ZU9wdGlvbnMpOiBQcm9taXNlPHZvaWQ+O1xuXG4gIC8qKlxuICAgKiBSb3RhdGVzIHRoZSBjYW1lcmEgdG8gYSBzcGVjaWZpYyBzY3JlZW4gY29vcmRpbmF0ZS5cbiAgICogQ29vcmRpbmF0ZXMgYXJlIG1lYXN1cmUgaW4gcGl4ZWxzLCByZWxhdGl2ZSB0byB0aGUgV2ViR0wgQ2FudmFzJyB0b3AgbGVmdCBjb3JuZXIuXG4gICAqIFNlZSBodHRwczovL3d3dy53M3NjaG9vbHMuY29tL2dyYXBoaWNzL2NhbnZhc19jb29yZGluYXRlcy5hc3AgZm9yIG1vcmUgaW5mb3JtYXRpb24gb24gY29vcmRpbmF0ZXMuXG4gICAqXG4gICAqIGBgYFxuICAgKiBtcFNkay5DYW1lcmEubG9va0F0U2NyZWVuQ29vcmRzKDUwMCwgMzIwKVxuICAgKiAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgKiAgICAgLy8gQ2FtZXJhIHJvdGF0aW9uIGNvbXBsZXRlLlxuICAgKiAgIH0pXG4gICAqICAgLmNhdGNoKGZ1bmN0aW9uKGVycm9yKSB7XG4gICAqICAgICAvLyBDYW1lcmEgcm90YXRpb24gZXJyb3IuXG4gICAqICAgfSk7XG4gICAqIGBgYFxuICAgKlxuICAgKiBAcGFyYW0ge251bWJlcn0geCBIb3Jpem9udGFsIHBvc2l0aW9uLCBpbiBwaXhlbHMuIFN0YXJ0aW5nIGZyb20gdGhlIGNhbnZhcycgdG9wIGxlZnQgY29ybmVyLlxuICAgKiBAcGFyYW0ge251bWJlcn0geSBWZXJ0aWNhbCBwb3NpdGlvbiwgaW4gcGl4ZWxzLiBTdGFydGluZyBmcm9tIHRoZSBjYW52YXMnIHRvcCBsZWZ0IGNvcm5lci5cbiAgICogQHJldHVybnMge1Byb21pc2U8dm9pZD59IEEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gdGhlIHJvdGF0aW9uIGlzIGNvbXBsZXRlLlxuICAgKlxuICAgKiAqKkVycm9ycyoqXG4gICAqICogRmFpbHMgaWYgdXNlZCBvdXRzaWRlIG9mIEluc2lkZSBtb2RlLlxuICAgKiAqIFdhcm5zIHRvIGNvbnNvbGUgaWYgeW91IHJvdGF0ZWQsIGJ1dCB0aGVuIHlvdSBoaXQgdGhlIHZlcnRpY2FsIGxpbWl0LlxuICAgKiAqIEZhaWxzIGlmIG5vIG1vdmVtZW50IGJlY2F1c2UgeW91IGFyZSBhbHJlYWR5IGF0IGEgcm90YXRpb24gbGltaXQuXG4gICAqL1xuICBsb29rQXRTY3JlZW5Db29yZHMoeDogbnVtYmVyLCB5OiBudW1iZXIpOiBQcm9taXNlPHZvaWQ+O1xuXG4gIC8qKlxuICAgKiBab29tcyB0aGUgY2FtZXJhIHRvIGEgcGVyY2VudGFnZSBvZiB0aGUgYmFzZSBmaWVsZCBvZiB2aWV3LlxuICAgKlxuICAgKiBFeDogRG91YmxpbmcgdGhlIHpvb20sIGhhbHZlcyB0aGUgZmllbGQgb2Ygdmlldy5cbiAgICpcbiAgICogYGBgXG4gICAqIG1wU2RrLkNhbWVyYS56b29tVG8oMi4wKVxuICAgKiAgLnRoZW4oZnVuY3Rpb24gKG5ld1pvb20pIHtcbiAgICogICAgY29uc29sZS5sb2coJ0NhbWVyYSB6b29tZWQgdG8nLCBuZXdab29tKTtcbiAgICogIH0pO1xuICAgKiBgYGBcbiAgICpcbiAgICogQHBhcmFtIHpvb21MZXZlbFxuICAgKlxuICAgKiAqKkVycm9ycyoqXG4gICAqICogRmFpbHMgaWYgdGhlIGN1cnJlbnQgbW9kZSBpcyBub3QgSW5zaWRlIG1vZGUuXG4gICAqICogV2FybnMgdG8gY29uc29sZSBpZiB0aGUgem9vbSBsZXZlbCBpcyBvdXRzaWRlIG9mIHRoZSB6b29tIHJhbmdlIHN1cHBvcnRlZC5cbiAgICovXG4gIHpvb21Ubyh6b29tTGV2ZWw6IG51bWJlcik6IFByb21pc2U8bnVtYmVyPjtcblxuICAvKipcbiAgICogWm9vbXMgdGhlIGNhbWVyYSBieSBhIHBlcmNlbnRhZ2UuIFRoZSB6b29tIGRlbHRhIGlzIGRlZmluZWQgcmVsYXRpdmUgdG8gdGhlIGJhc2UgZmllbGQgb2Ygdmlldywgbm90IHRoZSBjdXJyZW50IHpvb20uXG4gICAqIFRoaXMgbWVhbnMgdGhhdCB0aGUgZGVsdGEgaXMgc3RyaWN0bHkgYWRkZWQsIGFuZCBub3QgbXVsdGlwbGllZCBieSB0aGUgY3VycmVudCB6b29tIGZpcnN0LlxuICAgKlxuICAgKlxuICAgKiBFeDogSWYgYXQgem9vbSAyLjAsIHpvb21pbmcgYnkgYW5vdGhlciAwLjF4IHdpbGwgYnJpbmcgdGhlIGNhbWVyYSB0byAyLjF4ICgyLjAgKyAwLjEpIG5vdCAyLjJ4ICgyLjAgKyAyLjAgKiAwLjEpXG4gICAqXG4gICAqIGBgYFxuICAgKiBtcFNkay5DYW1lcmEuem9vbUJ5KDAuMSlcbiAgICogICAudGhlbihmdW5jdGlvbiAobmV3Wm9vbSkge1xuICAgKiAgICAgY29uc29sZS5sb2coJ0NhbWVyYSB6b29tZWQgdG8nLCBuZXdab29tKTtcbiAgICogICB9KTtcbiAgICogYGBgXG4gICAqXG4gICAqIEBwYXJhbSB6b29tRGVsdGFcbiAgICpcbiAgICogKipFcnJvcnMqKlxuICAgKiAqIEZhaWxzIGlmIHRoZSBjdXJyZW50IG1vZGUgaXMgbm90IEluc2lkZSBtb2RlLlxuICAgKiAqIFdhcm5zIHRvIGNvbnNvbGUgaWYgdGhlIHpvb20gbGV2ZWwgd291bGQgYmUgb3V0c2lkZSBvZiB0aGUgem9vbSByYW5nZSBzdXBwb3J0ZWQuXG4gICAqL1xuICB6b29tQnkoem9vbURlbHRhOiBudW1iZXIpOiBQcm9taXNlPG51bWJlcj47XG5cbiAgLyoqXG4gICAqIFJlc2V0IHRoZSB6b29tIG9mIHRoZSBjYW1lcmEgYmFjayB0byAxLjB4LlxuICAgKlxuICAgKiBgYGBcbiAgICogbXBTZGsuQ2FtZXJhLnpvb21SZXNldCgpXG4gICAqICAgLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgKiAgICAgY29uc29sZS5sb2coJ0NhbWVyYSB6b29tIGhhcyBiZWVuIHJlc2V0Jyk7XG4gICAqICAgfSlcbiAgICogYGBgXG4gICAqXG4gICAqICoqRXJyb3JzKipcbiAgICogKiBGYWlscyBpZiB0aGUgY3VycmVudCBtb2RlIGlzIG5vdCBJbnNpZGUgbW9kZS5cbiAgICovXG4gIHpvb21SZXNldCgpOiBQcm9taXNlPHZvaWQ+O1xuXG4gIC8qKlxuICAgKiBBbiBvYnNlcnZhYmxlIHpvb20gbGV2ZWwgb2YgdGhlIGNhbWVyYSBpbiBQYW5vcmFtYSBtb2RlLlxuICAgKiBUaGUgem9vbSBsZXZlbCB3aWxsIGJlIDEuMCBmb3IgYWxsIG90aGVyIHZpZXdtb2Rlcy5cbiAgICpcbiAgICogYGBgXG4gICAqIG1wU2RrLkNhbWVyYS56b29tLnN1YnNjcmliZShmdW5jdGlvbiAoem9vbSkge1xuICAgKiAgIC8vIHRoZSB6b29tIGxldmVsIGhhcyBjaGFuZ2VkXG4gICAqICAgY29uc29sZS5sb2coJ0N1cnJlbnQgem9vbSBpcyAnLCB6b29tLmxldmVsKTtcbiAgICogfSk7XG4gICAqIGBgYFxuICAgKi9cbiAgem9vbTogSU9ic2VydmFibGU8Q2FtZXJhLlpvb21EYXRhPjtcbn1cbiIsImltcG9ydCB0eXBlIHsgVmVjdG9yMywgUXVhdGVybmlvbiwgU2l6ZSB9IGZyb20gJy4vZ2xvYmFsJztcbmltcG9ydCB0eXBlIHsgQ2FtZXJhIH0gZnJvbSAnLi9jYW1lcmEnO1xuXG5leHBvcnQgbmFtZXNwYWNlIENvbnZlcnNpb24ge1xuXG4gIGV4cG9ydCBuYW1lc3BhY2UgVHJhbnNmb3JtVHlwZSB7XG4gICAgZXhwb3J0IGVudW0gQ29vcmRpbmF0ZXMge1xuICAgICAgVE9fQVBJID0gJ2Nvb3JkaW5hdGVzVG9BUEknLFxuICAgICAgVE9fU0RLID0gJ2Nvb3JkaW5hdGVzVG9TREsnLFxuICAgIH1cbiAgICBleHBvcnQgZW51bSBTd2VlcFJvdGF0aW9uIHtcbiAgICAgIFRPX0FQSSA9ICdzd2VlcFJvdGF0aW9uVG9BUEknLFxuICAgICAgVE9fU0RLID0gJ3N3ZWVwUm90YXRpb25Ub1NESycsXG4gICAgfVxuICAgIGV4cG9ydCBlbnVtIENhbWVyYVJvdGF0aW9uIHtcbiAgICAgIFRPX0FQSSA9ICdjYW1lcmFSb3RhdGlvblRvQVBJJyxcbiAgICAgIFRPX1NESyA9ICdjYW1lcmFSb3RhdGlvblRvU0RLJyxcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGludGVyZmFjZSBDb252ZXJzaW9uIHtcbiAgVHJhbnNmb3JtVHlwZTogdHlwZW9mIENvbnZlcnNpb24uVHJhbnNmb3JtVHlwZTtcblxuICAvKipcbiAgICogQ29udmVydHMgYSAzRCBwb3NpdGlvbiBvciByb3RhdGlvbiBiZXR3ZWVuIEFQSSBhbmQgU0RLIG9yaWVudGF0aW9uc1xuICAgKlxuICAgKiAgQHJldHVybnMgQW4gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIGNvbnZlcnNpb24gZnVuY3Rpb25zIGZvciBlYWNoIG9wZXJhdG9yXG4gICAqXG4gICAqIGBgYHRzXG4gICAqIC8vIENvbnZlcnQgQVBJIENvb3JkaW5hdGVzIHRvIFNESyBDb29yZGluYXRlczpcbiAgICogY29uc3QgYXBpQ29vcmRzOiBWZWN0b3IzID0geyB4OiAxLCB5OiAyLCB6OiAzIH07XG4gICAqIGNvbnN0IGNvbnZlcnNpb25GdW5jdGlvbiA9IG1wU2RrLkNvbnZlcnNpb24uVHJhbnNmb3JtVHlwZS5Db29yZGluYXRlcy5UT19TREs7XG4gICAqIGNvbnN0IHNka0Nvb3JkczogVmVjdG9yMyA9IG1wU2RrLkNvbnZlcnNpb24uYmFzaXNDaGFuZ2UoYXBpQ29vcmRzLCBjb252ZXJzaW9uRnVuY3Rpb24pO1xuICAgKlxuICAgKiAvLyBDb252ZXJ0IFNESyBTd2VlcCBSb3RhdGlvbiB0byBBUEkgU3dlZXAgUm90YXRpb246XG4gICAqIGNvbnN0IHNka1N3ZWVwUm90YXRpb246IFF1YXRlcm5pb24gPSB7IHg6IDAsIHk6IDAsIHo6IDAsIHc6IDEgfTtcbiAgICogY29uc3QgY29udmVyc2lvbkZ1bmN0aW9uID0gbXBTZGsuQ29udmVyc2lvbi5UcmFuc2Zvcm1UeXBlLlN3ZWVwUm90YXRpb24uVE9fQVBJO1xuICAgKiBjb25zdCBhcGlTd2VlcFJvdGF0aW9uOiBRdWF0ZXJuaW9uID0gbXBTZGsuQ29udmVyc2lvbi5iYXNpc0NoYW5nZShzZGtTd2VlcFJvdGF0aW9uLCBjb252ZXJzaW9uRnVuY3Rpb24pO1xuICAgKiBgYGBcbiAgICovXG4gIGJhc2lzQ2hhbmdlKFxuICAgIG9wZXJhbmQ6IFZlY3RvcjMsXG4gICAgb3BlcmF0aW9uOiBDb252ZXJzaW9uLlRyYW5zZm9ybVR5cGUuQ29vcmRpbmF0ZXMsXG4gICk6IFZlY3RvcjM7XG4gIGJhc2lzQ2hhbmdlKFxuICAgIG9wZXJhbmQ6IFF1YXRlcm5pb24sXG4gICAgb3BlcmF0aW9uOiBDb252ZXJzaW9uLlRyYW5zZm9ybVR5cGUuU3dlZXBSb3RhdGlvbiB8IENvbnZlcnNpb24uVHJhbnNmb3JtVHlwZS5DYW1lcmFSb3RhdGlvbixcbiAgKTogUXVhdGVybmlvbjtcblxuICAvKipcbiAgICogQ29udmVydHMgYSBwb3NpdGlvbiBvZiBhbiBvYmplY3QgaW4gM2QgdG8gdGhlIHBpeGVsIGNvb3JkaW5hdGUgb24gdGhlIHNjcmVlblxuICAgKlxuICAgKiBAcGFyYW0gd29ybGRQb3MgUG9zaXRpb24gb2YgdGhlIG9iamVjdFxuICAgKiBAcGFyYW0gY2FtZXJhUG9zZSBUaGUgY3VycmVudCBwb3NlIG9mIHRoZSBDYW1lcmEgYXMgcmVjZWl2ZWQgZnJvbSBDYW1lcmEucG9zZS5zdWJzY3JpYmVcbiAgICogQHBhcmFtIHdpbmRvd1NpemUgVGhlIGN1cnJlbnQgc2l6ZSBvZiB0aGUgU2hvd2Nhc2UgcGxheWVyXG4gICAqIEBwYXJhbSByZXN1bHQgQW4gb3B0aW9uYWwsIHByZS1hbGxvY2F0ZWQgVmVjdG9yMyB0byBzdG9yZSB0aGUgcmVzdWx0XG4gICAqXG4gICAqIGBgYHRzXG4gICAqIGNvbnN0IHNob3djYXNlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Nob3djYXNlSWZyYW1lJyk7XG4gICAqIGNvbnN0IHNob3djYXNlU2l6ZSA9IHtcbiAgICogIHc6IHNob3djYXNlLmNsaWVudFdpZHRoLFxuICAgKiAgaDogc2hvd2Nhc2UuY2xpZW50SGVpZ2h0LFxuICAgKiB9O1xuICAgKiBjb25zdCBjYW1lcmFQb3NlOyAvLyBnZXQgcG9zZSB1c2luZzogbXBTZGsuQ2FtZXJhLnBvc2Uuc3Vic2NyaWJlXG4gICAqIGNvbnN0IG1hdHRlcnRhZzsgLy8gZ2V0IGEgbWF0dGVydGFnIGZyb20gdGhlIGNvbGxlY3Rpb24gdXNpbmc6IG1wU2RrLk1hdHRlcnRhZy5nZXREYXRhXG4gICAqXG4gICAqIGNvbnN0IHNjcmVlbkNvb3JkaW5hdGUgPSBtcFNkay5Db252ZXJzaW9uLndvcmxkVG9TY3JlZW4obWF0dGVydGFnLmFuY2hvclBvc2l0aW9uLCBjYW1lcmFQb3NlLCBzaG93Y2FzZVNpemUpXG4gICAqIGBgYFxuICAgKi9cbiAgd29ybGRUb1NjcmVlbih3b3JsZFBvczogVmVjdG9yMywgY2FtZXJhUG9zZTogQ2FtZXJhLlBvc2UsIHdpbmRvd1NpemU6IFNpemUsIHJlc3VsdD86IFZlY3RvcjMpOiBWZWN0b3IzO1xufVxuIiwiaW1wb3J0IHR5cGUgeyBJT2JzZXJ2YWJsZU1hcCwgSU9ic2VydmFibGUsIERpY3Rpb25hcnkgfSBmcm9tICcuL2dsb2JhbCc7XG5cbmV4cG9ydCBuYW1lc3BhY2UgRmxvb3Ige1xuICBleHBvcnQgdHlwZSBGbG9vcnMgPSB7XG4gICAgY3VycmVudEZsb29yOiBudW1iZXI7XG4gICAgZmxvb3JOYW1lczogc3RyaW5nW107XG4gICAgdG90YWxGbG9vcnM6IG51bWJlcjtcbiAgfTtcblxuICBleHBvcnQgdHlwZSBGbG9vckRhdGEgPSB7XG4gICAgaWQ6IHN0cmluZztcbiAgICBzZXF1ZW5jZTogbnVtYmVyO1xuICAgIG5hbWU6IHN0cmluZztcbiAgfTtcblxuICBleHBvcnQgdHlwZSBPYnNlcnZhYmxlRmxvb3JEYXRhID0ge1xuICAgIGlkOiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gICAgc2VxdWVuY2U6IG51bWJlciB8IHVuZGVmaW5lZDtcbiAgICBuYW1lOiBzdHJpbmc7XG4gIH07XG5cbiAgZXhwb3J0IGVudW0gRXZlbnQge1xuICAgIC8qKiBAZXZlbnQgKi9cbiAgICBDSEFOR0VfU1RBUlQgPSAnZmxvb3JzLmNoYW5nZXN0YXJ0JyxcbiAgICAvKiogQGV2ZW50ICovXG4gICAgQ0hBTkdFX0VORCAgID0gJ2Zsb29ycy5jaGFuZ2VlbmQnLFxuICB9XG4gIGV4cG9ydCBkZWNsYXJlIG5hbWVzcGFjZSBDb252ZXJzaW9uIHtcbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZSBhIG1hcCBiZXR3ZWVuIHYyIElEcyBhbmQgdjEgSURzXG4gICAgICpcbiAgICAgKiBUaGlzIG1ldGhvZCB3aWxsIGhlbHAgd2l0aCBtaWdyYXRpb24gYmV0d2VlbiBJRHMgdXNlZCBmb3IgZmxvb3JzLlxuICAgICAqXG4gICAgICogYGBgXG4gICAgICogY29uc3QgbWFwcGluZyA9IGF3YWl0IG1wU2RrLkZsb29yLkNvbnZlcnNpb24uY3JlYXRlSWRNYXAoKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEBwYXJhbSBpbnZlcnQ/OiBib29sZWFuIC0gaWYgcGFzc2VkLCByZXR1cm4gbWFwIG9mIHYxLT52MiBpbnN0ZWFkXG4gICAgICovXG4gICAgZnVuY3Rpb24gY3JlYXRlSWRNYXAoaW52ZXJ0PzogYm9vbGVhbik6IFByb21pc2U8RGljdGlvbmFyeTxzdHJpbmc+PjtcbiAgfVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIEZsb29yIHtcbiAgRXZlbnQ6IHR5cGVvZiBGbG9vci5FdmVudDtcbiAgQ29udmVyc2lvbjogdHlwZW9mIEZsb29yLkNvbnZlcnNpb247XG5cbiAgLyoqXG4gICAqIFRoaXMgZnVuY3Rpb24gcmV0dXJucyB0aGUgc3RhdGUgb2YgYWxsIGZsb29ycy5cbiAgICpcbiAgICogYGBgXG4gICAqIG1wU2RrLkZsb29yLmdldERhdGEoKVxuICAgKiAgIC50aGVuKGZ1bmN0aW9uKGZsb29ycykge1xuICAgKiAgICAgLy8gRmxvb3IgZGF0YSByZXRyZWl2YWwgY29tcGxldGUuXG4gICAqICAgICBjb25zb2xlLmxvZygnQ3VycmVudCBmbG9vcjogJyArIGZsb29ycy5jdXJyZW50Rmxvb3IpO1xuICAgKiAgICAgY29uc29sZS5sb2coJ1RvdGFsIGZsb29zOiAnICsgZmxvb3JzLnRvdGFsRmxvb3JzKTtcbiAgICogICAgIGNvbnNvbGUubG9nKCdOYW1lIG9mIGZpcnN0IGZsb29yOiAnICsgZmxvb3JzLmZsb29yTmFtZXNbMF0pO1xuICAgKiAgIH0pXG4gICAqICAgLmNhdGNoKGZ1bmN0aW9uKGVycm9yKSB7XG4gICAqICAgICAvLyBGbG9vcnMgZGF0YSByZXRyaWV2YWwgZXJyb3IuXG4gICAqICAgfSk7XG4gICAqIGBgYFxuICAgKiBAZGVwcmVjYXRlZCBVc2UgdGhlIG9ic2VydmFibGUgW1tkYXRhXV0gY29sbGVjdGlvbiBpbnN0ZWFkXG4gICAqL1xuICBnZXREYXRhKCk6IFByb21pc2U8Rmxvb3IuRmxvb3JzPjtcblxuICAvKipcbiAgICogQW4gb2JzZXJ2YWJsZSBjb2xsZWN0aW9uIG9mIEZsb29yIGRhdGEgdGhhdCBjYW4gYmUgc3Vic2NyaWJlZCB0by5cbiAgICpcbiAgICogU2VlIFtbSU9ic2VydmFibGVNYXBdXSB0byBsZWFybiBob3cgdG8gcmVjZWl2ZSBkYXRhIGZyb20gdGhlIGNvbGxlY3Rpb24uXG4gICAqXG4gICAqIGBgYFxuICAgKiBtcFNkay5GbG9vci5kYXRhLnN1YnNjcmliZSh7XG4gICAqICAgb25Db2xsZWN0aW9uVXBkYXRlZDogZnVuY3Rpb24gKGNvbGxlY3Rpb24pIHtcbiAgICogICAgIGNvbnNvbGUubG9nKCdDb2xsZWN0aW9uIHJlY2VpdmVkLiBUaGVyZSBhcmUgJywgT2JqZWN0LmtleXMoY29sbGVjdGlvbikubGVuZ3RoLCAnZmxvb3JzIGluIHRoZSBjb2xsZWN0aW9uJyk7XG4gICAqICAgfVxuICAgKiB9KTtcbiAgICogYGBgXG4gICAqL1xuICBkYXRhOiBJT2JzZXJ2YWJsZU1hcDxGbG9vci5GbG9vckRhdGE+O1xuXG4gIC8qKlxuICAgKiBBbiBvYnNlcnZhYmxlIGZvciB0aGUgcGxheWVyJ3MgY3VycmVudGx5IGFjdGl2ZSBmbG9vci5cbiAgICpcbiAgICogVGhlIGN1cnJlbnQgZmxvb3IgY2FuIHRlbGwgeW91IHdoZW4gXCJhbGwgZmxvb3JzXCIgYXJlIHZpc2libGUgYW5kIGVuY29kZXMgd2hlbiB0aGUgY2FtZXJhIGlzIHRyYW5zaXRpb25pbmcgYmV0d2VlbiBmbG9vcnMuXG4gICAqXG4gICAqIFRoZSBmb2xsb3dpbmcgdGFibGUgc2hvd3MgYWxsIDQgc3RhdGVzIG9mIHRoZSBjdXJyZW50IGZsb29yIG9ic2VydmFibGVcbiAgICogKElOU0lERTogaW5zaWRlIG1vZGUsIERIOiBkb2xsaG91c2UgbW9kZSwgRlA6IGZsb29ycGxhbiBtb2RlKS5cbiAgICpcbiAgICogfCAgICAgICAgICB8IGF0IHN3ZWVwIChJTlNJREUpIG9yIGZsb29yIChESCwgRlApIHwgYWxsIGZsb29ycyAoREgsIEZQKSB8IHRyYW5zaXRpb25pbmcgfCBpbiB1bnBsYWNlZCAzNjDCuiB2aWV3IHxcbiAgICogfC0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLXwtLS0tLS0tLS0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLS0tfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLXxcbiAgICogfCBpZCAgICAgICB8IGAke2N1cnJlbnQuaWR9YCAgICAgICAgICAgICAgICAgICAgIHwgJycgICAgICAgICAgICAgICAgICB8ICcnICAgICAgICAgICAgfCB1bmRlZmluZWQgICAgICAgICAgICAgIHxcbiAgICogfCBzZXF1ZW5jZSB8IGAke2N1cnJlbnQuc2VxdWVuY2V9YCAgICAgICAgICAgICAgIHwgLTEgICAgICAgICAgICAgICAgICB8IHVuZGVmaW5lZCAgICAgfCB1bmRlZmluZWQgICAgICAgICAgICAgIHxcbiAgICogfCBuYW1lICAgICB8IGAke2N1cnJlbnQubmFtZX1gICAgICAgICAgICAgICAgICAgIHwgJ2FsbCcgICAgICAgICAgICAgICB8ICcnICAgICAgICAgICAgfCAnJyAgICAgICAgICAgICAgICAgICAgIHxcbiAgICpcbiAgICogYGBgXG4gICAqIG1wU2RrLkZsb29yLmN1cnJlbnQuc3Vic2NyaWJlKGZ1bmN0aW9uIChjdXJyZW50Rmxvb3IpIHtcbiAgICogICAvLyBDaGFuZ2UgdG8gdGhlIGN1cnJlbnQgZmxvb3IgaGFzIG9jY3VycmVkLlxuICAgKiAgIGlmIChjdXJyZW50Rmxvb3Iuc2VxdWVuY2UgPT09IC0xKSB7XG4gICAqICAgICBjb25zb2xlLmxvZygnQ3VycmVudGx5IHZpZXdpbmcgYWxsIGZsb29ycycpO1xuICAgKiAgIH0gZWxzZSBpZiAoY3VycmVudEZsb29yLnNlcXVlbmNlID09PSB1bmRlZmluZWQpIHtcbiAgICogICAgIGlmIChjdXJyZW50Rmxvb3IuaWQgPT09IHVuZGVmaW5lZCkge1xuICAgKiAgICAgICBjb25zb2xlLmxvZygnQ3VycmVudCB2aWV3aW5nIGFuIHVucGxhY2VkIHVuYWxpZ25lZCBzd2VlcCcpO1xuICAgKiAgICAgfSBlbHNlIHtcbiAgICogICAgICAgY29uc29sZS5sb2coJ0N1cnJlbnRseSB0cmFuc2l0aW9uaW5nIGJldHdlZW4gZmxvb3JzJyk7XG4gICAqICAgICB9XG4gICAqICAgfSBlbHNlIHtcbiAgICogICAgIGNvbnNvbGUubG9nKCdDdXJyZW50bHkgb24gZmxvb3InLCBjdXJyZW50Rmxvb3IuaWQpO1xuICAgKiAgICAgY29uc29sZS5sb2coJ0N1cnJlbnQgZmxvb3JcXCdzIHNlcXVlbmNlIGluZGV4JywgY3VycmVudEZsb29yLnNlcXVlbmNlKTtcbiAgICogICAgIGNvbnNvbGUubG9nKCdDdXJyZW50IGZsb29yXFwncyBuYW1lJywgY3VycmVudEZsb29yLm5hbWUpXG4gICAqICAgfVxuICAgKiB9KTtcbiAgICogYGBgXG4gICAqL1xuICBjdXJyZW50OiBJT2JzZXJ2YWJsZTxGbG9vci5PYnNlcnZhYmxlRmxvb3JEYXRhPjtcblxuICAvKipcbiAgICogV2hlbiBpbiBpbnNpZGUgbW9kZSwgdGhpcyBmdW5jdGlvbiBjaGFuZ2VzIHRoZSBhY3RpdmUgZmxvb3IsIGFuZCBtb3ZlcyB0aGUgY2FtZXJhIHRvIHRoZSBuZWFyZXN0IHBvc2l0aW9uIG9uIHRoYXQgZmxvb3IuXG4gICAqIFdoZW4gaW4gZmxvb3JwbGFuL2RvbGxob3VzZSBtb2RlLCB0aGlzIGZ1bmN0aW9uIGNoYW5nZXMgdGhlIGFjdGl2ZSBmbG9vciwgYnV0IGRvZXMgbm90IG1vZGlmeSB0aGUgY2FtZXJhXG4gICAqXG4gICAqIGBgYFxuICAgKiBtcFNkay5GbG9vci5tb3ZlVG8oMilcbiAgICogICAudGhlbihmdW5jdGlvbihmbG9vckluZGV4KSB7XG4gICAqICAgICAvLyBNb3ZlIHRvIGZsb29yIGNvbXBsZXRlLlxuICAgKiAgICAgY29uc29sZS5sb2coJ0N1cnJlbnQgZmxvb3I6ICcgKyBmbG9vckluZGV4KTtcbiAgICogICB9KVxuICAgKiAgIC5jYXRjaChmdW5jdGlvbihlcnJvcikge1xuICAgKiAgICAgLy8gRXJyb3IgbW92aW5nIHRvIGZsb29yLlxuICAgKiAgIH0pO1xuICAgKiBgYGBcbiAgICpcbiAgICogQHBhcmFtIGluZGV4OiBUaGUgZGVzdGluYXRpb24gZmxvb3IgaW5kZXhcbiAgICogQHJldHVybiBUaGUgZGVzdGluYXRpb24gZmxvb3IgaW5kZXguXG4gICAqL1xuICBtb3ZlVG8oaW5kZXg6IG51bWJlcik6IFByb21pc2U8bnVtYmVyPjtcblxuICAvKipcbiAgICogVGhpcyBmdW5jdGlvbiBkaXNwbGF5cyBhbGwgZmxvb3JzLlxuICAgKlxuICAgKiBgYGBcbiAgICogbXBTZGsuRmxvb3Iuc2hvd0FsbCgpXG4gICAqICAgLnRoZW4oZnVuY3Rpb24oKXtcbiAgICogICAgIC8vIFNob3cgZmxvb3JzIGNvbXBsZXRlLlxuICAgKiAgIH0pXG4gICAqICAgLmNhdGNoKGZ1bmN0aW9uKGVycm9yKSB7XG4gICAqICAgICAvLyBFcnJvciBkaXNwbGF5aW5nIGFsbCBmbG9vcnMuXG4gICAqICAgfSk7XG4gICAqIGBgYFxuICAgKi9cbiAgc2hvd0FsbCgpOiBQcm9taXNlPHZvaWQ+O1xufVxuIiwiaW1wb3J0IHR5cGUgeyBJT2JzZXJ2YWJsZU1hcCwgSU9ic2VydmVyLCBJU3Vic2NyaXB0aW9uLCBPYnNlcnZlckNhbGxiYWNrIH0gZnJvbSAnLi9nbG9iYWwnO1xuXG5leHBvcnQgbmFtZXNwYWNlIEdyYXBoIHtcbiAgLyoqXG4gICAqIEEgZGVzY3JpcHRvciBmb3IgYSBncmFwaCB2ZXJ0ZXguIFVzZWQgd2hlbiBhZGRpbmcgdmVydGljZXMgdG8gYSBncmFwaC5cbiAgICovXG4gIGV4cG9ydCB0eXBlIFZlcnRleERlc2NyaXB0b3I8VD4gPSB7XG4gICAgLyoqIFRoZSBpZCB0aGF0IGNhbiBiZSB1c2VkIHRvIGxvb2t1cCB0aGlzIHZlcnRleCBpbiB0aGUgZ3JhcGggKi9cbiAgICBpZDogc3RyaW5nO1xuICAgIC8qKiBBbnkgdXNlciBkYXRhIHRvIGJlIGFzc29jaWF0ZWQgd2l0aCB0aGlzIHZlcnRleCAqL1xuICAgIGRhdGE6IFQ7XG4gIH07XG5cbiAgLyoqXG4gICAqIEEgZGVzY3JpcHRvciBmb3IgYSBncmFwaCB2ZXJ0ZXggd2hlbiBubyBleHRyYSBkYXRhIHdpbGwgYmUgYXNzb2NpYXRlZCB3aXRoIGVhY2ggdmVydGV4LiBVc2VkIHdoZW4gYWRkaW5nIHZlcnRpY2VzIHRvIGEgZ3JhcGguXG4gICAqL1xuICBleHBvcnQgdHlwZSBWZXJ0ZXhJZERlc2NyaXB0b3IgPSB7XG4gICAgLyoqIFRoZSBpZCB0aGF0IGNhbiBiZSB1c2VkIHRvIGxvb2t1cCB0aGlzIHZlcnRleCBpbiB0aGUgZ3JhcGggKi9cbiAgICBpZDogc3RyaW5nO1xuICB9O1xuXG4gIC8qKlxuICAgKiBBIGRlc2NyaXB0b3IgZm9yIGEgZ3JhcGggZWRnZS4gVXNlZCB3aGVuIGFkZGluZyBlZGdlcyB0byBhIGdyYXBoLlxuICAgKi9cbiAgZXhwb3J0IHR5cGUgRWRnZURlc2NyaXB0b3I8VD4gPSB7XG4gICAgLyoqIFRoZSBzb3VyY2UgdmVydGV4LiAqL1xuICAgIHNyYzogVmVydGV4PFQ+O1xuICAgIC8qKiBUaGUgZGVzdGluYXRpb24gdmVydGV4LiAqL1xuICAgIGRzdDogVmVydGV4PFQ+O1xuICAgIC8qKiBUaGUgd2VpZ2h0IG9mIHRoZSBlZGdlLiAqL1xuICAgIHdlaWdodD86IG51bWJlcjtcbiAgfTtcblxuICAvKipcbiAgICogQSBub2RlIGluIHRoZSBncmFwaC5cbiAgICovXG4gIGV4cG9ydCB0eXBlIFZlcnRleDxUPiA9IHtcbiAgICAvKipcbiAgICAgKiBUaGUgdmVydGV4J3MgaWQuXG4gICAgICovXG4gICAgcmVhZG9ubHkgaWQ6IHN0cmluZztcblxuICAgIC8qKlxuICAgICAqIFVzZXIgZGF0YSBhc3NvY2lhdGVkIHdpdGggdGhlIHZlcnRleC5cbiAgICAgKi9cbiAgICByZWFkb25seSBkYXRhOiBUO1xuXG4gICAgLyoqXG4gICAgICogQW4gaXRlcmFibGUgb2YgYWxsIGVkZ2VzIHRoYXQgaGF2ZSB0aGlzIHZlcnRleCBhcyBpdHMgZGVzdGluYXRpb24gZW5kcG9pbnQuXG4gICAgICpcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogY29uc3QgdmVydGV4ID0gZ3JhcGgudmVydGV4KCdhJyk7XG4gICAgICogZm9yIChjb25zdCBlZGdlSW4gb2YgdmVydGV4LmVkZ2VzSW4pIHtcbiAgICAgKiAgIGNvbnNvbGUubG9nKGB2ZXJ0ZXggXCIke2VkZ2VJbi5kc3QuaWR9XCIgaGFzIGFuIGVkZ2UgY29taW5nIGluIGZyb20gYSB2ZXJ0ZXggXCIke2VkZ2VJbi5zcmMuaWR9XCJgKTtcbiAgICAgKiB9XG4gICAgICogYGBgXG4gICAgICovXG4gICAgcmVhZG9ubHkgZWRnZXNJbjogSXRlcmFibGVJdGVyYXRvcjxFZGdlPFQ+PjtcblxuICAgIC8qKlxuICAgICAqIEFuIGl0ZXJhYmxlIG9mIGFsbCBlZGdlcyB0aGF0IGhhdmUgdGhpcyB2ZXJ0ZXggYXMgaXRzIHNvdXJjZSBlbmRwb2ludC5cbiAgICAgKlxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBjb25zdCB2ZXJ0ZXggPSBncmFwaC52ZXJ0ZXgoJ2EnKTtcbiAgICAgKiBmb3IgKGNvbnN0IGVkZ2VPdXQgb2YgdmVydGV4LmVkZ2VzT3V0KSB7XG4gICAgICogICBjb25zb2xlLmxvZyhgdmVydGV4IFwiJHtlZGdlT3V0LnNyYy5pZH1cIiBoYXMgYW4gZWRnZSBnb2luZyB0byBhIHZlcnRleCBcIiR7ZWRnZU91dC5kc3QuaWR9XCJgKTtcbiAgICAgKiB9XG4gICAgICogYGBgXG4gICAgICovXG4gICAgcmVhZG9ubHkgZWRnZXNPdXQ6IEl0ZXJhYmxlSXRlcmF0b3I8RWRnZTxUPj47XG5cbiAgICAvKipcbiAgICAgKiBBbiBpdGVyYWJsZSBvZiBhbGwgdmVydGljZXMgdGhhdCBjYW4gYmUgdHJhdmVyc2VkIHRvIGZyb20gdGhpcyB2ZXJ0ZXguXG4gICAgICpcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogY29uc3QgdmVydGV4ID0gZ3JhcGgudmVydGV4KCdhJyk7XG4gICAgICogZm9yIChjb25zdCBuZWlnaGJvciBvZiB2ZXJ0ZXgubmVpZ2hib3JzKSB7XG4gICAgICogICBjb25zb2xlLmxvZyhgdmVydGV4IFwiJHt2ZXJ0ZXguaWR9XCIgc2hhcmVzIGFuIGVkZ2Ugd2l0aCBcIiR7bmVpZ2hib3IuaWR9XCIpO1xuICAgICAqIH1cbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICByZWFkb25seSBuZWlnaGJvcnM6IEl0ZXJhYmxlSXRlcmF0b3I8VmVydGV4PFQ+PjtcbiAgfTtcblxuICAvKipcbiAgICogQSB3ZWlnaHRlZCwgZGlyZWN0ZWQgY29ubmVjdGlvbiBiZXR3ZWVuIHR3byB2ZXJ0aWNlcy5cbiAgICpcbiAgICogQHRlbXBsYXRlIFQgVGhlIHR5cGUgb2YgYW55IHVzZXIgZGF0YSBhc3NvY2lhdGVkIHdpdGggZWFjaCB2ZXJ0ZXggaW4gdGhlIGdyYXBoLlxuICAgKi9cbiAgZXhwb3J0IHR5cGUgRWRnZTxUPiA9IHtcbiAgICAvKiogVGhlIHZlcnRleCBhdCB0aGUgc291cmNlIG9mIHRoaXMgZWRnZS4gKi9cbiAgICByZWFkb25seSBzcmM6IFZlcnRleDxUPjtcbiAgICAvKiogVGhlIHZlcnRleCBhdCB0aGUgZGVzdGluYXRpb24gb2YgdGhpcyBlZGdlLiAqL1xuICAgIHJlYWRvbmx5IGRzdDogVmVydGV4PFQ+O1xuICAgIC8qKiBUaGUgd2VpZ2h0IGFzc29jaWF0ZWQgd2l0aCB0aGlzIGVkZ2UuICovXG4gICAgcmVhZG9ubHkgd2VpZ2h0OiBudW1iZXI7XG4gIH07XG5cbiAgLyoqXG4gICAqIEEgZGlyZWN0ZWQsIHdlaWdodGVkIGdyYXBoIGRhdGEgc3RydWN0dXJlLlxuICAgKlxuICAgKiBAdGVtcGxhdGUgVCBUaGUgdHlwZSBvZiBhbnkgdXNlciBkYXRhIGFzc29jaWF0ZWQgd2l0aCBlYWNoIHZlcnRleCBpbiB0aGUgZ3JhcGguXG4gICAqL1xuICBleHBvcnQgaW50ZXJmYWNlIElEaXJlY3RlZEdyYXBoPFQ+IHtcbiAgICAvKipcbiAgICAgKiBXYXRjaCBhIGNvbGxlY3Rpb24gYW5kIHVwZGF0ZSB0aGUgZ3JhcGggYXMgdGhlIGNvbGxlY3Rpb24gY2hhbmdlcy5cbiAgICAgKlxuICAgICAqICoqTm90ZToqKiBJZiB5b3UgbmVlZCBhIGdyYXBoIG9mIGVuYWJsZWQgc3dlZXBzLCB1c2UgW1tTd2VlcC5jcmVhdGVHcmFwaF1dIGluc3RlYWQgb2YgdGhlIGNvZGUgc25pcHBldCBiZWxvd1xuICAgICAqXG4gICAgICogYGBgXG4gICAgICogLy8gY3JlYXRlIGEgZ3JhcGggb2YgZW5hYmxlZCBzd2VlcHNcbiAgICAgKiBjb25zdCBncmFwaCA9IG1wU2RrLmNyZWF0ZUdyYXBoKCk7XG4gICAgICogY29uc3Qgc3ViID0gZ3JhcGgud2F0Y2goe1xuICAgICAqICAgY29sbGVjdGlvbjogbXBTZGsuU3dlZXAuY29sbGVjdGlvbixcbiAgICAgKiAgIGlzTmVpZ2hib3JPZihzd2VlcFNyYywgc3dlZXBEc3QpIHtcbiAgICAgKiAgICAgcmV0dXJuIHN3ZWVwU3JjLmRhdGEubmVpZ2hib3JzLmluY2x1ZGVzKHN3ZWVwRHN0LmlkKTtcbiAgICAgKiAgIH0sXG4gICAgICogICBuZWlnaGJvcnNPZihzd2VlcFZlcnRleCkge1xuICAgICAqICAgICByZXR1cm4gc3dlZXBWZXJ0ZXguZGF0YS5uZWlnaGJvcnMudmFsdWVzKCk7XG4gICAgICogICB9LFxuICAgICAqICAgd2VpZ2h0QmV0d2Vlbihzd2VlcFNyYywgc3dlZXBEc3QpIHtcbiAgICAgKiAgICAgY29uc3QgZHggPSBzd2VlcERzdC5kYXRhLnBvc2l0aW9uLnggLSBzd2VlcFNyYy5kYXRhLnBvc2l0aW9uLng7XG4gICAgICogICAgIGNvbnN0IGR5ID0gc3dlZXBEc3QuZGF0YS5wb3NpdGlvbi55IC0gc3dlZXBTcmMuZGF0YS5wb3NpdGlvbi55O1xuICAgICAqICAgICBjb25zdCBkeiA9IHN3ZWVwRHN0LmRhdGEucG9zaXRpb24ueiAtIHN3ZWVwU3JjLmRhdGEucG9zaXRpb24uejtcbiAgICAgKiAgICAgcmV0dXJuIE1hdGguc3FydChkeCAqKiAyICsgZHkgKiogMiArIGR6ICoqIDIpO1xuICAgICAqICAgfSxcbiAgICAgKiAgIHNob3VsZEFkZChzd2VlcCkge1xuICAgICAqICAgICByZXR1cm4gc3dlZXAuZW5hYmxlZDtcbiAgICAgKiAgIH0sXG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiAvLyBzb21lIHRpbWUgbGF0ZXIgd2hlbiB0aGUgZ3JhcGggbm8gbG9uZ2VyIG5lZWRzIHVwZGF0aW5nXG4gICAgICogc3ViLmNhbmNlbCgpO1xuICAgICAqIGBgYFxuICAgICAqIEBwYXJhbSBjb2xsZWN0aW9uQWRhcHRvclxuICAgICAqIEByZXR1cm5zIElTdWJzY3JpcHRpb25cbiAgICAgKi9cbiAgICB3YXRjaChjb2xsZWN0aW9uQWRhcHRvcjogSUNvbGxlY3Rpb25BZGFwdG9yPFQ+KTogSVN1YnNjcmlwdGlvbjtcblxuICAgIC8qKlxuICAgICAqIEFkZCBhIHZlcnRleCBvciBzZXQgb2YgdmVydGljZXMgdG8gdGhlIGdyYXBoLlxuICAgICAqXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIC8vIGZvciB2ZXJ0aWNlcyB3aXRoIHVuZGVmaW5lZCBcImRhdGFcIiAobm8gZGF0YSBhc3NvY2lhdGVkIHdpdGggZWFjaCB2ZXJ0ZXgpXG4gICAgICogY29uc3QgdW5kZWZHcmFwaCA9IG1wU2RrLkdyYXBoLmNyZWF0ZURpcmVjdGVkR3JhcGg8dW5kZWZpbmVkPigpO1xuICAgICAqIGdyYXBoLmFkZFZlcnRleChcbiAgICAgKiAgIHsgaWQ6ICdhJyB9LFxuICAgICAqICAgeyBpZDogJ2InIH0sXG4gICAgICogKTtcbiAgICAgKlxuICAgICAqIC8vIGZvciB2ZXJ0aWNlcyB3aXRoIGFueSBvdGhlciBkYXRhXG4gICAgICogY29uc3QgZ3JhcGggPSBtcFNkay5HcmFwaC5jcmVhdGVEaXJlY3RlZEdyYXBoPG51bWJlcj4oKTtcbiAgICAgKiBncmFwaC5hZGRWZXJ0ZXgoXG4gICAgICogICB7IGlkOiAnYScsIGRhdGE6IDEgfSxcbiAgICAgKiAgIHsgaWQ6ICdiJywgZGF0YTogMiB9LFxuICAgICAqICk7XG4gICAgICogYGBgXG4gICAgICogQHBhcmFtIHZlcnRleERhdGEgQSB2YXJpYWJsZSBudW1iZXIgb2YgW1tWZXJ0ZXhEZXNjcmlwdG9yXV1zIHRvIHVzZSB0byBjcmVhdGUgbm9kZXMgaW4gdGhlIGdyYXBoLlxuICAgICAqL1xuICAgIGFkZFZlcnRleCguLi52ZXJ0ZXhEYXRhOiBUIGV4dGVuZHMgdW5kZWZpbmVkIHwgdm9pZCA/IFZlcnRleElkRGVzY3JpcHRvcltdIDogQXJyYXk8VmVydGV4RGVzY3JpcHRvcjxUPj4pOiB2b2lkO1xuXG4gICAgLyoqXG4gICAgICogVGVzdCBpZiBhIHZlcnRleCBhc3NvY2lhdGVkIHdpdGggYGlkYCBpcyBwcmVzZW50IGluIHRoZSBncmFwaC5cbiAgICAgKlxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpZiAoZ3JhcGguaGFzVmVydGV4KCdhJykpIHtcbiAgICAgKiAgIGNvbnNvbGUubG9nKCdhIHZlcnRleCB3aXRoIGlkIFwiYVwiIHdhcyBmb3VuZCcpO1xuICAgICAqIH1cbiAgICAgKiBgYGBcbiAgICAgKiBAcGFyYW0gaWQgVGhlIHZlcnRleCdzIGlkLlxuICAgICAqIEByZXR1cm5zIElmIGEgdmVydGV4IHdpdGggYGlkYCBleGlzdHMsIHJldHVybnMgYHRydWVgLiBPdGhlcndpc2UsIGBmYWxzZWAuXG4gICAgICovXG4gICAgaGFzVmVydGV4KGlkOiBzdHJpbmcpOiBib29sZWFuO1xuXG4gICAgLyoqXG4gICAgICogR2V0IHRoZSB2ZXJ0ZXggYXNzb2NpYXRlZCB3aXRoIGBpZGAuXG4gICAgICpcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogY29uc3QgYSA9IGdyYXBoLnZlcnRleCgnYScpO1xuICAgICAqIGlmIChhKSB7XG4gICAgICogICBjb25zb2xlLmxvZyhgRm91bmQgYSB2ZXJ0ZXggd2l0aCBpZCBcIiR7YS5pZH1cImApO1xuICAgICAqIH1cbiAgICAgKiBgYGBcbiAgICAgKiBAcGFyYW0gaWQgVGhlIHZlcnRleCdzIGlkLlxuICAgICAqIEByZXR1cm5zIElmIGEgdmVydGV4IHdpdGggYGlkYCBleGlzdHMsIHJldHVybnMgdGhlIGBWZXJ0ZXhgLiBPdGhlcndpc2UsIGB1bmRlZmluZWRgLlxuICAgICAqL1xuICAgIHZlcnRleChpZDogc3RyaW5nKTogVmVydGV4PFQ+IHwgdW5kZWZpbmVkO1xuXG4gICAgLyoqXG4gICAgICogUmVtb3ZlIGEgdmVydGV4IG9yIGEgc2V0IG9mIHZlcnRpY2VzIGZyb20gdGhlIGdyYXBoLlxuICAgICAqXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGdyYXBoLnJlbW92ZVZlcnRleChhLCBiKTtcbiAgICAgKiBgYGBcbiAgICAgKiBAcGFyYW0gdmVydGljZXMgQSB2YXJpYWJsZSBudW1iZXIgb2YgdmVydGljZXMgdG8gcmVtb3ZlLlxuICAgICAqL1xuICAgIHJlbW92ZVZlcnRleCguLi52ZXJ0aWNlczogQXJyYXk8VmVydGV4PFQ+Pik6IHZvaWQ7XG5cbiAgICAvKipcbiAgICAgKiBBbiBpdGVyYWJsZSBvZiBhbGwgdmVydGljZXMgaW4gdGhlIGdyYXBoLlxuICAgICAqXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGZvciAoY29uc3QgdmVydGV4IG9mIGdyYXBoLnZlcnRpY2VzKSB7XG4gICAgICogICBjb25zb2xlLmxvZyhgdmVydGV4OiAke3ZlcnRleC5pZH1gKTtcbiAgICAgKiB9XG4gICAgICogYGBgXG4gICAgICovXG4gICAgcmVhZG9ubHkgdmVydGljZXM6IEl0ZXJhYmxlSXRlcmF0b3I8VmVydGV4PFQ+PjtcbiAgICAvKipcbiAgICAgKiBUaGUgbnVtYmVyIG9mIHZlcnRpY2VzIGluIHRoZSBncmFwaC5cbiAgICAgKlxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBjb25zb2xlLmxvZyhgdGhlIGdyYXBoIGhhcyAke2dyYXBoLnZlcnRleENvdW50fSB2ZXJ0aWNlc2ApO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIHJlYWRvbmx5IHZlcnRleENvdW50OiBudW1iZXI7XG5cbiAgICAvKipcbiAgICAgKiBTZXQgdGhlIHdlaWdodCBvZiBhbiBlZGdlIG9yIHNldCBvZiBlZGdlcyBiZXR3ZWVuIHBhaXJzIG9mIHZlcnRpY2VzIHJlcHJlc2VudGluZyB0aGUgY29ubmVjdGlvbnMgZnJvbSBgc3JjYCB0byBgZHN0YC5cbiAgICAgKlxuICAgICAqIElmIGFuIGVycm9yIGlzIHRocm93biwgdGhlIGdyYXBoIGlzIGxlZnQgdW50b3VjaGVkLCBubyBlZGdlcyBhcmUgYWRkZWQuXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGdyYXBoLnNldEVkZ2UoXG4gICAgICogICB7IHNyYzogYSwgZHN0OiBiLCB3ZWlnaHQ6IDUgIH0sXG4gICAgICogICB7IHNyYzogYiwgZHN0OiBjLCB3ZWlnaHQ6IDEwIH0sXG4gICAgICogKTtcbiAgICAgKlxuICAgICAqIC8vIHVwZGF0ZSBlZGdlIGFiXG4gICAgICogZ3JhcGguc2V0RWRnZShcbiAgICAgKiAgIHsgc3JjOiBhLCBkc3Q6IGIsIHdlaWdodDogMTAgfSxcbiAgICAgKiApO1xuICAgICAqIGBgYFxuICAgICAqIEBwYXJhbSBzcmMgVGhlIHNvdXJjZSB2ZXJ0ZXguXG4gICAgICogQHBhcmFtIGRzdCBUaGUgZGVzdGluYXRpb24gdmVydGV4LlxuICAgICAqIEBwYXJhbSB3ZWlnaHQgVGhlIHdlaWdodCBhc3NjaWF0ZWQgd2l0aCB0aGUgcGF0aCBmcm9tIGBzcmNgIHRvIGBkc3RgLiBEZWZhdWx0cyB0byAwLlxuICAgICAqIEB0aHJvd3MgSWYgYHNyY2Agb3IgYGRzdGAgaXMgbm90IGluIHRoZSBncmFwaC5cbiAgICAgKiBAdGhyb3dzIElmIGB3ZWlnaHRgIGlzIG5lZ2F0aXZlIG9yIG5vdCBhIG51bWJlci5cbiAgICAgKi9cbiAgICBzZXRFZGdlKC4uLmVkZ2VEZXNjczogQXJyYXk8RWRnZURlc2NyaXB0b3I8VD4+KTogdm9pZDtcblxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgZWRnZSB0aGF0IGNvbm5lY3RzIG9uZSB2ZXJ0ZXggdG8gYW5vdGhlci5cbiAgICAgKlxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBjb25zdCBlZGdlID0gZ3JhcGguZWRnZShhLCBiKTtcbiAgICAgKiBpZiAoZWRnZSkge1xuICAgICAqICAgY29uc29sZS5sb2coYEZvdW5kIGFuIGVkZ2UgZnJvbSBcIiR7ZWRnZS5zcmMuaWR9XCIgdG8gXCIke2VkZ2UuZHN0LmlkfVwiIHdpdGggd2VpZ2h0ICR7ZWRnZS53ZWlnaHR9YCk7XG4gICAgICogfVxuICAgICAqIGBgYFxuICAgICAqIEBwYXJhbSBzcmMgVGhlIHNvdXJjZSB2ZXJ0ZXguXG4gICAgICogQHBhcmFtIGRzdCBUaGUgZGVzdGluYXRpb24gdmVydGV4LlxuICAgICAqIEByZXR1cm5zIElmIGFuIGVkZ2UgZnJvbSBgc3JjYCB0byBgZHN0YCBleGlzdHMsIHJldHVybnMgdGhlIGBFZGdlYC4gT3RoZXJ3aXNlLCBgdW5kZWZpbmVkYC5cbiAgICAgKi9cbiAgICBlZGdlKHNyYzogVmVydGV4PFQ+LCBkc3Q6IFZlcnRleDxUPik6IEVkZ2U8VD4gfCB1bmRlZmluZWQ7XG5cbiAgICAvKipcbiAgICAgKiBUZXN0IGlmIGFuIGVkZ2UgZnJvbSBvbmUgdmVydGV4IHRvIGFub3RoZXIgaXMgcHJlc2VudCBpbiB0aGUgZ3JhcGguXG4gICAgICpcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogaWYgKGdyYXBoLmhhc0VkZ2UoYSwgYikpIHtcbiAgICAgKiAgIGNvbnNvbGUubG9nKCdhbiBlZGdlIGZyb20gXCJhXCIgdG8gXCJiXCIgd2FzIGZvdW5kJyk7XG4gICAgICogfVxuICAgICAqIGBgYFxuICAgICAqIEBwYXJhbSBzcmMgVGhlIHNvdXJjZSB2ZXJ0ZXguXG4gICAgICogQHBhcmFtIGRzdCBUaGUgZGVzdGluYXRpb24gdmVydGV4LlxuICAgICAqIEByZXR1cm5zIElmIGFuIGVkZ2UgZnJvbSBgc3JjYCB0byBgZHN0YCBleGlzdHMsIHJldHVybnMgYHRydWVgLiBPdGhlcndpc2UsIGBmYWxzZWAuXG4gICAgICovXG4gICAgaGFzRWRnZShzcmM6IFZlcnRleDxUPiwgZHN0OiBWZXJ0ZXg8VD4pOiBib29sZWFuO1xuXG4gICAgLyoqXG4gICAgICogUmVtb3ZlIGFuIGVkZ2Ugb3IgYSBzZXQgb2YgZWRnZXMgZnJvbSB0aGUgZ3JhcGguXG4gICAgICpcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogZ3JhcGgucmVtb3ZlRWRnZShlMSwgZTIpO1xuICAgICAqIGBgYFxuICAgICAqIEBwYXJhbSBlZGdlcyBBIHZhcmlhYmxlIG51bWJlciBvZiBlZGdlcyB0byByZW1vdmUuXG4gICAgICovXG4gICAgcmVtb3ZlRWRnZSguLi5lZGdlczogQXJyYXk8RWRnZTxUPj4pOiB2b2lkO1xuXG4gICAgLyoqXG4gICAgICogQW4gaXRlcmFibGUgb2YgYWxsIGVkZ2VzIGluIHRoZSBncmFwaC5cbiAgICAgKlxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBmb3IgKGNvbnN0IGVkZ2Ugb2YgZ3JhcGguZWRnZXMpIHtcbiAgICAgKiAgIGNvbnNvbGUubG9nKGBlZGdlOiAke2VkZ2Uuc3JjLmlkfSAtPiAke2VkZ2UuZHN0LmlkfWApO1xuICAgICAqIH1cbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICByZWFkb25seSBlZGdlczogSXRlcmFibGVJdGVyYXRvcjxFZGdlPFQ+PjtcblxuICAgIC8qKlxuICAgICAqIFRoZSBudW1iZXIgb2YgZWRnZXMgaW4gdGhlIGdyYXBoLlxuICAgICAqXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGNvbnNvbGUubG9nKGB0aGUgZ3JhcGggaGFzICR7Z3JhcGguZWRnZUNvdW50fSBlZGdlc2ApO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIHJlYWRvbmx5IGVkZ2VDb3VudDogbnVtYmVyO1xuXG4gICAgLyoqXG4gICAgICogUmVtb3ZlIGFsbCB2ZXJ0aWNlcyBhbmQgZWRnZXMgZnJvbSB0aGUgZ3JhcGguXG4gICAgICogQWxzbyBjYWxsIGFuIG9wdGlvbmFsIGBvbkRpc3Bvc2VgIHByb3ZpZGVkIGF0IGNvbnN0cnVjdGlvbi5cbiAgICAgKlxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBncmFwaC5kaXNwb3NlKCk7XG4gICAgICogLy8gZ3JhcGgudmVydGV4Q291bnQgPT09IDBcbiAgICAgKiAvLyBncmFwaC5lZGdlQ291bnQgPT09IDBcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBkaXNwb3NlKCk6IHZvaWQ7XG5cbiAgICAvKipcbiAgICAgKiBTdWJzY3JpYmUgdG8gdmVydGV4IGNoYW5nZXMuXG4gICAgICpcbiAgICAgKiBBZnRlciB0aGlzIGdyYXBoJ3MgdmVydGljZXMgaGF2ZSBiZWVuIHVwZGF0ZWQgdXNpbmcgW1thZGRWZXJ0ZXhdXSBvciBbW3JlbW92ZVZlcnRleF1dLFxuICAgICAqIHRoZSBgb2JzZXJ2ZXJgIGF0dGFjaGVkIHdpbGwgaGF2ZSBpdHMgYG9uQ2hhbmdlZGAgZnVuY3Rpb24gY2FsbGVkIHdoZW4gW1tjb21taXRdXSBpcyBjYWxsZWQuXG4gICAgICpcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogZ3JhcGgub25WZXJ0aWNlc0NoYW5nZWQoe1xuICAgICAqICAgb25DaGFuZ2VkKCkge1xuICAgICAqICAgICBjb25zb2xlLmxvZyhgdGhpcyBncmFwaCdzIHZlcnRpY2VzIGhhdmUgY2hhbmdlZGApO1xuICAgICAqICAgfVxuICAgICAqIH0pO1xuICAgICAqIGBgYFxuICAgICAqIEBwYXJhbSBvYnNlcnZlclxuICAgICAqL1xuICAgIG9uVmVydGljZXNDaGFuZ2VkKG9ic2VydmVyOiBJT2JzZXJ2ZXI8dm9pZD4pOiBJU3Vic2NyaXB0aW9uO1xuXG4gICAgLyoqXG4gICAgICogU3Vic2NyaWJlIHRvIGVkZ2UgY2hhbmdlcy5cbiAgICAgKlxuICAgICAqIEFmdGVyIHRoaXMgZ3JhcGgncyBlZGdlcyBoYXZlIGJlZW4gdXBkYXRlZCB1c2luZyBbW3NldEVkZ2VdXSBvciBbW3JlbW92ZUVkZ2VdXSxcbiAgICAgKiB0aGUgYG9ic2VydmVyYCBhdHRhY2hlZCB3aWxsIGhhdmUgaXRzIGBvbkNoYW5nZWRgIGZ1bmN0aW9uIGNhbGxlZCB3aGVuIFtbY29tbWl0XV0gaXMgY2FsbGVkLlxuICAgICAqXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGdyYXBoLm9uRWRnZXNDaGFuZ2VkKHtcbiAgICAgKiAgIG9uQ2hhbmdlZCgpIHtcbiAgICAgKiAgICAgY29uc29sZS5sb2coYHRoaXMgZ3JhcGgncyBlZGdlcyBoYXZlIGNoYW5nZWRgKTtcbiAgICAgKiAgIH1cbiAgICAgKiB9KTtcbiAgICAgKiBgYGBcbiAgICAgKiBAcGFyYW0gb2JzZXJ2ZXJcbiAgICAgKi9cbiAgICBvbkVkZ2VzQ2hhbmdlZChvYnNlcnZlcjogSU9ic2VydmVyPHZvaWQ+KTogSVN1YnNjcmlwdGlvbjtcblxuICAgIC8qKlxuICAgICAqIFRyaWdnZXIgYW55IGF0dGFjaGVkIG9ic2VydmVycyBpZiB0aGVyZSB3ZXJlIGNoYW5nZXMgdG8gdGhpcyBncmFwaC5cbiAgICAgKiBJZiB0aGVyZSBhcmUgbm8gY2hhbmdlcyB0byB0aGUgZ3JhcGgsIHRoaXMgaXMgYSBuby1vcCBhbmQgbm8gY2FsbGJhY2tzIHdpbGwgYmUgdHJpZ2dlcmVkLlxuICAgICAqXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGdyYXBoLmNvbW1pdCgpO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGNvbW1pdCgpOiB2b2lkO1xuICB9XG5cbiAgLyoqXG4gICAqIEFuIGFkYXB0b3IgZm9yIGFuIG9ic2VydmFibGUgY29sbGVjdGlvbiB0byBhdXRvbWF0aWNhbGx5IGdlbmVyYXRlIGFuZCB1cGRhdGUgYSBncmFwaC5cbiAgICogVXNlZCBpbiBbW0lEaXJlY3RlZEdyYXBoLndhdGNoXV0uXG4gICAqL1xuICAgZXhwb3J0IGludGVyZmFjZSBJQ29sbGVjdGlvbkFkYXB0b3I8VD4ge1xuICAgIC8qKlxuICAgICAqIEEgb2JzZXJ2YWJsZSBjb2xsZWN0aW9uIGZyb20gdGhlIHNkaywgZS5nLiBgbXBTZGsuU3dlZXAuZGF0YWAuXG4gICAgICovXG4gICAgY29sbGVjdGlvbjogSU9ic2VydmFibGVNYXA8VD47XG5cbiAgICAvKipcbiAgICAgKiBEZXRlcm1pbmVzIHdoZXRoZXIgb3Igbm90IGFuIGl0ZW0gZnJvbSB0aGUgY29sbGVjdGlvbiBzaG91bGQgYmUgY29uc2lkZXJlZCBhIG5laWdoYm9yIG9mIGFub3RoZXIgaXRlbS5cbiAgICAgKiBAcGFyYW0gc3JjIEEgdmVydGV4IGNvbnRhaW5pbmcgdGhlIHNvdXJjZSBpdGVtXG4gICAgICogQHBhcmFtIGRzdCBBIHZlcnRleCBjb250YWluaW5nIHRoZSBkZXN0aW5hdGlvbiBpdGVtXG4gICAgICovXG4gICAgaXNOZWlnaGJvck9mKHNyYzogVmVydGV4PFQ+LCBkc3Q6IFZlcnRleDxUPik6IGJvb2xlYW47XG5cbiAgICAvKipcbiAgICAgKiBHZXQgYSBsaXN0IG9mIGlkcyBmb3Igb3RoZXIgdmVydGljZXMgdGhhdCBzaG91bGQgYmUgY29uc2lkZXJlZCBuZWlnaGJvcnMgdG8gYW4gaXRlbSBpbiB0aGUgY29sbGVjdGlvbi5cbiAgICAgKiBAcGFyYW0gaXRlbVxuICAgICAqL1xuICAgIG5laWdoYm9yc09mKGl0ZW06IFZlcnRleDxUPik6IEl0ZXJhYmxlSXRlcmF0b3I8c3RyaW5nPjtcblxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgd2VpZ2h0IGJldHdlZW4gdHdvIGl0ZW1zIGluIHRoZSBjb2xsZWN0aW9uIHRvIHVzZSBhcyB0aGUgY29ubmVjdGluZyBlZGdlcyB3ZWlnaHQuXG4gICAgICogQHBhcmFtIHNyY1xuICAgICAqIEBwYXJhbSBkc3RcbiAgICAgKi9cbiAgICB3ZWlnaHRCZXR3ZWVuKHNyYzogVmVydGV4PFQ+LCBkc3Q6IFZlcnRleDxUPik6IG51bWJlcjtcblxuICAgIC8qKlxuICAgICAqIERldGVybWluZXMgd2hldGhlciBvciBub3QgYW4gaXRlbSBmcm9tIHRoZSBjb2xsZWN0aW9uIHdpbGwgYmUgYWRkZWQgYXMgYSBncmFwaCB2ZXJ0ZXguXG4gICAgICogQHBhcmFtIGl0ZW1cbiAgICAgKi9cbiAgICBzaG91bGRBZGQ/KGl0ZW06IFQpOiBib29sZWFuO1xuICB9XG5cbiAgLyoqXG4gICAqIFRoZSBzdGF0dXMgb2YgYW4gQSogc2VhcmNoLlxuICAgKi9cbiAgZXhwb3J0IGVudW0gQVN0YXJTdGF0dXMge1xuICAgIC8qKiBBIHBhdGggd2FzIGZvdW5kLiAqL1xuICAgIFNVQ0NFU1MgPSAnYXN0YXIuc3RhdHVzLnN1Y2Nlc3MnLFxuICAgIC8qKiBObyBwYXRoIHdhcyBmb3VuZC4gKi9cbiAgICBOT19QQVRIID0gJ2FzdGFyLnN0YXR1cy5ub19wYXRoJyxcbiAgICAvKiogQSBwYXRoIHdhc24ndCBmb3VuZCBpbiB0aGUgdGltZSBzcGVjaWZpZWQuICovXG4gICAgVElNRU9VVCA9ICdhc3Rhci5zdGF0dXMudGltZW91dCcsXG4gICAgLyoqIFRoZSBzdGFydCB2ZXJ0ZXggd2FzIG5vdCBmb3VuZCBpbiB0aGUgZ3JhcGguICovXG4gICAgTk9fU1RBUlRfVkVSVEVYID0gJ2FzdGFyLnN0YXR1cy5ub19zdGFydCcsXG4gICAgLyoqIFRoZSBlbmQgdmVydGV4IHdhcyBub3QgZm91bmQgaW4gdGhlIGdyYXBoLiAqL1xuICAgIE5PX0VORF9WRVJURVggPSAnYXN0YXIuc3RhdHVzLm5vX2VuZCcsXG4gIH1cblxuICAvKipcbiAgICogVGhlIHJlc3VsdCBvZiBkb2luZyBhbiBBKiBzZWFyY2guXG4gICAqL1xuICBleHBvcnQgdHlwZSBBU3RhclJlc3VsdDxUPiA9IHtcbiAgICAvKiogV2hldGhlciB0aGUgc2VhcmNoIHdhcyBzdWNjZXNzZnVsLCB0aW1lZCBvdXQsIG9yIGlmIHRoZXJlIHdhcyBubyBwYXRoIGZvdW5kLiAqL1xuICAgIHN0YXR1czogQVN0YXJTdGF0dXM7XG4gICAgLyoqIFRoZSB0b3RhbCBjb3N0IG9mIHRyYW52ZXJzaW5nIHRoZSBwYXRoLiAqL1xuICAgIGNvc3Q6IG51bWJlcjtcbiAgICAvKiogT24gc3VjY2VzcywgY29udGFpbnMgdGhlIHBhdGggb2YgdmVydGljZXMuICovXG4gICAgcGF0aDogQXJyYXk8VmVydGV4PFQ+PjtcbiAgfVxuXG4gIC8qKlxuICAgKiBPcHRpb25zIHRoYXQgY2FuIGNvbmZpZ3VyZSBob3cgdGhlIEEqIGFsZ29yaXRobSBydW5zLlxuICAgKi9cbiAgZXhwb3J0IGludGVyZmFjZSBTZWFyY2hPcHRpb25zPFQ+IHtcbiAgICAvKiogQW4gZXN0aW1hdGUgb2YgdGhlIFwiZGlzdGFuY2VcIiBiZXR3ZWVuIGB2ZXJ0ZXhBYCBhbmQgYHZlcnRleEJgLiBUaGUgZGVmYXVsdCBoZXVyaXN0aWMgZnVuY3Rpb24gcmV0dXJucyAwLiAqL1xuICAgIGhldXJpc3RpYyh2ZXJ0ZXhBOiBWZXJ0ZXg8VD4sIHZlcnRleEI6IFZlcnRleDxUPiwgZWRnZTogRWRnZTxUPik6IG51bWJlcjtcbiAgfVxuXG4gIC8qKlxuICAgKiBBbiBvYmplY3QgdGhhdCBlbmNhcHN1bGF0ZXMgYSBncmFwaCBhbmQgY2FuIGJlIHVzZWQgdG8gZXhlY3V0ZSBBKiBvciBzdWJzY3JpYmUgdG8gQSogZm9yIHBvdGVudGlhbCBjaGFuZ2VzLlxuICAgKi9cbiAgZXhwb3J0IGludGVyZmFjZSBJQVN0YXJSdW5uZXI8VD4ge1xuICAgIC8qKlxuICAgICAqIERvIHRoZSBBKiBzZWFyY2guXG4gICAgICogQHBhcmFtIHRpbWVvdXQgVGhlIGFtb3VudCBvZiB0aW1lIHRvIHNwZW5kIHRyeWluZyB0byBmaW5kIGEgcGF0aC4gRGVmYXVsdHMgdG8gNTAwMG1zLlxuICAgICAqIEByZXR1cm5zIHtBU3RhclJlc3VsdDxUPn0gVGhlIHJlc3VsdHMgb2YgcnVubmluZyBBKi5cbiAgICAgKlxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBjb25zdCBhU3RhclJ1bm5lciA9IG1wU2RrLkdyYXBoLmNyZWF0ZUFTdGFyUnVubmVyKC4uLik7XG4gICAgICogY29uc3QgcmVzdWx0ID0gYVN0YXJSdW5uZXIuZXhlYygpO1xuICAgICAqIGlmIChyZXN1bHQuc3RhdHVzID09PSBtcFNkay5HcmFwaC5BU3RhclN0YXR1cy5TVUNDRVNTKSB7XG4gICAgICogICBjb25zb2xlLmxvZygnZm91bmQgYSBwYXRoIG9mIGxlbmd0aCcsIHJlc3VsdC5wYXRoLmxlbmd0aCk7XG4gICAgICogfVxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGV4ZWModGltZW91dD86IG51bWJlcik6IEFTdGFyUmVzdWx0PFQ+O1xuXG4gICAgLyoqXG4gICAgICogU3Vic2NyaWJlIHRvIGNoYW5nZXMgaW4gdGhlIHVuZGVybHlpbmcgZ3JhcGggYW5kIHJlY2VpdmUgYSBjYWxsYmFjayBpbiBgb2JzZXJ2ZXJgIHdoZW4gY2hhbmdlcyBhcmUgZGV0ZWN0ZWQuXG4gICAgICogQHBhcmFtIG9ic2VydmVyXG4gICAgICogQHJldHVybnMge0lTdWJzY3JpcHRpb259IEEgc3Vic2NyaXB0aW9uIHRvIHN0b3AgbGlzdGVuaW5nIGZvciBjaGFuZ2VzIHRvIHRoZSBncmFwaC5cbiAgICAgKlxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBjb25zdCBhU3RhclJ1bm5lciA9IG1wU2RrLkdyYXBoLmNyZWF0ZUFTdGFyUnVubmVyKC4uLik7XG4gICAgICogY29uc3Qgc3Vic2NyaXB0aW9uID0gYVN0YXJSdW5uZXIuc3Vic2NyaWJlKHtcbiAgICAgKiAgIG9uQ2hhbmdlZChydW5uZXIpIHtcbiAgICAgKiAgICAgY29uc3QgcmVzdWx0ID0gcnVubmVyLmV4ZWMoKTtcbiAgICAgKiAgICAgaWYgKHJlc3VsdC5zdGF0dXMgPT09IG1wU2RrLkdyYXBoLkFTdGFyU3RhdHVzLlNVQ0NFU1MpIHtcbiAgICAgKiAgICAgICBjb25zb2xlLmxvZygnZm91bmQgYSBwYXRoIG9mIGxlbmd0aCcsIHJlc3VsdC5wYXRoLmxlbmd0aCk7XG4gICAgICogICAgIH1cbiAgICAgKiAgIH1cbiAgICAgKiB9KTtcbiAgICAgKiAvLyAuLi4gc29tZSB0aW1lIGxhdGVyIHdoZW4gdGhlIHJ1bm5lciBpcyBubyBsb25nZXIgbmVlZGVkXG4gICAgICogc3Vic2NyaXB0aW9uLmNhbmNlbCgpO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIHN1YnNjcmliZShvYnNlcnZlcjogSU9ic2VydmVyPEdyYXBoLklBU3RhclJ1bm5lcjxUPj4gfCBPYnNlcnZlckNhbGxiYWNrPEdyYXBoLklBU3RhclJ1bm5lcjxUPj4pOiBJU3Vic2NyaXB0aW9uO1xuXG4gICAgLyoqXG4gICAgICogUmVsZWFzZSByZXNvdXJjZXMgYXNzb2NpYXRlZCB3aXRoIHRoZSBydW5uZXIuXG4gICAgICogVGhpcyBmdW5jdGlvbiBzaG91bGQgYmUgY2FsbGVkIG9uY2UgeW91IGFyZSBkb25lIHdpdGggdGhlIHJ1bm5lci5cbiAgICAgKi9cbiAgICAgZGlzcG9zZSgpOiB2b2lkO1xuICB9XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgR3JhcGgge1xuICBBU3RhclN0YXR1czogdHlwZW9mIEdyYXBoLkFTdGFyU3RhdHVzO1xuICAvKipcbiAgICogQ3JlYXRlIGFuIGVtcHR5IGdyYXBoIGRhdGEgc3RydWN0dXJlLlxuICAgKlxuICAgKiBgYGBcbiAgICogY29uc3QgZ3JhcGggPSBtcFNkay5HcmFwaC5jcmVhdGVEaXJlY3RlZEdyYXBoKCk7XG4gICAqIGBgYFxuICAgKiBAcGFyYW0gb25EaXNwb3NlIEFuIG9wdGlvbmFsIGNhbGxiYWNrIHRvIGJlIGNhbGxlZCB3aGVuIFtbSURpcmVjdGVkR3JhcGguZGlzcG9zZV1dIGlzIGNhbGxlZFxuICAgKiBAdGVtcGxhdGUgVCBUaGUgdHlwZSBvZiBhbnkgdXNlciBkYXRhIGFzc29jaWF0ZWQgd2l0aCBlYWNoIHZlcnRleCBpbiB0aGUgZ3JhcGguXG4gICAqXG4gICAqIEBlbWJlZFxuICAgKiBAYnVuZGxlXG4gICAqIEBpbnRyb2R1Y2VkIDMuMS41NS4yLTM0LWdhOTkzNGNjZDkzXG4gICAqL1xuICBjcmVhdGVEaXJlY3RlZEdyYXBoPFQ+KG9uRGlzcG9zZT86ICgpID0+IHZvaWQpOiBHcmFwaC5JRGlyZWN0ZWRHcmFwaDxUPjtcblxuICAvKipcbiAgICogQ3JlYXRlIGEgXCJydW5uZXJcIiBmb3IgdGhlIEEqIGFsZ29yaXRobSBhcm91bmQgYSBgZ3JhcGhgLCBhbmQgYHN0YXJ0YCBhbmQgYGVuZGAgdmVydGljZXMuXG4gICAqXG4gICAqIFRoZSBydW5uZXIgZW5jYXBzdWxhdGVzIHRoZSBkZXRhaWxzIG9mIHRoZSBncmFwaCBhbmQgc2VhcmNoLCBjYWNoZXMgdGhlIHJlc3VsdHMgb2YgQSosXG4gICAqIGFuZCBwcm92aWRlcyBhIHdheSB0byBzdWJzY3JpYmUgdG8gcG90ZW50aWFsIGNoYW5nZXMgaW4gdGhlIHBhdGggc2lnbmlmeWluZyB0aGF0IHRoZSByZXN1bHRzIG9mIFtbR3JhcGguQVN0YXJSdW5uZXIuZXhlY11dIG1heSBoYXZlIGNoYW5nZWQuXG4gICAqXG4gICAqIGBgYHR5cGVzY3JpcHRcbiAgICogY29uc3QgZ3JhcGggPSBtcFNkay5HcmFwaC5jcmVhdGVEaXJlY3RlZEdyYXBoKCk7XG4gICAqIC8vIC4uLiBzZXR1cCBncmFwaCB2ZXJ0aWNlcyBhbmQgZWRnZXNcbiAgICogY29uc3Qgc3RhcnQgPSBncmFwaC52ZXJ0ZXgoJ3N0YXJ0Jyk7XG4gICAqIGNvbnN0IGVuZCA9IGdyYXBoLnZlcnRleCgnZW5kJyk7XG4gICAqIGNvbnN0IGFTdGFyUnVubmVyID0gbXBTZGsuR3JhcGguY3JlYXRlQVN0YXJSdW5uZXIoZ3JhcGgsIHN0YXJ0LCBlbmQpO1xuICAgKiBjb25zdCByZXN1bHQgPSBhU3RhclJ1bm5lci5leGVjKCk7XG4gICAqIGBgYFxuICAgKlxuICAgKiBAcGFyYW0gZ3JhcGggVGhlIGdyYXBoIHRvIHRyYXZlcnNlXG4gICAqIEBwYXJhbSBzdGFydCBUaGUgc3RhcnQgdmVydGV4LlxuICAgKiBAcGFyYW0gZW5kIFRoZSBlbmQgdmVydGV4LlxuICAgKiBAcGFyYW0gb3B0aW9ucyBBbiBvcHRpb25hbCBgaGV1cmlzdGljYCBmdW5jdGlvbi5cbiAgICogQHJldHVybiB7Z3JhcGguQVN0YXJSdW5uZXJ9IEEgcnVubmVyIGZvciBBKiB0aGF0IGNhbiBleGVjdXRlIHRoZSBzZWFyY2ggb3IgYmUgc3Vic2NyaWJlZCB0by5cbiAgICpcbiAgICogQGVtYmVkXG4gICAqIEBidW5kbGVcbiAgICogQGludHJvZHVjZWQgMy4xLjU1LjItMzQtZ2E5OTM0Y2NkOTNcbiAgICovXG4gIGNyZWF0ZUFTdGFyUnVubmVyPFQ+KFxuICAgIGdyYXBoOiBHcmFwaC5JRGlyZWN0ZWRHcmFwaDxUPixcbiAgICBzdGFydDogR3JhcGguVmVydGV4PFQ+LFxuICAgIGVuZDogR3JhcGguVmVydGV4PFQ+LFxuICAgIG9wdGlvbnM/OiBQYXJ0aWFsPEdyYXBoLlNlYXJjaE9wdGlvbnM8VD4+KTogR3JhcGguSUFTdGFyUnVubmVyPFQ+O1xufVxuIiwiaW1wb3J0IHR5cGUgeyBJT2JzZXJ2YWJsZU1hcCwgVmVjdG9yMiwgVmVjdG9yMyB9IGZyb20gJy4vZ2xvYmFsJztcblxuZXhwb3J0IG5hbWVzcGFjZSBMYWJlbCB7XG4gIGV4cG9ydCB0eXBlIExhYmVsID0ge1xuICAgIHBvc2l0aW9uOiBWZWN0b3IzO1xuICAgIHNpZDogc3RyaW5nO1xuICAgIHRleHQ6IHN0cmluZztcbiAgICB2aXNpYmxlOiBib29sZWFuO1xuICAgIC8qKiBAZGVwcmVjYXRlZCBVc2UgW1tmbG9vckluZm9dXSBpbnN0ZWFkICovXG4gICAgZmxvb3I6IG51bWJlcjtcbiAgICBmbG9vckluZm86IHtcbiAgICAgIGlkOiBzdHJpbmc7XG4gICAgICBzZXF1ZW5jZTogbnVtYmVyO1xuICAgIH07XG4gIH07XG5cbiAgZXhwb3J0IHR5cGUgTGFiZWxEZXByZWNhdGVkID0ge1xuICAgIHBvc2l0aW9uOiBWZWN0b3IzO1xuICAgIHNpZDogc3RyaW5nO1xuICAgIHRleHQ6IHN0cmluZztcbiAgICB2aXNpYmxlOiBib29sZWFuO1xuICAgIC8qKiBAZGVwcmVjYXRlZCBVc2UgW1tmbG9vckluZm9dXSBpbnN0ZWFkICovXG4gICAgZmxvb3I6IG51bWJlcjtcbiAgICBmbG9vckluZm86IHtcbiAgICAgIGlkOiBzdHJpbmc7XG4gICAgICBzZXF1ZW5jZTogbnVtYmVyO1xuICAgIH07XG4gICAgc2NyZWVuUG9zaXRpb246IFZlY3RvcjI7XG4gIH07XG5cbiAgZXhwb3J0IGVudW0gRXZlbnQge1xuICAgIC8qKiBAZXZlbnQgKi9cbiAgICBQT1NJVElPTl9VUERBVEVEID0gJ2xhYmVsLnBvc2l0aW9udXBkYXRlZCcsXG4gIH1cbn1cblxuZXhwb3J0IGludGVyZmFjZSBMYWJlbCB7XG4gIEV2ZW50OiB0eXBlb2YgTGFiZWwuRXZlbnQ7XG5cbiAgLyoqXG4gICAqIFRoaXMgZnVuY3Rpb24gcmV0dXJucyB0aGUgZGF0YSBvZiBhbGwgbGFiZWxzLlxuICAgKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgW1tkYXRhXV0gb2JzZXJ2YWJsZSBpbnN0ZWFkLlxuICAgKi9cbiAgZ2V0RGF0YSgpOiBQcm9taXNlPExhYmVsLkxhYmVsRGVwcmVjYXRlZFtdPjtcblxuICAvKipcbiAgICogQW4gb2JzZXJ2YWJsZSBtYXAgb2YgdGhlIGN1cnJlbnQgbGFiZWxzLlxuICAgKiBSZXR1cm5zIGFuIG9iamVjdCB3aXRoIGEgbWFwIG9mIGxhYmVscy5cbiAgICpcbiAgICogYGBgXG4gICAqIG1wU2RrLkxhYmVsLmRhdGEuc3Vic2NyaWJlKHtcbiAgICogIG9uQWRkZWQ6IGZ1bmN0aW9uIChpbmRleCwgaXRlbSwgY29sbGVjdGlvbikge1xuICAgKiAgICBjb25zb2xlLmxvZygnTGFiZWwgYWRkZWQgdG8gdGhlIGNvbGxlY3Rpb24nLCBpbmRleCwgaXRlbSwgY29sbGVjdGlvbik7XG4gICAqICB9LFxuICAgKiAgb25SZW1vdmVkOiBmdW5jdGlvbiAoaW5kZXgsIGl0ZW0sIGNvbGxlY3Rpb24pIHtcbiAgICogICAgY29uc29sZS5sb2coJ0xhYmVsIHJlbW92ZWQgZnJvbSB0aGUgY29sbGVjdGlvbicsIGluZGV4LCBpdGVtLCBjb2xsZWN0aW9uKTtcbiAgICogIH0sXG4gICAqICBvblVwZGF0ZWQ6IGZ1bmN0aW9uIChpbmRleCwgaXRlbSwgY29sbGVjdGlvbikge1xuICAgKiAgICBjb25zb2xlLmxvZygnTGFiZWwgdXBkYXRlZCBpbiBwbGFjZSBpbiB0aGUgY29sbGVjdGlvbicsIGluZGV4LCBpdGVtLCBjb2xsZWN0aW9uKTtcbiAgICogIH0sXG4gICAqIH0pO1xuICAgKiBgYGBcbiAgICpcbiAgICogQGVtYmVkXG4gICAqIEBidW5kbGVcbiAgICogQGludHJvZHVjZWQgMy4xLjY4LjEyLTctZzg1ODY4ODk0NGFcbiAgICovXG4gIGRhdGE6IElPYnNlcnZhYmxlTWFwPExhYmVsLkxhYmVsPjtcbn1cbiIsImV4cG9ydCBuYW1lc3BhY2UgTGluayB7XG5cbiAgLyoqXG4gICAqIFRoZSBiZWhhdmlvciB0byB1c2Ugd2hlbiBjcmVhdGluZyBhIGxpbmsuXG4gICAqL1xuICBleHBvcnQgZW51bSBDcmVhdGlvblBvbGljeSB7XG4gICAgLyoqIFVzZSBTaG93Y2FzZSdzIGN1cnJlbnQgd2luZG93LmxvY2F0aW9uIGFzIHRoZSBiYXNlIG9mIHRoZSBsaW5rICovXG4gICAgV0lORE9XID0gJ2xpbmsuY3JlYXRpb25wb2xpY3kud2luZG93JyxcbiAgICAvKiogVXNlIHRoZSBlbWJlZGRlcidzIHdpbmRvdy5sb2NhdGlvbiBhcyB0aGUgYmFzZSBvZiB0aGUgbGluayAqL1xuICAgIFJFRkVSUkVSID0gJ2xpbmsuY3JlYXRpb25wb2xpY3kucmVmZXJyZXInLFxuICAgIC8qKiBVc2UgdGhlIG9yaWdpbmFsIE1hdHRlcnBvcnQgbGluayBhcyB0aGUgYmFzZSBvZiB0aGUgbGluayAqL1xuICAgIE1BVFRFUlBPUlQgPSAnbGluay5jcmVhdGlvbnBvbGljeS5tYXR0ZXJwb3J0JyxcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGUgYmVoYXZpb3IgdG8gdXNlIHdoZW4gY2xpY2tpbmcgYSBsaW5rXG4gICAqL1xuICBleHBvcnQgZW51bSBPcGVuUG9saWN5IHtcbiAgICAvKiogVXNlIHRoZSBkZWZhdWx0IGJlaGF2aW9yIGZvciB0aGUgYXNzb2NpYXRlZCBsaW5rIHR5cGUgKi9cbiAgICBERUZBVUxUID0gJ2xpbmsub3BlbnBvbGljeS5kZWZhdWx0JyxcbiAgICAvKiogT3BlbiBhIG5ldyB0YWIgb3Igd2luZG93ICovXG4gICAgTkVXX1dJTkRPVyA9ICdsaW5rLm9wZW5wb2xpY3kubmV3d2luZG93JyxcbiAgICAvKiogT3BlbiBpbiB0aGUgY3VycmVudCBpZnJhbWUgKi9cbiAgICBTQU1FX0ZSQU1FID0gJ2xpbmsub3BlbnBvbGljeS5zYW1lZnJhbWUnLFxuICAgIC8qKiBOYXZpZ2F0ZSB0aGUgd2luZG93IHRoYXQgaXMgdGhlIGN1cnJlbnQgZW1iZWRkZXIgb2YgU2hvd2Nhc2UgKi9cbiAgICBDVVJSRU5UX1dJTkRPVyA9ICdsaW5rLm9wZW5wb2xpY3kuY3VycmVudCcsXG4gIH1cblxuICBleHBvcnQgZW51bSBEZXN0aW5hdGlvblBvbGljeSB7XG4gICAgLyoqIE5hdmlnYXRlIHRvIHRoZSBkZWZhdWx0IGRlc3RpbmF0aW9uIGZvciBsaW5rczsgbGlrZWx5IHRoZSBTaG93Y2FzZSBlbWJlZGRlcidzIGRvbWFpbiAqL1xuICAgIERFRkFVTFQgPSAnbGluay5kZXN0aW5hdGlvbi5kZWZhdWx0JyxcbiAgICAvKiogTmF2aWdhdGUgZGlyZWN0bHkgdG8gdGhlIFNob3djYXNlIG9mIGEgTWF0dGVycG9ydCBzcGFjZSAqL1xuICAgIE1BVFRFUlBPUlQgPSAnbGluay5kZXN0aW5hdGlvbi5tYXR0ZXJwb3J0JyxcbiAgfVxuXG4gIGV4cG9ydCB0eXBlIENyZWF0ZUxpbmtPcHRpb25zID0ge1xuICAgIC8qKiBUaGUgbGlzdCBvZiBVUkwgcGFyYW1ldGVycyB0byBpbmNsdWRlIGluIHRoZSBzaGFyZSBsaW5rICovXG4gICAgaW5jbHVkZVBhcmFtczogc3RyaW5nW107XG4gIH1cblxuICBleHBvcnQgdHlwZSBPcGVuUG9saWN5T3B0aW9ucyA9IHtcbiAgICAvKipcbiAgICAgKiBBbiBvcHRpb25hbCB0ZW1wbGF0ZSBmb3IgdGhlIGxpbmsgdG8gdXNlIHdoZW4gdGhlIHBvbGljeSBpcyBub3Qgc2V0IHRvIGBTQU1FX0ZSQU1FYCxcbiAgICAgKiB0aGF0IHdpbGwgaGF2ZSBhbnkgYCR7W3BhcmFtXX1gIHN1YnN0cmluZ3MgaW50ZXJwb2xhdGVkIHVzaW5nIHRoZSBjdXJyZW50IHNldCBvZiBVUkwgcGFyYW1ldGVycy5cbiAgICAgKlxuICAgICAqIElmIGAke1twYXJhbV19YCBpcyBpbmNsdWRlZCBpbiB0aGUgcGF0aCBvZiB0aGUgVVJMLCBpdCB3aWxsIGJlIHJlcGxhY2VkIGJ5IHRoZSBjdXJyZW50IFVSTCBwYXJhbWV0ZXIncyB2YWx1ZSBvciB1bmRlZmluZWQgKGAke219L3Nob3dgOiBgYWJjMTIzL3Nob3dgKS5cbiAgICAgKlxuICAgICAqIElmIGAke1twYXJhbV19YCBpcyBpbmNsdWRlZCBpbiB0aGUgc2VhcmNoIHBhcmFtZXRlcnMgb2YgdGhlIFVSTCwgaXQgYW5kIGl0J3MgdmFsdWUgd2lsIGJlIGFwcGVuZGVkIG90IHRoZSBVUkwgKGAke219YDogYG09YWJjMTIzYCkuXG4gICAgICpcbiAgICAgKiBVUkwgcGFyYW1ldGVycyB0aGF0IGFyZSB1bnNldCB3aWxsIGJlIGFwcGVuZGVkIHdpdGhvdXQgYSB2YWx1ZS4gKGAke3Vuc2V0fWA6IGB1bnNldGApXG4gICAgICpcbiAgICAgKiBOb3RlOiBgJHttfWAgb3IgYCR7bW9kZWx9IGFyZSBzcGVjaWFsIGNhc2VzIGluIG1vZGVsIGxpbmtzLlxuICAgICAqIEluc3RlYWQgb2YgdGhlIGN1cnJlbnQgd2luZG93J3MgXCJtb2RlbFwiIHBhcmFtLCB0aGUgbW9kZWwgSUQgZnJvbSB0aGUgbGluayB3aWxsIGJlIHVzZWQgaW5zdGVhZC5cbiAgICAgKlxuICAgICAqIEFzIGFuIGV4YW1wbGUsIHRoZSBzdHJpbmcgYFwiaHR0cHM6Ly9teS5kb21haW4uY29tLyR7bX0vc2hvdy5odG1sPyR7cGxheX0mJHt1bnNldH1cImAgaW50ZXJwb2xhdGVkIGF0IHRoZSBVUkwgYGh0dHBzOi8vbXkuZG9tYWluLmNvbS9zaG93Lz9tPWFiYzEyMyZwbGF5PTFgXG4gICAgICogd2lsbCByZXN1bHQgaW4gYSBVUkwgbGlrZSBgXCJodHRwczovL215LmRvbWFpbi5jb20vYWJjMTIzL3Nob3cuaHRtbD9wbGF5PTEmdW5zZXQmbT1hYmMxMjNcImAuXG4gICAgICovXG4gICAgdGVtcGxhdGVIcmVmOiBzdHJpbmc7XG4gIH07XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTGluayB7XG4gIENyZWF0aW9uUG9saWN5OiB0eXBlb2YgTGluay5DcmVhdGlvblBvbGljeTtcbiAgT3BlblBvbGljeTogdHlwZW9mIExpbmsuT3BlblBvbGljeTtcbiAgLyoqXG4gICAqIENyZWF0ZSBhIHNoYXJlYWJsZSBsaW5rIHRvIHRoZSBjdXJyZW50IFNob3djYXNlIHBsYXllci5cbiAgICogYGBgdHlwZXNjcmlwdFxuICAgKiBjb25zdCBsaW5rID0gYXdhaXQgc2RrLkxpbmsuY3JlYXRlTGluaygpO1xuICAgKiBgYGBcbiAgICpcbiAgICogQGVtYmVkXG4gICAqIEBidW5kbGUgMy4xLjYwLjEyLTMyLWc0NTcyMDE3Yzk4XG4gICAqL1xuICBjcmVhdGVMaW5rKCk6IFByb21pc2U8c3RyaW5nPjtcblxuICAvKipcbiAgICogQ3JlYXRlIGEgZGVlcCBsaW5rIHRvIHRoZSBjdXJyZW50IGxvY2F0aW9uIG9mIHRoZSBjdXJyZW50IFNob3djYXNlIHBsYXllci5cbiAgICogYGBgdHlwZXNjcmlwdFxuICAgKiBjb25zdCBkZWVwTGluayA9IGF3YWl0IHNkay5MaW5rLmNyZWF0ZURlZXBMaW5rKCk7XG4gICAqIGBgYFxuICAgKlxuICAgKiBAZW1iZWRcbiAgICogQGJ1bmRsZSAzLjEuNjAuMTItMzItZzQ1NzIwMTdjOThcbiAgICovXG4gIGNyZWF0ZURlZXBMaW5rKCk6IFByb21pc2U8c3RyaW5nPjtcblxuICAvKipcbiAgICogQ2hhbmdlIGhvdyB0aGUgbGluayB0aGUgc2hhcmUgZGlhbG9nIGFuZCB0aGUgW1tjcmVhdGVMaW5rXV0gYW5kIFtbY3JlYXRlRGVlcExpbmtdXSBsaW5rcyBhcmUgY3JlYXRlZC5cbiAgICpcbiAgICogYGBgdHlwZXNjcmlwdFxuICAgKiBhd2FpdCBzZGsuTGluay5zZXRTaGFyZUxpbmtQb2xpY3koc2RrLkxpbmsuQ3JlYXRpb25Qb2xpY3kuUkVGRVJSRVIpO1xuICAgKiBjb25zdCBsaW5rID0gYXdhaXQgc2RrLkxpbmsuY3JlYXRlTGluaygpO1xuICAgKiBjb25zb2xlLmxvZyhsaW5rKTsgLy8gc2hvdWxkIGxvZyBhIGxpbmsgdG8geW91ciBwYWdlIHRoYXQgZW1iZWRzIFNob3djYXNlXG4gICAqIGBgYFxuICAgKiBAcGFyYW0gcG9saWN5XG4gICAqIEBwYXJhbSBvcHRpb25zXG4gICAqXG4gICAqIEBlbWJlZFxuICAgKiBAYnVuZGxlIDMuMS42MC4xMi0zMi1nNDU3MjAxN2M5OFxuICAgKi9cbiAgc2V0U2hhcmVMaW5rUG9saWN5KHBvbGljeTogTGluay5DcmVhdGlvblBvbGljeSwgb3B0aW9ucz86IFBhcnRpYWw8TGluay5DcmVhdGVMaW5rT3B0aW9ucz4pOiBQcm9taXNlPHZvaWQ+O1xuXG4gIC8qKlxuICAgKiBDaGFuZ2UgdGhlIGJlaGF2aW9yIG9mIGNsaWNraW5nIGEgbGluayB0byBhbm90aGVyIG1vZGVsLlxuICAgKlxuICAgKiBgYGB0eXBlc2NyaXB0XG4gICAqIHNkay5MaW5rLnNldE1vZGVsTGlua1BvbGljeShzZGsuTGluay5PcGVuUG9saWN5Lk5FV19XSU5ET1cpO1xuICAgKiAvLyBjbGlja2luZyBhIGxpbmsgdG8gYW5vdGhlciBtb2RlbCB3aWxsIG5vdyBvcGVuIGEgbmV3IHdpbmRvd1xuICAgKiBgYGBcbiAgICpcbiAgICogQHBhcmFtIHBvbGljeVxuICAgKiBAcGFyYW0gb3B0aW9uc1xuICAgKlxuICAgKiBAZW1iZWRcbiAgICogQGJ1bmRsZSAzLjEuNjAuMTItMzItZzQ1NzIwMTdjOThcbiAgICovXG4gIHNldE1vZGVsTGlua1BvbGljeShwb2xpY3k6IExpbmsuT3BlblBvbGljeSwgb3B0aW9ucz86IFBhcnRpYWw8TGluay5PcGVuUG9saWN5T3B0aW9ucz4pOiBQcm9taXNlPHZvaWQ+O1xuICBzZXRNb2RlbExpbmtQb2xpY3kocG9saWN5OiBMaW5rLk9wZW5Qb2xpY3ksIGRlc3RpbmF0aW9uOiBMaW5rLkRlc3RpbmF0aW9uUG9saWN5KTogUHJvbWlzZTx2b2lkPjtcblxuICAvKipcbiAgICogQ2hhbmdlIHRoZSBiZWhhdmlvciBvZiBjbGlja2luZyBhIGxpbmsgdG8gYSBsb2NhdGlvbiB3aXRoaW4gdGhlIGN1cnJlbnQgbW9kZWwuXG4gICAqXG4gICAqIGBgYHR5cGVzY3JpcHRcbiAgICogLy8gd2hlbiBjbGlja2luZyBhIGxpbmsgd2l0aCBhIGxvY2F0aW9uIHdpdGhpbiB0aGUgY3VycmVudCBtb2RlbCwgb3BlbiBhIG5ldyB3aW5kb3cgd2l0aCB0aGUgbW9kZWwgYXQgdGhlIGxvY2F0aW9uXG4gICAqIC8vIGluc3RlYWQgb2YgbmF2aWdhdGluZyB0aGUgY3VycmVudCBtb2RlbCB0byB0aGUgbmV3IGxvY2F0aW9uXG4gICAqIHNkay5MaW5rLnNldE5hdmlnYXRpb25MaW5rUG9saWN5KHNkay5MaW5rLk9wZW5Qb2xpY3kuTkVXX1dJTkRPVywge1xuICAgKiAgIHRlbXBsYXRlSHJlZjogJ2h0dHBzOi8vZXhhbXBsZS5jb20vJHttfS9zaG93Lmh0bWw/JyxcbiAgICogfSk7XG4gICAqXG4gICAqIC8vIHJldmVydCB0aGUgbmF2aWdhdGlvbiBsaW5rIGJlaGF2aW9yIHRvIHRoZSBkZWZhdWx0XG4gICAqIHNkay5MaW5rLnNldE5hdmlnYXRpb25MaW5rUG9saWN5KHNkay5MaW5rLk9wZW5Qb2xpY3kuREVGQVVMVCk7XG4gICAqIGBgYFxuICAgKlxuICAgKiBAcGFyYW0gcG9saWN5XG4gICAqIEBwYXJhbSBvcHRpb25zYFxuICAgKlxuICAgKiBAZW1iZWRcbiAgICogQGJ1bmRsZSAzLjEuNjAuMTItMzItZzQ1NzIwMTdjOThcbiAgICovXG4gIHNldE5hdmlnYXRpb25MaW5rUG9saWN5KHBvbGljeTogTGluay5PcGVuUG9saWN5LCBvcHRpb25zPzogUGFydGlhbDxMaW5rLk9wZW5Qb2xpY3lPcHRpb25zPik6IFByb21pc2U8dm9pZD47XG5cbiAgLyoqXG4gICAqIENoYW5nZSB0aGUgYmVoYXZpb3Igb2YgY2xpY2tpbmcgYSBsaW5rIHRvIGEgcGFnZSBmcm9tIHRoZSBzYW1lIG9yaWdpbiBhcyB0aGUgb25lIGhvc3RpbmcgU2hvd2Nhc2UuXG4gICAqXG4gICAqIGBgYHR5cGVzY3JpcHRcbiAgICogc2RrLkxpbmsuc2V0U2FtZU9yaWdpbkxpbmtQb2xpY3koc2RrLkxpbmsuT3BlblBvbGljeS5DVVJSRU5UX1dJTkRPVyk7XG4gICAqIC8vIGNsaWNraW5nIGEgbGluayB3aXRoIHRoZSBzYW1lIG9yaWdpbiBhcyBTaG93Y2FzZSdzIGVtYmVkZGVyIHdpbGwgbm93IG5hdmlnYXRlIHRoZSBlbWJlZGRpbmcgcGFnZVxuICAgKlxuICAgKiBzZGsuTGluay5zZXRTYW1lT3JpZ2luTGlua1BvbGljeShzZGsuTGluay5PcGVuUG9saWN5LlNBTUVfRlJBTUUpO1xuICAgKiAvLyBjbGlja2luZyBhIGxpbmsgd2l0aCB0aGUgc2FtZSBvcmlnaW4gYXMgU2hvd2Nhc2UncyBlbWJlZGRlciB3aWxsIG5vdyBuYXZpZ2F0ZSBTaG93Y2FzZSdzIGlmcmFtZSB0byB0aGF0IHBhZ2VcbiAgICogYGBgXG4gICAqXG4gICAqIEBwYXJhbSBwb2xpY3lcbiAgICpcbiAgICogQGVtYmVkXG4gICAqIEBidW5kbGUgMy4xLjYwLjEyLTMyLWc0NTcyMDE3Yzk4XG4gICAqL1xuICBzZXRTYW1lT3JpZ2luTGlua1BvbGljeShwb2xpY3k6IExpbmsuT3BlblBvbGljeSk6IFByb21pc2U8dm9pZD47XG5cbiAgLyoqXG4gICAqIENoYW5nZSB0aGUgYmVoYXZpb3Igb2YgY2xpY2tpbmcgYSBsaW5rIHRvIGEgZGlmZmVyZW50IG9yaWdpbi5cbiAgICpcbiAgICogYGBgdHlwZXNjcmlwdFxuICAgKiBzZGsuTGluay5zZXRFeHRlcm5hbExpbmtQb2xpY3koZmFsc2UpO1xuICAgKiAvLyBjbGlja2luZyBhbiBleHRlcm5hbCBsaW5rIHdpbGwgbm93IG5hdmlnYXRlIHRoZSBjdXJyZW50IHBhZ2UgKG5vdCB0aGUgU2hvd2Nhc2UgaWZyYW1lKSB0byB0aGUgbGlua1xuICAgKlxuICAgKiBgYGBcbiAgICpcbiAgICogQHBhcmFtIG9wZW5Jbk5ld1dpbmRvdyBPcGVuIHRoZSBsaW5rIGluIGEgbmV3IHRhYiBvciB3aW5kb3c7IG90aGVyd2lzZSwgcmVwbGFjZSB0aGUgZW1iZWRkZXIncyB3aW5kb3cuXG4gICAqIHRydWUgaXMgdGhlIGRlZmF1bHQgYmVoYXZpb3IuXG4gICAqXG4gICAqIEBlbWJlZFxuICAgKiBAYnVuZGxlIDMuMS42MC4xMi0zMi1nNDU3MjAxN2M5OFxuICAgKi9cbiAgc2V0RXh0ZXJuYWxMaW5rUG9saWN5KG9wZW5Jbk5ld1dpbmRvdzogYm9vbGVhbik6IFByb21pc2U8dm9pZD47XG59XG4iLCJpbXBvcnQgdHlwZSB7IFZlY3RvcjMsIENvbG9yLCBTaXplLCBJT2JzZXJ2YWJsZU1hcCB9IGZyb20gJy4vZ2xvYmFsJztcblxuZXhwb3J0IG5hbWVzcGFjZSBNYXR0ZXJ0YWcge1xuICBleHBvcnQgdHlwZSBNYXR0ZXJ0YWdEYXRhID0ge1xuICAgIHNpZDogc3RyaW5nO1xuICAgIGVuYWJsZWQ6IGJvb2xlYW47XG4gICAgLyoqIFRoZSB3b3JsZCBzcGFjZSBwb3NpdGlvbiBvZiB0aGUgbWF0dGVydGFnIGFuY2hvciB3aXRoaW4gdGhlIG1vZGVsICovXG4gICAgYW5jaG9yUG9zaXRpb246IFZlY3RvcjM7XG4gICAgLyoqIFRoZSB3b3JsZCBzcGFjZSAobm9uLW5vcm1hbCkgZGlyZWN0aW9uIG9mIHRoZSBtYXR0ZXJ0YWcncyBzdGVtICovXG4gICAgc3RlbVZlY3RvcjogVmVjdG9yMztcbiAgICBzdGVtVmlzaWJsZTogYm9vbGVhbjtcbiAgICBsYWJlbDogc3RyaW5nO1xuICAgIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG4gICAgLyoqIEBkZXByZWNhdGVkICovXG4gICAgcGFyc2VkRGVzY3JpcHRpb246IERlc2NyaXB0aW9uQ2h1bmtbXTtcbiAgICBtZWRpYToge1xuICAgICAgdHlwZTogTWVkaWFUeXBlO1xuICAgICAgc3JjOiBzdHJpbmc7XG4gICAgfTtcbiAgICBjb2xvcjogQ29sb3I7XG4gICAgLyoqIEBkZXByZWNhdGVkIFVzZSBbW2Zsb29ySW5mb11dIGluc3RlYWQgKi9cbiAgICBmbG9vcklkOiBudW1iZXI7XG4gICAgLyoqIEBkZXByZWNhdGVkIFVzZSBbW2Zsb29ySW5mb11dIGluc3RlYWQgKi9cbiAgICBmbG9vckluZGV4OiBudW1iZXI7XG4gICAgZmxvb3JJbmZvOiB7XG4gICAgICBpZDogc3RyaW5nO1xuICAgICAgc2VxdWVuY2U6IG51bWJlcjtcbiAgICB9O1xuICAgIC8qKiBAZGVwcmVjYXRlZCBVc2UgW1ttZWRpYS50eXBlXV0gaW5zdGVhZCAqL1xuICAgIG1lZGlhVHlwZTogTWVkaWFUeXBlO1xuICAgIC8qKiBAZGVwcmVjYXRlZCBVc2UgW1ttZWRpYS5zcmNdXSBpbnN0ZWFkICovXG4gICAgbWVkaWFTcmM6IHN0cmluZztcbiAgICAvKiogQGRlcHJlY2F0ZWQgVXNlIFtbc3RlbVZlY3Rvcl1dIGluc3RlYWQgKi9cbiAgICBhbmNob3JOb3JtYWw6IFZlY3RvcjM7XG4gICAgLyoqIEBkZXByZWNhdGVkIENhbGN1bGF0ZSB0aGUgbGVuZ3RoIG9mIFtbc3RlbVZlY3Rvcl1dIGluc3RlYWQgKi9cbiAgICBzdGVtSGVpZ2h0OiBudW1iZXI7XG4gIH07XG5cbiAgZXhwb3J0IHR5cGUgT2JzZXJ2YWJsZU1hdHRlcnRhZ0RhdGEgPSB7XG4gICAgc2lkOiBzdHJpbmc7XG4gICAgZW5hYmxlZDogYm9vbGVhbjtcbiAgICAvKiogVGhlIHdvcmxkIHNwYWNlIHBvc2l0aW9uIG9mIHRoZSBtYXR0ZXJ0YWcgYW5jaG9yIHdpdGhpbiB0aGUgbW9kZWwgKi9cbiAgICBhbmNob3JQb3NpdGlvbjogVmVjdG9yMztcbiAgICAvKiogVGhlIHdvcmxkIHNwYWNlIChub24tbm9ybWFsKSBkaXJlY3Rpb24gb2YgdGhlIG1hdHRlcnRhZydzIHN0ZW0gKi9cbiAgICBzdGVtVmVjdG9yOiBWZWN0b3IzO1xuICAgIHN0ZW1WaXNpYmxlOiBib29sZWFuO1xuICAgIGxhYmVsOiBzdHJpbmc7XG4gICAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgICBtZWRpYToge1xuICAgICAgdHlwZTogTWVkaWFUeXBlO1xuICAgICAgc3JjOiBzdHJpbmc7XG4gICAgfTtcbiAgICBjb2xvcjogQ29sb3I7XG4gICAgLyoqIEBkZXByZWNhdGVkIFVzZSBbW2Zsb29ySW5mb11dIGluc3RlYWQgKi9cbiAgICBmbG9vckluZGV4OiBudW1iZXI7XG4gICAgZmxvb3JJbmZvOiB7XG4gICAgICBpZDogc3RyaW5nO1xuICAgICAgc2VxdWVuY2U6IG51bWJlcjtcbiAgICB9O1xuICB9O1xuXG4gIGV4cG9ydCBlbnVtIFRyYW5zaXRpb24ge1xuICAgIElOU1RBTlQgPSAndHJhbnNpdGlvbi5pbnN0YW50JyxcbiAgICBGTFkgICAgID0gJ3RyYW5zaXRpb24uZmx5JyxcbiAgICBGQURFT1VUID0gJ3RyYW5zaXRpb24uZmFkZScsXG4gIH1cblxuICBleHBvcnQgaW50ZXJmYWNlIERlc2NyaXB0aW9uQ2h1bmsge1xuICAgIHRleHQ/OiBzdHJpbmc7XG4gICAgbGluaz86IExpbms7XG4gICAgdHlwZTogRGVzY3JpcHRpb25DaHVua1R5cGU7XG4gIH1cblxuICBleHBvcnQgaW50ZXJmYWNlIExpbmsge1xuICAgIGxhYmVsOiBzdHJpbmc7XG4gICAgdXJsOiBzdHJpbmc7XG4gICAgdHlwZTogTGlua1R5cGU7XG4gICAgbmF2aWdhdGlvbkRhdGE/OiBhbnk7XG4gIH1cbiAgLyoqXG4gICAqIE9wdGlvbnMgdGhhdCBjYW4gYmUgc3BlY2lmaWVkIHdoZW4gaW5qZWN0aW9uIGN1c3RvbSBIVE1MIGludG8gYSBNYXR0ZXJ0YWcuXG4gICAqL1xuICBleHBvcnQgdHlwZSBJbmplY3Rpb25PcHRpb25zID0ge1xuICAgIC8qKiBUaGUgc2l6ZSBvZiB0aGUgZnJhbWUgdG8gY3JlYXRlICovXG4gICAgc2l6ZT86IFNpemU7XG4gICAgLyoqXG4gICAgICogQGRlcHJlY2F0ZWQgVGhpcyBvcHRpb24gaXMgbm8gbG9uZ2VyIHJlcXVpcmVkIGFuZCB3aWxsIGJlIGlnbm9yZWRcbiAgICAgKi9cbiAgICB3aW5kb3dQYXRoPzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEEgbWFwIGZvciB0aGUgZ2xvYmFsIGZ1bmN0aW9ucyBhbmQgdmFyaWFibGVzIHdlIHByb3ZpZGUgaW4geW91ciBpZnJhbWUgc2FuZGJveC5cbiAgICAgKiBPbmx5IG5lZWRzIHRvIGJlIHVzZWQgaWYgc2NyaXB0cyB5b3UgYXJlIGltcG9ydGluZyBhbHNvIGhhdmUgYSBnbG9iYWwgYHNlbmRgLCBgb25gLCBgb2ZmYCwgb3IgYHRhZ2AuXG4gICAgICovXG4gICAgZ2xvYmFsVmFyaWFibGVNYXA/OiBHbG9iYWxWYXJpYWJsZU1hcDtcbiAgfTtcblxuICAvKipcbiAgICogTWFwIHRoZSBnbG9iYWxzIHdlIHByb3ZpZGUgaW4geW91ciBzYW5kYm94IHRvIG90aGVyIG5hbWVzLlxuICAgKi9cbiAgZXhwb3J0IHR5cGUgR2xvYmFsVmFyaWFibGVNYXAgPSB7XG4gICAgc2VuZD86IHN0cmluZztcbiAgICBvbj86IHN0cmluZztcbiAgICBvZmY/OiBzdHJpbmc7XG4gICAgdGFnPzogc3RyaW5nO1xuICB9XG5cbiAgLyoqXG4gICAqIEEgbWVzc2FnaW5nIG9iamVjdCB0byBzZW5kIGFuZCByZWNlaXZlIG1lc3NhZ2VzIHRvIGFuZCBmcm9tIHlvdXIgaWZyYW1lIHNhbmRib3guXG4gICAqL1xuICBleHBvcnQgaW50ZXJmYWNlIElNZXNzZW5nZXIge1xuICAgIC8qKlxuICAgICAqIFNlbmQgYSBtZXNzYWdlcyBvZiB0eXBlIGBldmVudFR5cGVgIHRvIHRoZSBpZnJhbWUgc2FuZGJveCB3aXRoIGFueSBvcHRpb25hbCBkYXRhIGFzc29jaWF0ZWQgd2l0aCB0aGUgbWVzc2FnZVxuICAgICAqL1xuICAgIHNlbmQoZXZlbnRUeXBlOiBzdHJpbmcsIC4uLmFyZ3M6IGFueVtdKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBBZGQgYSBoYW5kbGVyIGZvciBtZXNzYWdlcyBvZiB0eXBlIGBldmVudFR5cGVgIGZyb20gdGhlIGlmcmFtZSBzYW5kYm94XG4gICAgICovXG4gICAgb24oZXZlbnRUeXBlOiBzdHJpbmcsIGV2ZW50SGFuZGxlcjogKC4uLmFyZ3M6IGFueVtdKSA9PiB2b2lkKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBSZW1vdmUgYSBoYW5kbGVyIGZvciBtZXNzYWdlcyBvZiB0eXBlIGBldmVudFR5cGVgIGZyb20gdGhlIGlmcmFtZSBzYW5kYm94XG4gICAgICovXG4gICAgb2ZmKGV2ZW50VHlwZTogc3RyaW5nLCBldmVudEhhbmRsZXI6ICguLi5hcmdzOiBhbnlbXSkgPT4gdm9pZCk6IHZvaWQ7XG4gIH1cblxuICBleHBvcnQgdHlwZSBQcmV2ZW50YWJsZUFjdGlvbnMgPSB7XG4gICAgb3BlbmluZzogYm9vbGVhbjtcbiAgICBuYXZpZ2F0aW5nOiBib29sZWFuO1xuICB9O1xuXG4gIGV4cG9ydCBlbnVtIExpbmtUeXBlIHtcbiAgICAvKiogQSBsaW5rIHRvIGFub3RoZXIgcG9zaXRpb24gaW4gdGhlIGN1cnJlbnQgbW9kZWwgKi9cbiAgICBOQVZJR0FUSU9OID0gJ3RhZy5saW5rLm5hdicsXG5cbiAgICAvKiogQSBsaW5rIHRvIGEgZGlmZmVyZW50IE1hdHRlcnBvcnQgbW9kZWwgKi9cbiAgICBNT0RFTCA9ICd0YWcubGluay5tb2RlbCcsXG5cbiAgICAvKiogQW4gZXh0ZXJuYWwgbGluayAqL1xuICAgIEVYVF9MSU5LID0gJ3RhZy5saW5rLmV4dCcsXG4gIH1cblxuICBleHBvcnQgZW51bSBEZXNjcmlwdGlvbkNodW5rVHlwZSB7XG4gICAgTk9ORSA9ICd0YWcuY2h1bmsubm9uZScsXG4gICAgVEVYVCA9ICd0YWcuY2h1bmsudGV4dCcsXG4gICAgTElOSyA9ICd0YWcuY2h1bmsubGluaycsXG4gIH1cblxuICBleHBvcnQgZW51bSBFdmVudCB7XG4gICAgLyoqIEBldmVudCAqL1xuICAgIEhPVkVSID0gJ3RhZy5ob3ZlcicsXG4gICAgLyoqIEBldmVudCAqL1xuICAgIENMSUNLID0gJ3RhZy5jbGljaycsXG4gICAgLyoqIEBldmVudCAqL1xuICAgIExJTktfT1BFTiA9ICd0YWcubGlua29wZW4nLFxuICB9XG5cbiAgZXhwb3J0IGVudW0gTWVkaWFUeXBlIHtcbiAgICBOT05FID0gJ21hdHRlcnRhZy5tZWRpYS5ub25lJyxcbiAgICBQSE9UTyA9ICdtYXR0ZXJ0YWcubWVkaWEucGhvdG8nLFxuICAgIFZJREVPID0gJ21hdHRlcnRhZy5tZWRpYS52aWRlbycsXG4gICAgUklDSCA9ICdtYXR0ZXJ0YWcubWVkaWEucmljaCcsXG4gIH1cblxuICAvKipcbiAgICogQSBzdWJzZXQgb2YgdGhlIE1hdHRlcnRhZ0RhdGEgdXNlZCB0byBhZGQgTWF0dGVydGFncyB0aHJvdWdoIHRoZSBzZGsuXG4gICAqIE1vc3QgcHJvcGVydGllcyBhcmUgb3B0aW9uYWwgZXhjZXB0IHRob3NlIHVzZWQgZm9yIHBvc2l0aW9uaW5nOiBgYW5jaG9yUG9zaXRpb25gLCBgc3RlbVZlY3RvcmAuXG4gICAqL1xuICBleHBvcnQgaW50ZXJmYWNlIE1hdHRlcnRhZ0Rlc2NyaXB0b3Ige1xuICAgIGFuY2hvclBvc2l0aW9uOiBWZWN0b3IzO1xuICAgIHN0ZW1WZWN0b3I6IFZlY3RvcjM7XG4gICAgc3RlbVZpc2libGU/OiBib29sZWFuO1xuICAgIGxhYmVsPzogc3RyaW5nO1xuICAgIGRlc2NyaXB0aW9uPzogc3RyaW5nO1xuICAgIG1lZGlhPzoge1xuICAgICAgdHlwZTogTWVkaWFUeXBlO1xuICAgICAgc3JjOiBzdHJpbmc7XG4gICAgfVxuICAgIGNvbG9yPzogQ29sb3I7XG4gICAgLyoqIEBkZXByZWNhdGVkIFVzZSBbW2Zsb29ySW5kZXhdXSBpbnN0ZWFkICovXG4gICAgZmxvb3JJZD86IG51bWJlcjtcbiAgICBmbG9vckluZGV4PzogbnVtYmVyO1xuICAgIGljb25JZD86IHN0cmluZztcbiAgfVxuXG4gIGV4cG9ydCB0eXBlIEVkaXRhYmxlUHJvcGVydGllcyA9IHtcbiAgICBsYWJlbDogc3RyaW5nO1xuICAgIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG4gICAgbWVkaWE6IHtcbiAgICAgIHR5cGU6IE1lZGlhVHlwZTtcbiAgICAgIHNyYzogc3RyaW5nO1xuICAgIH07XG4gIH1cblxuICBleHBvcnQgaW50ZXJmYWNlIFBvc2l0aW9uT3B0aW9ucyB7XG4gICAgYW5jaG9yUG9zaXRpb246IFZlY3RvcjM7XG4gICAgc3RlbVZlY3RvcjogVmVjdG9yMztcbiAgICAvKiogQGRlcHJlY2F0ZWQgVXNlIFtbZmxvb3JJbmRleF1dIGluc3RlYWQgKi9cbiAgICBmbG9vcklkOiBudW1iZXI7XG4gICAgZmxvb3JJbmRleDogbnVtYmVyO1xuICB9XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTWF0dGVydGFnIHtcbiAgVHJhbnNpdGlvbjogdHlwZW9mIE1hdHRlcnRhZy5UcmFuc2l0aW9uO1xuICBMaW5rVHlwZTogdHlwZW9mIE1hdHRlcnRhZy5MaW5rVHlwZTtcbiAgRGVzY3JpcHRpb25DaHVua1R5cGU6IHR5cGVvZiBNYXR0ZXJ0YWcuRGVzY3JpcHRpb25DaHVua1R5cGU7XG4gIEV2ZW50OiB0eXBlb2YgTWF0dGVydGFnLkV2ZW50O1xuICBNZWRpYVR5cGU6IHR5cGVvZiBNYXR0ZXJ0YWcuTWVkaWFUeXBlO1xuXG4gIC8qKlxuICAgKiBUaGlzIGZ1bmN0aW9uIHJldHVybnMgbWV0YWRhdGEgb24gdGhlIGNvbGxlY3Rpb24gb2YgTWF0dGVydGFncy5cbiAgICpcbiAgICogQGRlcHJlY2F0ZWQgVXNlIFtbVGFnLmRhdGFdXSBpbnN0ZWFkXG4gICAqL1xuICBnZXREYXRhKCk6IFByb21pc2U8TWF0dGVydGFnLk1hdHRlcnRhZ0RhdGFbXT47XG5cbiAgLyoqXG4gICAqIEFuIG9ic2VydmFibGUgY29sbGVjdGlvbiBvZiBNYXR0ZXJ0YWcgZGF0YSB0aGF0IGNhbiBiZSBzdWJzY3JpYmVkIHRvLlxuICAgKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgW1tUYWcuZGF0YV1dIGluc3RlYWRcbiAgICovXG4gIGRhdGE6IElPYnNlcnZhYmxlTWFwPE1hdHRlcnRhZy5PYnNlcnZhYmxlTWF0dGVydGFnRGF0YT47XG5cbiAgLyoqXG4gICAqIFRoaXMgZnVuY3Rpb24gbmF2aWdhdGVzIHRvIHRoZSBNYXR0ZXJ0YWcgZGlzYyB3aXRoIHRoZSBwcm92aWRlZCBzaWQsIG9wZW5pbmcgdGhlIGJpbGxib2FyZCBvbiBhcnJpdmFsLlxuICAgKlxuICAgKiBgYGBcbiAgICogbXBTZGsuTWF0dGVydGFnLm5hdmlnYXRlVG9UYWcoc2lkLCBtcFNkay5NYXR0ZXJ0YWcuVHJhbnNpdGlvbi5GTFkpO1xuICAgKiBgYGBcbiAgICpcbiAgICogQHBhcmFtIHRhZ1NpZCBUaGUgc2lkIG9mIHRoZSBNYXR0ZXJ0YWcgdG8gbmF2aWdhdGUgdG9cbiAgICogQHBhcmFtIHRyYW5zaXRpb24gVGhlIHR5cGUgb2YgdHJhbnNpdGlvbiB0byBuYXZpZ2F0ZSB0byBhIHN3ZWVwIHdoZXJlIHRoZSBNYXR0ZXJ0YWcgZGlzYyBpcyB2aXNpYmxlXG4gICAqIEBwYXJhbSBmb3JjZSBJZiBuYXZpZ2F0aW5nIHRvIHRoZSB0YWcgaXMgZGlzYWJsZWQsIHBhc3NpbmcgZm9yY2UgPT09IHRydWUgd2lsbCBmb3JjZSB0aGUgdHJhbnNpdGlvbiB0byBvY2N1clxuICAgKi9cbiAgbmF2aWdhdGVUb1RhZyh0YWdTaWQ6IHN0cmluZywgdHJhbnNpdGlvbjogTWF0dGVydGFnLlRyYW5zaXRpb24sIGZvcmNlPzogYm9vbGVhbik6IFByb21pc2U8c3RyaW5nPjtcblxuIC8qKlxuICAgKiBHZXQgdGhlIGRpc2MncyAoM2QpIHBvc2l0aW9uIG9mIGEgTWF0dGVydGFnLlxuICAgKlxuICAgKiBAZGVwcmVjYXRlZCBEaXNjIHBvc2l0aW9uIGlzIGF1dG9tYXRpYWxseSBpbmNsdWRlZCBpbiBbW1RhZy5kYXRhXV1cbiAgICovXG4gIGdldERpc2NQb3NpdGlvbih0YWc6IE1hdHRlcnRhZy5NYXR0ZXJ0YWdEYXRhIHwgTWF0dGVydGFnLk9ic2VydmFibGVNYXR0ZXJ0YWdEYXRhLCByZXN1bHQ/OiBWZWN0b3IzKTogVmVjdG9yMztcblxuICAvKipcbiAgICogQWRkIG9uZSBvciBtb3JlIE1hdHRlcnRhZ3MgdG8gU2hvd2Nhc2UuXG4gICAqIEVhY2ggaW5wdXQgTWF0dGVydGFnIHN1cHBvcnRzIHNldHRpbmcgdGhlIGxhYmVsLCBkZXNjcmlwdGlvbiwgY29sb3IsIGFuY2hvclBvc2l0aW9uLCBhbmQgc3RlbVZlY3Rvci5cbiAgICpcbiAgICogVHdvIHByb3BlcnRpZXMgYXJlIHJlcXVpcmVkOlxuICAgKiAtIGBhbmNob3JQb3NpdGlvbmAsIHRoZSBwb2ludCB3aGVyZSB0aGUgdGFnIGNvbm5lY3RzIHRvIHRoZSBtb2RlbFxuICAgKiAtIGBzdGVtVmVjdG9yYCwgdGhlIGRpcmVjdGlvbiwgYWthIG5vcm1hbCwgYW5kIGhlaWdodCB0aGF0IHRoZSBNYXR0ZXJ0YWcgc3RlbSBwb2ludHNcbiAgICpcbiAgICogU2VlIFtbUG9pbnRlci5pbnRlcnNlY3Rpb25dXSBmb3IgYSB3YXkgdG8gcmV0cml2ZSBhIG5ldyBgYW5jaG9yUG9zaXRpb25gIGFuZCBgc3RlbVZlY3RvcmAuXG4gICAqXG4gICAqICoqTm90ZSoqOiB0aGVzZSBjaGFuZ2VzIGFyZSBub3QgcGVyc2lzdGVkIGJldHdlZW4gcmVmcmVzaGVzIG9mIFNob3djYXNlLiBUaGV5IGFyZSBvbmx5IHZhbGlkIGZvciB0aGUgY3VycmVudCBicm93c2VyIHNlc3Npb24uXG4gICAqXG4gICAqIEBwYXJhbSBuZXdUYWdEYXRhIEEgc2luZ2xlIG9yIGFycmF5IG9mIE1hdHRlcnRhZyB0ZW1wbGF0ZXMgdG8gYWRkLlxuICAgKiBAcmV0dXJuIEEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIHNpZHMgZm9yIHRoZSBuZXdseSBhZGRlZCBNYXR0ZXJ0YWdzLlxuICAgKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgW1tUYWcuYWRkXV0gaW5zdGVhZFxuICAgKi9cbiAgYWRkKG5ld1RhZ0RhdGE6IE1hdHRlcnRhZy5NYXR0ZXJ0YWdEZXNjcmlwdG9yIHwgTWF0dGVydGFnLk1hdHRlcnRhZ0Rlc2NyaXB0b3JbXSk6IFByb21pc2U8c3RyaW5nW10+O1xuXG4gIC8qKlxuICAgKiBFZGl0IHRoZSBkYXRhIGluIGEgTWF0dGVydGFnIGJpbGxib2FyZC5cbiAgICpcbiAgICogKipOb3RlKio6IHRoZXNlIGNoYW5nZXMgYXJlIG5vdCBwZXJzaXN0ZWQgYmV0d2VlbiByZWZyZXNoZXMgb2YgU2hvd2Nhc2UuIFRoZXkgYXJlIG9ubHkgdmFsaWQgZm9yIHRoZSBjdXJyZW50IGJyb3dzZXIgc2Vzc2lvbi5cbiAgICpcbiAgICogQHBhcmFtIHRhZ1NpZCB0aGUgc2lkIG9mIHRoZSBNYXR0ZXJ0YWcgdG8gZWRpdFxuICAgKiBAcGFyYW0gcHJvcGVydGllcyBBIGRpY3Rpb25hcnkgb2YgcHJvcGVydGllcyB0byBzZXRcbiAgICpcbiAgICogQGRlcHJlY2F0ZWQgVXNlIFtbVGFnLmVkaXRCaWxsYm9hcmRdXSBvciBbW1RhZy5yZWdpc3RlckF0dGFjaG1lbnRdXSBhbmQvb3IgW1tUYWcuYXR0YWNoXV0gdG8gbWFuYWdlIG1lZGlhXG4gICAqL1xuICBlZGl0QmlsbGJvYXJkKHRhZ1NpZDogc3RyaW5nLCBwcm9wZXJ0aWVzOiBQYXJ0aWFsPE1hdHRlcnRhZy5FZGl0YWJsZVByb3BlcnRpZXM+KTogUHJvbWlzZTx2b2lkPjtcblxuICAvKipcbiAgICogTW92ZSBhbmQgcmVvcmllbnQgYSBNYXR0ZXJ0YWcuXG4gICAqXG4gICAqIFNlZSBbW1BvaW50ZXIuaW50ZXJzZWN0aW9uXV0gZm9yIGEgd2F5IHRvIHJldHJpZXZlIGEgbmV3IGBhbmNob3JQb3NpdGlvbmAgYW5kIGBzdGVtVmVjdG9yYC5cbiAgICpcbiAgICogKipOb3RlKio6IHRoZXNlIGNoYW5nZXMgYXJlIG5vdCBwZXJzaXN0ZWQgYmV0d2VlbiByZWZyZXNoZXMgb2YgU2hvd2Nhc2UuIFRoZXkgYXJlIG9ubHkgdmFsaWQgZm9yIHRoZSBjdXJyZW50IGJyb3dzZXIgc2Vzc2lvbi5cbiAgICpcbiAgICogQHBhcmFtIHRhZ1NpZCBUaGUgc2lkIG9mIHRoZSBNYXR0ZXJ0YWcgdG8gcmVwb3NpdGlvblxuICAgKiBAcGFyYW0gbW92ZU9wdGlvbnMgVGhlIG5ldyBhbmNob3JQb3NpdGlvbiwgc3RlbVZlY3RvciBhbmQvb3IgZmxvb3JJZC5cbiAgICpcbiAgICogQGRlcHJlY2F0ZWQgVXNlIFtbVGFnLmVkaXRQb3NpdGlvbl1dIGluc3RlYWRcbiAgICovXG4gIGVkaXRQb3NpdGlvbih0YWdTaWQ6IHN0cmluZywgbW92ZU9wdGlvbnM6IFBhcnRpYWw8TWF0dGVydGFnLlBvc2l0aW9uT3B0aW9ucz4pOiBQcm9taXNlPHZvaWQ+O1xuXG4gIC8qKlxuICAgKiBFZGl0IHRoZSBjb2xvciBvZiBhIE1hdHRlcnRhZ1xuICAgKlxuICAgKiBAcGFyYW0gdGFnU2lkIFRoZSBzaWQgb2YgdGhlIE1hdHRlcnRhZyB0byBlZGl0XG4gICAqIEBwYXJhbSBjb2xvciBUaGUgbmV3IGNvbG9yIHRvIGJlIGFwcGxpZWQgdG8gdGhlIE1hdHRlcnRhZyBkaXNjXG4gICAqXG4gICAqIEBkZXByZWNhdGVkIFVzZSBbW1RhZy5lZGl0Q29sb3JdXSBpbnN0ZWFkXG4gICAqL1xuICBlZGl0Q29sb3IodGFnU2lkOiBzdHJpbmcsIGNvbG9yOiBDb2xvcik6IFByb21pc2U8dm9pZD47XG5cbiAgLyoqXG4gICAqIEVkaXQgdGhlIG9wYWNpdHkgb2YgYSBNYXR0ZXJ0YWdcbiAgICpcbiAgICogQHBhcmFtIHRhZ1NpZCBUaGUgc2lkIG9mIHRoZSBNYXR0ZXJ0YWcgdG8gZWRpdFxuICAgKiBAcGFyYW0gb3BhY2l0eSBUaGUgdGFyZ2V0IG9wYWNpdHkgZm9yIHRoZSBNYXR0ZXJ0YWcgaW4gdGhlIHJhbmdlIG9mIFswLCAxXVxuICAgKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgW1tUYWcuZWRpdE9wYWNpdHldXSBpbnN0ZWFkXG4gICAqL1xuICAgZWRpdE9wYWNpdHkodGFnU2lkOiBzdHJpbmcsIG9wYWNpdHk6IG51bWJlcik6IFByb21pc2U8dm9pZD47XG5cbiAgLyoqXG4gICAqIEVkaXQgdGhlIHN0ZW0gb2YgYSBNYXR0ZXJ0YWdcbiAgICpcbiAgICogQHBhcmFtIHRhZ1NpZCBUaGUgc2lkIG9mIHRoZSBNYXR0ZXJ0YWcgdG8gZWRpdFxuICAgKiBAcGFyYW0gc3RlbU9wdGlvbnMgV2hhdCB0byBjaGFuZ2UgYWJvdXQgdGhlIE1hdHRlcnRhZydzIHN0ZW0gLSBjYW4gaW5jbHVkZSBzdGVtSGVpZ2h0IGFuZCBzdGVtVmlzaWJsZVxuICAgKiBAaW50cm9kdWNlZCAzLjEuNzAuMTAtMC1nZTljYjgzYjI4Y1xuICAgKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgW1tUYWcuZWRpdFN0ZW1dXSBpbnN0ZWFkXG4gICAqL1xuICBlZGl0U3RlbSh0YWdTaWQ6IHN0cmluZywgb3B0aW9uczoge3N0ZW1IZWlnaHQ/OiBudW1iZXIsIHN0ZW1WaXNpYmxlPzogYm9vbGVhbn0pOiBQcm9taXNlPHZvaWQ+O1xuXG4gIC8qKlxuICAgKiBSZWdpc3RlciBhbiBpY29uIHRvIHVzZSB3aXRoIHN1YnNlcXVlbnQgW1tNYXR0ZXJ0YWcuZWRpdEljb25dXSBjYWxscy5cbiAgICpcbiAgICogKipOb3RlKio6IEl0IGlzIHJlY29tbWVuZGVkIHRvIGhvc3QgeW91ciBvd24gaW1hZ2VzIHRvIG1pdGlnYXRlIGNyb3NzIG9yaWdpbiBsaW1pdGF0aW9ucy5cbiAgICpcbiAgICogQHBhcmFtIGljb25JZCBBIHVzZXIgc3BlY2lmaWVkIHN0cmluZyB0byB1c2UgYXMgYSBsb29rdXAgb2YgdGhpcyBpY29uXG4gICAqIEBwYXJhbSBpY29uU3JjIFRoZSBzcmMgb2YgdGhlIGljb24sIGxpa2UgdGhlIHNyYyBvZiBhbiBcXDxpbWc+XG4gICAqXG4gICAqIEBkZXByZWNhdGVkIFVzZSBbW0Fzc2V0LnJlZ2lzdGVyVGV4dHVyZV1dIGluc3RlYWRcbiAgICovXG4gIHJlZ2lzdGVySWNvbihpY29uSWQ6IHN0cmluZywgaWNvblNyYzogc3RyaW5nKTogUHJvbWlzZTx2b2lkPjtcblxuICAvKipcbiAgICogQ2hhbmdlIHRoZSBpY29uIG9mIHRoZSBNYXR0ZXJ0YWcgZGlzY1xuICAgKlxuICAgKiAqKk5vdGUqKjogdGhlc2UgY2hhbmdlcyBhcmUgbm90IHBlcnNpc3RlZCBiZXR3ZWVuIHJlZnJlc2hlcyBvZiBTaG93Y2FzZS4gVGhleSBhcmUgb25seSB2YWxpZCBmb3IgdGhlIGN1cnJlbnQgYnJvd3NlciBzZXNzaW9uLlxuICAgKlxuICAgKlxuICAgKiBAcGFyYW0gdGFnU2lkIFRoZSBzaWQgb2YgdGhlIE1hdHRlcnRhZyB0byBlZGl0XG4gICAqIEBwYXJhbSBpY29uSWQgVGhlIGlkIG9mIHRoZSBpY29uIHRvIGFwcGx5XG4gICAqXG4gICAqICoqRXJyb3JzKipcbiAgICpcbiAgICogV2FybnMgaWYgdGhlIHByb3ZpZGVkIGBpY29uU3JjYCBpcyBhbiAuc3ZnIGZpbGUgd2hpY2ggZG9lc24ndCBoYXZlIGEgYCd3aWR0aCdgIG9yIGAnaGVpZ2h0J2AgYXR0cmlidXRlLlxuICAgKiBEZWZhdWx0cyB0byBhIHJlc29sdXRpb24gb2YgMTI4eDEyOCBpZiBuZWl0aGVyIGV4aXN0LlxuICAgKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgW1tUYWcuZWRpdEljb25dXSBpbnN0ZWFkXG4gICAqL1xuICBlZGl0SWNvbih0YWdTaWQ6IHN0cmluZywgaWNvbklkOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+O1xuXG4gIC8qKlxuICAgKiBSZXNldHMgdGhlIGljb24gb2YgdGhlIE1hdHRlcnRhZyBkaXNjIGJhY2sgdG8gaXRzIG9yaWdpbmFsIGljb24uXG4gICAqXG4gICAqIEBwYXJhbSB0YWdTaWQgVGhlIHNpZCBvZiB0aGUgTWF0dGVydGFnIHRvIHJlc2V0XG4gICAqXG4gICAqIEBkZXByZWNhdGVkIFVzZSBbW1RhZy5yZXNldEljb25dXSBpbnN0ZWFkXG4gICAqL1xuICByZXNldEljb24odGFnU2lkOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+O1xuXG4gIC8qKlxuICAgKiBSZW1vdmVzIG9uZSBvciBtb3JlIE1hdHRlcnRhZ3MgZnJvbSBTaG93Y2FzZS5cbiAgICpcbiAgICogKipOb3RlKio6IHRoZXNlIGNoYW5nZXMgYXJlIG5vdCBwZXJzaXN0ZWQgYmV0d2VlbiByZWZyZXNoZXMgb2YgU2hvd2Nhc2UuIFRoZXkgYXJlIG9ubHkgdmFsaWQgZm9yIHRoZSBjdXJyZW50IGJyb3dzZXIgc2Vzc2lvbi5cbiAgICpcbiAgICogQHBhcmFtIHRhZ1NpZHMgQSBzaW5nbGUgTWF0dGVydGFnIHNpZCBvciBhcnJheSBvZiBNYXR0ZXJ0YWcgc2lkcyB0byByZW1vdmUuXG4gICAqIEByZXR1cm4gQSBwcm9taXNlIHdpdGggYW4gYXJyYXkgb2YgTWF0dGVydGFnIHNpZHMgdGhhdCB3ZXJlIGFjdHVhbGx5IHJlbW92ZWQuXG4gICAqXG4gICAqIEBkZXByZWNhdGVkIFVzZSBbW1RhZy5yZW1vdmVdXSBpbnN0ZWFkXG4gICAqL1xuICByZW1vdmUodGFnU2lkczogc3RyaW5nIHwgc3RyaW5nW10pOiBQcm9taXNlPHN0cmluZ1tdPjtcblxuICAvKipcbiAgICogUHJldmVudHMgdGhlIFwiZGVmYXVsdFwiIFNob3djYXNlIGFjdGlvbiBvbiBhIE1hdHRlcnRhZyBmcm9tIG9jY3VycmluZzogaG92ZXIgdG8gb3BlbiBiaWxsYm9hcmQsIGNsaWNrIHRvIG5hdmlnYXRlIHRvIHZpZXcuXG4gICAqXG4gICAqIEBwYXJhbSB0YWdTaWQgVGhlIHNpZCBvZiB0aGUgTWF0dGVydGFnIHRvIHJlbW92ZSBhY3Rpb25zIGZyb21cbiAgICogQHBhcmFtIGFjdGlvbnMgVGhlIHNldCBvZiBhY3Rpb25zIHRvIHByZXZlbnRcbiAgICpcbiAgICogQGRlcHJlY2F0ZWQgVXNlIFtbVGFnLmFsbG93QWN0aW9uXV0gaW5zdGVhZFxuICAgKi9cbiAgcHJldmVudEFjdGlvbih0YWdTaWQ6IHN0cmluZywgYWN0aW9uczogUGFydGlhbDxNYXR0ZXJ0YWcuUHJldmVudGFibGVBY3Rpb25zPik6IFByb21pc2U8dm9pZD47XG5cbiAgLyoqXG4gICAqIEFkZCBhIGN1c3RvbSBmcmFtZSB0aGF0IGNhbiBob3N0IGN1c3RvbSBIVE1MIGFuZCBKYXZhU2NyaXB0LCBhbmQgY29tbXVuaWNhdGUgYmktZGlyZWN0aW9uYWxseSB3aXRoIHlvdXIgcGFnZS5cbiAgICpcbiAgICogVGhlIGZyYW1lIHRoYXQgY29udGFpbnMgeW91ciBjdXN0b20gY29kZSB3aWxsIGhhdmUgY2VydGFpbiBsaW1pdGF0aW9ucyBkdWUgdG8gYmVpbmcgc2FuZGJveGVkIGJ5IHRoZSBgc2FuZGJveD0nYWxsb3ctc2NyaXB0c2AgYXR0cmlidXRlLlxuICAgKiBBdHRlbXB0aW5nIHRvIGFjY2VzcyBwcm9wZXJ0aWVzIG9mIG90aGVyIHdpbmRvd3Mgd2lsbCBhbHNvIGJlIGJsb2NrZWQgYnkgdGhlIGJyb3dzZXIuXG4gICAqIChbc2VlIHRoZSBNRE4gcGFnZXMgYWJvdXQgaWZyYW1lIHNhbmRib3hdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0hUTUwvRWxlbWVudC9pZnJhbWUpKVxuICAgKlxuICAgKiBDdXJyZW50bHksIHRoZSBIVE1MIENBTiBPTkxZIEJFIFNFVCBPTkNFIGJ5IGEgY2FsbCB0byBgaW5qZWN0SFRNTGAuIFRoaXMgaW5jbHVkZXMgcmVtb3Zpbmcgb3IgY2xlYXJpbmcgdGhlIEhUTUwuXG4gICAqXG4gICAqIEBkZXByZWNhdGVkIFVzZSBbW1RhZy5yZWdpc3RlclNhbmRib3hdXSBhbmQgW1tUYWcuYXR0YWNoXV0gaW5zdGVhZFxuICAgKi9cbiAgaW5qZWN0SFRNTCh0YWdTaWQ6IHN0cmluZywgaHRtbDogc3RyaW5nLCBvcHRpb25zOiBNYXR0ZXJ0YWcuSW5qZWN0aW9uT3B0aW9ucyk6IFByb21pc2U8TWF0dGVydGFnLklNZXNzZW5nZXI+O1xufVxuIiwiaW1wb3J0IHR5cGUgeyBJT2JzZXJ2YWJsZSwgUm90YXRpb24sIFZlY3RvcjMgfSBmcm9tICcuL2dsb2JhbCc7XG5cbmV4cG9ydCBuYW1lc3BhY2UgTW9kZSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICBleHBvcnQgZW51bSBNb2RlIHtcbiAgICBJTlNJREUgPSAnbW9kZS5pbnNpZGUnLFxuICAgIE9VVFNJREUgPSAnbW9kZS5vdXRzaWRlJyxcbiAgICBET0xMSE9VU0UgPSAnbW9kZS5kb2xsaG91c2UnLFxuICAgIEZMT09SUExBTiA9ICdtb2RlLmZsb29ycGxhbicsXG4gICAgVFJBTlNJVElPTklORyA9ICdtb2RlLnRyYW5zaXRpb25pbmcnLFxuICB9XG5cbiAgZXhwb3J0IGVudW0gRXZlbnQge1xuICAgIC8qKiBAZXZlbnQgKi9cbiAgICBDSEFOR0VfU1RBUlQgPSAndmlld21vZGUuY2hhbmdlc3RhcnQnLFxuICAgIC8qKiBAZXZlbnQgKi9cbiAgICBDSEFOR0VfRU5EID0gJ3ZpZXdtb2RlLmNoYW5nZWVuZCcsXG4gIH1cblxuICBleHBvcnQgdHlwZSBUcmFuc2l0aW9uRGF0YSA9IHtcbiAgICBmcm9tOiBNb2RlIHwgbnVsbDtcbiAgICB0bzogTW9kZSB8IG51bGw7XG4gIH07XG5cbiAgZXhwb3J0IGVudW0gVHJhbnNpdGlvblR5cGUge1xuICAgIElOU1RBTlQgPSAndHJhbnNpdGlvbi5pbnN0YW50JyxcbiAgICBGTFkgPSAndHJhbnNpdGlvbi5mbHknLFxuICAgIEZBREVPVVQgPSAndHJhbnNpdGlvbi5mYWRlJyxcbiAgfVxuXG4gIGV4cG9ydCB0eXBlIE1vdmVUb01vZGVPcHRpb25zID0ge1xuICAgIHJvdGF0aW9uPzogUm90YXRpb247XG4gICAgcG9zaXRpb24/OiBWZWN0b3IzO1xuICAgIHRyYW5zaXRpb24/OiBUcmFuc2l0aW9uVHlwZTtcbiAgICB6b29tPzogbnVtYmVyO1xuICB9O1xuXG4gIGV4cG9ydCB0eXBlIEN1cnJlbnRWaWV3bW9kZURhdGEgPSBNb2RlIHwgbnVsbDtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBNb2RlIHtcbiAgTW9kZTogdHlwZW9mIE1vZGUuTW9kZTtcbiAgRXZlbnQ6IHR5cGVvZiBNb2RlLkV2ZW50O1xuICBUcmFuc2l0aW9uVHlwZTogdHlwZW9mIE1vZGUuVHJhbnNpdGlvblR5cGU7XG5cbiAgLyoqXG4gICAqIFRoZSBjdXJyZW50IHZpZXcgbW9kZS5cbiAgICpcbiAgICogYGBgXG4gICAqIG1wU2RrLk1vZGUuY3VycmVudC5zdWJzY3JpYmUoZnVuY3Rpb24gKG1vZGUpIHtcbiAgICogICAvLyB0aGUgdmlldyBtb2RlIGhhcyBjaGFuZ2VkXG4gICAqICAgY29uc29sZS5sb2coJ0N1cnJlbnQgdmlldyBtb2RlIGlzIGlzICcsIG1vZGUpO1xuICAgKiB9KTtcbiAgICogYGBgXG4gICAqXG4gICAqIEBlbWJlZFxuICAgKiBAYnVuZGxlXG4gICAqIEBpbnRyb2R1Y2VkIDMuMS42OC4xMi03LWc4NTg2ODg5NDRhXG4gICAqL1xuICBjdXJyZW50OiBJT2JzZXJ2YWJsZTxNb2RlLk1vZGUgfCBudWxsPjtcblxuICAvKipcbiAgICogQ2hhbmdlIHRoZSB2aWV3aW5nIG1vZGUgaW4gM0QgU2hvd2Nhc2UuXG4gICAqXG4gICAqYGBgXG4gICAqIGNvbnN0IG1vZGUgPSBtcFNkay5Nb2RlLk1vZGUuRkxPT1JQTEFOO1xuICAgKiBjb25zdCBwb3NpdGlvbiA9IHt4OiAwLCB5OiAwLCB6OiAwfTtcbiAgICogY29uc3Qgcm90YXRpb24gPSB7eDogLTkwLCB5OiAwfTtcbiAgICogY29uc3QgdHJhbnNpdGlvbiA9IG1wU2RrLk1vZGUuVHJhbnNpdGlvblR5cGUuRkxZO1xuICAgKiBjb25zdCB6b29tID0gNTtcbiAgICpcbiAgICogbXBTZGsuTW9kZS5tb3ZlVG8obW9kZSwge1xuICAgKiAgICAgcG9zaXRpb246IHBvc2l0aW9uLFxuICAgKiAgICAgcm90YXRpb246IHJvdGF0aW9uLFxuICAgKiAgICAgdHJhbnNpdGlvbjogdHJhbnNpdGlvbixcbiAgICogICAgIHpvb20sXG4gICAqICAgfSlcbiAgICogICAudGhlbihmdW5jdGlvbihuZXh0TW9kZSl7XG4gICAqICAgICAvLyBNb3ZlIHN1Y2Nlc3NmdWwuXG4gICAqICAgICBjb25zb2xlLmxvZygnQXJyaXZlZCBhdCBuZXcgdmlldyBtb2RlICcgKyBuZXh0TW9kZSk7XG4gICAqICAgfSlcbiAgICogICAuY2F0Y2goZnVuY3Rpb24oZXJyb3Ipe1xuICAgKiAgICAgLy8gRXJyb3Igd2l0aCBtb3ZlVG8gY29tbWFuZFxuICAgKiAgIH0pO1xuICAgKiBgYGBcbiAgICpcbiAgICogTm90ZXMgYWJvdXQgdHJhbnNpdGlvbnMgdG8gRmxvb3JwbGFuIG1vZGU6XG4gICAqICogYHpvb21gIG9wdGlvbiBpcyBvbmx5IHRha2VuIGludG8gYWNjb3VudCBpbiBGbG9vcnBsYW4gdHJhbnNpdGlvbnMsIHRoZSBsb3dlciB0aGUgbnVtYmVyLFxuICAgKiAgIHRoZSBmdXJ0aGVyIHRoZSBjYW1lcmEgaXMgem9vbWVkIGluXG4gICAqICogVGhlIHBvc2l0aW9uIG9mIGEgZmxvb3JwbGFuIHZpZXcgaXMgZGV0ZXJtaW5lZCBieSB0aGUgWCBhbmQgWiBhcmd1bWVudHMgb2YgdGhlIG9wdGlvbmFsIHBvc2l0aW9uIG9iamVjdC5cbiAgICogKiBUaGUgcm90YXRpb24gb2YgYSBmbG9vcnBsYW4gdmlldyBpcyBkZXRlcm1pbmVkIGJ5IHRoZSBYIGFuZCBZIG9mIHRoZSBvcHRpb25hbCByb3RhdGlvbiBvYmplY3QsXG4gICAqICAgY2hhbmdpbmcgWCBjaGFuZ2VzIHRoZSAncm9sbCcgb2YgdGhlIHZpZXcsIHNpbWlsYXIgdG8gaGl0dGluZyB0aGUgTEVGVC9SSUdIVCBhcnJvdyBrZXlzIGluIFNob3djYXNlXG4gICAqICAgZmxvb3JwbGFuIHZpZXcsIGNoYW5naW5nIHRoZSBZIHZhbHVlIGhhcyBubyBhbmFsb2cgaW4gc2hvd2Nhc2UsIGJ1dCBjaGFuZ2VzIHRoZSAndGlsdCcgb2YgdGhlIHZpZXcuXG4gICAqXG4gICAqIEBwYXJhbSBUaGUgbW9kZS5cbiAgICogQHBhcmFtIE9wdGlvbnMgb2JqZWN0LCBjb250YWluaW5nIG9wdGlvbmFsIHBvc2l0aW9uLCByb3RhdGlvbiwgdHJhbnNpdGlvbiB0eXBlXG4gICAqIEByZXR1cm4gQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCB0aGUgbmV3IG1vZGUgb25jZSB0aGUgbW9kZSBoYXMgdHJhbnNpdGlvbmVkLlxuICAgKi9cbiAgbW92ZVRvKG1vZGU6IE1vZGUuTW9kZSwgb3B0aW9ucz86IE1vZGUuTW92ZVRvTW9kZU9wdGlvbnMpOiBQcm9taXNlPE1vZGUuTW9kZT47XG5cbiAgLyoqXG4gICAqIEFuIG9ic2VydmFibGUgdHJhbnNpdGlvbiBvZiB0aGUgY3VycmVudCB2aWV3bW9kZS4gYGZyb21gIGFuZCBgdG9gIHdpbGwgYmUgbnVsbFxuICAgKiBpZiB0aGVyZSBpcyBubyBhY3RpdmUgdHJhbnNpdGlvbi5cbiAgICpcbiAgICogYGBgXG4gICAqIG1wU2RrLk1vZGUudHJhbnNpdGlvbi5zdWJzY3JpYmUoZnVuY3Rpb24gKHRyYW5zaXRpb24pIHtcbiAgICogICAvLyB0aGUgdHJhbnNpdGlvbiBoYXMgY2hhbmdlZFxuICAgKiAgIGNvbnNvbGUubG9nKHRyYW5zaXRpb24uZnJvbSwgdHJhbnNpdGlvbi50bywgdHJhbnNpdGlvbi5wcm9ncmVzcyk7XG4gICAqIH0pO1xuICAgKiBgYGBcbiAgICpcbiAgICogQGVtYmVkXG4gICAqIEBidW5kbGVcbiAgICogQGludHJvZHVjZWQgMy4xLjY4LjEyLTctZzg1ODY4ODk0NGFcbiAgICovXG4gIHRyYW5zaXRpb246IElPYnNlcnZhYmxlPE1vZGUuVHJhbnNpdGlvbkRhdGE+O1xufVxuIiwiaW1wb3J0IHR5cGUgeyBTd2VlcCB9IGZyb20gJy4vc3dlZXAnO1xuXG5leHBvcnQgbmFtZXNwYWNlIE1vZGVsIHtcbiAgZXhwb3J0IHR5cGUgTW9kZWxEYXRhID0ge1xuICAgIHNpZDogc3RyaW5nO1xuICAgIC8qKiBAZGVwcmVjYXRlZCBVc2UgW1tTd2VlcC5kYXRhXV0gaW5zdGVhZCAqL1xuICAgIHN3ZWVwczogU3dlZXAuU3dlZXBEYXRhW107XG4gICAgbW9kZWxTdXBwb3J0c1ZyOiBib29sZWFuO1xuICB9O1xuXG4gIGV4cG9ydCB0eXBlIE1vZGVsRGV0YWlscyA9IHtcbiAgICBzaWQ6IHN0cmluZztcbiAgICBuYW1lPzogc3RyaW5nO1xuICAgIHByZXNlbnRlZEJ5Pzogc3RyaW5nO1xuICAgIGRlZmF1bHRWaWV3SWQ6IHN0cmluZztcbiAgICBkZXNjcmlwdGlvbj86IHN0cmluZztcbiAgICBzdW1tYXJ5Pzogc3RyaW5nO1xuICAgIGFkZHJlc3M/OiBzdHJpbmc7XG4gICAgZm9ybWF0dGVkQWRkcmVzcz86IHN0cmluZztcbiAgICBjb250YWN0RW1haWw/OiBzdHJpbmc7XG4gICAgY29udGFjdE5hbWU/OiBzdHJpbmc7XG4gICAgcGhvbmU/OiBzdHJpbmc7XG4gICAgZm9ybWF0dGVkQ29udGFjdFBob25lPzogc3RyaW5nO1xuICAgIHNoYXJlVXJsPzogc3RyaW5nO1xuICB9O1xuXG4gIGV4cG9ydCBlbnVtIEV2ZW50IHtcbiAgICAvKiogQGV2ZW50ICovXG4gICAgTU9ERUxfTE9BREVEID0gJ21vZGVsLmxvYWRlZCcsXG4gIH1cbn1cblxuZXhwb3J0IGludGVyZmFjZSBNb2RlbCB7XG4gIEV2ZW50OiB0eXBlb2YgTW9kZWwuRXZlbnQ7XG4gIC8qKlxuICAgKiBUaGlzIGZ1bmN0aW9uIHJldHVybnMgYmFzaWMgbW9kZWwgaW5mb3JtYXRpb24uXG4gICAqXG4gICAqIFRoaXMgaXMgbm8gbG9uZ2VyIHRoZSBjYW5vbmljYWwgd2F5IHRvIHJlY2VpdmUgc3dlZXAgaW5mb3JtYXRpb24uIFNlZSBbW1N3ZWVwLmRhdGFdXS5cbiAgICpcbiAgICogYGBgXG4gICAqIG1wU2RrLk1vZGVsLmdldERhdGEoKVxuICAgKiAgIC50aGVuKGZ1bmN0aW9uKG1vZGVsKSB7XG4gICAqICAgICAvLyBNb2RlbCBkYXRhIHJldHJlaXZhbCBjb21wbGV0ZS5cbiAgICogICAgIGNvbnNvbGUubG9nKCdNb2RlbCBzaWQ6JyArIG1vZGVsLnNpZCk7XG4gICAqICAgfSlcbiAgICogICAuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHtcbiAgICogICAgIC8vIE1vZGVsIGRhdGEgcmV0cmlldmFsIGVycm9yLlxuICAgKiAgIH0pO1xuICAgKiBgYGBcbiAgICovXG4gIGdldERhdGEoKTogUHJvbWlzZTxNb2RlbC5Nb2RlbERhdGE+O1xuXG4gIC8qKlxuICAgKiBUaGlzIGZ1bmN0aW9uIHJldHVybnMgbW9kZWwgZGV0YWlscy5cbiAgICpcbiAgICogYGBgXG4gICAqIG1wU2RrLk1vZGVsLmdldERldGFpbHMoKVxuICAgKiAgIC50aGVuKGZ1bmN0aW9uKG1vZGVsRGV0YWlscykge1xuICAgKiAgICAgLy8gTW9kZWwgZGV0YWlscyByZXRyZWl2YWwgY29tcGxldGUuXG4gICAqICAgICBjb25zb2xlLmxvZygnTW9kZWwgc2lkOicgKyBtb2RlbERldGFpbHMuc2lkKTtcbiAgICogICAgIGNvbnNvbGUubG9nKCdNb2RlbCBuYW1lOicgKyBtb2RlbERldGFpbHMubmFtZSk7XG4gICAqICAgICBjb25zb2xlLmxvZygnTW9kZWwgc3VtbWFyeTonICsgbW9kZWxEZXRhaWxzLnN1bW1hcnkpO1xuICAgKiAgICAgY29uc29sZS5sb2coJ01vZGVsIGRlc2NyaXB0aW9uOicgKyBtb2RlbERldGFpbHMuZGVzY3JpcHRpb24pO1xuICAgKiAgIH0pXG4gICAqICAgLmNhdGNoKGZ1bmN0aW9uKGVycm9yKSB7XG4gICAqICAgICAvLyBNb2RlbCBkZXRhaWxzIHJldHJpZXZhbCBlcnJvci5cbiAgICogICB9KTtcbiAgICogYGBgXG4gICAqL1xuICBnZXREZXRhaWxzKCk6IFByb21pc2U8TW9kZWwuTW9kZWxEZXRhaWxzPjtcbn1cbiIsImltcG9ydCB0eXBlIHsgSU9ic2VydmFibGUsIFZlY3RvcjMgfSBmcm9tICcuL2dsb2JhbCc7XG5cbmV4cG9ydCBuYW1lc3BhY2UgUG9pbnRlciB7XG4gIGV4cG9ydCB0eXBlIEludGVyc2VjdGlvbiA9IHtcbiAgICBwb3NpdGlvbjogVmVjdG9yMztcbiAgICBub3JtYWw6IFZlY3RvcjM7XG4gICAgLyoqIEBkZXByZWNhdGVkIFVzZSBbW2Zsb29ySW5kZXhdXSBpbnN0ZWFkICovXG4gICAgZmxvb3JJZDogbnVtYmVyIHwgdW5kZWZpbmVkO1xuICAgIC8qKlxuICAgICAqIGZsb29ySW5kZXggaXMgb25seSBkZWZpbmVkIHdoZW4gdGhlIGludGVyc2VjdGVkIG9iamVjdCBpcyBNT0RFTC5cbiAgICAgKi9cbiAgICBmbG9vckluZGV4OiBudW1iZXIgfCB1bmRlZmluZWQ7XG4gICAgb2JqZWN0OiBDb2xsaWRlcnM7XG4gIH07XG5cbiAgZXhwb3J0IGVudW0gQ29sbGlkZXJzIHtcbiAgICBOT05FID0gJ2ludGVyc2VjdGVkb2JqZWN0Lm5vbmUnLFxuICAgIE1PREVMID0gJ2ludGVyc2VjdGVkb2JqZWN0Lm1vZGVsJyxcbiAgICBUQUcgPSAnaW50ZXJzZWN0ZWRvYmplY3QudGFnJyxcbiAgICBTV0VFUCA9ICdpbnRlcnNlY3RlZG9iamVjdC5zd2VlcCcsXG4gICAgVU5LTk9XTiA9ICdpbnRlcnNlY3RlZG9iamVjdC51bmtub3duJyxcbiAgfVxuXG4gIHR5cGUgRmFkZU91dFByb3BzID0ge1xuICAgIC8qKlxuICAgICAqIER1cmF0aW9uIGluIG1pbGxpc2Vjb25kcy4gRGVmYXVsdCBpcyA3MDAuXG4gICAgICovXG4gICAgZHVyYXRpb24/OiBudW1iZXIsXG5cbiAgICAvKipcbiAgICAgKiBEZWxheSBpbiBtaWxsaXNlY29uZHMuIERlZmF1bHQgaXMgNzAwLlxuICAgICAqL1xuICAgIGRlbGF5PzogbnVtYmVyLFxuICB9O1xuXG4gIHR5cGUgRmFkZUluUHJvcHMgPSB7XG4gICAgLyoqXG4gICAgICogRHVyYXRpb24gaW4gbWlsbGlzZWNvbmRzLiBEZWZhdWx0IGlzIDMwMC5cbiAgICAgKi9cbiAgICBkdXJhdGlvbj86IG51bWJlcixcbiAgfTtcblxuICAvKipcbiAgICogUG9pbnRlciByZXRpY2xlIGZhZGUgcHJvcGVydGllcy5cbiAgICovXG4gIGV4cG9ydCB0eXBlIEZhZGVQcm9wcyA9IHtcbiAgICBmYWRlT3V0PzogRmFkZU91dFByb3BzO1xuICAgIGZhZGVJbj86IEZhZGVJblByb3BzO1xuICB9O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFBvaW50ZXIge1xuICBDb2xsaWRlcnM6IHR5cGVvZiBQb2ludGVyLkNvbGxpZGVycztcbiAgLyoqXG4gICAqIEFuIG9ic2VydmFibGUgaW50ZXJzZWN0aW9uIGRhdGEgb2JqZWN0IHRoYXQgY2FuIGJlIHN1YnNjcmliZWQgdG8uXG4gICAqXG4gICAqIGBgYFxuICAgKiBtcFNkay5Qb2ludGVyLmludGVyc2VjdGlvbi5zdWJzY3JpYmUoZnVuY3Rpb24gKGludGVyc2VjdGlvbkRhdGEpIHtcbiAgICogIC8vIENoYW5nZXMgdG8gdGhlIGludGVyc2VjdGlvbiBkYXRhIGhhdmUgb2NjdXJyZWQuXG4gICAqICBjb25zb2xlLmxvZygnSW50ZXJzZWN0aW9uIHBvc2l0aW9uOicsIGludGVyc2VjdGlvbkRhdGEucG9zaXRpb24pO1xuICAgKiAgY29uc29sZS5sb2coJ0ludGVyc2VjdGlvbiBub3JtYWw6JywgaW50ZXJzZWN0aW9uRGF0YS5ub3JtYWwpO1xuICAgKiB9KTtcbiAgICogYGBgXG4gICAqL1xuICBpbnRlcnNlY3Rpb246IElPYnNlcnZhYmxlPFBvaW50ZXIuSW50ZXJzZWN0aW9uPjtcblxuICAvKipcbiAgICogQGludHJvZHVjZWQgMy4xLjU1LjItMzQtZ2E5OTM0Y2NkOTNcbiAgICogQGRlcHJlY2F0ZWQgVXNlIFtbQXNzZXQucmVnaXN0ZXJUZXh0dXJlXV0gdG8gcmVnaXN0ZXIgbmV3IHRleHR1cmVzIGluc3RlYWQuXG4gICAqL1xuICByZWdpc3RlclRleHR1cmUodGV4dHVyZUlkOiBzdHJpbmcsIHRleHR1cmVTcmM6IHN0cmluZyk6IFByb21pc2U8dm9pZD47XG5cbiAgLyoqXG4gICAqIENoYW5nZSB0aGUgdGV4dHVyZSBvZiB0aGUgcG9pbnRlciByZXRpY2xlLlxuICAgKlxuICAgKiBgYGB0eXBlc2NyaXB0XG4gICAqIGF3YWl0IG1wU2RrLkFzc2V0LnJlZ2lzdGVyVGV4dHVyZSgnY3VzdG9tVGV4dHVyZUlkJywgJ2h0dHBzOi8vW2xpbmsudG8vaW1hZ2VdJyk7XG4gICAqXG4gICAqIC8vIGNoYW5nZSB0aGUgdGV4dHVyZSBvZiB0aGUgcG9pbnRlciByZXRpY2xlIHVzaW5nIGEgcHJldmlvdXNseSByZWdpc3RlcmVkIGlkLlxuICAgKiBhd2FpdCBtcFNkay5Qb2ludGVyLmVkaXRUZXh0dXJlKCdjdXN0b21UZXh0dXJlSWQnKTtcbiAgICogYGBgXG4gICAqXG4gICAqIEBwYXJhbSB0ZXh0dXJlSWQgVGhlIGlkIG9mIHRoZSB0ZXh0dXJlIHRvIGFwcGx5LlxuICAgKlxuICAgKiBAZW1iZWRcbiAgICogQGJ1bmRsZVxuICAgKiBAaW50cm9kdWNlZCAzLjEuNTUuMi0zNC1nYTk5MzRjY2Q5M1xuICAgKi9cbiAgZWRpdFRleHR1cmUodGV4dHVyZUlkOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+O1xuXG4gIC8qKlxuICAgKiBSZXNldHMgdGhlIHBvaW50ZXIgcmV0aWNsZSB0ZXh0dXJlIHRvIHRoZSBvcmlnaW5hbCB0ZXh0dXJlLlxuICAgKiBgYGB0eXBlc2NyaXB0XG4gICAqIGF3YWl0IG1wU2RrLlBvaW50ZXIucmVzZXRUZXh0dXJlKCk7XG4gICAqIGBgYFxuICAgKlxuICAgKiBAZW1iZWRcbiAgICogQGJ1bmRsZVxuICAgKiBAaW50cm9kdWNlZCAzLjEuNTUuMi0zNC1nYTk5MzRjY2Q5M1xuICAgKi9cbiAgcmVzZXRUZXh0dXJlKCk6IFByb21pc2U8dm9pZD47XG5cbiAgLyoqXG4gICAqIEN1c3RvbWl6ZXMgdGhlIGZhZGUgaW4vb3V0IGJlaGF2aW9yIG9mIHRoZSBwb2ludGVyIHJldGljbGUuXG4gICAqIEBwYXJhbSBwcm9wcyBmYWNlIHByb3BlcnRpZXNcbiAgICpcbiAgICogQGVtYmVkXG4gICAqIEBidW5kbGVcbiAgICogQGludHJvZHVjZWQgMy4xLjU1LjItMzQtZ2E5OTM0Y2NkOTNcbiAgICovXG4gIHNldEZhZGVQcm9wcyhwcm9wczogUG9pbnRlci5GYWRlUHJvcHMpOiBQcm9taXNlPHZvaWQ+O1xuXG4gIC8qKlxuICAgKiBUaGlzIGZ1bmN0aW9uIGNvbnRyb2xzIHRoZSB2aXNpYmlsaXR5IG9mIHRoZSBwb2ludGVyIHJldGljbGUuXG4gICAqIEBwYXJhbSB2aXNpYmxlIHBvaW50ZXIgcmV0aWNsZSB2aXNpYmlsaXR5XG4gICAqXG4gICAqIEBlbWJlZFxuICAgKiBAYnVuZGxlXG4gICAqIEBpbnRyb2R1Y2VkIDMuMS41NS4yLTM0LWdhOTkzNGNjZDkzXG4gICAqL1xuICBzZXRWaXNpYmxlKHZpc2libGU6IGJvb2xlYW4pOiBQcm9taXNlPHZvaWQ+O1xufVxuXG4iLCJpbXBvcnQgdHlwZSB7IERpY3Rpb25hcnksIElPYnNlcnZhYmxlLCBJT2JzZXJ2YWJsZU1hcCwgVmVjdG9yMyB9IGZyb20gJy4vZ2xvYmFsJztcblxuZXhwb3J0IG5hbWVzcGFjZSBSb29tIHtcbiAgZXhwb3J0IHR5cGUgUm9vbURhdGEgPSB7XG4gICAgaWQ6IHN0cmluZztcbiAgICBsYWJlbDogc3RyaW5nO1xuICAgIGJvdW5kczoge1xuICAgICAgbWluOiBWZWN0b3IzO1xuICAgICAgbWF4OiBWZWN0b3IzO1xuICAgIH07XG4gICAgZmxvb3JJbmZvOiB7XG4gICAgICBpZDogc3RyaW5nO1xuICAgICAgc2VxdWVuY2U6IG51bWJlcjtcbiAgICB9O1xuICAgIHNpemU6IFZlY3RvcjM7XG4gICAgY2VudGVyOiBWZWN0b3IzO1xuICB9O1xuICBleHBvcnQgdHlwZSBDdXJyZW50Um9vbXMgPSB7XG4gICAgcm9vbXM6IFJvb20uUm9vbURhdGFbXTtcbiAgfTtcblxuICBleHBvcnQgZGVjbGFyZSBuYW1lc3BhY2UgQ29udmVyc2lvbiB7XG4gICAgLyoqXG4gICAgICogR2VuZXJhdGUgYSBtYXAgYmV0d2VlbiB2MiBJRHMgYW5kIHYxIElEc1xuICAgICAqXG4gICAgICogVGhpcyBtZXRob2Qgd2lsbCBoZWxwIHdpdGggbWlncmF0aW9uIGJldHdlZW4gSURzIHVzZWQgZm9yIHJvb21zLlxuICAgICAqXG4gICAgICogYGBgXG4gICAgICogY29uc3QgbWFwcGluZyA9IGF3YWl0IG1wU2RrLlJvb20uQ29udmVyc2lvbi5jcmVhdGVJZE1hcCgpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHBhcmFtIGludmVydD86IGJvb2xlYW4gLSBpZiBwYXNzZWQsIHJldHVybiBtYXAgb2YgdjEtPnYyIGluc3RlYWRcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBjcmVhdGVJZE1hcChpbnZlcnQ/OiBib29sZWFuKTogUHJvbWlzZTxEaWN0aW9uYXJ5PHN0cmluZz4+O1xuICB9XG5cbiAgLyoqXG4gICAqIEBoaWRkZW5cbiAgICogQGludGVybmFsXG4gICAqL1xuICBleHBvcnQgZGVjbGFyZSBuYW1lc3BhY2UgQm91bmRzIHtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gb24/OiBib29sZWFuIC0gV2hldGhlciBvciBub3QgdGhlIHJvb20gZGltZW5zaW9ucyBhcmUgYWx3YXlzIHZpc2libGVcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBmb3JjZVJvb21EaW1lbnNpb25WaXNpYmlsaXR5KG9uPzogYm9vbGVhbik6IFByb21pc2U8dm9pZD47XG4gIH1cbn1cblxuZXhwb3J0IGludGVyZmFjZSBSb29tIHtcbiAgQ29udmVyc2lvbjogdHlwZW9mIFJvb20uQ29udmVyc2lvbjtcblxuICAvKipcbiAgICogQGhpZGRlblxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIEJvdW5kczogdHlwZW9mIFJvb20uQm91bmRzO1xuXG4gIC8qKlxuICAgKiBBbiBvYnNlcnZhYmxlIHRvIGRldGVybWluZSB3aGljaCByb29tcyB0aGUgcGxheWVyJ3MgY2FtZXJhIGlzIGN1cnJlbnRseSBpbi5cbiAgICpcbiAgICogSWYgdGhlIGNhbWVyYSBpcyBpbiBhIGxvY2F0aW9uIGJldHdlZW4gcm9vbXMsIG9yIHNvbWVod2VyZSB3aGVyZSBvdXIgcm9vbSBib3VuZHMgb3ZlcmxhcCwgdGhlIGByb29tc2AgYXJyYXkgd2lsbCBjb250YWluIGJvdGggKG9yIG1vcmUpIHJvb21zLlxuICAgKiBJZiB0aGUgY2FtZXJhIGlzIGluIGEgbW9kZSBvdGhlciB0aGFuIGBJTlNJREVgLCB0aGUgYHJvb21zYCBhcnJheSBtYXkgYmUgZW1wdHkuXG4gICAqIElmIHRoZSBjYW1lcmEgaXMgaW4gYW4gdW5hbGlnbmVkIHN3ZWVwLCB0aGUgYHJvb21zYCBhcnJheSB3aWxsIGJlIGVtcHR5LlxuICAgKlxuICAgKiBgYGBcbiAgICogbXBTZGsuUm9vbS5jdXJyZW50LnN1YnNjcmliZShmdW5jdGlvbiAoY3VycmVudFJvb21zKSB7XG4gICAqICAgaWYgKGN1cnJlbnRSb29tcy5yb29tcy5sZW5ndGggPiAwKSB7XG4gICAqICAgICBjb25zb2xlLmxvZygnY3VycmVudGx5IGluJywgY3VycmVudFJvb21zLnJvb21zLmxlbmd0aCwgJ3Jvb21zJyk7XG4gICAqICAgfSBlbHNlIHtcbiAgICogICAgIGNvbnNvbGUubG9nKCdOb3QgY3VycmVudGx5IGluc2lkZSBhbnkgcm9vbXMnKTtcbiAgICogICB9XG4gICAqIH0pO1xuICAgKiBgYGBcbiAgICovXG4gIGN1cnJlbnQ6IElPYnNlcnZhYmxlPFJvb20uQ3VycmVudFJvb21zPjtcblxuICAvKipcbiAgICogQW4gb2JzZXJ2YWJsZSBjb2xsZWN0aW9uIG9mIFJvb20gZGF0YSB0aGF0IGNhbiBiZSBzdWJzY3JpYmVkIHRvLlxuICAgKlxuICAgKiBTZWUgW1tJT2JzZXJ2YWJsZU1hcF1dIHRvIGxlYXJuIGhvdyB0byByZWNlaXZlIGRhdGEgZnJvbSB0aGUgY29sbGVjdGlvbi5cbiAgICpcbiAgICogYGBgXG4gICAqIG1wU2RrLlJvb20uZGF0YS5zdWJzY3JpYmUoe1xuICAgKiAgIG9uQ29sbGVjdGlvblVwZGF0ZWQ6IGZ1bmN0aW9uIChjb2xsZWN0aW9uKSB7XG4gICAqICAgICBjb25zb2xlLmxvZygnQ29sbGVjdGlvbiByZWNlaXZlZC4gVGhlcmUgYXJlICcsIE9iamVjdC5rZXlzKGNvbGxlY3Rpb24pLmxlbmd0aCwgJ3Jvb21zIGluIHRoZSBjb2xsZWN0aW9uJyk7XG4gICAqICAgfVxuICAgKiB9KTtcbiAgICogYGBgXG4gICAqL1xuICBkYXRhOiBJT2JzZXJ2YWJsZU1hcDxSb29tLlJvb21EYXRhPjtcbn1cbiIsImltcG9ydCB0eXBlIHsgVmVjdG9yMywgSVN1YnNjcmlwdGlvbiwgSU9ic2VydmFibGUsIE9yaWVudGF0aW9uLCBJT2JzZXJ2ZXIsIE9ic2VydmVyQ2FsbGJhY2sgfSBmcm9tICcuL2dsb2JhbCc7XG5cbi8qKlxuICogT3VyIFNlbnNvciBzeXN0ZW0gYWxsb3dzIGZvciBnZW5lcmF0aW5nIHNwYXRpYWwgcXVlcmllcyB0byB1bmRlcnN0YW5kIGEgTWF0dGVycG9ydCBkaWdpdGFsIHR3aW4uXG4gKiBCeSB1dGlsaXppbmcgYW5kIHNldHRpbmcgdXAgU291cmNlcyBhcm91bmQgdGhlIHNjZW5lLCBzb21lIHF1ZXN0aW9ucyB0aGF0IGNhbiBiZSBhbnN3ZXJlZCBhcmU6XG4gKiAtIFwid2hhdCB0aGluZ3MgYXJlIGN1cnJlbnRseSB2aXNpYmxlIG9uIHNjcmVlbj9cIlxuICogLSBcIndoYXQgdGhpbmdzIGFyZSBuZWFyIG1lP1wiXG4gKlxuICogd2hlcmUgXCJ0aGluZ3NcIiBjYW4gYmUgTWF0dGVydGFnIHBvc3RzLCBzd2VlcHMsIGFyYml0cmFyeSBsb2NhdGlvbnMgKHRoYXQgeW91IGNob29zZSksIG9yIGFueSBjb21iaW5hdGlvbiBvZiB0aG9zZS5cbiAqL1xuZXhwb3J0IG5hbWVzcGFjZSBTZW5zb3Ige1xuICBleHBvcnQgZW51bSBTZW5zb3JUeXBlIHtcbiAgICBDQU1FUkEgPSAnc2Vuc29yLnNlbnNvcnR5cGUuY2FtZXJhJyxcbiAgfVxuXG4gIGV4cG9ydCBlbnVtIFNvdXJjZVR5cGUge1xuICAgIFNQSEVSRSAgID0gJ3NlbnNvci5zb3VyY2V0eXBlLnNwaGVyZScsXG4gICAgQk9YICAgICAgPSAnc2Vuc29yLnNvdXJjZXR5cGUuYm94JyxcbiAgICBDWUxJTkRFUiA9ICdzZW5zb3Iuc291cmNldHlwZS5jeWxpbmRlcicsXG4gIH1cblxuICAvKipcbiAgICogQSBTZW5zb3IgdGhhdCBkZXRlY3RzIFNvdXJjZXMgYW5kIHByb3ZpZGVzIGluZm9ybWF0aW9uIGFib3V0IHRoZSByZWFkaW5nIG9mIGVhY2guXG4gICAqL1xuICBleHBvcnQgaW50ZXJmYWNlIElTZW5zb3IgZXh0ZW5kcyBJT2JzZXJ2YWJsZTxJU2Vuc29yPiB7XG4gICAgLyoqIFRoZSB3b3JsZC1zcGFjZSBwb3NpdGlvbiBvZiB0aGUgc2Vuc29yLiAqL1xuICAgIG9yaWdpbjogVmVjdG9yMztcbiAgICAvKiogVGhlIHdvcmxkLXNwYWNlIFwiZm9yd2FyZFwiIGRpcmVjdGlvbiBkZXNjcmliaW5nIHdoaWNoIGRpcmVjdGlvbiB0aGUgc2Vuc29yIGlzIGZhY2luZy4gKi9cbiAgICBmb3J3YXJkOiBWZWN0b3IzO1xuICAgIC8qKlxuICAgICAqIEFkZCBhIHNvdXJjZSwgdG8gYWRkIGl0cyByZWFkaW5ncyB0byB0aGUgc2V0IG9mIHJlYWRpbmdzIHByb3ZpZGVkIGJ5IGAuc3Vic2NyaWJlYC5cbiAgICAgKiBAcGFyYW0gc291cmNlc1xuICAgICAqL1xuICAgIGFkZFNvdXJjZSguLi5zb3VyY2VzOiBJU291cmNlW10pOiB2b2lkO1xuXG4gICAgLyoqXG4gICAgICogU3RhcnQgcmVjZWl2aW5nIHVwZGF0ZXMgd2hlbiBwcm9wZXJ0aWVzIG9mIHRoaXMgc2Vuc29yIGNoYW5nZSwgZS5nLiBgb3JpZ2luYCBvciBgZm9yd2FyZGAsIG5vdCBpdHMgYHJlYWRpbmdzYC48YnI+XG4gICAgICogU3Vic2NyaWJlIHRvIGByZWFkaW5nc2AgdG8gcmVjZWl2ZSB1cGRhdGVzIGFib3V0IGFzc29jaWF0ZWQgYElTb3VyY2VzYFxuICAgICAqL1xuICAgIHN1YnNjcmliZTxEYXRhVD4ob2JzZXJ2ZXI6IElPYnNlcnZlcjxEYXRhVD4gfCBPYnNlcnZlckNhbGxiYWNrPERhdGFUPik6IElTdWJzY3JpcHRpb247XG5cbiAgICAvKipcbiAgICAgKiBBbiBvYnNlcnZhYmxlIHVzZWQgdG8gZ2V0IGluZm9ybWF0aW9uIGFib3V0IGFzc29jYXRlZCBgSVNvdXJjZXNgIGFkZGVkIHdpdGggW1tJU2Vuc29yLmFkZFNvdXJjZV1dXG4gICAgICovXG4gICAgcmVhZGluZ3M6IHtcbiAgICAgIC8qKlxuICAgICAgICogU3RhcnQgcmVjZWl2aW5nIHVwZGF0ZXMgYWJvdXQgdGhlIGN1cnJlbnQgc2V0IG9mIHNvdXJjZXMgYWRkZWQgdG8gdGhpcyBzZW5zb3IuXG4gICAgICAgKiBAcGFyYW0gb2JzZXJ2ZXJcbiAgICAgICAqL1xuICAgICAgc3Vic2NyaWJlKG9ic2VydmVyOiBJU2Vuc29yT2JzZXJ2ZXIpOiBJU3Vic2NyaXB0aW9uO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNob3cgZGVidWcgdmlzdWFscyBmb3IgdGhpcyBzZW5zb3IuIEV4aXN0aW5nIHZpc3VhbHMgYXJlIGRpc3Bvc2VkLlxuICAgICAqIEBwYXJhbSBzaG93XG4gICAgICovXG4gICAgc2hvd0RlYnVnKHNob3c6IGJvb2xlYW4pOiB2b2lkO1xuXG4gICAgLyoqXG4gICAgICogVGVhcmRvd24gYW5kIGNsZWFudXAgdGhlIHNlbnNvciwgYW5kIHN0b3AgcmVjZWl2aW5nIHVwZGF0ZXMuXG4gICAgICovXG4gICAgZGlzcG9zZSgpOiB2b2lkO1xuICB9XG5cbiAgZXhwb3J0IHR5cGUgVm9sdW1lID0gU3BoZXJlVm9sdW1lIHwgQm94Vm9sdW1lIHwgQ3lsaW5kZXJWb2x1bWU7XG5cbiAgZXhwb3J0IHR5cGUgU3BoZXJlVm9sdW1lID0ge1xuICAgIC8qKiBUaGUgb3JpZ2luIG9mIHRoZSBzcGhlcmUuICovXG4gICAgb3JpZ2luOiBWZWN0b3IzO1xuICAgIC8qKiBUaGUgZGlzdGFuY2UgZnJvbSBvcmlnaW4gb2YgdGhlIHNwaGVyZSB2b2x1bWUuICovXG4gICAgcmFkaXVzOiBudW1iZXI7XG4gIH07XG5cbiAgZXhwb3J0IHR5cGUgQm94Vm9sdW1lID0ge1xuICAgIC8qKiBUaGUgY2VudGVyIHBvc2l0aW9uIG9mIHRoZSBib3guICovXG4gICAgY2VudGVyOiBWZWN0b3IzO1xuICAgIC8qKiBUaGUgbGVuZ3RoLCB3aWR0aCwgYW5kIGRlcHRoIG9mIHRoZSBib3ggdm9sdW1lLiAqL1xuICAgIHNpemU6IFZlY3RvcjM7XG4gICAgLyoqIFRoZSBvcmllbnRhdGlvbiBvZiB0aGUgYm94LiBUaGUgcm90YXRpb25zIGFyZSBhcHBsaWVkIGluIHlhdywgcGl0Y2gsIHRoZW4gcm9sbCBvcmRlci4gKi9cbiAgICBvcmllbnRhdGlvbjogT3JpZW50YXRpb247XG4gIH07XG5cbiAgZXhwb3J0IHR5cGUgQ3lsaW5kZXJWb2x1bWUgPSB7XG4gICAgLyoqIFRoZSBwb2ludCB3aGljaCBkZWZpbmVzIHRoZSBwb3NpdGlvbiAoYmFzZSkgZnJvbSB3aGljaCB0aGUgaGVpZ2h0IGluIHRoZSArWSwgYW5kIHJhZGl1cyBpbiB0aGUgWFotcGxhbmUgYXJlIHJlbGF0aXZlIHRvLiAqL1xuICAgIGJhc2VQb2ludDogVmVjdG9yMztcbiAgICAvKiogVGhlIGhlaWdodCBvZiB0aGUgY3lsaW5kZXIuICovXG4gICAgaGVpZ2h0OiBudW1iZXI7XG4gICAgLyoqIFRoZSByYWRpdXMgb2YgdGhlIGN5bGluZGVyLiAqL1xuICAgIHJhZGl1czogbnVtYmVyO1xuICB9O1xuXG4gIC8qKlxuICAgKiBBIFNvdXJjZSByZXByZXNlbnRzIGEgdm9sdW1lIHRoYXQgd2lsbCBiZSBkZXRlY3RlZCBieSBhIFNlbnNvci5cbiAgICpcbiAgICogVGhlIHR5cGUgb2YgdGhlIHNvdXJjZSwgZGVzY3JpYmVzIHRoZSB0eXBlIG9mIHZvbHVtZSBhc3NvY2lhdGVkIHdpdGggaXQuXG4gICAqXG4gICAqIEZvciBleGFtcGxlLCB3aXRoIGEgYHR5cGVgIG9mIGBTb3VyY2VUeXBlLlNQSEVSRWAgdGhlIGB2b2x1bWVgIGlzIGEgYFNwaGVyZVZvbHVtZWA7IGEgYFNvdXJjZVR5cGUuQk9YYCBoYXMgYSBgQm94Vm9sdW1lYC5cbiAgICogQHBhcmFtIFZvbHVtZVQgW1tTcGhlcmVWb2x1bWVdXSB8IFtbQm94Vm9sdW1lXV0gfCBbW0N5bGluZGVyVm9sdW1lXV1cbiAgICogQHBhcmFtIFVzZXJEYXRhIEFyYml0cmFyeSBkYXRhIHRvIGFzc29jaWF0ZSB3aXRoIHRoZSBTb3VyY2UuXG4gICAqL1xuICBleHBvcnQgaW50ZXJmYWNlIElTb3VyY2U8Vm9sdW1lVCA9IFNwaGVyZVZvbHVtZSB8IEJveFZvbHVtZSB8IEN5bGluZGVyVm9sdW1lLCBVc2VyRGF0YVQgZXh0ZW5kcyBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPiA9IFJlY29yZDxzdHJpbmcsIHVua25vd24+PiB7XG4gICAgLyoqIFRoZSB0eXBlIG9mIHNvdXJjZS4gKi9cbiAgICB0eXBlOiBTb3VyY2VUeXBlO1xuICAgIC8qKiBUaGUgdm9sdW1lIHRoYXQgcmVwcmVzZW50cyB0aGUgcmFuZ2Ugb2YgZW1pc3Npb25zIGZyb20gdGhpcyBgSVNvdXJjZWAuIFNlZSBbW1ZvbHVtZV1dLiAqL1xuICAgIHZvbHVtZTogVm9sdW1lVDtcbiAgICAvKiogQXJiaXRyYXJ5IGRhdGEgdGhhdCBjYW4gYmUgdXNlZCB0byBzZXQgYWRkaXRpb25hbCBtZXRhZGF0YSwgZm9yIGV4YW1wbGUuICovXG4gICAgdXNlckRhdGE6IFVzZXJEYXRhVDtcbiAgICAvKipcbiAgICAgKiBMZXQgdGhlIHNlbnNvciBzeXN0ZW0ga25vdyB0aGVyZSBpcyBhbiB1cGRhdGUgdG8gdGhpcyBgSVNvdXJjZWAuPGJyPlxuICAgICAqIFdoZW4gY2hhbmdpbmcgYW55IHByb3BlcnRpZXMgb24gYHZvbHVtZWAsIG5vIGNoYW5nZXMgd2lsbCBiZSByZWZsZWN0ZWQgb24gdGhlIHNvdXJjZSBvciBpbiBTaG93Y2FzZSB1bnRpbCBgY29tbWl0YCBpcyBjYWxsZWQuXG4gICAgICovXG4gICAgY29tbWl0KCk6IFByb21pc2U8dm9pZD47XG4gIH1cblxuICAvKipcbiAgICogQSBzcGVjaWFsaXplZCBbW0lNYXBPYnNlcnZlcl1dIHdoaWNoIG1hcHMgYW4gYElTb3VyY2VgIHRvIGl0cyBjdXJyZW50IGBTZW5zb3JSZWFkaW5nYC5cbiAgICovXG4gIGV4cG9ydCBpbnRlcmZhY2UgSVNlbnNvck9ic2VydmVyIHtcbiAgICAvKiogQ2FsbGVkIHdoZW4gYSB0aGUgZmlyc3QgYHJlYWRpbmdgIGlzIGFkZGVkIGZyb20gYHNvdXJjZWAuICovXG4gICAgb25BZGRlZD8gIChzb3VyY2U6IElTb3VyY2UsIHJlYWRpbmc6IFNlbnNvclJlYWRpbmcsIGNvbGxlY3Rpb246IE1hcDxJU291cmNlLCBTZW5zb3JSZWFkaW5nPik6IHZvaWQ7XG4gICAgLyoqIENhbGxlZCB3aGVuIGBzb3VyY2VgIGFuZCBpdHMgYHJlYWRpbmdgIGlzIHJlbW92ZWQuICovXG4gICAgb25SZW1vdmVkPyhzb3VyY2U6IElTb3VyY2UsIHJlYWRpbmc6IFNlbnNvclJlYWRpbmcsIGNvbGxlY3Rpb246IE1hcDxJU291cmNlLCBTZW5zb3JSZWFkaW5nPik6IHZvaWQ7XG4gICAgLyoqIENhbGxlZCB3aGVuIGFuIGV4aXN0aW5nIGByZWFkaW5nYCBpcyBhbHRlcmVkIGZyb20gYHNvdXJjZWAuICovXG4gICAgb25VcGRhdGVkPyhzb3VyY2U6IElTb3VyY2UsIHJlYWRpbmc6IFNlbnNvclJlYWRpbmcsIGNvbGxlY3Rpb246IE1hcDxJU291cmNlLCBTZW5zb3JSZWFkaW5nPik6IHZvaWQ7XG4gICAgLyoqIENhbGxlZCB3aGVuIGEgc2V0IG9mIGNoYW5nZXMgaGFwcGVucyB3aXRoaW4gdGhlIGBjb2xsZWN0aW9uYC4gKi9cbiAgICBvbkNvbGxlY3Rpb25VcGRhdGVkPyhjb2xsZWN0aW9uOiBNYXA8SVNvdXJjZSwgU2Vuc29yUmVhZGluZz4pOiB2b2lkO1xuICB9XG5cbiAgLyoqXG4gICAqIEluZm9ybWF0aW9uIGFib3V0IHRoZSBTb3VyY2UgYXMgcmVhZCBieSB0aGUgU2Vuc29yLlxuICAgKi9cbiAgZXhwb3J0IHR5cGUgU2Vuc29yUmVhZGluZyA9IHtcbiAgICAvKiogVGhlIHNlbnNvciBpcyBjdXJyZW50bHkgd2l0aGluIHRoZSBicm9hZGNhc3QgcmFuZ2Ugb2YgdGhlIHNvdXJjZS4gKi9cbiAgICBpblJhbmdlOiBib29sZWFuO1xuICAgIC8qKiBUaGUgc2Vuc29yIGlzIHdpdGhpbiB0aGUgc291cmNlJ3MgYnJvYWRjYXN0IHJhbmdlIGFuZCB0aGUgc2Vuc29yIGhhcyBjbGVhciBsaW5lIG9mIHNpZ2h0IHRvIHRoZSBzb3VyY2UuICovXG4gICAgaW5WaWV3OiBib29sZWFuO1xuICAgIC8qKiBUaGUgZGlzdGFuY2UgYmV0d2VlbiB0aGUgc2Vuc29yIGFuZCB0aGUgc291cmNlLiAqL1xuICAgIGRpc3RhbmNlOiBudW1iZXI7XG4gICAgLyoqIFRoZSBzcXVhcmVkIGRpc3RhbmNlIGZyb20gdGhlIHNlbnNvciB0byB0aGUgc291cmNlLiAqL1xuICAgIGRpc3RhbmNlU3F1YXJlZDogbnVtYmVyO1xuICAgIC8qKiBUaGUgd29ybGQtc3BhY2UgZGlyZWN0aW9uIGZyb20gdGhlIHNlbnNvciB0byB0aGUgc291cmNlLiAqL1xuICAgIGRpcmVjdGlvbjogVmVjdG9yMztcbiAgfTtcblxuICAvKipcbiAgICogQWRkaXRpb25hbCBgdXNlckRhdGFgIHRvIGFzc29jaWF0ZSB3aXRoIGFuIGBJU291cmNlYCB3aGVuIGNyZWF0aW5nIGl0LlxuICAgKiBUaGlzIGlzIGEgZnJlZSBkaWN0aW9uYXJ5IHRoYXQgY2FuIGNvbnRhaW4gYW55IGtleS92YWx1ZXMgZGVlbWVkIG5lY2Vzc2FyeS5cbiAgICovXG4gIGV4cG9ydCB0eXBlIFNvdXJjZU9wdGlvbnM8VXNlckRhdGEgZXh0ZW5kcyBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPiA9IFJlY29yZDxzdHJpbmcsIHVua25vd24+PiA9IHtcbiAgICB1c2VyRGF0YTogVXNlckRhdGE7XG4gIH07XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2Vuc29yIHtcbiAgU2Vuc29yVHlwZTogdHlwZW9mIFNlbnNvci5TZW5zb3JUeXBlO1xuICBTb3VyY2VUeXBlOiB0eXBlb2YgU2Vuc29yLlNvdXJjZVR5cGU7XG4gIC8qKlxuICAgKiBDcmVhdGUgYW4gW1tgSVNlbnNvcmBdXSB3aGljaCBjYW4gc2Vuc2UgYW5kIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgW1tgSVNvdXJjZWBdXS5cbiAgICpcbiAgICogYGBgdHlwZXNjcmlwdFxuICAgKiBjb25zdCBzZW5zb3IgPSBhd2FpdCBtcFNkay5TZW5zb3IuY3JlYXRlU2Vuc29yKG1wU2RrLlNlbnNvci5TZW5zb3JUeXBlLkNBTUVSQSk7XG4gICAqIC8vIGFkZCBzb3VyY2VzIGZyb20gY2FsbHMgdG8gYFNlbnNvci5jcmVhdGVTb3VyY2UoKWBcbiAgICogc2Vuc29yLmFkZFNvdXJjZSguLi5zb3VyY2VzKTtcbiAgICogLy8gc3RhcnQgbGlzdGVuaW5nIGZvciBjaGFuZ2VzIHRvIHRoZSBzZW5zb3IncyByZWFkaW5nc1xuICAgKiBzZW5zb3IucmVhZGluZ3Muc3Vic2NyaWJlKHtcbiAgICogICBvbkFkZGVkKHNvdXJjZSwgcmVhZGluZykge1xuICAgKiAgICAgY29uc29sZS5sb2coc291cmNlLnVzZXJEYXRhLmlkLCAnaGFzIGEgcmVhZGluZyBvZicsIHJlYWRpbmcpO1xuICAgKiAgIH0sXG4gICAqICAgb25VcGRhdGVkKHNvdXJjZSwgcmVhZGluZykge1xuICAgKiAgICAgY29uc29sZS5sb2coc291cmNlLnVzZXJEYXRhLmlkLCAnaGFzIGFuIHVwZGF0ZWQgcmVhZGluZycpO1xuICAgKiAgICAgaWYgKHJlYWRpbmcuaW5SYW5nZSkge1xuICAgKiAgICAgICBjb25zb2xlLmxvZyhzb3VyY2UudXNlckRhdGEuaWQsICdpcyBjdXJyZW50bHkgaW4gcmFuZ2UnKTtcbiAgICogICAgICAgaWYgKHJlYWRpbmcuaW5WaWV3KSB7XG4gICAqICAgICAgICAgY29uc29sZS5sb2coJy4uLiBhbmQgY3VycmVudGx5IHZpc2libGUgb24gc2NyZWVuJyk7XG4gICAqICAgICAgIH1cbiAgICogICAgIH1cbiAgICogICB9XG4gICAqIH0pO1xuICAgKiBgYGBcbiAgICovXG4gIGNyZWF0ZVNlbnNvcih0eXBlOiBTZW5zb3IuU2Vuc29yVHlwZS5DQU1FUkEpOiBQcm9taXNlPFNlbnNvci5JU2Vuc29yPjtcblxuICAvKipcbiAgICogQ3JlYXRlIGEgc3BoZXJpY2FsIFtbYElTb3VyY2VgXV0gd2hpY2ggY2FuIGJlIHNlbnNlZCBieSBhbiBbW2BJU2Vuc29yYF1dLjxicj5cbiAgICogQSBzaGFsbG93IGNvcHkgb2YgYG9wdGlvbnMudXNlckRhdGFgIGlzIGFwcGxpZWQgdG8gdGhlIFNvdXJjZSB1cG9uIGNyZWF0aW9uLlxuICAgKlxuICAgKiBPbWl0dGluZyBgb3B0aW9ucy5vcmlnaW5gIHdpbGwgZGVmYXVsdCB0aGUgc291cmNlJ3MgYHZvbHVtZS5vcmlnaW5gIHRvIGB7IHg6IDAsIHk6IDAsIHo6IDAgfWAuPGJyPlxuICAgKiBPbWl0dGluZyBgb3B0aW9ucy5yYWRpdXNgIHdpbGwgZGVmYXVsdCB0aGUgc291cmNlJ3MgYHZvbHVtZS5yYWRpdXNgIHRvIGBJbmZpbml0eWAuXG4gICAqXG4gICAqIGBgYHR5cGVzY3JpcHRcbiAgICogY29uc3Qgc291cmNlczogQXJyYXk8U2Vuc29yLklTb3VyY2U8U2Vuc29yLlNwaGVyZVZvbHVtZSwgeyBpZDogc3RyaW5nIH0+PiA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICogICBtcFNkay5TZW5zb3IuY3JlYXRlU291cmNlKG1wU2RrLlNlbnNvci5Tb3VyY2VUeXBlLlNQSEVSRSwge1xuICAgKiAgICAgb3JpZ2luOiB7IHg6IDEsIHk6IDIsIHo6IDMgfSxcbiAgICogICAgIHJhZGl1czogMjAsXG4gICAqICAgICB1c2VyRGF0YToge1xuICAgKiAgICAgICBpZDogJ3NwaGVyZS1zb3VyY2UtMScsXG4gICAqICAgICB9LFxuICAgKiAgIH0pLFxuICAgKiAgIG1wU2RrLlNlbnNvci5jcmVhdGVTb3VyY2UobXBTZGsuU2Vuc29yLlNvdXJjZVR5cGUuU1BIRVJFLCB7XG4gICAqICAgICByYWRpdXM6IDQsXG4gICAqICAgICB1c2VyRGF0YToge1xuICAgKiAgICAgICBpZDogJ3NwaGVyZS1zb3VyY2UtMicsXG4gICAqICAgICB9LFxuICAgKiAgIH0pLFxuICAgKiBdKTtcbiAgICogLy8gYXR0YWNoIHRvIGEgc2Vuc29yIHByZXZpb3VzbHkgY3JlYXRlZCB3aXRoIGBTZW5zb3IuY3JlYXRlU2Vuc29yKClgXG4gICAqIHNlbnNvci5hZGRTb3VyY2UoLi4uc291cmNlcyk7XG4gICAqIGBgYFxuICAgKiBAcGFyYW0gb3B0aW9uc1xuICAgKi9cbiAgY3JlYXRlU291cmNlPFVzZXJEYXRhIGV4dGVuZHMgUmVjb3JkPHN0cmluZywgdW5rbm93bj4gPSBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPj4oXG4gICAgdHlwZTogU2Vuc29yLlNvdXJjZVR5cGUuU1BIRVJFLFxuICAgIG9wdGlvbnM6IFBhcnRpYWw8U2Vuc29yLlNwaGVyZVZvbHVtZSAmIFNlbnNvci5Tb3VyY2VPcHRpb25zPFVzZXJEYXRhPj4sXG4gICk6IFByb21pc2U8U2Vuc29yLklTb3VyY2U8U2Vuc29yLlNwaGVyZVZvbHVtZSwgVXNlckRhdGE+PjtcblxuICAvKipcbiAgICogQ3JlYXRlIGFuIGJveCBzaGFwZWQgW1tgSVNvdXJjZWBdXSB3aGljaCBjYW4gYmUgc2Vuc2VkIGJ5IGFuIFtbYElTZW5zb3JgXV0uPGJyPlxuICAgKiBBIHNoYWxsb3cgY29weSBvZiBgb3B0aW9ucy51c2VyRGF0YWAgaXMgYXBwbGllZCB0byB0aGUgU291cmNlIHVwb24gY3JlYXRpb24uXG4gICAqXG4gICAqIE9taXR0aW5nIGBvcHRpb25zLmNlbnRlcmAgd2lsbCBkZWZhdWx0IHRoZSBzb3VyY2UncyBgdm9sdW1lLmNlbnRlcmAgdG8gYHsgeDogMCwgeTogMCwgejogMCB9YC48YnI+XG4gICAqIE9taXR0aW5nIGBvcHRpb25zLnNpemVgIHdpbGwgZGVmYXVsdCB0aGUgc291cmNlJ3MgYHZvbHVtZS5zaXplYCB0byBgeyB4OiBJbmZpbml0eSwgeTogSW5maW5pdHksIHo6IEluZmluaXR5IH1gLlxuICAgKiBPbWl0dGluZyBgb3B0aW9ucy5vcmllbnRhdGlvbmAgd2lsbCBkZWZhdWx0IHRoZSBzb3VyY2UncyBgdm9sdW1lLm9yaWVudGF0aW5gIHRvIGB7IHlhdzogMCwgcGl0Y2g6IDAsIHJvbGw6IDAgfWAuXG4gICAqXG4gICAqIGBgYHR5cGVzY3JpcHRcbiAgICogY29uc3Qgc291cmNlczogQXJyYXk8U2Vuc29yLklTb3VyY2U8U2Vuc29yLkJveFZvbHVtZSwgeyBpZDogc3RyaW5nIH0+PiA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICogICBtcFNkay5TZW5zb3IuY3JlYXRlU291cmNlKG1wU2RrLlNlbnNvci5Tb3VyY2VUeXBlLkJPWCwge1xuICAgKiAgICAgY2VudGVyOiB7IHg6IDEsIHk6IDEsIHo6IDEgfSxcbiAgICogICAgIHNpemU6IHsgeDogMiwgeTogMSwgejogMiB9LFxuICAgKiAgICAgdXNlckRhdGE6IHtcbiAgICogICAgICAgaWQ6ICdib3gtc291cmNlLTEnLFxuICAgKiAgICAgfSxcbiAgICogICB9KSxcbiAgICogICBtcFNkay5TZW5zb3IuY3JlYXRlU291cmNlKG1wU2RrLlNlbnNvci5Tb3VyY2VUeXBlLkJPWCwge1xuICAgKiAgICAgc2l6ZTogeyB4OiAyOiB5OiAyLCB6OiAyIH0sXG4gICAqICAgICBvcmllbnRhdGlvbjogeyB5YXc6IDQ1LCBwaXRjaDogNDUsIHJvbGw6IDQ1IH0sXG4gICAqICAgICB1c2VyRGF0YToge1xuICAgKiAgICAgICBpZDogJ2JveC1zb3VyY2UtMicsXG4gICAqICAgICB9LFxuICAgKiAgIH0pLFxuICAgKiBdKTtcbiAgICogLy8gYXR0YWNoIHRvIGEgc2Vuc29yIHByZXZpb3VzbHkgY3JlYXRlZCB3aXRoIGBTZW5zb3IuY3JlYXRlU2Vuc29yKClgXG4gICAqIHNlbnNvci5hZGRTb3VyY2UoLi4uc291cmNlcyk7XG4gICAqIGBgYFxuICAgKiBAcGFyYW0gb3B0aW9uc1xuICAgKi9cbiAgY3JlYXRlU291cmNlPFVzZXJEYXRhIGV4dGVuZHMgUmVjb3JkPHN0cmluZywgdW5rbm93bj4gPSBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPj4oXG4gICAgdHlwZTogU2Vuc29yLlNvdXJjZVR5cGUuQk9YLFxuICAgIG9wdGlvbnM6IFBhcnRpYWw8U2Vuc29yLkJveFZvbHVtZSAmIFNlbnNvci5Tb3VyY2VPcHRpb25zPFVzZXJEYXRhPj4sXG4gICk6IFByb21pc2U8U2Vuc29yLklTb3VyY2U8U2Vuc29yLkJveFZvbHVtZSwgVXNlckRhdGE+PjtcblxuICAvKipcbiAgICogQ3JlYXRlIGEgY3lsaW5kcmljYWwgW1tgSVNvdXJjZWBdXSB3aGljaCBjYW4gYmUgc2Vuc2VkIGJ5IGFuIFtbYElTZW5zb3JgXV0uPGJyPlxuICAgKiBBIHNoYWxsb3cgY29weSBvZiBgb3B0aW9ucy51c2VyRGF0YWAgaXMgYXBwbGllZCB0byB0aGUgU291cmNlIHVwb24gY3JlYXRpb24uXG4gICAqXG4gICAqIE9taXR0aW5nIGBvcHRpb25zLmJhc2VQb2ludGAgd2lsbCBkZWZhdWx0IHRoZSBzb3VyY2UncyBgdm9sdW1lLmJhc2VQb2ludGAgdG8gYHsgeDogMCwgeTogMCwgejogMCB9YC48YnI+XG4gICAqIE9taXR0aW5nIGBvcHRpb25zLnJhZGl1c2Agd2lsbCBkZWZhdWx0IHRoZSBzb3VyY2UncyBgdm9sdW1lLnJhZGl1c2AgdG8gYEluZmluaXR5YC48YnI+XG4gICAqIE9taXR0aW5nIGBvcHRpb25zLmhlaWdodGAgd2lsbCBkZWZhdWx0IHRoZSBzb3VyY2UncyBgdm9sdW1lLmhlaWdodGAgdG8gYEluZmluaXR5YC5cbiAgICpcbiAgICogYGBgdHlwZXNjcmlwdFxuICAgKiBjb25zdCBzb3VyY2VzOiBBcnJheTxTZW5zb3IuSVNvdXJjZTxTZW5zb3IuQ3lsaW5kZXJWb2x1bWUsIHsgaWQ6IHN0cmluZyB9Pj4gPSBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAqICAgbXBTZGsuU2Vuc29yLmNyZWF0ZVNvdXJjZShtcFNkay5TZW5zb3IuU291cmNlVHlwZS5DWUxJTkRFUiwge1xuICAgKiAgICAgYmFzZVBvaW50OiB7IHg6IDAsIHk6IDAsIHo6IDAgfSxcbiAgICogICAgIHJhZGl1czogMixcbiAgICogICAgIGhlaWdodDogNSxcbiAgICogICAgIHVzZXJEYXRhOiB7XG4gICAqICAgICAgIGlkOiAnY3lsaW5kZXItc291cmNlLTEnLFxuICAgKiAgICAgfSxcbiAgICogICB9KSxcbiAgICogICBtcFNkay5TZW5zb3IuY3JlYXRlU291cmNlKG1wU2RrLlNlbnNvci5Tb3VyY2VUeXBlLkNZTElOREVSLCB7XG4gICAqICAgICBiYXNlUG9pbnQ6IHsgeDogMSwgeTogMiwgejogMyB9LFxuICAgKiAgICAgcmFkaXVzOiAzLFxuICAgKiAgICAgdXNlckRhdGE6IHtcbiAgICogICAgICAgaWQ6ICdjeWxpbmRlci1zb3VyY2UtMicsXG4gICAqICAgICB9LFxuICAgKiAgIH0pLFxuICAgKiBdKTtcbiAgICogLy8gYXR0YWNoIHRvIGEgc2Vuc29yIHByZXZpb3VzbHkgY3JlYXRlZCB3aXRoIGBTZW5zb3IuY3JlYXRlU2Vuc29yKClgXG4gICAqIHNlbnNvci5hZGRTb3VyY2UoLi4uc291cmNlcyk7XG4gICAqIGBgYFxuICAgKi9cbiAgY3JlYXRlU291cmNlPFVzZXJEYXRhIGV4dGVuZHMgUmVjb3JkPHN0cmluZywgdW5rbm93bj4gPSBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPj4oXG4gICAgdHlwZTogU2Vuc29yLlNvdXJjZVR5cGUuQ1lMSU5ERVIsXG4gICAgb3B0aW9uczogUGFydGlhbDxTZW5zb3IuQ3lsaW5kZXJWb2x1bWUgJiBTZW5zb3IuU291cmNlT3B0aW9uczxVc2VyRGF0YT4+LFxuICApOiBQcm9taXNlPFNlbnNvci5JU291cmNlPFNlbnNvci5DeWxpbmRlclZvbHVtZSwgVXNlckRhdGE+Pjtcbn1cblxuIiwiaW1wb3J0IHR5cGUgeyBSb3RhdGlvbiwgRXVsZXJBbmdsZSwgVmVjdG9yMywgSU9ic2VydmFibGUsIElPYnNlcnZhYmxlTWFwLCBEaWN0aW9uYXJ5IH0gZnJvbSAnLi9nbG9iYWwnO1xuaW1wb3J0IHR5cGUgeyBHcmFwaCB9IGZyb20gJy4vZ3JhcGgnO1xuXG5leHBvcnQgbmFtZXNwYWNlIFN3ZWVwIHtcbiAgZXhwb3J0IHR5cGUgU3dlZXBEYXRhID0ge1xuICAgIC8qKiBAZGVwcmVjYXRlZCBVc2UgW1tzaWRdXSBpbnN0ZWFkICovXG4gICAgdXVpZDogc3RyaW5nO1xuICAgIHNpZDogc3RyaW5nO1xuICAgIGFsaWdubWVudFR5cGU6IEFsaWdubWVudDtcbiAgICBwbGFjZW1lbnRUeXBlOiBQbGFjZW1lbnQ7XG4gICAgbmVpZ2hib3JzOiBzdHJpbmdbXTtcbiAgICBwb3NpdGlvbjogVmVjdG9yMztcbiAgICByb3RhdGlvbjogRXVsZXJBbmdsZTtcbiAgICBmbG9vcjogbnVtYmVyO1xuICB9O1xuXG4gIGV4cG9ydCB0eXBlIE9ic2VydmFibGVTd2VlcERhdGEgPSB7XG4gICAgLyoqIEBkZXByZWNhdGVkIFVzZSBbW2lkXV0gaW5zdGVhZCAqL1xuICAgIHV1aWQ6IHN0cmluZztcbiAgICAvKiogQGRlcHJlY2F0ZWQgVXNlIFtbaWRdXSBpbnN0ZWFkICovXG4gICAgc2lkOiBzdHJpbmc7XG4gICAgaWQ6IHN0cmluZztcbiAgICBlbmFibGVkOiBib29sZWFuO1xuICAgIGFsaWdubWVudFR5cGU6IEFsaWdubWVudDtcbiAgICBwbGFjZW1lbnRUeXBlOiBQbGFjZW1lbnQ7XG4gICAgbmVpZ2hib3JzOiBzdHJpbmdbXTtcbiAgICBwb3NpdGlvbjogVmVjdG9yMztcbiAgICByb3RhdGlvbjogRXVsZXJBbmdsZTtcbiAgICAvKipcbiAgICAgKiBUaGUgcG9zaXRpb24gb2YgdGhlIHN3ZWVwIHB1Y2sgYmVsb3cgdGhlIHBhbm9yYW1hLlxuICAgICAqL1xuICAgIHB1Y2tQb3NpdGlvbjogVmVjdG9yMztcbiAgICBmbG9vckluZm86IFN3ZWVwRmxvb3JJbmZvIHwgRW1wdHlTd2VlcEZsb29ySW5mbztcbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIHJvb21JbmZvOiBTd2VlcFJvb21JbmZvO1xuICB9O1xuXG4gIC8qKiBAaGlkZGVuICovXG4gIGV4cG9ydCB0eXBlIFN3ZWVwUm9vbUluZm8gPSB7XG4gICAgaWQ6IHN0cmluZyB8IHVuZGVmaW5lZDtcbiAgfTtcblxuICBleHBvcnQgdHlwZSBTd2VlcEZsb29ySW5mbyA9IHtcbiAgICBpZDogc3RyaW5nO1xuICAgIHNlcXVlbmNlOiBudW1iZXI7XG4gIH07XG5cbiAgZXhwb3J0IHR5cGUgRW1wdHlTd2VlcEZsb29ySW5mbyA9IHtcbiAgICBpZDogdW5kZWZpbmVkO1xuICAgIHNlcXVlbmNlOiB1bmRlZmluZWQ7XG4gIH07XG5cbiAgLyoqXG4gICAqIGByb3RhdGlvbi54YDogaXMgdGhlIGFtb3VudCB0aGUgY2FtZXJhIHdpbGwgcm90YXRlIHVwL2Rvd24sIGluIHRoZSByYW5nZSBiZXR3ZWVuIFstOTDigKY5MF1cbiAgICogd2l0aCAtOTAgYmVpbmcgc3RyYWlnaHQgZG93biBhbmQgOTAgYmVpbmcgc3RyYWlnaHQgdXAsIDQ1IHdvdWxkIGJlIGxvb2tpbmcgdXAgYXQgYSA0NSBkZWdyZWUgYW5nbGUuLCAtNDUgZG93biBldGMuLlxuICAgKiBgcm90YXRpb24ueWA6IGlzIHRoZSBhbW91bnQgdGhlIGNhbWVyYSByb3RhdGUgYXJvdW5kIGhvcml6b250YWxseSwgYmV0d2VlbiBbLTM2MOKApjDigKYzNjBdLFxuICAgKiBuZWdhdGl2ZSB2YWx1ZXMgdG8gcm90YXRlIHRvIHRoZSBsZWZ0LCBwb3NpdGl2ZSB0byByb3RhdGUgdG8gdGhlIHJpZ2h0LlxuICAgKlxuICAgKiBOb3RlOiBUaGUgcm90YXRpb24gdGhhdCBTd2VlcC5tb3ZlVG8gdXNlcyBmb3IgaW5wdXQgaXMgdGhlIHNhbWUgcm90YXRpb24gdGhhdCB3aWxsIGdldCByZXR1cm5lZCBmcm9tIHRoZSBbW0NhbWVyYS5wb3NlXV0gcHJvcGVydHkuXG4gICAqXG4gICAqIGBgYFxuICAgKiBjb25zdCBjYWNoZWRQb3NlID0gbnVsbDtcbiAgICogbXBTZGsuQ2FtZXJhLnBvc2Uuc3Vic2NyaWJlKGZ1bmN0aW9uIChwb3NlKSB7XG4gICAqICAgY2FjaGVkUG9zZSA9IHBvc2U7XG4gICAqIH0pXG4gICAqXG4gICAqIC8vIElmIHRoZSBwb3NlIGlzIHJldHVybmVkIGltbWVkaWF0ZWx5LlxuICAgKiBjb25zb2xlLmxvZyhjYWNoZWRQb3NlLnJvdGF0aW9uKTtcbiAgICogYGBgXG4gICAqL1xuICBleHBvcnQgdHlwZSBNb3ZlVG9PcHRpb25zID0ge1xuICAgIHJvdGF0aW9uPzogUm90YXRpb247XG4gICAgdHJhbnNpdGlvbj86IFRyYW5zaXRpb247XG4gICAgLyoqXG4gICAgICogVG90YWwgdHJhbnNpdGlvbiB0aW1lIGluIG1pbGxpc2Vjb25kcy5cbiAgICAgKi9cbiAgICB0cmFuc2l0aW9uVGltZT86IG51bWJlcjtcbiAgfVxuXG4gIGV4cG9ydCBlbnVtIEV2ZW50IHtcbiAgICAvKipcbiAgICAgKiBAZXZlbnRcbiAgICAgKi9cbiAgICBFTlRFUiA9ICdzd2VlcC5lbnRlcicsXG4gICAgRVhJVCAgPSAnc3dlZXAuZXhpdCcsXG4gIH1cblxuICBleHBvcnQgZW51bSBUcmFuc2l0aW9uIHtcbiAgICBJTlNUQU5UID0gJ3RyYW5zaXRpb24uaW5zdGFudCcsXG4gICAgRkxZICAgICA9ICd0cmFuc2l0aW9uLmZseScsXG4gICAgRkFERU9VVCA9ICd0cmFuc2l0aW9uLmZhZGUnLFxuICB9XG4gIGV4cG9ydCBlbnVtIEFsaWdubWVudCB7XG4gICAgQUxJR05FRCA9ICAgJ2FsaWduZWQnLFxuICAgIFVOQUxJR05FRCA9ICd1bmFsaWduZWQnLFxuICB9XG4gIGV4cG9ydCBlbnVtIFBsYWNlbWVudCB7XG4gICAgVU5QTEFDRUQgPSAndW5wbGFjZWQnLFxuICAgIEFVVE8gPSAgICAgJ2F1dG8nLFxuICAgIE1BTlVBTCA9ICAgJ21hbnVhbCcsXG4gIH1cbiAgZXhwb3J0IGRlY2xhcmUgbmFtZXNwYWNlIENvbnZlcnNpb24ge1xuICAgIC8qKlxuICAgICAqIEdlbmVyYXRlIGEgbWFwIGJldHdlZW4gdjIgSURzIGFuZCB2MSBJRHNcbiAgICAgKlxuICAgICAqIFRoaXMgbWV0aG9kIHdpbGwgaGVscCB3aXRoIG1pZ3JhdGlvbiBiZXR3ZWVuIElEcyB1c2VkIGZvciBzd2VlcHMuXG4gICAgICpcbiAgICAgKiBgYGBcbiAgICAgKiBjb25zdCBtYXBwaW5nID0gYXdhaXQgbXBTZGsuU3dlZXAuQ29udmVyc2lvbi5jcmVhdGVJZE1hcCgpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHBhcmFtIGludmVydD86IGJvb2xlYW4gLSBpZiBwYXNzZWQsIHJldHVybiBtYXAgb2YgdjEtPnYyIGluc3RlYWRcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBjcmVhdGVJZE1hcChpbnZlcnQ/OiBib29sZWFuKTogUHJvbWlzZTxEaWN0aW9uYXJ5PHN0cmluZz4+O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJuIHRoZSBsYWJlbCBhc3NvY2lhdGVkIHdpdGggdGhlIHByb3ZpZGVkIHN3ZWVwIElEXG4gICAgICpcbiAgICAgKiBUaGUgbGFiZWwgaXMgd2hhdCdzIGRpc3BsYXllZCBmb3IgdGhlIHN3ZWVwIGluIHRoZSB3b3Jrc2hvcFxuICAgICAqXG4gICAgICogYGBgXG4gICAgICogY29uc3QgbGFiZWwgPSBtcFNkay5Td2VlcC5Db252ZXJzaW9uLmdldExhYmVsRnJvbUlkKCdhYmNkZWZnaGlqa2xtbm8wMTIzNDU2Nzg5Jyk7XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAcGFyYW0gaWRcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBnZXRMYWJlbEZyb21JZChpZDogc3RyaW5nKTogUHJvbWlzZTxzdHJpbmc+O1xuICB9XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3dlZXAge1xuICBFdmVudDogdHlwZW9mIFN3ZWVwLkV2ZW50O1xuICBUcmFuc2l0aW9uOiB0eXBlb2YgU3dlZXAuVHJhbnNpdGlvbjtcbiAgQWxpZ25tZW50OiB0eXBlb2YgU3dlZXAuQWxpZ25tZW50O1xuICBQbGFjZW1lbnQ6IHR5cGVvZiBTd2VlcC5QbGFjZW1lbnQ7XG4gIENvbnZlcnNpb246IHR5cGVvZiBTd2VlcC5Db252ZXJzaW9uO1xuXG4gIC8qKlxuICAgKiBBbiBvYnNlcnZhYmxlIGNvbGxlY3Rpb24gb2Ygc3dlZXAgZGF0YSB0aGF0IGNhbiBiZSBzdWJzY3JpYmVkIHRvLlxuICAgKlxuICAgKiBXaGVuIGZpcnN0IHN1YnNjcmliaW5nLCB0aGUgY3VycmVudCBzZXQgb2YgU3dlZXBzIHdpbGwgY2FsbCB0aGUgb2JzZXJ2ZXIncyBgb25BZGRlZGAgZm9yIGVhY2ggU3dlZXAgYXMgdGhlIGRhdGEgYmVjb21lcyBhdmFpbGFibGUuXG4gICpcbiAgICogYGBgXG4gICAqIG1wU2RrLlN3ZWVwLmRhdGEuc3Vic2NyaWJlKHtcbiAgICogICBvbkFkZGVkOiBmdW5jdGlvbiAoaW5kZXgsIGl0ZW0sIGNvbGxlY3Rpb24pIHtcbiAgICogICAgIGNvbnNvbGUubG9nKCdzd2VlcCBhZGRlZCB0byB0aGUgY29sbGVjdGlvbicsIGluZGV4LCBpdGVtLCBjb2xsZWN0aW9uKTtcbiAgICogICB9LFxuICAgKiAgIG9uUmVtb3ZlZDogZnVuY3Rpb24gKGluZGV4LCBpdGVtLCBjb2xsZWN0aW9uKSB7XG4gICAqICAgICBjb25zb2xlLmxvZygnc3dlZXAgcmVtb3ZlZCBmcm9tIHRoZSBjb2xsZWN0aW9uJywgaW5kZXgsIGl0ZW0sIGNvbGxlY3Rpb24pO1xuICAgKiAgIH0sXG4gICAqICAgb25VcGRhdGVkOiBmdW5jdGlvbiAoaW5kZXgsIGl0ZW0sIGNvbGxlY3Rpb24pIHtcbiAgICogICAgIGNvbnNvbGUubG9nKCdzd2VlcCB1cGRhdGVkIGluIHBsYWNlIGluIHRoZSBjb2xsZWN0aW9uJywgaW5kZXgsIGl0ZW0sIGNvbGxlY3Rpb24pO1xuICAgKiAgIH0sXG4gICAqICAgb25Db2xsZWN0aW9uVXBkYXRlZDogZnVuY3Rpb24gKGNvbGxlY3Rpb24pIHtcbiAgICogICAgIGNvbnNvbGUubG9nKCd0aGUgZW50aXJlIHVwLXRvLWRhdGUgY29sbGVjdGlvbicsIGNvbGxlY3Rpb24pO1xuICAgKiAgIH1cbiAgICogfSk7XG4gICAqIGBgYFxuICAgKi9cbiAgZGF0YTogSU9ic2VydmFibGVNYXA8U3dlZXAuT2JzZXJ2YWJsZVN3ZWVwRGF0YT47XG5cbiAgLyoqXG4gICAqIEEgZ3JhcGggb2YgZW5hYmxlZCBzd2VlcHMgdGhhdCBjYW4gYmUgdXNlZCBmb3IgcGF0aGZpbmRpbmcuXG4gICAqIFRoaXMgZ3JhcGggd2lsbCBhdXRvbWF0aWNhbGx5IHVwZGF0ZSBhcyBzd2VlcHMgY2hhbmdlIGFuZCB0cmlnZ2VyIGFueSBvYnNlcnZlcnMuXG4gICAqIFRoZSB3ZWlnaHQgb2YgZWFjaCBlZGdlIGlzIHRoZSBFdWNsaWRlYW4gZGlzdGFuY2UgZnJvbSBhIHN3ZWVwIHRvIGl0cyBuZWlnaGJvci5cbiAgICpcbiAgICogRW5hYmxpbmcgYSBzd2VlcCB3aWxsIGF1dG9tYXRpY2FsbHkgYWRkIGl0IGFuZCBpdHMgZWRnZXMgdG8gdGhlIGdyYXBoLjxicj5cbiAgICogRGlzYWJsaW5nIGEgc3dlZXAgd2lsbCBhdXRvbWF0aWNhbGx5IHJlbW92ZSBpdCBhbmQgaXRzIGVkZ2VzIGZyb20gdGhlIGdyYXBoLlxuICAgKlxuICAgKiBgYGB0eXBlc2NyaXB0XG4gICAqIGNvbnN0IHN3ZWVwR3JhcGggPSBhd2FpdCBtcFNkay5Td2VlcC5jcmVhdGVHcmFwaCgpO1xuICAgKiBjb25zdCBzdGFydFN3ZWVwID0gc3dlZXBHcmFwaC52ZXJ0ZXgoJ1tzdGFydCB2ZXJ0ZXhdJyk7XG4gICAqIGNvbnN0IGVuZFN3ZWVwID0gc3dlZXBHcmFwaC52ZXJ0ZXgoJ1tlbmQgdmVydGV4XScpO1xuICAgKlxuICAgKiBjb25zdCBwYXRoID0gbXBTZGsuR3JhcGguY3JlYXRlQVN0YXJSdW5uZXIoc3dlZXBHcmFwaCwgc3RhcnRTd2VlcCwgZW5kU3dlZXApLmV4ZWMoKTtcbiAgICogYGBgXG4gICAqL1xuICAgY3JlYXRlR3JhcGgoKTogUHJvbWlzZTxHcmFwaC5JRGlyZWN0ZWRHcmFwaDxTd2VlcC5PYnNlcnZhYmxlU3dlZXBEYXRhPj47XG5cbiAgLyoqXG4gICAqIEFuIG9ic2VydmFibGUgZm9yIHRoZSBwbGF5ZXIncyBjdXJyZW50IHN3ZWVwLlxuICAgKlxuICAgKiBJZiB0aGUgY2FtZXJhIGlzIHRyYW5zaXRpb25pbmcgdG8gb3IgaXMgY3VycmVudGx5IGluIERvbGxob3VzZSBvciBGbG9vcnBsYW4gbW9kZSwgb3IgaWYgdGhlIGNhbWVyYSBpcyB0cmFuc2l0aW9uaW5nIGJldHdlZW4gc3dlZXBzLFxuICAgKiB0aGUgYGN1cnJlbnRTd2VlcGAgYXJndW1lbnQgaW4gdGhlIHJlZ2lzdGVyZWQgY2FsbGJhY2sgd2lsbCBiZSBhIFwiZGVmYXVsdFwiIHN3ZWVwIHRoYXQgaGFzIGFuIGVtcHR5IGBzaWRgIHByb3BlcnR5LlxuICAgKlxuICAgKiBJZiB0aGUgc3dlZXAgaXMgYW4gdW5hbGlnbmVkLCB1bnBsYWNlZCAzNjDCuiB2aWV3LCBgY3VycmVudFN3ZWVwLmZsb29ySW5mby5pZGAgYW5kIGBjdXJyZW50U3dlZXAuZmxvb3JJbmZvLnNlcXVlbmNlYCB3aWxsIGJvdGggYmUgYHVuZGVmaW5lZGAuXG4gICAqXG4gICAqIFVzZSB0aGlzIHRhYmxlIHdpdGggdGhlIHJlc3VsdHMgb2YgYHNpZGAsIGBmbG9vckluZm8uc2VxdWVuY2VgLCBhbmQgYGZsb29ySW5mby5pZGAgdG8gZGV0ZXJtaW5lIHRoZSBjdXJyZW50IG9mIHRoZSB0aHJlZSBwb3NzaWJsZSBzdGF0ZXMuXG4gICAqXG4gICAqIHwgICAgICAgICAgICAgICAgICAgIHwgYXQgc3dlZXAgICAgICAgICAgICAgICAgfCB0cmFuc2l0aW9uaW5nIHwgaW4gdW5wbGFjZWQgIDM2MMK6IHZpZXcgfFxuICAgKiB8LS0tLS0tLS0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLXwtLS0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tfFxuICAgKiB8IHNpZCAgICAgICAgICAgICAgICB8IGAke2N1cnJlbnQuc2lkfWAgICAgICAgIHwgJycgICAgICAgICAgICB8IGAke2N1cnJlbnQuc2lkfWAgICAgICAgfFxuICAgKiB8IGZsb29ySW5mby5zZXF1ZW5jZSB8IGAke2Zsb29ySW5mby5zZXF1ZW5jZX1gIHwgdW5kZWZpbmVkICAgICB8IHVuZGVmaW5lZCAgICAgICAgICAgICAgfFxuICAgKiB8IGZsb29ySW5mby5pZCAgICAgICB8IGAke2Zsb29ySW5mby5pZH1gICAgICAgIHwgdW5kZWZpbmVkICAgICB8IHVuZGVmaW5lZCAgICAgICAgICAgICAgfFxuICAgKlxuICAgKiBgYGBcbiAgICogbXBTZGsuU3dlZXAuY3VycmVudC5zdWJzY3JpYmUoZnVuY3Rpb24gKGN1cnJlbnRTd2VlcCkge1xuICAgKiAgIC8vIENoYW5nZSB0byB0aGUgY3VycmVudCBzd2VlcCBoYXMgb2NjdXJyZWQuXG4gICAqICAgaWYgKGN1cnJlbnRTd2VlcC5zaWQgPT09ICcnKSB7XG4gICAqICAgICBjb25zb2xlLmxvZygnTm90IGN1cnJlbnRseSBzdGF0aW9uZWQgYXQgYSBzd2VlcCBwb3NpdGlvbicpO1xuICAgKiAgIH0gZWxzZSB7XG4gICAqICAgICBjb25zb2xlLmxvZygnQ3VycmVudGx5IGF0IHN3ZWVwJywgY3VycmVudFN3ZWVwLnNpZCk7XG4gICAqICAgICBjb25zb2xlLmxvZygnQ3VycmVudCBwb3NpdGlvbicsIGN1cnJlbnRTd2VlcC5wb3NpdGlvbik7XG4gICAqICAgICBjb25zb2xlLmxvZygnT24gZmxvb3InLCBjdXJyZW50U3dlZXAuZmxvb3JJbmZvLnNlcXVlbmNlKTtcbiAgICogICB9XG4gICAqIH0pO1xuICAgKiBgYGBcbiAgICpcbiAgICogWW91IGNhbiBhbHNvIHVzZSB0aGlzIG9ic2VydmFibGUgdG8gd2FpdCB1bnRpbCB0aGUgdXNlciBpcyBpbiBhIHN3ZWVwIGJlZm9yZSBleGVjdXRpbmcgYWRkaXRpb25hbCBjb2RlOlxuICAgKlxuICAgKiBgYGB0eXBlc2NyaXB0XG4gICAqIGF3YWl0IG1wU2RrLlN3ZWVwLmN1cnJlbnQud2FpdFVudGlsKChjdXJyZW50U3dlZXApID0+IGN1cnJlbnRTd2VlcC5pZCAhPT0gJycpO1xuICAgKiBgYGBcbiAgICovXG4gIGN1cnJlbnQ6IElPYnNlcnZhYmxlPFN3ZWVwLk9ic2VydmFibGVTd2VlcERhdGE+O1xuXG4gIC8qKlxuICAgKiBNb3ZlIHRvIGEgc3dlZXAuXG4gICAqXG4gICAqYGBgXG4gICAqIGNvbnN0IHN3ZWVwSWQgPSAnMSc7XG4gICAqIGNvbnN0IHJvdGF0aW9uID0geyB4OiAzMCwgeTogLTQ1IH07XG4gICAqIGNvbnN0IHRyYW5zaXRpb24gPSBtcFNkay5Td2VlcC5UcmFuc2l0aW9uLklOU1RBTlQ7XG4gICAqIGNvbnN0IHRyYW5zaXRpb25UaW1lID0gMjAwMDsgLy8gaW4gbWlsbGlzZWNvbmRzXG4gICAqXG4gICAqIG1wU2RrLlN3ZWVwLm1vdmVUbyhzd2VlcElkLCB7XG4gICAqICAgICByb3RhdGlvbjogcm90YXRpb24sXG4gICAqICAgICB0cmFuc2l0aW9uOiB0cmFuc2l0aW9uLFxuICAgKiAgICAgdHJhbnNpdGlvblRpbWU6IHRyYW5zaXRpb25UaW1lLFxuICAgKiAgIH0pXG4gICAqICAgLnRoZW4oZnVuY3Rpb24oc3dlZXBJZCl7XG4gICAqICAgICAvLyBNb3ZlIHN1Y2Nlc3NmdWwuXG4gICAqICAgICBjb25zb2xlLmxvZygnQXJyaXZlZCBhdCBzd2VlcCAnICsgc3dlZXBJZCk7XG4gICAqICAgfSlcbiAgICogICAuY2F0Y2goZnVuY3Rpb24oZXJyb3Ipe1xuICAgKiAgICAgLy8gRXJyb3Igd2l0aCBtb3ZlVG8gY29tbWFuZFxuICAgKiAgIH0pO1xuICAgKiBgYGBcbiAgICpcbiAgICogQHBhcmFtIFRoZSBkZXN0aW5hdGlvbiBzd2VlcC5cbiAgICogQHBhcmFtIE9wdGlvbnMuXG4gICAqIEByZXR1cm5zIEEgcHJvbWlzZSB0aGF0IHdpbGwgcmV0dXJuIHRoZSBkZXN0aW5hdGlvbiBzd2VlcC5cbiAgICovXG4gIG1vdmVUbyhzd2VlcDogc3RyaW5nLCBvcHRpb25zOiBTd2VlcC5Nb3ZlVG9PcHRpb25zKTogUHJvbWlzZTxzdHJpbmc+O1xuXG4gIC8qKlxuICAgKiBFbmFibGUgYSBzZXQgb2Ygc3dlZXBzIGJ5IGlkcy5cbiAgICpcbiAgICogRW5hYmxpbmcgYSBzd2VlcCB3aWxsIHNob3cgdGhlIHN3ZWVwJ3MgcHVjayBhbmQgYWxsb3cgdGhlIHBsYXllciB0byBuYXZpZ2F0ZSB0byB0aGF0IGxvY2F0aW9uLlxuICAgKlxuICAgKiBgYGBcbiAgICogbXBTZGsuU3dlZXAuZW5hYmxlKCdzd2VlcDEnLCAnc3dlZXAyJywgJ3N3ZWVwMycpO1xuICAgKiBgYGBcbiAgICpcbiAgICogQHBhcmFtIHN3ZWVwSWRzXG4gICAqL1xuICBlbmFibGUoLi4uc3dlZXBJZHM6IHN0cmluZ1tdKTogUHJvbWlzZTx2b2lkPjtcblxuICAvKipcbiAgICogRGlzYWJsZSBhIHNldCBvZiBzd2VlcHMgYnkgaWRzLlxuICAgKlxuICAgKiBEaXNhYmxpbmcgYSBzd2VlcCB3aWxsIGhpZGUgdGhlIHN3ZWVwJ3MgcHVjayBhbmQgcHJldmVudCB0aGUgcGxheWVyJ3MgYWJpbGl0eSB0byBuYXZpZ2F0ZSB0byB0aGF0IGxvY2F0aW9uLlxuICAgKlxuICAgKlxuICAgKiBgYGBcbiAgICogbXBTZGsuU3dlZXAuZGlzYWJsZSgnc3dlZXAxJywgJ3N3ZWVwMicsICdzd2VlcDMnKTtcbiAgICogYGBgXG4gICAqXG4gICAqIEBwYXJhbSBzd2VlcElkc1xuICAgKi9cbiAgZGlzYWJsZSguLi5zd2VlcElkczogc3RyaW5nW10pOiBQcm9taXNlPHZvaWQ+O1xuXG4gIC8qKlxuICAgKiBBZGQgc3BlY2lmaWVkIHN3ZWVwIElEcyB0byB0aGUgbmVpZ2hib3JzIGFycmF5XG4gICAqXG4gICAqIFRoaXMgbWV0aG9kIGFsbG93cyBjaGFuZ2luZyB0aGUgc3dlZXAgY29ubmVjdGl2aXRpeSB0byBlbmFibGUgbmF2aWdhdGlvbiBmcm9tIGBzd2VlcElkYFxuICAgKiB0byBhbGwgc3dlZXBzIGluIHRoZSBgdG9BZGRgIGFycmF5LiBOb3RlIHRoYXQgd2UgdXNlIFYyIElEcyBmb3IgYWxsIGFyZ3VtZW50cy4gUmVmZXJcbiAgICogdG8gQ29udmVyc2lvbi5jcmVhdGVJZE1hcCgpIGlmIHlvdSBuZWVkIHRvIGNvbnZlcnQgZnJvbSB0aGUgbGVnYWN5IFYxIElEcy5cbiAgICpcbiAgICogYGBgXG4gICAqIFN3ZWVwLmFkZE5laWdoYm9ycyhcImhuN2V0Y3V5ZmZibXFreXA1ZTQzYXhhMGJcIiwgW1wienI3bnMxc21wNTF6aWJ4NHMyMzlkaTd3YlwiXSk7XG4gICAqIGBgYFxuICAgKlxuICAgKiBAcGFyYW0gc3dlZXBJZDogc3RyaW5nIC0gU3dlZXAgSURcbiAgICogQHBhcmFtIHRvQWRkOiBzdHJpbmdbXSAtIExpc3Qgb2YgU3dlZXAgSURzIHRvIGNvbm5lY3RcbiAgICogQHJldHVybnMgQSBwcm9taXNlIHRvIGEgbGlzdCBvZiBhbGwgY3VycmVudCBuZWlnaGJvciBJRHMgKHYyKVxuICAgKi9cbiAgYWRkTmVpZ2hib3JzKHN3ZWVwSWQ6IHN0cmluZywgdG9BZGQ6IHN0cmluZ1tdKTogUHJvbWlzZTxzdHJpbmdbXT47XG5cbiAgLyoqXG4gICAqIFJlbW92ZSBzcGVjaWZpZWQgc3dlZXAgSURzIGZyb20gdGhlIG5laWdoYm9ycyBhcnJheVxuICAgKlxuICAgKiBUaGlzIG1ldGhvZCBhbGxvd3MgY2hhbmdpbmcgdGhlIHN3ZWVwIGNvbm5lY3Rpdml0aXkgdG8gcHJldmVudCBuYXZpZ2F0aW9uIGZyb20gYHN3ZWVwSWRgXG4gICAqIHRvIGFsbCBzd2VlcHMgaW4gdGhlIGB0b1JlbW92ZWAgYXJyYXkuIE5vdGUgdGhhdCB3ZSB1c2UgVjIgSURzIGZvciBhbGwgYXJndW1lbnRzLiBSZWZlclxuICAgKiB0byBDb252ZXJzaW9uLmNyZWF0ZUlkTWFwKCkgaWYgeW91IG5lZWQgdG8gY29udmVydCBmcm9tIHRoZSBsZWdhY3kgVjEgSURzLlxuICAgKlxuICAgKiBgYGBcbiAgICogU3dlZXAucmVtb3ZlTmVpZ2hib3JzKFwiaG43ZXRjdXlmZmJtcWt5cDVlNDNheGEwYlwiLCBbXCJ6cjduczFzbXA1MXppYng0czIzOWRpN3diXCJdKTtcbiAgICogYGBgXG4gICAqXG4gICAqIEBwYXJhbSBzd2VlcElkOiBzdHJpbmcgLSBTd2VlcCBJRFxuICAgKiBAcGFyYW0gdG9SZW1vdmU6IHN0cmluZ1tdIC0gTGlzdCBvZiBTd2VlcCBJRHMgdG8gZGlzY29ubmVjdFxuICAgKiBAcmV0dXJucyBBIHByb21pc2UgdG8gYSBsaXN0IG9mIGFsbCBjdXJyZW50IG5laWdoYm9yIElEcyAodjIpXG4gICAqL1xuICByZW1vdmVOZWlnaGJvcnMoc3dlZXBJZDogc3RyaW5nLCB0b1JlbW92ZTogc3RyaW5nW10pOiBQcm9taXNlPHN0cmluZ1tdPjtcbn1cbiIsImltcG9ydCB0eXBlIHsgQ29sb3IsIElPYnNlcnZhYmxlLCBJT2JzZXJ2YWJsZU1hcCwgU2l6ZSwgVmVjdG9yMyB9IGZyb20gJy4vZ2xvYmFsJztcblxuZXhwb3J0IG5hbWVzcGFjZSBUYWcge1xuICBleHBvcnQgZW51bSBBdHRhY2htZW50VHlwZSB7XG4gICAgLyoqIEFuIHVua25vd24gdHlwZSBvZiBhdHRhY2htZW50LiBUaGlzIHNob3VsZCBuZXZlciBoYXBwZW4gKi9cbiAgICBVTktOT1dOID0gJ3RhZy5hdHRhY2htZW50LnVua25vd24nLFxuICAgIEFQUExJQ0FUSU9OID0gJ3RhZy5hdHRhY2htZW50LmFwcGxpY2F0aW9uJyxcbiAgICBBVURJTyA9ICd0YWcuYXR0YWNobWVudC5hdWRpbycsXG4gICAgLyoqIFRoZSBhdHRhY2htZW50IGNvbnRhaW5zIGFuIGltYWdlICovXG4gICAgSU1BR0UgPSAndGFnLmF0dGFjaG1lbnQuaW1hZ2UnLFxuICAgIC8qKiBUaGUgYXR0YWNobWVudCBjb250YWlucyByaWNoIGNvbnRlbnQgbGlrZSBhbiBpZnJhbWUgb2YgYW5vdGhlciBzaXRlICovXG4gICAgTU9ERUwgPSAndGFnLmF0dGFjaG1lbnQubW9kZWwnLFxuICAgIFBERiA9ICd0YWcuYXR0YWNobWVudC5wZGYnLFxuICAgIFJJQ0ggPSAndGFnLmF0dGFjaG1lbnQucmljaCcsXG4gICAgVEVYVCA9ICd0YWcuYXR0YWNobWVudC50ZXh0JyxcbiAgICAvKiogVGhlIGF0dGFjaG1lbnQgY29udGFpbnMgYSB2aWRlbyAqL1xuICAgIFZJREVPID0gJ3RhZy5hdHRhY2htZW50LnZpZGVvJyxcbiAgICBaSVAgPSAndGFnLmF0dGFjaG1lbnQuemlwJyxcbiAgICAvKiogVGhlIGF0dGFjaG1lbnQgaXMgYSBzYW5kYm94IGNyZWF0ZWQgYnkgYSBjYWxsIHRvIFtbVGFnLnJlZ2lzdGVyU2FuZGJveF1dICovXG4gICAgU0FOREJPWCA9ICd0YWcuYXR0YWNobWVudC5zYW5kYm94JyxcbiAgfVxuXG4gIGV4cG9ydCB0eXBlIFRhZ0RhdGEgPSB7XG4gICAgaWQ6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBXaGV0aGVyIHRoaXMgdGFnIGlzIHZpc2libGUgYW5kIGFjY2VwdHMgaW5wdXQuXG4gICAgICogTW9kaWZ5aW5nIHRoaXMgdmFsdWUgd2lsbCB0b2dnbGUgdGhlIHRhZydzIHZpc2liaWxpdHkgYW5kIGlucHV0IGhhbmRsZXJzLCBhbmQgbm90aWZ5IGFueSBleGlzdGluZyBvYnNlcnZhYmxlcy5cbiAgICAgKi9cbiAgICBlbmFibGVkOiBib29sZWFuO1xuICAgIGFuY2hvclBvc2l0aW9uOiBWZWN0b3IzO1xuICAgIGRpc2NQb3NpdGlvbjogVmVjdG9yMztcbiAgICBzdGVtVmVjdG9yOiBWZWN0b3IzO1xuICAgIHN0ZW1IZWlnaHQ6IG51bWJlcjtcbiAgICBzdGVtVmlzaWJsZTogYm9vbGVhbjtcbiAgICBsYWJlbDogc3RyaW5nO1xuICAgIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG4gICAgY29sb3I6IENvbG9yO1xuICAgIHJvb21JZDogc3RyaW5nO1xuICAgIC8qKiBUaGUgaWRzIG9mIHRoZSBhdHRhY2htZW50cyBjdXJyZW50bHkgYXR0YWNoZWQgdG8gdGhpcyB0YWcgKi9cbiAgICBhdHRhY2htZW50czogc3RyaW5nW107XG4gICAgLyoqXG4gICAgICogVGhlIGtleXdvcmRzIGFzc29jaWF0ZWQgd2l0aCB0aGlzIFRhZy5cbiAgICAgKiBNb2RpZnlpbmcgdGhlIGNvbnRlbnRzIG9mIHRoaXMgYXJyYXkgd2lsbCBhdXRvbWF0aWNhbGx5IHN5bmMgdXBkYXRlcyB0byB0aGUgdGFnIGFuZCBub3RpZnkgYW55IGV4aXN0aW5nIG9ic2VydmFibGVzLlxuICAgICAqL1xuICAgIGtleXdvcmRzOiBzdHJpbmdbXTtcbiAgICAvKiogUmVhZC1vbmx5IEZvbnQgQXdlc29tZSBpZCBmb3IgaWNvbnMgc2V0IGluIHdvcmtzaG9wLCBlLmcuIFwiZmFjZS1ncmluLXRvbmd1ZS1zcXVpbnRcIiAqL1xuICAgIGZvbnRJZDogc3RyaW5nO1xuICAgIC8qKiBUaGUgaWNvbiBpZCBmb3IgdGhlIHRhZywgZm9yIHVzZSB3aXRoIFRhZy5lZGl0SWNvbiAqL1xuICAgIGljb25JZDogc3RyaW5nO1xuICB9O1xuXG4gIC8qKlxuICAgKiBUaGluZ3Mgc3VjaCBhcyBtZWRpYSwgZXRjIHRoYXQgY2FuIGJlIGF0dGFjaGVkIHRvIGEgVGFnLlxuICAgKiBBdHRhY2htZW50cyBhcmUgdGhlIG5ldyBlcXVpdmFsZW50IHRvIE1lZGlhIGluIE1hdHRlcnRhZ3MuXG4gICAqL1xuICBleHBvcnQgdHlwZSBBdHRhY2htZW50ID0ge1xuICAgIGlkOiBzdHJpbmc7XG4gICAgc3JjOiBzdHJpbmc7XG4gICAgdHlwZTogQXR0YWNobWVudFR5cGU7XG4gIH07XG5cbiAgLyoqXG4gICAqIEEgc3Vic2V0IG9mIHRoZSBUYWdEYXRhIHVzZWQgd2hlbiBhZGRpbmcgVGFncy5cbiAgICogTW9zdCBwcm9wZXJ0aWVzIGFyZSBvcHRpb25hbCBleGNlcHQgdGhvc2UgdXNlZCBmb3IgcG9zaXRpb25pbmc6IGBhbmNob3JQb3NpdGlvbmAsIGBzdGVtVmVjdG9yYC5cbiAgICpcbiAgICogU2VlIFtbVGFnLlRhZ0RhdGFdXSBmb3IgZnVydGhlciBkZXNjcmlwdGlvbnMgb2YgdGhlc2UgcHJvcGVydGllcy5cbiAgICovXG4gIGV4cG9ydCB0eXBlIERlc2NyaXB0b3IgPSB7XG4gICAgaWQ/OiBzdHJpbmc7XG4gICAgYW5jaG9yUG9zaXRpb246IFZlY3RvcjM7XG4gICAgc3RlbVZlY3RvcjogVmVjdG9yMztcbiAgICBlbmFibGVkPzogYm9vbGVhbjtcbiAgICBzdGVtVmlzaWJsZT86IGJvb2xlYW47XG4gICAgbGFiZWw/OiBzdHJpbmc7XG4gICAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gICAgY29sb3I/OiBDb2xvcjtcbiAgICBvcGFjaXR5PzogbnVtYmVyO1xuICAgIGljb25JZD86IHN0cmluZztcbiAgICBhdHRhY2htZW50cz86IHN0cmluZ1tdO1xuICAgIGtleXdvcmRzPzogc3RyaW5nW107XG4gIH07XG5cbiAgZXhwb3J0IHR5cGUgRWRpdFBvc2l0aW9uRGVzY3JpcHRvciA9IHtcbiAgICBpZDogc3RyaW5nO1xuICAgIG9wdGlvbnM6IFBhcnRpYWw8UG9zaXRpb25PcHRpb25zPjtcbiAgfVxuXG4gIGV4cG9ydCB0eXBlIFBvc2l0aW9uT3B0aW9ucyA9IHtcbiAgICBhbmNob3JQb3NpdGlvbjogVmVjdG9yMztcbiAgICBzdGVtVmVjdG9yOiBWZWN0b3IzO1xuICAgIHJvb21JZDogc3RyaW5nO1xuICB9O1xuXG4gIGV4cG9ydCB0eXBlIFN0ZW1IZWlnaHRFZGl0T3B0aW9ucyA9IHtcbiAgICBzdGVtSGVpZ2h0OiBudW1iZXI7XG4gICAgc3RlbVZpc2libGU6IGJvb2xlYW47XG4gIH1cblxuICAvKipcbiAgICogQGhpZGRlblxuICAgKiBAaW50ZXJuYWxcbiAgICogQGV4cGVyaW1lbnRhbFxuICAgKi9cbiAgZXhwb3J0IHR5cGUgU2F2ZVRvTGF5ZXJPcHRpb25zID0ge1xuICAgIHByb2dyZXNzPzogKHBlcmNlbnRDb21wbGV0ZTogbnVtYmVyKSA9PiB2b2lkO1xuICAgIC8qKiBBbiBhcnJheSBvZiB0YWdzIHRoYXQgc2hvdWxkIGJlIHVwZGF0ZWQgKi9cbiAgICB0YWdzVG9VcGRhdGU/OiBzdHJpbmdbXTtcbiAgICAvKiogQW4gYXJyYXkgb2YgdGFncyB0aGF0IHNob3VsZCBiZSBza2lwcGVkICovXG4gICAgdGFnc1RvSWdub3JlPzogc3RyaW5nW107XG4gIH1cblxuICAvKipcbiAgICogQGhpZGRlblxuICAgKiBAaW50ZXJuYWxcbiAgICogQGV4cGVyaW1lbnRhbFxuICAgKi9cbiAgZXhwb3J0IHR5cGUgSW1wb3J0VGFnc09wdGlvbnMgPSB7XG4gICAgcHJvZ3Jlc3M/OiAocGVyY2VudENvbXBsZXRlOiBudW1iZXIpID0+IHZvaWQ7XG4gICAgYWxsb3dlZExheWVycz86IHN0cmluZ1tdO1xuICB9XG5cbiAgZXhwb3J0IHR5cGUgRWRpdGFibGVQcm9wZXJ0aWVzID0ge1xuICAgIGxhYmVsOiBzdHJpbmc7XG4gICAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgfVxuXG4gIGV4cG9ydCB0eXBlIFNhbmRib3hPcHRpb25zID0ge1xuICAgIC8qKlxuICAgICAqIEEgbWFwIGZvciB0aGUgdGhyZWUgZ2xvYmFsIGZ1bmN0aW9ucyB3ZSBwcm92aWRlIGluIHlvdXIgc2FuZGJveC5cbiAgICAgKiBPbmx5IG5lZWRzIHRvIGJlIHVzZWQgaWYgc2NyaXB0cyB5b3UgYXJlIGltcG9ydGluZyBhbHNvIGhhdmUgYSBnbG9iYWwgYHNlbmRgLCBgb25gLCBgb2ZmYCwgYHRhZ2AsIG9yIGBkb2NrZWRgLlxuICAgICAqL1xuICAgIGdsb2JhbFZhcmlhYmxlTWFwOiBHbG9iYWxWYXJpYWJsZU1hcDtcblxuICAgIC8qKlxuICAgICAqIEEgaHVtYW4gcmVhZGFibGUgbmFtZSB0aGF0IHdpbGwgYmUgdXNlZCBhcyB0aGUgYHNyY2AgaW4gdGhlIGF0dGFjaG1lbnRzIGNvbGxlY3Rpb24uXG4gICAgICovXG4gICAgbmFtZTogc3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICogVGhlIHNpemUgb2YgdGhlIHNhbmRib3ggdG8gZGlzcGxheVxuICAgICAqIFByb3ZpZGluZyBgMGAgYXMgb25lIG9mIHRoZSBkaW1lbnNpb25zIHdpbGwgaW5zdGVhZCB1c2UgdGhlIGRlZmF1bHQ6IDE1MHB4IGZvciBoZWlnaHQsIDEwMCUgZm9yIHdpZHRoLlxuICAgICAqL1xuICAgIHNpemU6IFNpemU7XG4gIH07XG5cbiAgLyoqXG4gICAqIE1hcCB0aGUgZ2xvYmFscyB3ZSBwcm92aWRlIGluIHlvdXIgc2FuZGJveCB0byBvdGhlciBuYW1lcy5cbiAgICovXG4gICBleHBvcnQgdHlwZSBHbG9iYWxWYXJpYWJsZU1hcCA9IHtcbiAgICBzZW5kPzogc3RyaW5nO1xuICAgIG9uPzogc3RyaW5nO1xuICAgIG9mZj86IHN0cmluZztcbiAgICB0YWc/OiBzdHJpbmc7XG4gICAgZG9ja2VkPzogc3RyaW5nO1xuICB9XG5cbiAgLyoqXG4gICAqIEEgbWVzc2FnaW5nIG9iamVjdCB0byBzZW5kIGFuZCByZWNlaXZlIG1lc3NhZ2VzIHRvIGFuZCBmcm9tIHlvdXIgaWZyYW1lIHNhbmRib3guXG4gICAqL1xuICBleHBvcnQgaW50ZXJmYWNlIElNZXNzZW5nZXIge1xuICAgIC8qKlxuICAgICAqIFNlbmQgYSBtZXNzYWdlcyBvZiB0eXBlIGBldmVudFR5cGVgIHRvIHRoZSBpZnJhbWUgc2FuZGJveCB3aXRoIGFueSBvcHRpb25hbCBkYXRhIGFzc29jaWF0ZWQgd2l0aCB0aGUgbWVzc2FnZVxuICAgICAqL1xuICAgIHNlbmQoZXZlbnRUeXBlOiBzdHJpbmcsIC4uLmFyZ3M6IGFueVtdKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBBZGQgYSBoYW5kbGVyIGZvciBtZXNzYWdlcyBvZiB0eXBlIGBldmVudFR5cGVgIGZyb20gdGhlIGlmcmFtZSBzYW5kYm94XG4gICAgICovXG4gICAgb24oZXZlbnRUeXBlOiBzdHJpbmcsIGV2ZW50SGFuZGxlcjogKC4uLmFyZ3M6IGFueVtdKSA9PiB2b2lkKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBSZW1vdmUgYSBoYW5kbGVyIGZvciBtZXNzYWdlcyBvZiB0eXBlIGBldmVudFR5cGVgIGZyb20gdGhlIGlmcmFtZSBzYW5kYm94XG4gICAgICovXG4gICAgb2ZmKGV2ZW50VHlwZTogc3RyaW5nLCBldmVudEhhbmRsZXI6ICguLi5hcmdzOiBhbnlbXSkgPT4gdm9pZCk6IHZvaWQ7XG4gIH1cblxuICAvKipcbiAgICogVGhlIGFjdGlvbnMgdGhhdCBjYW4gYmUgdGFrZW4gd2hlbiBpbnRlcmFjdGluZyB3aXRoIGEgdGFnXG4gICAqL1xuICBleHBvcnQgdHlwZSBBbGxvd2FibGVBY3Rpb25zID0ge1xuICAgIC8qKiBXaGV0aGVyIHRoZSB0YWcgY2FuIGJlIG9wZW5lZCB2aWEgYSBtb3VzZSBob3ZlciAqL1xuICAgIG9wZW5pbmc6IGJvb2xlYW47XG4gICAgLyoqIFdoZXRoZXIgbmF2aWdhdGlvbiB0b3dhcmVkIHRoZSB0YWcgd2lsbCBvY2N1ciB3aGVuIGNsaWNrZWQgKi9cbiAgICBuYXZpZ2F0aW5nOiBib29sZWFuO1xuICAgIC8qKiBXaGV0aGVyIHRoZSB0YWcgY2FuIGJlIGRvY2tlZCAqL1xuICAgIGRvY2tpbmc6IGJvb2xlYW47XG4gICAgLyoqIFdoZXRoZXIgdGhlIHRhZyBoYXMgYSBzaGFyZSBidXR0b24gKi9cbiAgICBzaGFyaW5nOiBib29sZWFuO1xuICB9O1xuXG4gIGV4cG9ydCB0eXBlIE9wZW5PcHRpb25zID0ge1xuICAgIC8qKiBGb3JjZSB0aGUgdGFnIG9wZW4gcmVnYXJkbGVzcyBvZiB3aGV0aGVyIGl0cyBhbGxvd2VkIGZyb20gcHJldmlvdXMgY2FsbHMgdG8gW1tUYWcuYWxsb3dBY3Rpb25dXSAqL1xuICAgIGZvcmNlOiBib29sZWFuO1xuICB9XG5cbiAgZXhwb3J0IHR5cGUgT3BlblRhZ3MgPSB7XG4gICAgLyoqIFRoZSBpZCBvZiB0aGUgdGFnIHRoYXQgaXMgY3VycmVudGx5IGJlaW5nIHByZXZpZXdlZCBvciBob3ZlcmVkIG92ZXIuICovXG4gICAgaG92ZXJlZDogc3RyaW5nIHwgbnVsbDtcbiAgICAvKiogVGhlIHNldCBvZiBpZHMgb2YgdGFncyB0aGF0IGFyZSBjdXJyZW50bHkgXCJzdHVja1wiIG9wZW4gbGlrZSBmcm9tIGEgY2xpY2sgYWN0aW9uLiBDdXJyZW50bHksIHRoaXMgaXMgbGltaXRlZCB0byBqdXN0IG9uZSB0YWcuICovXG4gICAgc2VsZWN0ZWQ6IFNldDxzdHJpbmc+O1xuICAgIC8qKiBUaGUgaWQgb2YgdGhlIHRhZyB0aGF0IGlzIGN1cnJlbnRseSBkb2NrZWQuICovXG4gICAgZG9ja2VkOiBzdHJpbmcgfCBudWxsO1xuICB9O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFRhZyB7XG4gIEF0dGFjaG1lbnRUeXBlOiB0eXBlb2YgVGFnLkF0dGFjaG1lbnRUeXBlO1xuICAvKipcbiAgICogQW4gb2JzZXJ2YWJsZSBjb2xsZWN0aW9uIG9mIHRoZSBbW0F0dGFjaG1lbnRdXS5cbiAgICpcbiAgICogYGBgdHlwZXNjcmlwdFxuICAgKiBtcFNkay5UYWcuYXR0YWNobWVudHMuc3Vic2NyaWJlKHtcbiAgICogICBvbkFkZGVkOiBmdW5jdGlvbiAoaW5kZXgsIGl0ZW0sIGNvbGxlY3Rpb24pIHtcbiAgICogICAgIGNvbnNvbGUubG9nKCdBbiBhdHRhY2htZW50IHdhcyBhZGRlZCB0byB0aGUgY29sbGVjdGlvbicsIGluZGV4LCBpdGVtLCBjb2xsZWN0aW9uKTtcbiAgICogICB9LFxuICAgKiAgIG9uQ29sbGVjdGlvblVwZGF0ZWQoY29sbGVjdGlvbikge1xuICAgKiAgICAgY29uc29sZS5sb2coJ1RoZSBlbnRpcmUgY29sbGVjdGlvbiBvZiBhdHRhY2htZW50cycsIGNvbGxlY3Rpb24pO1xuICAgKiAgIH0sXG4gICAqIH0pO1xuICAgKiBgYGBcbiAgICpcbiAgICogQGVtYmVkXG4gICAqIEBidW5kbGVcbiAgICogQGludHJvZHVjZWQgMy4xLjY4LjEyLTctZzg1ODY4ODk0NGFcbiAgICovXG4gIGF0dGFjaG1lbnRzOiBJT2JzZXJ2YWJsZU1hcDxUYWcuQXR0YWNobWVudD47XG5cbiAgLyoqXG4gICAqIEF0dGFjaCBbW0F0dGFjaG1lbnRdXSB0byBhIFRhZy5cbiAgICpcbiAgICogYGBgdHlwZXNjcmlwdFxuICAgKiBjb25zdCB0YWdJZDogc3RyaW5nOyAvLyAuLi4gYWNxdWlyZWQgdGhyb3VnaCBhIHByZXZpb3VzIGNhbGwgdG8gYG1wU2RrLlRhZy5hZGRgIG9yIHRocm91Z2ggYG1wU2RrLlRhZy5kYXRhYFxuICAgKiBjb25zdCBhdHRhY2htZW50SWRzOiBzdHJpbmdbXTsgLy8gLi4uIGFjcXVpcmVkIHRocm91Z2ggYSBwcmV2aW91cyBjYWxsIHRvIGBtcFNkay5UYWcucmVnaXN0ZXJBdHRhY2htZW50YCBvciB0aHJvdWdoIGBtcFNkay5UYWcuYXR0YWNobWVudHNgXG4gICAqXG4gICAqIG1wU2RrLlRhZy5hdHRhY2godGFnSWQsIC4uLmF0dGFjaG1lbnRJZHMpO1xuICAgKiAvLyBvclxuICAgKiBtcFNkay5UYWcuYXR0YWNoKHRhZ0lkLCBhdHRhY2htZW50SWRbMF0sIGF0dGFjaG1lbnRJZFsxXSk7XG4gICAqIGBgYFxuICAgKlxuICAgKiBAcGFyYW0gdGFnSWRcbiAgICogQHBhcmFtIGF0dGFjaG1lbnRJZFxuICAgKiBAcmV0dXJuIEEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gdGhlIEF0dGFjaG1lbnQgaXMgYWRkZWQgdG8gdGhlIFRhZ1xuICAgKlxuICAgKiBAZW1iZWRcbiAgICogQGJ1bmRsZVxuICAgKiBAaW50cm9kdWNlZCAzLjEuNjguMTItNy1nODU4Njg4OTQ0YVxuICAgKi9cbiAgYXR0YWNoKHRhZ0lkOiBzdHJpbmcsIC4uLmF0dGFjaG1lbnRJZHM6IHN0cmluZ1tdKTogUHJvbWlzZTx2b2lkPjtcblxuICAvKipcbiAgICogUmVhZCBhbmQgY3JlYXRlIHRyYW5zaWVudCB0YWdzIGZyb20gYW5vdGhlciBzcGFjZS5cbiAgICpcbiAgICogQGhpZGRlblxuICAgKiBAaW50ZXJuYWxcbiAgICogQGV4cGVyaW1lbnRhbFxuICAgKlxuICAgKiBAcGFyYW0gc2lkIGV4dGVybmFsIHNwYWNlIGlkIGNvbnRhaW5nIHRhZ3NcbiAgICogQHBhcmFtIG9wdGlvbnNcbiAgICovXG4gIGltcG9ydFRhZ3Moc3BhY2VTaWQ6IHN0cmluZywgb3B0aW9uczogUGFydGlhbDxUYWcuSW1wb3J0VGFnc09wdGlvbnM+KTogUHJvbWlzZTxzdHJpbmdbXT47XG5cbiAgLyoqXG4gICAqIE1vdmVzIGFsbCB0cmFuc2llbnQgdGFncyBpbnRvIGEgcGVyc2lzdGVudCBsYXllci4gVGFnIHNpZHMgYXJlIG5vdCBwcmVzZXJ2ZWQuXG4gICAqXG4gICAqIEByZXR1cm4gVGhlIGxpc3Qgb2YgbmV3bHkgY3JlYXRlZCB0YWdzLlxuICAgKlxuICAgKiBAaGlkZGVuXG4gICAqIEBpbnRlcm5hbFxuICAgKiBAZXhwZXJpbWVudGFsXG4gICAqXG4gICAqIEBwYXJhbSBvcHRpb25zXG4gICAqL1xuICBzYXZlVG9MYXllcihvcHRpb25zOiBQYXJ0aWFsPFRhZy5TYXZlVG9MYXllck9wdGlvbnM+KTogUHJvbWlzZTxzdHJpbmdbXT47XG5cbiAgLyoqXG4gICAqIEBoaWRkZW5cbiAgICogQGludGVybmFsXG4gICAqIEBleHBlcmltZW50YWxcbiAgICovXG4gIGltcG9ydEF0dGFjaG1lbnRzKGRlc3RUYWdJZDogc3RyaW5nLCBzcmNTcGFjZUlkOiBzdHJpbmcsIGF0dGFjaG1lbnRJZHM6IHN0cmluZ1tdKTogUHJvbWlzZTx7IGNvcGllZDogc3RyaW5nW107IG1pc3Npbmc6IHN0cmluZ1tdOyB9PjtcblxuICAvKipcbiAgICogRGV0YWNoIFtbQXR0YWNobWVudF1dIGZyb20gYSBUYWcuXG4gICAqXG4gICAqIGBgYHR5cGVzY3JpcHRcbiAgICogY29uc3QgdGFnSWQ6IHN0cmluZzsgLy8gLi4uIGFjcXVpcmVkIHRocm91Z2ggYSBwcmV2aW91cyBjYWxsIHRvIGBtcFNkay5UYWcuYWRkYCBvciB0aHJvdWdoIGBtcFNkay5UYWcuZGF0YWBcbiAgICogY29uc3QgYXR0YWNobWVudElkczogc3RyaW5nW107IC8vIC4uLiBhY3F1aXJlZCB0aHJvdWdoIGEgcHJldmlvdXMgY2FsbCB0byBgbXBTZGsuVGFnLnJlZ2lzdGVyQXR0YWNobWVudGAgb3IgdGhyb3VnaCBgbXBTZGsuVGFnLmF0dGFjaG1lbnRzYFxuICAgKlxuICAgKiBtcFNkay5UYWcuZGV0YWNoKHRhZ0lkLCAuLi5hdHRhY2htZW50SWRzKTtcbiAgICogLy8gb3JcbiAgICogbXBTZGsuVGFnLmRldGFjaCh0YWdJZCwgYXR0YWNobWVudElkWzBdLCBhdHRhY2htZW50SWRbMV0pO1xuICAgKiBgYGBcbiAgICpcbiAgICogQHBhcmFtIHRhZ0lkXG4gICAqIEBwYXJhbSBhdHRhY2htZW50SWRzXG4gICAqXG4gICAqIEBlbWJlZFxuICAgKiBAYnVuZGxlXG4gICAqIEBpbnRyb2R1Y2VkIDMuMS43MC4xMC0wLWdlOWNiODNiMjhjXG4gICAqL1xuICBkZXRhY2godGFnSWQ6IHN0cmluZywgLi4uYXR0YWNobWVudElkczogc3RyaW5nW10pOiBQcm9taXNlPHZvaWQ+O1xuXG4gIC8qKlxuICAgKiBSZWdpc3RlciBhIG5ldyBbW0F0dGFjaG1lbnRdXSB0aGF0IGNhbiBsYXRlciBiZSBhdHRhY2hlZCBhcyBtZWRpYSB0byBhIFRhZy5cbiAgICpcbiAgICogQ3VzdG9tIEhUTUwgY2FuIGJlIGFkZGVkIGFzIGFuIGF0dGFjaG1lbnQgdGhyb3VnaCB0aGUgdXNlIG9mIFtbcmVnaXN0ZXJTYW5kYm94XV0gaW5zdGVhZC5cbiAgICpcbiAgICogYGBgdHlwZXNjcmlwdFxuICAgKiAvLyByZWdpc3RlciBhIGNvdXBsZSBvZiBhdHRhY2htZW50cyB0byB1c2UgbGF0ZXJcbiAgICogY29uc3QgW2F0dGFjaG1lbnRJZDEsIGF0dGFjaG1lbnRJZDJdID0gbXBTZGsuVGFnLnJlZ2lzdGVyQXR0YWNobWVudChcbiAgICogICAnaHR0cHM6Ly9bbGluay50by9tZWRpYV0nLFxuICAgKiAgICdodHRwczovL1tsaW5rLnRvL290aGVyX21lZGlhXScsXG4gICAqICk7XG4gICAqIGBgYFxuICAgKiBAcGFyYW0gc3JjcyBUaGUgc3JjIFVSTHMgb2YgdGhlIG1lZGlhXG4gICAqIEByZXR1cm4gQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gYW4gYXJyYXkgb2YgaWRzIGFzc29jaWF0ZWQgd2l0aCB0aGUgbmV3bHkgYWRkZWQgQXR0YWNobWVudHNcbiAgICpcbiAgICogQGVtYmVkXG4gICAqIEBidW5kbGVcbiAgICogQGludHJvZHVjZWQgMy4xLjY4LjEyLTctZzg1ODY4ODk0NGFcbiAgICovXG4gIHJlZ2lzdGVyQXR0YWNobWVudCguLi5zcmNzOiBzdHJpbmdbXSk6IFByb21pc2U8c3RyaW5nW10+O1xuXG5cbiAgLyoqXG4gICAqIFJlZ2lzdGVyIGFuIEhUTUwgc2FuZGJveCB0aGF0IGRpcGxheXMgY3VzdG9tIEhUTUwgYW5kIHJ1bnMgY3VzdG9tIHNjcmlwdHMgYXMgYW4gYXR0YWNobWVudC5cbiAgICogRGF0YSBjYW4gYmUgc2VudCBhbmQgcmVjZWl2ZWQgZnJvbSB0aGUgc2FuZGJveCBieSB1c2luZyB0aGUgcmV0dXJuZWQgW1tJTWVzc2VuZ2VyXV0uXG4gICAqXG4gICAqIGBgYHR5cGVzY3JpcHRcbiAgICogY29uc3QgaHRtbFRvSW5qZWN0ID0gYFxuICAgKiAgIDxzdHlsZT5cbiAgICogICAgIGJ1dHRvbiB7XG4gICAqICAgICAgIHdpZHRoOiAxMDBweDtcbiAgICogICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgKiAgICAgfVxuICAgKiAgIDwvc3R5bGU+XG4gICAqICAgPGJ1dHRvbiBpZD0nYnRuMSc+Q0xJQ0sgTUU8L2J1dHRvbj5cbiAgICogICA8c2NyaXB0PlxuICAgKiAgICAgdmFyIGJ0bjEgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnRuMScpO1xuICAgKiAgICAgYnRuMS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICogICAgICAgLy8gc2VuZCBkYXRhIG91dCBvZiB0aGUgc2FuZGJveFxuICAgKiAgICAgICB3aW5kb3cuc2VuZCgnYnV0dG9uQ2xpY2snLCAxMjM0NSk7XG4gICAqICAgICB9KTtcbiAgICogICAgIC8vIHJlY2VpdmUgZGF0YSBmcm9tIG91dHNpZGUgb2YgdGhlIHNhbmRib3hcbiAgICogICAgIHdpbmRvdy5vbigndXBkYXRlQnV0dG9uJywgKG5ld0xhYmVsLCBjb2xvcikgPT4ge1xuICAgKiAgICAgICBidG4xLmlubmVyVGV4dCA9IG5ld0xhYmVsO1xuICAgKiAgICAgICBidG4xLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGNvbG9yO1xuICAgKiAgICAgfSk7XG4gICAqICAgPC9zY3JpcHQ+XG4gICAqIGA7XG4gICAqXG4gICAqIC8vIGNyZWF0ZSBhbmQgcmVnaXN0ZXIgdGhlIHNhbmRib3hcbiAgICogY29uc3QgW3NhbmRib3hJZCwgbWVzc2VuZ2VyXSA9IGF3YWl0IG1wU2RrLlRhZy5yZWdpc3RlclNhbmRib3goaHRtbFRvSW5qZWN0KTtcbiAgICogLy8gYXR0YWNoIHRoZSBzYW5kYm94IHRvIGEgdGFnXG4gICAqIG1wU2RrLlRhZy5hdHRhY2godGFnSWQsIHNhbmRib3hJZCk7XG4gICAqIC8vIHJlY2VpdmUgZGF0YSBmcm9tIHRoZSBzYW5kYm94XG4gICAqIG1lc3Nlbmdlci5vbignYnV0dG9uQ2xpY2snLCAoYnV0dG9uSWQpID0+IHtcbiAgICogICBjb25zb2xlLmxvZygnY2xpY2tlZCBidXR0b24gd2l0aCBpZDonLCBidXR0b25JZCk7XG4gICAqIH0pO1xuICAgKiAvLyBzZW5kIGRhdGEgdG8gdGhlIHNhbmRib3hcbiAgICogbWVzc2VuZ2VyLnNlbmQoJ0kgc2VuZCBtZXNzYWdlcycsICdyZWQnKTtcbiAgICogYGBgXG4gICAqXG4gICAqIEBwYXJhbSBodG1sXG4gICAqIEBwYXJhbSBvcHRpb25zXG4gICAqIEByZXR1cm5zIEFuIFtbSU1lc3Nlbmdlcl1dIHRoYXQgY2FuIGJlIHVzZWQgdG8gY29tbXVuaWNhdGUgd2l0aCB0aGUgc2FuZGJveCBieSBzZW5kaW5nIGFuZCByZWNlaXZpbmcgZGF0YVxuICAgKlxuICAgKiBAZW1iZWRcbiAgICogQGJ1bmRsZVxuICAgKiBAaW50cm9kdWNlZCAzLjEuNzAuMTAtMC1nZTljYjgzYjI4Y1xuICAgKi9cbiAgcmVnaXN0ZXJTYW5kYm94KGh0bWw6IHN0cmluZywgb3B0aW9ucz86IFBhcnRpYWw8VGFnLlNhbmRib3hPcHRpb25zPik6IFByb21pc2U8W3N0cmluZywgVGFnLklNZXNzZW5nZXJdPjtcblxuICAvKipcbiAgICogQW4gb2JzZXJ2YWJsZSBjb2xsZWN0aW9uIG9mIFRhZyBkYXRhIHRoYXQgY2FuIGJlIHN1YnNjcmliZWQgdG8uXG4gICAqXG4gICAqIFdoZW4gZmlyc3Qgc3Vic2NyaWJpbmcsIHRoZSBjdXJyZW50IHNldCBvZiBUYWdzIHdpbGwgY2FsbCB0aGUgb2JzZXJ2ZXIncyBgb25BZGRlZGAgZm9yIGVhY2ggVGFnIGFzIHRoZSBkYXRhIGJlY29tZXMgYXZhaWxhYmxlLlxuICAgKlxuICAgKiBgYGB0eXBlc2NyaXB0XG4gICAqIG1wU2RrLlRhZy5kYXRhLnN1YnNjcmliZSh7XG4gICAqICAgb25BZGRlZChpbmRleCwgaXRlbSwgY29sbGVjdGlvbikge1xuICAgKiAgICAgY29uc29sZS5sb2coJ1RhZyBhZGRlZCB0byB0aGUgY29sbGVjdGlvbicsIGluZGV4LCBpdGVtLCBjb2xsZWN0aW9uKTtcbiAgICogICB9LFxuICAgKiAgIG9uUmVtb3ZlZChpbmRleCwgaXRlbSwgY29sbGVjdGlvbikge1xuICAgKiAgICAgY29uc29sZS5sb2coJ1RhZyByZW1vdmVkIGZyb20gdGhlIGNvbGxlY3Rpb24nLCBpbmRleCwgaXRlbSwgY29sbGVjdGlvbik7XG4gICAqICAgfSxcbiAgICogICBvblVwZGF0ZWQoaW5kZXgsIGl0ZW0sIGNvbGxlY3Rpb24pIHtcbiAgICogICAgIGNvbnNvbGUubG9nKCdUYWcgdXBkYXRlZCBpbiBwbGFjZSBpbiB0aGUgY29sbGVjdGlvbicsIGluZGV4LCBpdGVtLCBjb2xsZWN0aW9uKTtcbiAgICogICB9LFxuICAgKiAgIG9uQ29sbGVjdGlvblVwZGF0ZWQoY29sbGVjdGlvbikge1xuICAgKiAgICAgY29uc29sZS5sb2coJ1RoZSBmdWxsIGNvbGxlY3Rpb24gb2YgVGFncyBsb29rcyBsaWtlJywgY29sbGVjdGlvbik7XG4gICAqICAgfVxuICAgKiB9KTtcbiAgICogYGBgXG4gICAqXG4gICAqIEBlbWJlZFxuICAgKiBAYnVuZGxlXG4gICAqIEBpbnRyb2R1Y2VkIDMuMS42OC4xMi03LWc4NTg2ODg5NDRhXG4gICAqL1xuICBkYXRhOiBJT2JzZXJ2YWJsZU1hcDxUYWcuVGFnRGF0YT47XG5cbiAgLyoqXG4gICAqIEFuIG9ic2VydmFibGUgc3RhdGUgb2YgdGhhdCB0YWdzIHRoYXQgYXJlIGhvdmVyZWQsIHNlbGVjdGVkLCBvciBkb2NrZWQuXG4gICAqIEEgVGFnIGNhbiBiZSBpbiBhbGwgdGhyZWUgc3RhdGVzIGF0IG9uY2UuIEEgZG9ja2VkIHRhZyBpcyBhbHNvIGFsd2F5cyBjb25zaWRlcmVkIHNlbGVjdGVkLlxuICAgKlxuICAgKiBgYGB0eXBlc2NyaXB0XG4gICAqIG1wU2RrLlRhZy5vcGVuVGFncy5zdWJzY3JpYmUoe1xuICAgKiAgIHByZXZTdGF0ZToge1xuICAgKiAgICAgaG92ZXJlZDogbnVsbCxcbiAgICogICAgIGRvY2tlZDogbnVsbCxcbiAgICogICAgIHNlbGVjdGVkOiBudWxsLFxuICAgKiAgIH0sXG4gICAqICAgb25DaGFuZ2VkKG5ld1N0YXRlKSB7XG4gICAqICAgICBpZiAobmV3U3RhdGUuaG92ZXJlZCAhPT0gdGhpcy5wcmV2U3RhdGUuaG92ZXJlZCkge1xuICAgKiAgICAgICBpZiAobmV3U3RhdGUuaG92ZXJlZCkge1xuICAgKiAgICAgICAgIGNvbnNvbGUubG9nKG5ld1N0YXRlLmhvdmVyZWQsICd3YXMgaG92ZXJlZCcpO1xuICAgKiAgICAgICB9IGVsc2Uge1xuICAgKiAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMucHJldlN0YXRlLmhvdmVyZWQsICdpcyBubyBsb25nZXIgaG92ZXJlZCcpO1xuICAgKiAgICAgICB9XG4gICAqICAgICB9XG4gICAqICAgICBpZiAobmV3U3RhdGUuZG9ja2VkICE9PSB0aGlzLnByZXZTdGF0ZS5kb2NrZWQpIHtcbiAgICogICAgICAgaWYgKG5ld1N0YXRlLmRvY2tlZCkge1xuICAgKiAgICAgICAgIGNvbnNvbGUubG9nKG5ld1N0YXRlLmRvY2tlZCwgJ3dhcyBkb2NrZWQnKTtcbiAgICogICAgICAgfSBlbHNlIHtcbiAgICogICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnByZXZTdGF0ZS5kb2NrZWQsICd3YXMgdW5kb2NrZWQnKTtcbiAgICogICAgICAgfVxuICAgKiAgICAgfVxuICAgKlxuICAgKiAgICAgLy8gb25seSBjb21wYXJlIHRoZSBmaXJzdCAnc2VsZWN0ZWQnIHNpbmNlIG9ubHkgb25lIHRhZyBpcyBjdXJyZW50bHkgc3VwcG9ydGVkXG4gICAqICAgICBjb25zdCBbc2VsZWN0ZWQgPSBudWxsXSA9IG5ld1N0YXRlLnNlbGVjdGVkOyAvLyBkZXN0cnVjdHVyZSBhbmQgY29lcmNlIHRoZSBmaXJzdCBTZXQgZWxlbWVudCB0byBudWxsXG4gICAqICAgICBpZiAoc2VsZWN0ZWQgIT09IHRoaXMucHJldlN0YXRlLnNlbGVjdGVkKSB7XG4gICAqICAgICAgICAgaWYgKHNlbGVjdGVkKSB7XG4gICAqICAgICAgICAgICAgIGNvbnNvbGUubG9nKHNlbGVjdGVkLCAnd2FzIHNlbGVjdGVkJyk7XG4gICAqICAgICAgICAgfSBlbHNlIHtcbiAgICogICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5wcmV2U3RhdGUuc2VsZWN0ZWQsICd3YXMgZGVzZWxlY3RlZCcpO1xuICAgKiAgICAgICAgIH1cbiAgICogICAgIH1cbiAgICpcbiAgICogICAgIC8vIGNsb25lIGFuZCBzdG9yZSB0aGUgbmV3IHN0YXRlXG4gICAqICAgICB0aGlzLnByZXZTdGF0ZSA9IHtcbiAgICogICAgICAgLi4ubmV3U3RhdGUsXG4gICAqICAgICAgIHNlbGVjdGVkLFxuICAgKiAgICAgfTtcbiAgICogICB9LFxuICAgKiB9KTtcbiAgICogYGBgXG4gICAqXG4gICAqIEBlbWJlZFxuICAgKiBAYnVuZGxlXG4gICAqIEBpbnRyb2R1Y2VkIDIzLjIuMVxuICAgKi9cbiAgb3BlblRhZ3M6IElPYnNlcnZhYmxlPFRhZy5PcGVuVGFncz47XG5cbiAgLyoqXG4gICAqIEFkZCBvbmUgb3IgbW9yZSBUYWdzIHRvIFNob3djYXNlLlxuICAgKiBFYWNoIGlucHV0IFRhZyBzdXBwb3J0cyBzZXR0aW5nIHRoZSBsYWJlbCwgZGVzY3JpcHRpb24sIGNvbG9yIG9yIGljb24sIGFuY2hvclBvc2l0aW9uLCBzdGVtVmVjdG9yLCBhbmQgYXR0YWNobWVudHMuXG4gICAqXG4gICAqIFR3byBwcm9wZXJ0aWVzIGFyZSByZXF1aXJlZDpcbiAgICogLSBgYW5jaG9yUG9zaXRpb25gLCB0aGUgcG9pbnQgd2hlcmUgdGhlIHRhZyBjb25uZWN0cyB0byB0aGUgbW9kZWxcbiAgICogLSBgc3RlbVZlY3RvcmAsIHRoZSBkaXJlY3Rpb24sIGFrYSBub3JtYWwsIGFuZCBoZWlnaHQgdGhhdCB0aGUgVGFnIHN0ZW0gcG9pbnRzXG4gICAqXG4gICAqIFNlZSBbW1BvaW50ZXIuaW50ZXJzZWN0aW9uXV0gZm9yIGEgd2F5IHRvIHJldHJpZXZlIGEgbmV3IGBhbmNob3JQb3NpdGlvbmAgYW5kIGBzdGVtVmVjdG9yYC5cbiAgICpcbiAgICogKipOb3RlKio6IHRoZXNlIGNoYW5nZXMgYXJlIG5vdCBwZXJzaXN0ZWQgYmV0d2VlbiByZWZyZXNoZXMgb2YgU2hvd2Nhc2UuIFRoZXkgYXJlIG9ubHkgdmFsaWQgZm9yIHRoZSBjdXJyZW50IGJyb3dzZXIgc2Vzc2lvbi5cbiAgICogVGhleSBhbHNvIGRvIG5vdCBoYXZlIFwic2hhcmVcIiBidXR0b25zIGFzIHRoZXkgYXNzb2NpYXRlZCB3aXRoIHRoZW0uXG4gICAqXG4gICAqIGBgYHR5cGVzY3JpcHRcbiAgICogbXBTZGsuVGFnLmFkZCh7XG4gICAqICBsYWJlbDogJ05ldyB0YWcnLFxuICAgKiAgZGVzY3JpcHRpb246ICdUaGlzIHRhZyB3YXMgYWRkZWQgdGhyb3VnaCB0aGUgTWF0dGVycG9ydCBTREsnLFxuICAgKiAgYW5jaG9yUG9zaXRpb246IHtcbiAgICogICAgeDogMCxcbiAgICogICAgeTogMCxcbiAgICogICAgejogMCxcbiAgICogIH0sXG4gICAqICBzdGVtVmVjdG9yOiB7IC8vIG1ha2UgdGhlIFRhZyBzdGljayBzdHJhaWdodCB1cCBhbmQgbWFrZSBpdCAwLjMwIG1ldGVycyAofjEgZm9vdCkgdGFsbFxuICAgKiAgICB4OiAwLFxuICAgKiAgICB5OiAwLjMwLFxuICAgKiAgICB6OiAwLFxuICAgKiAgfSxcbiAgICogIGNvbG9yOiB7IC8vIGJsdWUgZGlzY1xuICAgKiAgICByOiAwLjAsXG4gICAqICAgIGc6IDAuMCxcbiAgICogICAgYjogMS4wLFxuICAgKiAgfSxcbiAgICogfSwge1xuICAgKiAgbGFiZWw6ICdOZXcgdGFnIDInLFxuICAgKiAgYW5jaG9yUG9zaXRpb246IHtcbiAgICogICAgeDogMSxcbiAgICogICAgeTogMixcbiAgICogICAgejogMyxcbiAgICogIH0sXG4gICAqICBzdGVtVmVjdG9yOiB7XG4gICAqICAgIHg6ICxcbiAgICogICAgeTogLFxuICAgKiAgICB6OiAsXG4gICAqICB9XG4gICAqIH0pO1xuICAgKiBgYGBcbiAgICpcbiAgICogQHBhcmFtIHRhZ3MgVGhlIGRlc2NyaXB0b3JzIGZvciBhbGwgVGFncyB0byBiZSBhZGRlZC5cbiAgICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCB0aGUgYXJyYXkgb2YgaWRzIGZvciB0aGUgbmV3bHkgYWRkZWQgVGFncy5cbiAgICpcbiAgICogQGVtYmVkXG4gICAqIEBidW5kbGVcbiAgICogQGludHJvZHVjZWQgMy4xLjY4LjEyLTctZzg1ODY4ODk0NGFcbiAgICovXG4gIGFkZCguLi50YWdzOiBUYWcuRGVzY3JpcHRvcltdKTogUHJvbWlzZTxzdHJpbmdbXT47XG5cbiAgLyoqXG4gICAqIFNldHMgdGhlIGFsbG93ZWQgXCJkZWZhdWx0XCIgU2hvd2Nhc2UgYWN0aW9ucyBvbiBhIFRhZyBmcm9tIG9jY3VycmluZzogaG92ZXIgdG8gb3BlbiBiaWxsYm9hcmQsIGNsaWNrIHRvIG5hdmlnYXRlIHRvIHZpZXcuXG4gICAqIElmIGFuIGFjdGlvbiBpcyBvbW1pdGVkIGZyb20gdGhlIGFjdGlvbnMgYXJndW1lbnQsIGl0IHdpbGwgYmUgY29uc2lkZXJlZCBmYWxzZSBieSBkZWZhdWx0LlxuICAgKlxuICAgKiBgYGB0eXBlc2NyaXB0XG4gICAqIGNvbnN0IHRhZ0lkczogc3RyaW5nW107IC8vIC4uLiBhY3F1aXJlZCB0aHJvdWdoIHByZXZpb3VzIGNhbGxzIHRvIGBtcFNkay5UYWcuYWRkYCBvciB0aHJvdWdoIGBtcFNkay5UYWcuZGF0YWBcbiAgICpcbiAgICogLy8gcHJldmVudCBuYXZpZ2F0aW5nIHRvIHRoZSB0YWcgb24gY2xpY2tcbiAgICogY29uc3Qgbm9OYXZpZ2F0aW9uVGFnID0gdGFnSWRzWzBdO1xuICAgKiBtcFNkay5UYWcuYWxsb3dBY3Rpb24obm9OYXZpZ2F0aW9uVGFnLCB7XG4gICAqICAgb3BlbmluZzogdHJ1ZSxcbiAgICogICAvLyBpbXBsaWVzIG5hdmlnYXRpbmc6IGZhbHNlLCBldGNcbiAgICogfSk7XG4gICAqXG4gICAqIC8vIHByZXZlbnQgdGhlIGJpbGxib2FyZCBmcm9tIHNob3dpbmdcbiAgICogY29uc3Qgbm9CaWxsYm9hcmRUYWcgPSB0YWdJZHNbMV07XG4gICAqIG1wU2RrLlRhZy5hbGxvd0FjdGlvbihub0JpbGxib2FyZFRhZywge1xuICAgKiAgIG5hdmlnYXRpbmc6IHRydWUsXG4gICAqICAgLy8gaW1wbGllcyBvcGVuaW5nOiBmYWxzZSwgZXRjXG4gICAqIH0pO1xuICAgKlxuICAgKiBjb25zdCBub0FjdGlvbnNUYWcgPSB0YWdJZHNbMl07XG4gICAqIG1wU2RrLlRhZy5hbGxvd0FjdGlvbihub0FjdGlvbnNUYWcsIHtcbiAgICogICAvLyBpbXBsaWVzIG9wZW5pbmc6IGZhbHNlIGFuZCBuYXZpZ2F0aW5nOiBmYWxzZSwgZXRjXG4gICAqIH0pO1xuICAgKiBgYGBcbiAgICpcbiAgICogQHBhcmFtIGlkIFRoZSBpZCBvZiB0aGUgVGFnIHRvIGNoYW5nZSB0aGUgYWxsb3dlZCBhY3Rpb25zXG4gICAqIEBwYXJhbSBhY3Rpb25zIFRoZSBzZXQgb2YgYWN0aW9ucyBhbGxvd2VkIG9uIHRoZSBUYWdcbiAgICpcbiAgICogQGVtYmVkXG4gICAqIEBidW5kbGVcbiAgICogQGludHJvZHVjZWQgMy4xLjY4LjEyLTctZzg1ODY4ODk0NGFcbiAgICovXG4gIGFsbG93QWN0aW9uKGlkOiBzdHJpbmcsIGFjdGlvbnM6IFBhcnRpYWw8VGFnLkFsbG93YWJsZUFjdGlvbnM+KTogUHJvbWlzZTx2b2lkPjtcblxuICAvKipcbiAgICogT3BlbiBhIHRhZyBhbmQgZGlzcGxheSBpdHMgYmlsbGJvYXJkLlxuICAgKiBPcGVuaW5nIGEgc2Vjb25kIHRhZyB3aWxsIGNsb3NlIHRoZSBmaXJzdC5cbiAgICpcbiAgICogYGBgdHlwZXNjcmlwdFxuICAgKiBtcFNkay5UYWcub3Blbih0YWdJZCk7XG4gICAqXG4gICAqIC8vIGlmIHRoZSB0YWcgaGFzIGhhZCBpdHMgYGRvY2tgIG9wdGlvbiByZW1vdmVkIHRocm91Z2ggYSBjYWxsIHRvIGBUYWcuYWxsb3dBY3Rpb25gLCBpdCBjYW4gYmUgYGZvcmNlYGQgb3BlblxuICAgKiBtcFNkay5UYWcuYWxsb3dBY3Rpb24odGFnSWQsIHtcbiAgICogICBvcGVuaW5nOiBmYWxzZSxcbiAgICogfSk7XG4gICAqIG1wU2RrLlRhZy5vcGVuKHRhZ0lkLFxuICAgKiAgIGZvcmNlOiB0cnVlLFxuICAgKiB9KTtcbiAgICogYGBgXG4gICAqXG4gICAqIEBwYXJhbSBpZFxuICAgKiBAcGFyYW0gb3B0aW9uc1xuICAgKlxuICAgKiBAZW1iZWRcbiAgICogQGJ1bmRsZVxuICAgKiBAaW50cm9kdWNlZCAyMy4yLjFcbiAgICovXG4gIG9wZW4oaWQ6IHN0cmluZywgb3B0aW9ucz86IFBhcnRpYWw8VGFnLk9wZW5PcHRpb25zPik6IFByb21pc2U8dm9pZD47XG5cbiAgLyoqXG4gICAqIENsb3NlIGEgdGFnIGFuZCBpdHMgYmlsbGJvYXJkIG9yIGRvY2suXG4gICAqXG4gICAqIGBgYHR5cGVzY3JpcHRcbiAgICogY29uc3QgdGFnSWQ6IHN0cmluZzsgLy8gLi4uIGFjcXVpcmVkIHRocm91Z2ggcHJldmlvdXMgY2FsbHMgdG8gYG1wU2RrLlRhZy5hZGRgIG9yIHRocm91Z2ggYG1wU2RrLlRhZy5kYXRhYFxuICAgKiBtcFNkay5UYWcub3Blbih0YWdJZCk7XG4gICAqIG1wU2RrLlRhZy5jbG9zZSh0YWdJZCk7XG4gICAqIGBgYFxuICAgKlxuICAgKiBAcGFyYW0gaWRcbiAgICogQGVtYmVkXG4gICAqIEBidW5kbGVcbiAgICogQGludHJvZHVjZWQgMjMuMi4xXG4gICAqL1xuICBjbG9zZShpZDogc3RyaW5nKTogUHJvbWlzZTx2b2lkPjtcblxuICAvKipcbiAgICogT3BlbiBhIHRhZyBpbiB0aGUgZG9ja2VkIHZpZXcuXG4gICAqXG4gICAqIGBgYHR5cGVzY3JpcHRcbiAgICogY29uc3QgdGFnSWQ6IHN0cmluZzsgLy8gLi4uIGFjcXVpcmVkIHRocm91Z2ggcHJldmlvdXMgY2FsbHMgdG8gYG1wU2RrLlRhZy5hZGRgIG9yIHRocm91Z2ggYG1wU2RrLlRhZy5kYXRhYFxuICAgKiBtcFNkay5UYWcuZG9jayh0YWdJZCk7XG4gICAqIGBgYFxuICAgKlxuICAgKiBAcGFyYW0gaWRcbiAgICogQHBhcmFtIG9wdGlvbnNcblxuICAgKiBAZW1iZWRcbiAgICogQGJ1bmRsZVxuICAgKiBAaW50cm9kdWNlZCAyMy4yLjFcbiAgICovXG4gIGRvY2soaWQ6IHN0cmluZywgb3B0aW9ucz86IFBhcnRpYWw8VGFnLk9wZW5PcHRpb25zPik6IFByb21pc2U8dm9pZD47XG5cbiAgLyoqXG4gICAqIEVkaXQgdGhlIHRleHQgY29udGVudCBpbiBhIFRhZydzIGJpbGxib2FyZC5cbiAgICpcbiAgICogKipOb3RlKio6IHRoZXNlIGNoYW5nZXMgYXJlIG5vdCBwZXJzaXN0ZWQgYmV0d2VlbiByZWZyZXNoZXMgb2YgU2hvd2Nhc2UuIFRoZXkgYXJlIG9ubHkgdmFsaWQgZm9yIHRoZSBjdXJyZW50IGJyb3dzZXIgc2Vzc2lvbi5cbiAgICpcbiAgICogYGBgdHlwZXNjcmlwdFxuICAgKiBtcFNkay5UYWcuZWRpdEJpbGxib2FyZChpZCwge1xuICAgKiAgIGxhYmVsOiAnVGhpcyBpcyBhIG5ldyB0aXRsZScsXG4gICAqICAgZGVzY3JpcHRpb246ICdUaGlzIGltYWdlIHdhcyBzZXQgZHluYW1pY2FsbHkgYnkgdGhlIFNob3djYXNlIHNkaycsXG4gICAqIH0pO1xuICAgKiBgYGBcbiAgICogQHBhcmFtIGlkIHRoZSBpZCBvZiB0aGUgVGFnIHRvIGVkaXRcbiAgICogQHBhcmFtIHByb3BlcnRpZXMgQSBkaWN0aW9uYXJ5IG9mIHByb3BlcnRpZXMgdG8gc2V0XG4gICAqXG4gICAqIEBlbWJlZFxuICAgKiBAYnVuZGxlXG4gICAqIEBpbnRyb2R1Y2VkIDMuMS42OC4xMi03LWc4NTg2ODg5NDRhXG4gICAqL1xuICBlZGl0QmlsbGJvYXJkKGlkOiBzdHJpbmcsIHByb3BlcnRpZXM6IFBhcnRpYWw8VGFnLkVkaXRhYmxlUHJvcGVydGllcz4pOiBQcm9taXNlPHZvaWQ+O1xuXG5cbiAgLyoqXG4gICAqIEVkaXQgdGhlIGNvbG9yIG9mIGEgVGFnJ3MgZGlzYy5cbiAgICpcbiAgICogYGBgdHlwZXNjcmlwdFxuICAgKiBjb25zdCB0YWdJZHM6IHN0cmluZ1tdOyAvLyAuLi4gYWNxdWlyZWQgdGhyb3VnaCBwcmV2aW91cyBjYWxscyB0byBgbXBTZGsuVGFnLmFkZGAgb3IgdGhyb3VnaCBgbXBTZGsuVGFnLmRhdGFgXG4gICAqXG4gICAqIC8vIGNoYW5nZSB0aGUgZmlyc3QgVGFnIHRvIHllbGxvd1xuICAgKiBtcFNkay5UYWcuZWRpdENvbG9yKHRhZ0lkc1swXSwge1xuICAgKiAgIHI6IDAuOSxcbiAgICogICBnOiAwLFxuICAgKiAgIGI6IDAuOSxcbiAgICogfSk7XG4gICAqIGBgYFxuICAgKlxuICAgKiBAcGFyYW0gaWQgVGhlIGlkIG9mIHRoZSBUYWcgdG8gZWRpdFxuICAgKiBAcGFyYW0gY29sb3IgVGhlIG5ldyBjb2xvciB0byBiZSBhcHBsaWVkIHRvIHRoZSBUYWcgZGlzY1xuICAgKlxuICAgKiBAZW1iZWRcbiAgICogQGJ1bmRsZVxuICAgKiBAaW50cm9kdWNlZCAzLjEuNjguMTItNy1nODU4Njg4OTQ0YVxuICAgKi9cbiAgZWRpdENvbG9yKGlkOiBzdHJpbmcsIGNvbG9yOiBDb2xvcik6IFByb21pc2U8dm9pZD47XG5cbiAgLyoqXG4gICAqIENoYW5nZSB0aGUgaWNvbiBvZiB0aGUgVGFnIGRpc2MuIEljb25zIGNhbiBiZSByZWdpc3RlcmVkIGFzc2V0IHRleHR1cmVzIG9yIGZvbnQgaWRzIHByb3ZpZGVkIGJ5IHRoZSBwbGF5ZXIuXG4gICAqIFN1cHBvcnRlZCBmb250IGlkcyBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly9tYXR0ZXJwb3J0LmdpdGh1Yi5pby9zaG93Y2FzZS1zZGsvdGFnc19pY29uc19yZWZlcmVuY2UuaHRtbC5cbiAgICpcbiAgICogKipOb3RlKio6IHRoZXNlIGNoYW5nZXMgYXJlIG5vdCBwZXJzaXN0ZWQgYmV0d2VlbiByZWZyZXNoZXMgb2YgU2hvd2Nhc2UuIFRoZXkgYXJlIG9ubHkgdmFsaWQgZm9yIHRoZSBjdXJyZW50IGJyb3dzZXIgc2Vzc2lvbi5cbiAgICpcbiAgICogYGBgdHlwZXNjcmlwdFxuICAgKiAvLyBjaGFuZ2UgdGhlIGljb24gb2YgdGhlIFRhZyB1c2luZyB0aGUgaWQgdXNlZCBpbiBhIHByZXZpb3VzIGBBc3NldC5yZWdpc3RlclRleHR1cmVgIGNhbGxcbiAgICogbXBTZGsuVGFnLmVkaXRJY29uKGlkLCAnY3VzdG9tSWNvbklkJyk7XG4gICAqIGBgYFxuICAgKlxuICAgKiBgYGB0eXBlc2NyaXB0XG4gICAqIC8vIGNoYW5nZSB0aGUgaWNvbiBvZiB0aGUgVGFnIHRvIGEgZm9udCBpZC5cbiAgICogbXBTZGsuVGFnLmVkaXRJY29uKGlkLCAncHVibGljX2J1aWxkaW5nc19hcGFydG1lbnQnKTtcbiAgICogYGBgXG4gICAqXG4gICAqIEBwYXJhbSB0YWdJZCBUaGUgaWQgb2YgdGhlIFRhZyB0byBlZGl0XG4gICAqIEBwYXJhbSBpY29uSWQgVGhlIGlkIG9mIHRoZSBpY29uIHRvIGFwcGx5XG4gICAqXG4gICAqIEBlbWJlZFxuICAgKiBAYnVuZGxlXG4gICAqIEBpbnRyb2R1Y2VkIDMuMS42OC4xMi03LWc4NTg2ODg5NDRhXG4gICAqL1xuICBlZGl0SWNvbih0YWdJZDogc3RyaW5nLCBpY29uSWQ6IHN0cmluZyk6IFByb21pc2U8dm9pZD47XG5cbiAgLyoqXG4gICAqIEVkaXQgdGhlIG9wYWNpdHkgb2YgYSBUYWcuXG4gICAqXG4gICAqIEEgY29tcGxldGVseSB0cmFuc3BhcmVudC9pbnZpc2libGUgVGFnIGlzIHN0aWxsIGludGVyYWN0YWJsZSBhbmQgd2lsbCByZXNwb25kIHRvIG1vdXNlIGhvdmVycyBhbmQgY2xpY2tzLlxuICAgKlxuICAgKiBgYGB0eXBlc2NyaXB0XG4gICAqIGNvbnN0IHRhZ0lkczogc3RyaW5nW107IC8vIC4uLiBhY3F1aXJlZCB0aHJvdWdoIHByZXZpb3VzIGNhbGxzIHRvIGBtcFNkay5UYWcuYWRkYCBvciB0aHJvdWdoIGBtcFNkay5UYWcuZGF0YWBcbiAgICogLy8gbWFrZSB0aGUgZmlyc3QgVGFnIGludmlzaWJsZVxuICAgKiBtcFNkay5UYWcuZWRpdE9wYWNpdHkodGFnSWRzWzBdLCAwKTtcbiAgICpcbiAgICogLy8gbWFrZSBhbm90aGVyIFRhZyB0cmFuc3BhcmVudFxuICAgKiBtcFNkay5UYWcuZWRpdE9wYWNpdHkodGFnSWRzWzFdLCAwLjUpO1xuICAgKlxuICAgKiAvLyBhbmQgYW5vdGhlciBjb21wbGV0ZWx5IG9wYXF1ZVxuICAgKiBtcFNkay5UYWcuZWRpdE9wYWNpdHkodGFnSWRzWzJdLCAxKTtcbiAgICogYGBgXG4gICAqXG4gICAqIEBwYXJhbSBpZCBUaGUgaWQgb2YgdGhlIFRhZyB0byBlZGl0XG4gICAqIEBwYXJhbSBvcGFjaXR5IFRoZSB0YXJnZXQgb3BhY2l0eSBmb3IgdGhlIFRhZyBpbiB0aGUgcmFuZ2Ugb2YgWzAsIDFdXG4gICAqXG4gICAqIEBlbWJlZFxuICAgKiBAYnVuZGxlXG4gICAqIEBpbnRyb2R1Y2VkIDMuMS42OC4xMi03LWc4NTg2ODg5NDRhXG4gICAqL1xuICBlZGl0T3BhY2l0eShpZDogc3RyaW5nLCBvcGFjaXR5OiBudW1iZXIpOiBQcm9taXNlPHZvaWQ+O1xuXG5cbiAgLyoqXG4gICAqIEVkaXQgdGhlIHN0ZW0gb2YgYSBUYWdcbiAgICpcbiAgICogYGBgdHlwZXNjcmlwdFxuICAgKiBjb25zdCB0YWdJZDogc3RyaW5nID0gdGFnRGF0YVswXS5pZDsgLy8gLi4uIGFjcXVpcmVkIHRocm91Z2ggYSBwcmV2aW91cyBjYWxsIHRvIGBtcFNkay5UYWcuYWRkYCBvciB0aHJvdWdoIGBtcFNkay5UYWcuZGF0YWBcbiAgICpcbiAgICogLy8gbWFrZSB0aGUgZmlyc3QgVGFnIGhhdmUgYW4gaW52c2libGUgc3RlbVxuICAgKiBtcFNkay5UYWcuZWRpdFN0ZW0odGFnSWQsIHtzdGVtVmlzaWJsZTogZmFsc2V9KTtcbiAgICpcbiAgICogLy8gbWFrZSBhbm90aGVyIFRhZyBoYXZlIGEgbG9uZyBzdGVtXG4gICAqIG1wU2RrLlRhZy5lZGl0U3RlbSh0YWdJZCwge3N0ZW1IZWlnaHQ6IDF9KTtcbiAgICogYGBgXG4gICAqXG4gICAqIEBwYXJhbSB0YWdTaWQgVGhlIHNpZCBvZiB0aGUgVGFnIHRvIGVkaXRcbiAgICogQHBhcmFtIHN0ZW1PcHRpb25zIFdoYXQgdG8gY2hhbmdlIGFib3V0IHRoZSBUYWcncyBzdGVtIC0gY2FuIGluY2x1ZGUgc3RlbUhlaWdodCBhbmQgc3RlbVZpc2libGVcbiAgICpcbiAgICogQGVtYmVkXG4gICAqIEBidW5kbGVcbiAgICogQGludHJvZHVjZWQgMy4xLjcwLjEwLTAtZ2U5Y2I4M2IyOGNcbiAgICovXG4gIGVkaXRTdGVtKHRhZ1NpZDogc3RyaW5nLCBvcHRpb25zOiBQYXJ0aWFsPFRhZy5TdGVtSGVpZ2h0RWRpdE9wdGlvbnM+KTogUHJvbWlzZTx2b2lkPjtcblxuICAvKipcbiAgICogTW92ZSBhbmQgcmVvcmllbnQgYSBUYWcuXG4gICAqXG4gICAqIFNlZSBbW1BvaW50ZXIuaW50ZXJzZWN0aW9uXV0gZm9yIGEgd2F5IHRvIHJldHJpZXZlIGEgbmV3IGBhbmNob3JQb3NpdGlvbmAgYW5kIGBzdGVtVmVjdG9yYC5cbiAgICpcbiAgICogKipOb3RlKio6IHRoZXNlIGNoYW5nZXMgYXJlIG5vdCBwZXJzaXN0ZWQgYmV0d2VlbiByZWZyZXNoZXMgb2YgU2hvd2Nhc2UuIFRoZXkgYXJlIG9ubHkgdmFsaWQgZm9yIHRoZSBjdXJyZW50IGJyb3dzZXIgc2Vzc2lvbi5cbiAgICpcbiAgICogYGBgdHlwZXNjcmlwdFxuICAgKiBjb25zdCB0YWdJZDogc3RyaW5nOyAvLyAuLi4gYWNxdWlyZWQgdGhyb3VnaCBhIHByZXZpb3VzIGNhbGwgdG8gYG1wU2RrLlRhZy5hZGRgIG9yIHRocm91Z2ggYG1wU2RrLlRhZy5kYXRhYFxuICAgKlxuICAgKiBtcFNkay5UYWcuZWRpdFBvc2l0aW9uKHRhZ0lkLCB7XG4gICAqICBhbmNob3JQb3NpdGlvbjoge1xuICAgKiAgICB4OiAwLFxuICAgKiAgICB5OiAwLFxuICAgKiAgICB6OiAwLFxuICAgKiAgfSxcbiAgICogIHN0ZW1WZWN0b3I6IHsgLy8gbWFrZSB0aGUgVGFnIHN0aWNrIHN0cmFpZ2h0IHVwIGFuZCBtYWtlIGl0IDAuMzAgbWV0ZXJzICh+MSBmb290KSB0YWxsXG4gICAqICAgIHg6IDAsXG4gICAqICAgIHk6IDAuMzAsXG4gICAqICAgIHo6IDAsXG4gICAqICB9LFxuICAgKiB9KTtcbiAgICogYGBgXG4gICAqIEBwYXJhbSBpZCBUaGUgaWQgb2YgdGhlIFRhZyB0byByZXBvc2l0aW9uXG4gICAqIEBwYXJhbSBvcHRpb25zIFRoZSBuZXcgYW5jaG9yUG9zaXRpb24sIHN0ZW1WZWN0b3IgYW5kL29yIHJvb21JZCB0byBhc3NvY2lhdGUgdGhlIHRhZyB3aXRoLlxuICAgKlxuICAgKiBAZW1iZWRcbiAgICogQGJ1bmRsZVxuICAgKiBAaW50cm9kdWNlZCAzLjEuNjguMTItNy1nODU4Njg4OTQ0YVxuICAgKi9cbiAgZWRpdFBvc2l0aW9uKGlkOiBzdHJpbmcsIG9wdGlvbnM6IFBhcnRpYWw8VGFnLlBvc2l0aW9uT3B0aW9ucz4pOiBQcm9taXNlPHZvaWQ+O1xuXG4gIC8qKlxuICAgKiBNb3ZlIGFuZCByZW9yaWVudCBhIGxpc3Qgb2YgVGFncy4gUHJlZmVyIHRvIGNhbGwgdGhpcyBtZXRob2Qgb25jZSBvdmVyIGNhbGxpbmcgW1tUYWcuZWRpdFBvc2l0aW9uXV0gbXVsdGlwbGUgdGltZXMuXG4gICAqXG4gICAqIGBgYFxuICAgKiBjb25zdCBuZXdSb29tSWQ7IC8vIHByZWNvbXB1dGVkIHJvb20gaWRcbiAgICogY29uc3QgdGFnSWQxLCB0YWdJZDIsIHRhZ0lkMzsgLy8gcHJlZGV0ZXJtaW5lZCB0YWcgaWRzLlxuICAgKiBjb25zdCB0YWdJZHM6IE1wU2RrLlRhZy5FZGl0UG9zaXRpb25EZXNjcmlwdG9yW10gPSBbXTsgLy8gYW4gYXJyYXkgb2YgdGFnIGVkaXQgcG9zaXRpb24gZGVzY3JpcHRvcnNcbiAgICpcbiAgICogLy8gdXBkYXRlcyBhbmNob3JQb3NpdGlvbiBmb3IgdGFnMVxuICAgKiB0YWdJZHMucHVzaCh7XG4gICAqICAgaWQ6IHRhZzEsXG4gICAqICAgb3B0aW9uczoge1xuICAgKiAgICAgYW5jaG9yUG9zaXRpb246IHtcbiAgICogICAgICAgeDogMCxcbiAgICogICAgICAgeTogMCxcbiAgICogICAgICAgejogMCxcbiAgICogICAgIH0sXG4gICAqICAgfSxcbiAgICogfSk7XG4gICAqXG4gICAqIC8vIHVwZGF0ZXMgcm9vbUlkIGZvciB0YWcyXG4gICAqIHRhZ0lkcy5wdXNoKHtcbiAgICogICBpZDogdGFnMixcbiAgICogICBvcHRpb25zOiB7XG4gICAqICAgICByb29tSWQ6IG5ld1Jvb21JZCxcbiAgICogICB9LFxuICAgKiB9KTtcbiAgICpcbiAgICogLy8gdXBkYXRlcyBzdGVtVmVjdG9yIGZvciB0YWczXG4gICAqIHRhZ0lkcy5wdXNoKHtcbiAgICogICBpZDogdGFnMyxcbiAgICogICBvcHRpb25zOiB7XG4gICAqICAgICBzdGVtVmVjdG9yOiB7IC8vIG1ha2UgdGhlIFRhZyBzdGljayBzdHJhaWdodCB1cCBhbmQgbWFrZSBpdCAwLjMwIG1ldGVycyAofjEgZm9vdCkgdGFsbFxuICAgKiAgICAgICB4OiAwLFxuICAgKiAgICAgICB5OiAwLjMwLFxuICAgKiAgICAgICB6OiAwLFxuICAgKiAgICAgfSxcbiAgICogICB9LFxuICAgKiB9KTtcbiAgICpcbiAgICogLy8gYXBwbHkgYnVsayB1cGRhdGVzXG4gICAqIGF3YWl0IG1wU2RrLlRhZy5lZGl0UG9zaXRpb25zKC4uLnRhZ0lkcyk7XG4gICAqXG4gICAqIGBgYFxuICAgKiBAcGFyYW0gdGFncyBUaGUgZWRpdCBwb3NpdGlvbiBkZXNjcmlwdG9ycyBmb3IgYWxsIFRhZ3MgdG8gYmUgbW9kaWZpZWQuXG4gICAqL1xuICBlZGl0UG9zaXRpb25zKC4uLnRhZ3M6IFRhZy5FZGl0UG9zaXRpb25EZXNjcmlwdG9yW10pOiBQcm9taXNlPHZvaWQ+O1xuXG4gIC8qKlxuICAgKiBSZW1vdmVzIG9uZSBvciBtb3JlIFRhZ3MgZnJvbSBTaG93Y2FzZS5cbiAgICpcbiAgICogKipOb3RlKio6IHRoZXNlIGNoYW5nZXMgYXJlIG5vdCBwZXJzaXN0ZWQgYmV0d2VlbiByZWZyZXNoZXMgb2YgU2hvd2Nhc2UuIFRoZXkgYXJlIG9ubHkgdmFsaWQgZm9yIHRoZSBjdXJyZW50IGJyb3dzZXIgc2Vzc2lvbi5cbiAgICpcbiAgICogYGBgdHlwZXNjcmlwdFxuICAgKiBjb25zdCB0YWdJZHM6IHN0cmluZ1tdOyAvLyAuLi4gYWNxdWlyZWQgdGhyb3VnaCBhIHByZXZpb3VzIGNhbGwgdG8gYG1wU2RrLlRhZy5hZGRgIG9yIHRocm91Z2ggYG1wU2RrLlRhZy5kYXRhYFxuICAgKiAvLyByZW1vdmUgb25lIHRhZ1xuICAgKiBtcFNkay5UYWcucmVtb3ZlKHRhZ0lkc1swXSk7XG4gICAqXG4gICAqIC8vIG9yIHJlbW92ZSBtdWx0aXBsZSBhdCB0aGUgc2FtZSB0aW1lXG4gICAqIG1wU2RrLlRhZy5yZW1vdmUoLi4udGFnSWRzKTtcbiAgICogYGBgXG4gICAqIEBwYXJhbSBpZHMgVGhlIFRhZ3MnIGlkcyB0byBiZSByZW1vdmVkLlxuICAgKiBAcmV0dXJucyBBIHByb21pc2Ugd2l0aCBhbiBhcnJheSBvZiBUYWcgaWRzIHRoYXQgd2VyZSBhY3R1YWxseSByZW1vdmVkLlxuICAgKlxuICAgKiBAZW1iZWRcbiAgICogQGJ1bmRsZVxuICAgKiBAaW50cm9kdWNlZCAzLjEuNjguMTItNy1nODU4Njg4OTQ0YVxuICAgKi9cbiAgcmVtb3ZlKC4uLmlkczogc3RyaW5nW10pOiBQcm9taXNlPHN0cmluZ1tdPjtcblxuICAvKipcbiAgICogUmVzZXRzIHRoZSBpY29uIG9mIHRoZSBUYWcgZGlzYyBiYWNrIHRvIGl0cyBvcmlnaW5hbCBpY29uLlxuICAgKlxuICAgKiBgYGB0eXBlc2NyaXB0XG4gICAqIGNvbnN0IHRhZ0lkczogc3RyaW5nW107IC8vIC4uLiBhY3F1aXJlZCB0aHJvdWdoIGEgcHJldmlvdXMgY2FsbCB0byBgbXBTZGsuVGFnLmFkZGAgb3IgdGhyb3VnaCBgbXBTZGsuVGFnLmRhdGFgXG4gICAqXG4gICAqIC8vIHJlc2V0IHRoZSBpY29uIG9mIHRoZSBmaXJzdCBUYWcgdG8gaXRzIG9yaWdpbmFsXG4gICAqIG1wU2RrLlRhZy5yZXNldEljb24odGFnSWRzWzBdLmlkKTtcbiAgICogYGBgXG4gICAqXG4gICAqIEBwYXJhbSBpZCBUaGUgaWQgb2YgdGhlIFRhZyB0byByZXNldFxuICAgKlxuICAgKiBAZW1iZWRcbiAgICogQGJ1bmRsZVxuICAgKiBAaW50cm9kdWNlZCAzLjEuNjguMTItNy1nODU4Njg4OTQ0YVxuICAgKi9cbiAgcmVzZXRJY29uKGlkOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+O1xuXG4gIC8qKlxuICAgKiBUb2dnbGUgdGhlIG92ZXJoZWFkIG5hdmlnYXRpb24gVUlcbiAgICpcbiAgICogYGBgdHlwZXNjcmlwdFxuICAgKiAvLyBoaWRlIHRoZSBjb250cm9sc1xuICAgKiBtcFNkay5UYWcudG9nZ2xlTmF2Q29udHJvbHMoZmFsc2UpO1xuICAgKlxuICAgKiAvLyBzaG93IHRoZSBjb250cm9sc1xuICAgKiBtcFNkay5UYWcudG9nZ2xlTmF2Q29udHJvbHModHJ1ZSk7XG4gICAqXG4gICAqIC8vIHRvZ2dsZSB0aGUgY3VycmVudCB2aXNpYmlsaXR5IG9mIHRoZSBjb250cm9sc1xuICAgKiBtcFNkay5UYWcudG9nZ2xlTmF2Q29udHJvbHMoKTtcbiAgICogYGBgXG4gICAqIEBwYXJhbSBlbmFibGVcbiAgICpcbiAgICogQGVtYmVkXG4gICAqIEBidW5kbGVcbiAgICogQGludHJvZHVjZWQgMjMuMy4xXG4gICAqL1xuICB0b2dnbGVOYXZDb250cm9scyhlbmFibGU/OiBib29sZWFuKTogUHJvbWlzZTx2b2lkPjtcblxuICAvKipcbiAgICogVG9nZ2xlIHRoZSBkb2NrIHNldHRpbmcgdG8gaGlkZSBkb2NrIGJ1dHRvbnMgaW4gYWxsIHRhZ3MuXG4gICAqXG4gICAqIERpc2FibGluZyB0aGUgZG9jayBzZXR0aW5nIHdpbGwgcmVtb3ZlIHRoZSBkb2NrIGJ1dHRvbnMgZnJvbSBhbGwgdGFncy5cbiAgICogRW5hYmxpbmcgdGhlIGRvY2sgc2V0dGluZyBkb2VzIG5vdCBhdXRvbWF0aWNhbGx5IHNob3cgdGhlIGRvY2sgYnV0dG9uIGluIGFsbCB0YWdzLlxuICAgKiBUaGUgZG9jayBidXR0b24gd2lsbCBvbmx5IGJlIGRpc3BsYXllZCBpbiBhIHRhZyBpZiBib3RoIHRoZSBkb2NrIHNldHRpbmcgaXMgdHJ1ZSBhbmQgZG9ja2luZyBpcyBhbGxvd2VkIGJ5IHRoZSB0YWcgKHNlZSBbW1RhZy5hbGxvd0FjdGlvbl1dKS5cbiAgICpcbiAgICogYGBgdHlwZXNjcmlwdFxuICAgKiAvLyBoaWRlIHRoZSBkb2NrIGJ1dHRvbnNcbiAgICogbXBTZGsuVGFnLnRvZ2dsZURvY2tpbmcoZmFsc2UpO1xuICAgKlxuICAgKiAvLyBzaG93IHRoZSBkb2NrIGJ1dHRvbnNcbiAgICogbXBTZGsuVGFnLnRvZ2dsZURvY2tpbmcodHJ1ZSk7XG4gICAqXG4gICAqIC8vIHRvZ2dsZSB0aGUgY3VycmVudCB2aXNpYmlsaXR5IG9mIHRoZSBkb2NrIGJ1dHRvbnNcbiAgICogbXBTZGsuVGFnLnRvZ2dsZURvY2tpbmcoKTtcbiAgICogYGBgXG4gICAqIEBwYXJhbSBlbmFibGVcbiAgICpcbiAgICogQGVtYmVkXG4gICAqIEBidW5kbGVcbiAgICogQGludHJvZHVjZWQgMjMuNC4yXG4gICAqL1xuICB0b2dnbGVEb2NraW5nKGVuYWJsZT86IGJvb2xlYW4pOiBQcm9taXNlPHZvaWQ+O1xuXG4gIC8qKlxuICAgKiBUb2dnbGUgdGhlIHNoYXJlIHNldHRpbmcgdG8gaGlkZSBzaGFyZSBidXR0b25zIGluIGFsbCB0YWdzLlxuICAgKlxuICAgKiBEaXNhYmxpbmcgdGhlIHNoYXJlIHNldHRpbmcgd2lsbCByZW1vdmUgdGhlIHNoYXJlIGJ1dHRvbnMgZnJvbSBhbGwgdGFncy5cbiAgICogRW5hYmxpbmcgdGhlIHNoYXJlIHNldHRpbmcgZG9lcyBub3QgYXV0b21hdGljYWxseSBzaG93IHRoZSBzaGFyZSBidXR0b24gaW4gYWxsIHRhZ3MuXG4gICAqIFRoZSBzaGFyZSBidXR0b24gd2lsbCBvbmx5IGJlIGRpc3BsYXllZCBpbiBhIHRhZyBpZiBib3RoIHRoZSBzaGFyZSBzZXR0aW5nIGlzIHRydWUgYW5kIHNoYXJpbmcgaXMgYWxsb3dlZCBieSB0aGUgdGFnIChzZWUgW1tUYWcuYWxsb3dBY3Rpb25dXSkuXG4gICAqXG4gICAqIGBgYHR5cGVzY3JpcHRcbiAgICogLy8gaGlkZSB0aGUgc2hhcmUgYnV0dG9uc1xuICAgKiBtcFNkay5UYWcudG9nZ2xlU2hhcmluZyhmYWxzZSk7XG4gICAqXG4gICAqIC8vIHNob3cgdGhlIHNoYXJlIGJ1dHRvbnNcbiAgICogbXBTZGsuVGFnLnRvZ2dsZVNoYXJpbmcodHJ1ZSk7XG4gICAqXG4gICAqIC8vIHRvZ2dsZSB0aGUgY3VycmVudCB2aXNpYmlsaXR5IG9mIHRoZSBzaGFyZSBidXR0b25zXG4gICAqIG1wU2RrLlRhZy50b2dnbGVTaGFyaW5nKCk7XG4gICAqIGBgYFxuICAgKiBAcGFyYW0gZW5hYmxlXG4gICAqXG4gICAqIEBlbWJlZFxuICAgKiBAYnVuZGxlXG4gICAqIEBpbnRyb2R1Y2VkIDIzLjQuMlxuICAgKi9cbiAgdG9nZ2xlU2hhcmluZyhlbmFibGU/OiBib29sZWFuKTogUHJvbWlzZTx2b2lkPjtcbn1cbiIsImltcG9ydCB0eXBlIHsgSU9ic2VydmFibGUsIFZlY3RvcjMgfSBmcm9tICcuL2dsb2JhbCc7XG5pbXBvcnQgdHlwZSB7IE1vZGUgfSBmcm9tICcuL21vZGUnO1xuXG4vKipcbiAqIFNhbXBsZSBjdXN0b20gdG91ci5cbiAqXG4gKiBgYGBcbiAqIGNvbnN0IGNvbm5lY3QgPSBmdW5jdGlvbihzZGspIHtcbiAqICAgY29uc3QgbXBTZGsgPSBzZGs7XG4gKlxuICogICBtcFNkay5Ub3VyLkV2ZW50Lm9uKFRvdXIuRXZlbnQuU1RFUFBFRCwgZnVuY3Rpb24odG91ckluZGV4KXtcbiAqICAgICBjb25zb2xlLmxvZygnVG91ciBpbmRleCAnICsgdG91ckluZGV4KTtcbiAqICAgfSk7XG4gKiAgIG1wU2RrLlRvdXIuRXZlbnQub24oVG91ci5FdmVudC5TVEFSVEVELCBmdW5jdGlvbigpe1xuICogICAgIGNvbnNvbGUubG9nKCdUb3VyIHN0YXJ0ZWQnKTtcbiAqICAgfSk7XG4gKiAgIG1wU2RrLlRvdXIuRXZlbnQub24oVG91ci5FdmVudC5TVE9QUEVELCBmdW5jdGlvbigpe1xuICogICAgIGNvbnNvbGUubG9nKCdUb3VyIHN0b3BwZWQnKTtcbiAqICAgfSk7XG4gKlxuICogICBtcFNkay5Ub3VyLmdldERhdGEoKVxuICogICAgIC50aGVuKGZ1bmN0aW9uKHRvdXIpIHtcbiAqICAgICAgIGNvbnNvbGUubG9nKCd0b3VyIGhhcyAnICsgdG91ci5sZW5ndGggKyAnIHN0b3BzJyk7XG4gKiAgICAgICByZXR1cm4gbXBTZGsuVG91ci5zdGFydCgwKTtcbiAqICAgICB9KVxuICogICAgIC50aGVuKGZ1bmN0aW9uKCl7XG4gKiAgICAgICAvLyBjb25zb2xlICdUb3VyIHN0YXJ0ZWQnXG4gKiAgICAgICAvLyBjb25zb2xlIC0+ICdUb3VyIGluZGV4IDAnXG4gKiAgICAgICByZXR1cm4gbXBTZGsuVG91ci5uZXh0KCk7XG4gKiAgICAgfSlcbiAqICAgICAudGhlbihmdW5jdGlvbigpe1xuICogICAgICAgLy8gY29uc29sZSAtPiAnVG91ciBpbmRleCAxJ1xuICogICAgICAgcmV0dXJuIG1wU2RrLlRvdXIuc3RlcCgzKTtcbiAqICAgICB9KVxuICogICAgIC50aGVuKGZ1bmN0aW9uKCl7XG4gKiAgICAgICAvLyBjb25zb2xlIC0+ICdUb3VyIGluZGV4IDMnXG4gKiAgICAgICByZXR1cm4gbXBTZGsuVG91ci5wcmV2KCk7XG4gKiAgICAgfSlcbiAqICAgICAudGhlbihmdW5jdGlvbigpe1xuICogICAgICAgLy8gY29uc29sZSAtPiAnVG91ciBpbmRleCAyJ1xuICogICAgICAgLy8gY29uc29sZSAtPiAnVG91ciBzdG9wcGVkJ1xuICogICAgICAgcmV0dXJuIG1wU2RrLlRvdXIuc3RvcCgpO1xuICogICAgIH0pO1xuICogfVxuICogYGBgXG4gKlxuICovXG5leHBvcnQgbmFtZXNwYWNlIFRvdXIge1xuICBleHBvcnQgdHlwZSBTbmFwc2hvdCA9IHtcbiAgICBzaWQ6IHN0cmluZztcbiAgICB0aHVtYm5haWxVcmw6IHN0cmluZztcbiAgICBpbWFnZVVybDogc3RyaW5nO1xuICAgIGlzMzYwOiBib29sZWFuO1xuICAgIG5hbWU6IHN0cmluZztcbiAgICBtb2RlOiBNb2RlLk1vZGUgfCB1bmRlZmluZWQ7XG4gICAgcG9zaXRpb246IFZlY3RvcjM7XG4gICAgcm90YXRpb246IFZlY3RvcjM7XG4gICAgem9vbTogbnVtYmVyO1xuICB9O1xuXG4gIGV4cG9ydCBlbnVtIEV2ZW50IHtcbiAgICAvKiogQGV2ZW50ICovXG4gICAgU1RBUlRFRCA9ICd0b3VyLnN0YXJ0ZWQnLFxuICAgIC8qKiBAZXZlbnQgKi9cbiAgICBTVE9QUEVEID0gJ3RvdXIuc3RvcHBlZCcsXG4gICAgLyoqIEBldmVudCAqL1xuICAgIEVOREVEID0gJ3RvdXIuZW5kZWQnLFxuICAgIC8qKiBAZXZlbnQgKi9cbiAgICBTVEVQUEVEID0gJ3RvdXIuc3RlcHBlZCcsXG4gIH1cblxuICBleHBvcnQgdHlwZSBDdXJyZW50U3RlcERhdGEgPSB7XG4gICAgc3RlcDogc3RyaW5nIHwgbnVsbDtcbiAgICBpbmRleDogbnVtYmVyIHwgbnVsbDtcbiAgfTtcblxuICBleHBvcnQgZW51bSBQbGF5U3RhdGUge1xuICAgIElOQUNUSVZFID0gJ3RvdXIuaW5hY3RpdmUnLFxuICAgIEFDVElWRSA9ICd0b3VyLmFjdGl2ZScsXG4gICAgU1RPUF9TQ0hFRFVMRUQgPSAndG91ci5zdG9wc2NoZWR1bGVkJyxcbiAgfVxuXG4gIGV4cG9ydCB0eXBlIEN1cnJlbnRTdGF0ZURhdGEgPSB7XG4gICAgY3VycmVudDogUGxheVN0YXRlO1xuICB9O1xuXG4gIGV4cG9ydCB0eXBlIEN1cnJlbnRUcmFuc2l0aW9uRGF0YSA9IHtcbiAgICBmcm9tOiBzdHJpbmcgfCBudWxsO1xuICAgIHRvOiBzdHJpbmcgfCBudWxsO1xuICB9O1xufVxuXG5leHBvcnQgZGVjbGFyZSBpbnRlcmZhY2UgVG91ciB7XG4gIEV2ZW50OiB0eXBlb2YgVG91ci5FdmVudDtcbiAgUGxheVN0YXRlOiB0eXBlb2YgVG91ci5QbGF5U3RhdGU7XG4gIC8qKlxuICAgKiBUaGlzIGZ1bmN0aW9uIHN0YXJ0cyB0aGUgdG91ci5cbiAgICpcbiAgICogYGBgXG4gICAqIGNvbnN0IHRvdXJJbmRleCA9IDE7XG4gICAqXG4gICAqIG1wU2RrLlRvdXIuc3RhcnQodG91ckluZGV4KVxuICAgKiAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgKiAgICAgLy8gVG91ciBzdGFydCBjb21wbGV0ZS5cbiAgICogICB9KVxuICAgKiAgIC5jYXRjaChmdW5jdGlvbihlcnJvcikge1xuICAgKiAgICAgLy8gVG91ciBzdGFydCBlcnJvci5cbiAgICogICB9KTtcbiAgICogYGBgXG4gICAqXG4gICAqIEBlbWJlZFxuICAgKiBAYnVuZGxlXG4gICAqL1xuICBzdGFydChpbmRleD86IG51bWJlcik6IFByb21pc2U8dm9pZD47XG5cbiAgLyoqXG4gICAqIFRoaXMgZnVuY3Rpb24gc3RvcHMgdGhlIHRvdXIuXG4gICAqXG4gICAqIGBgYFxuICAgKiBtcFNkay5Ub3VyLnN0b3AoKVxuICAgKiAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgKiAgICAgLy8gVG91ciBzdG9wIGNvbXBsZXRlLlxuICAgKiAgIH0pXG4gICAqICAgLmNhdGNoKGZ1bmN0aW9uKGVycm9yKSB7XG4gICAqICAgICAvLyBUb3VyIHN0b3AgZXJyb3IuXG4gICAqICAgfSk7XG4gICAqIGBgYFxuICAgKlxuICAgKiBAZW1iZWRcbiAgICogQGJ1bmRsZVxuICAgKi9cbiAgc3RvcCgpOiBQcm9taXNlPHZvaWQ+O1xuXG4gIC8qKlxuICAgKiBUaGlzIGZ1bmN0aW9uIG1vdmVzIHRoZSBjYW1lcmEgdG8gYSBzcGVjaWZpYyBzbmFwc2hvdCBpbiB0aGUgdG91ci5cbiAgICpcbiAgICogYGBgXG4gICAqIGNvbnN0IG15U3RlcCA9IDI7XG4gICAqIG1wU2RrLlRvdXIuc3RlcChteVN0ZXApXG4gICAqICAgLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAqICAgICAvL1RvdXIgc3RlcCBjb21wbGV0ZS5cbiAgICogICB9KVxuICAgKiAgIC5jYXRjaChmdW5jdGlvbihlcnJvcikge1xuICAgKiAgICAgLy8gVG91ciBzdGVwIGVycm9yLlxuICAgKiAgIH0pO1xuICAgKiBgYGBcbiAgICpcbiAgICogQGVtYmVkXG4gICAqIEBidW5kbGVcbiAgICovXG4gIHN0ZXAoaW5kZXg6IG51bWJlcik6IFByb21pc2U8dm9pZD47XG5cbiAgLyoqXG4gICAqIFRoaXMgZnVuY3Rpb24gbW92ZXMgdGhlIGNhbWVyYSB0byB0aGUgbmV4dCBzbmFwc2hvdCBpbiB0aGUgdG91ci5cbiAgICpcbiAgICogYGBgXG4gICAqIG1wU2RrLlRvdXIubmV4dCgpXG4gICAqICAgLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAqICAgICAvLyBUb3VyIG5leHQgY29tcGxldGUuXG4gICAqICAgfSlcbiAgICogICAuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHtcbiAgICogICAgIC8vIFRvdXIgbmV4dCBlcnJvci5cbiAgICogICB9KTtcbiAgICogYGBgXG4gICAqXG4gICAqIEBlbWJlZFxuICAgKiBAYnVuZGxlXG4gICAqL1xuICBuZXh0KCk6IFByb21pc2U8dm9pZD47XG5cbiAgLyoqXG4gICAqIFRoaXMgZnVuY3Rpb24gbW92ZXMgdGhlIGNhbWVyYSB0byB0aGUgcHJldmlvdXMgc25hcHNob3QgaW4gdGhlIHRvdXIuXG4gICAqXG4gICAqIGBgYFxuICAgKiBtcFNkay5Ub3VyLnByZXYoKVxuICAgKiAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgKiAgICAgLy8gVG91ciBwcmV2IGNvbXBsZXRlLlxuICAgKiAgIH0pXG4gICAqICAgLmNhdGNoKGZ1bmN0aW9uKGVycm9yKSB7XG4gICAqICAgICAvLyBUb3VyIHByZXYgZXJyb3IuXG4gICAqICAgfSk7XG4gICAqIGBgYFxuICAgKlxuICAgKiBAZW1iZWRcbiAgICogQGJ1bmRsZVxuICAgKi9cbiAgcHJldigpOiBQcm9taXNlPHZvaWQ+O1xuXG4gIC8qKlxuICAgKiBUaGlzIGZ1bmN0aW9uIHJldHVybnMgYW4gYXJyYXkgb2YgU25hcHNob3RzLlxuICAgKlxuICAgKiBgYGBcbiAgICogbXBTZGsuVG91ci5nZXREYXRhKClcbiAgICogICAudGhlbihmdW5jdGlvbihzbmFwc2hvdHMpIHtcbiAgICogICAgIC8vIFRvdXIgZ2V0RGF0YSBjb21wbGV0ZS5cbiAgICogICAgIGlmKHNuYXBzaG90cy5sZW5ndGggPiAwKXtcbiAgICogICAgICAgY29uc29sZS5sb2coJ0ZpcnN0IHNuYXBzaG90IHNpZDogJyArIHNuYXBzaG90c1swXS5zaWQpO1xuICAgKiAgICAgICBjb25zb2xlLmxvZygnRmlyc3Qgc25hcHNob3QgbmFtZTogJyArIHNuYXBzaG90c1swXS5uYW1lKTtcbiAgICogICAgICAgY29uc29sZS5sb2coJ0ZpcnN0IHNuYXBzaG90IHBvc2l0aW9uOiAnICsgc25hcHNob3RzWzBdLnBvc2l0aW9uKTtcbiAgICogICAgIH1cbiAgICogICB9KVxuICAgKiAgIC5jYXRjaChmdW5jdGlvbihlcnJvcikge1xuICAgKiAgICAgLy8gVG91ciBnZXREYXRhIGVycm9yLlxuICAgKiAgIH0pO1xuICAgKiBgYGBcbiAgICpcbiAgICogQGVtYmVkXG4gICAqIEBidW5kbGVcbiAgICovXG4gIGdldERhdGEoKTogUHJvbWlzZTxUb3VyLlNuYXBzaG90W10+O1xuXG4gIC8qKlxuICAgKiBUaGUgemVyby1pbmRleGVkIGN1cnJlbnQgVG91ciBzdGVwLlxuICAgKiBUaGUgc3RlcCB3aWxsIGJlIG51bGwgaWYgbm8gVG91ciBpcyBjdXJyZW50bHkgcGxheWluZy5cbiAgICpcbiAgICogYGBgXG4gICAqIG1wU2RrLlRvdXIuY3VycmVudFN0ZXAuc3Vic2NyaWJlKGZ1bmN0aW9uIChjdXJyZW50KSB7XG4gICAqICAgLy8gdGhlIHN0ZXAgaW5kZXggaGFzIGNoYW5nZWRcbiAgICogICAvLyAwIGZvciB0aGUgZmlyc3Qgc3RlcCwgMSBmb3IgdGhlIHNlY29uZCwgZXRjLlxuICAgKiAgIGNvbnNvbGUubG9nKCdDdXJyZW50IHN0ZXAgaXMgJywgY3VycmVudC5zdGVwKTtcbiAgICogfSk7XG4gICAqIGBgYFxuICAgKlxuICAgKiBAZW1iZWRcbiAgICogQGJ1bmRsZVxuICAgKiBAaW50cm9kdWNlZCAzLjEuNjguMTItNy1nODU4Njg4OTQ0YVxuICAgKi9cbiAgY3VycmVudFN0ZXA6IElPYnNlcnZhYmxlPFRvdXIuQ3VycmVudFN0ZXBEYXRhPjtcblxuICAvKipcbiAgICogQW4gb2JzZXJ2YWJsZSBzdGF0ZSBvZiB0aGUgY3VycmVudCBUb3VyLiBSZXR1cm5zIGEgVG91ci5QbGF5U3RhdGUgb2ZcbiAgICogYElOQUNUSVZFYCAobm8gdG91ciBpbiBwcm9ncmVzcyksIGBBQ1RJVkVgICh0b3VyIGluIHByb2dyZXNzKSwgb3IgYFNUT1BfU0NIRURVTEVEYFxuICAgKiAodG91ciBpbiBwcm9ncmVzcywgYnV0IGEgc3RvcCBoYXMgYmVlbiBxdWV1ZWQgYnkgdGhlIHVzZXIgb3IgYXV0b21hdGljYWxseSBieSB0aGUgdG91ciBlbmRpbmcpLlxuICAgKlxuICAgKiBgYGBcbiAgICogbXBTZGsuVG91ci5zdGF0ZS5zdWJzY3JpYmUoZnVuY3Rpb24gKHN0YXRlKSB7XG4gICAqICAgLy8gdGhlIHN0YXRlIGhhcyBjaGFuZ2VkXG4gICAqICAgY29uc29sZS5sb2coJ0N1cnJlbnQgc3RhdGUgaXMgJywgc3RhdGUuY3VycmVudCk7XG4gICAqIH0pO1xuICAgKiBgYGBcbiAgICpcbiAgICogQGVtYmVkXG4gICAqIEBidW5kbGVcbiAgICogQGludHJvZHVjZWQgMy4xLjY4LjEyLTctZzg1ODY4ODk0NGFcbiAgICovXG4gIHN0YXRlOiBJT2JzZXJ2YWJsZTxUb3VyLkN1cnJlbnRTdGF0ZURhdGE+O1xuXG4gIC8qKlxuICAgKiBBbiBvYnNlcnZhYmxlIHJlcHJlc2VudGluZyB0aGUgY3VycmVudCBUb3VyJ3MgdHJhbnNpdGlvbi5cbiAgICpcbiAgICogYHsgZnJvbTogc3RyaW5nIHwgbnVsbCwgdG86IHN0cmluZyB8IG51bGwgfWAuXG4gICAqXG4gICAqIGBmcm9tYCBjYW4gYmUgYG51bGxgIHdoZW4gdHJhbnNpdGlvbmluZyBmcm9tIG91dHNpZGUgb2YgYSB0b3VyLiBgZnJvbWAgYW5kIGB0b2Agd2lsbCBib3RoIGJlIGBudWxsYCB3aGVuXG4gICAqIHRoZXJlIGlzIG5vIGFjdGl2ZSB0cmFuc2l0aW9uLlxuICAgKlxuICAgKiBgYGBcbiAgICogbXBTZGsuVG91ci50cmFuc2l0aW9uLnN1YnNjcmliZShmdW5jdGlvbiAodHJhbnNpdGlvbikge1xuICAgKiAgIC8vIHRoZSB0cmFuc2l0aW9uIGhhcyBjaGFuZ2VkXG4gICAqICAgY29uc29sZS5sb2coJ0N1cnJlbnQgdHJhbnNpdGlvbiBpcyAnLCB0cmFuc2l0aW9uLmZyb20sIHRyYW5zaXRpb24udG8pO1xuICAgKiB9KTtcbiAgICogYGBgXG4gICAqXG4gICAqIEBlbWJlZFxuICAgKiBAYnVuZGxlXG4gICAqIEBpbnRyb2R1Y2VkIDMuMS42OC4xMi03LWc4NTg2ODg5NDRhXG4gICAqL1xuICB0cmFuc2l0aW9uOiBJT2JzZXJ2YWJsZTxUb3VyLkN1cnJlbnRUcmFuc2l0aW9uRGF0YT47XG59XG4iLCJpbXBvcnQgeyB0eXBlIFRhZyB9IGZyb20gJy4vdGFnJztcbmltcG9ydCB0eXBlIHsgSU9ic2VydmFibGVNYXAsIElPYnNlcnZhYmxlIH0gZnJvbSAnLi9nbG9iYWwnO1xuXG5leHBvcnQgbmFtZXNwYWNlIFZpZXcge1xuICBleHBvcnQgZW51bSBWaWV3VHlwZSB7XG4gICAgQkFTRSA9ICd2aWV3dHlwZS5iYXNlJyxcbiAgICBMQVlFUkVEX0JBU0UgPSAndmlld3R5cGUubGF5ZXJlZGJhc2UnLFxuICAgIFVTRVIgPSAndmlld3R5cGUudXNlcicsXG4gICAgREVGVVJOSVNIID0gJ3ZpZXd0eXBlLmRlZnVybmlzaCcsXG4gICAgT1RIRVIgPSAndmlld3R5cGUub3RoZXInLFxuICB9XG5cbiAgZXhwb3J0IGVudW0gTGF5ZXJUeXBlIHtcbiAgICBCQVNFID0gJ2xheWVydHlwZS5iYXNlJyxcbiAgICBWSUVXX0RBVEEgPSAnbGF5ZXJ0eXBlLnZpZXdkYXRhJyxcbiAgICBVU0VSID0gJ2xheWVydHlwZS51c2VyJyxcbiAgICBJTl9NRU1PUlkgPSAnbGF5ZXJ0eXBlLmlubWVtb3J5JyxcbiAgICBPVEhFUiA9ICdsYXllcnR5cGUub3RoZXInLFxuICB9XG5cbiAgZXhwb3J0IGludGVyZmFjZSBWaWV3IGV4dGVuZHMgSU9ic2VydmFibGU8Vmlldz4ge1xuICAgIC8qKiBUaGUgdW5pcXVlIGlkIG9mIHRoZSBWaWV3ICovXG4gICAgZ2V0IGlkKCk6IHN0cmluZztcbiAgICAvKiogVGhlIGh1bWFuLXJlYWRhYmxlIG5hbWUgb2YgdGhlIFZpZXcgKi9cbiAgICBnZXQgbmFtZSgpOiBzdHJpbmc7XG4gICAgLyoqIFdoZXRoZXIgdGhpcyBpcyB0aGUgYWN0aXZlIFZpZXcgb3Igbm90ICovXG4gICAgZ2V0IGFjdGl2ZSgpOiBib29sZWFuO1xuICAgIC8qKiBUaGUgdHlwZSBvZiBWaWV3ICovXG4gICAgZ2V0IHR5cGUoKTogVmlld1R5cGU7XG5cbiAgICAvKipcbiAgICAgKiBBbiBpdGVyYXRvciBvdmVyIHRoZSBzZXQgb2YgTGF5ZXJzIGFzc29jaWF0ZWQgd2l0aCB0aGlzIFZpZXdcbiAgICAgKlxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBmb3IgKGNvbnN0IGxheWVyIG9mIHZpZXcubGF5ZXJzKSB7XG4gICAgICogICBjb25zb2xlLmxvZyhgJHt2aWV3LmlkfSBoYXMgbGF5ZXIgJHtsYXllci5pZH1gKTtcbiAgICAgKiB9XG4gICAgICogYGBgXG4gICAgICovXG4gICAgZ2V0IGxheWVycygpOiBJdGVyYWJsZUl0ZXJhdG9yPExheWVyPjtcblxuICAgIC8qKlxuICAgICAqIFNldCB0aGlzIFZpZXcgYXMgdGhlIGN1cnJlbnRseSBhY3RpdmUgb25lIG9wdGlvbmFsbHksIHJldHVybmluZyB0byB0aGUgc3RhcnQgbG9jYXRpb24gZm9yIHRoZSBuZXcgVmlldy5cbiAgICAgKlxuICAgICAqIE9ubHkgb25lIFZpZXcgY2FuIGJlIGFjdGl2ZSBhdCBhIHRpbWUuXG4gICAgICpcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogY29uc3QgdmlldzogVmlldzsgLy8gLi4uIGFjcXVpcmVkIHRocm91Z2ggcHJldmlvdXMgdXNhZ2Ugb2YgYG1wU2RrLlZpZXcudmlld3NgXG4gICAgICogYXdhaXQgdmlldy5zZXRBY3RpdmUodHJ1ZSk7IC8vIHNldCB0aGUgYWN0aXZlIHZpZXcgYW5kIHJldHVybiB0byB0aGUgc3RhcnQgbG9jYXRpb25cbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBzZXRBY3RpdmUocmV0dXJuVG9TdGFydD86IGJvb2xlYW4pOiBQcm9taXNlPHZvaWQ+O1xuXG4gICAgLyoqXG4gICAgICogQWRkIGFuIGV4aXN0aW5nIExheWVyIHRvIHRoaXMgVmlld1xuICAgICAqXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIHZpZXcuYWRkTGF5ZXIobGF5ZXIpO1xuICAgICAqIGBgYFxuICAgICAqIEBwYXJhbSBsYXllclxuICAgICAqL1xuICAgIGFkZExheWVyKGxheWVyOiBMYXllcik6IFByb21pc2U8dm9pZD47XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmUgYSBMYXllciBmcm9tIHRoaXMgVmlld1xuICAgICAqXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIHZpZXcucmVtb3ZlTGF5ZXIobGF5ZXIpO1xuICAgICAqIGBgYFxuICAgICAqIEBwYXJhbSBsYXllclxuICAgICAqL1xuICAgIHJlbW92ZUxheWVyKGxheWVyOiBMYXllcik6IFByb21pc2U8dm9pZD47XG5cbiAgICAvKipcbiAgICAgKiBUZXN0IGlmIHRoaXMgVmlldyBoYXMgYSBMYXllciBhc3NvY2lhdGUgd2l0aCBpdFxuICAgICAqXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGlmICh2aWV3Lmhhc0xheWVyKGxheWVyKSkge1xuICAgICAqICAgY29uc29sZS5sb2coYCR7dmlldy5pZH0gaGFzIGxheWVyICR7bGF5ZXIuaWR9YCk7XG4gICAgICogfVxuICAgICAqIGBgYFxuICAgICAqIEBwYXJhbSBsYXllclxuICAgICAqL1xuICAgIGhhc0xheWVyKGxheWVyOiBMYXllcik6IGJvb2xlYW47XG4gIH1cblxuICBleHBvcnQgaW50ZXJmYWNlIExheWVyIGV4dGVuZHMgSU9ic2VydmFibGU8TGF5ZXI+IHtcbiAgICAvKiogVGhlIHVuaXF1ZSBpZCBvZiB0aGUgTGF5ZXIgKi9cbiAgICBnZXQgaWQoKTogc3RyaW5nO1xuICAgIC8qKiBUaGUgaHVtYW4tcmVhZGFibGUgbmFtZSBvZiB0aGUgTGF5ZXIgKi9cbiAgICBnZXQgbmFtZSgpOiBzdHJpbmc7XG4gICAgLyoqIFdoZXRoZXIgdGhpcyBMYXllciB0b2dnbGVkIG9uIG9yIG9mZi4gSWYgdG9nZ2xlZCBvZmYsIHRoaXMgTGF5ZXIncyBvYmplY3RzIGFyZSBoaWRkZW4uICovXG4gICAgZ2V0IHRvZ2dsZWQoKTogYm9vbGVhbjtcbiAgICAvKiogVGhlIHR5cGUgb2YgbGF5ZXIgKi9cbiAgICBnZXQgdHlwZSgpOiBMYXllclR5cGU7XG4gICAgLyoqIFdoZXRoZXIgdGhpcyBsYXllciBpcyBjb21tb24gKHNoYXJlZCBhY3Jvc3MgYWxsIHZpZXdzKSAqL1xuICAgIGdldCBjb21tb24oKTogYm9vbGVhbjtcblxuICAgIC8qKlxuICAgICAqIFRvZ2dsZSB0aGlzIExheWVyJ3Mgc3RhdGUgdG8gYGFjdGl2ZWAuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gYWN0aXZlIFdoZXRoZXIgdGhpcyBMYXllciBzaG91bGQgYmUgdG9nZ2xlZCBvbiBvciBvZmYuIElmIGBhY3RpdmVgIGlzIHVuZGVmaW5lZCwgdGhlIHN0YXRlIGlzIGZsaXBwZWQuXG4gICAgICovXG4gICAgdG9nZ2xlKGFjdGl2ZT86IGJvb2xlYW4pOiBQcm9taXNlPHZvaWQ+O1xuXG4gICAgLyoqXG4gICAgICogQSBzdWJzZXQgb2YgdGhlIFRhZyBuYW1lc3BhY2UncyBmdW5jdGlvbmFsaXR5IHRvIG1hbmlwdWxhdGUgVGFncyBvbiB0aGlzIGxheWVyLlxuICAgICAqXG4gICAgICogUHJvdmlkZXMgYWNjZXNzIHRvIFRhZyBtdXRhdGlvbnMgaW5jbHVkaW5nIFRhZy5hZGQgdG8gYWRkIGRpcmVjdGx5IHRvIGEgbGF5ZXIuXG4gICAgICpcbiAgICAgKiBEb2VzIG5vdCBpbmNsdWRlIG9ic2VydmFibGVzIG9yIGVudW1zLlxuICAgICAqL1xuICAgIFRhZzogT21pdDxUYWcsICdhdHRhY2htZW50cycgfCAnZGF0YScgfCAnb3BlblRhZ3MnIHxcbiAgICAgICdjbG9zZScgfCAnZG9jaycgfCAnb3BlbicgfCAncmVnaXN0ZXJBdHRhY2htZW50JyB8ICdyZWdpc3RlclNhbmRib3gnIHwgJ3RvZ2dsZURvY2tpbmcnIHwgJ3RvZ2dsZU5hdkNvbnRyb2xzJyB8ICd0b2dnbGVTaGFyaW5nJz47XG4gIH1cbn1cblxuZXhwb3J0IGludGVyZmFjZSBWaWV3IHtcbiAgVmlld1R5cGU6IHR5cGVvZiBWaWV3LlZpZXdUeXBlO1xuICBMYXllclR5cGU6IHR5cGVvZiBWaWV3LkxheWVyVHlwZTtcbiAgLyoqXG4gICAqIFRoZSBjdXJyZW50bHkgYWN0aXZlIHZpZXdcbiAgICpcbiAgICogYGBgdHlwZXNjcmlwdFxuICAgKiBtcFNkay5WaWV3LmN1cnJlbnQuc3Vic2NyaWJlKChjdXJyZW50VmlldykgPT4ge1xuICAgKiAgIGNvbnNvbGUubG9nKCd0aGUgY3VycmVudGx5IGFjdGl2ZSB2aWV3IGlzJywgY3VycmVudFZpZXcubmFtZSk7XG4gICAqIH0pO1xuICAgKiBgYGBcbiAgICogQGVhcmx5YWNjZXNzXG4gICAqL1xuICBjdXJyZW50OiBJT2JzZXJ2YWJsZTxWaWV3LlZpZXc+O1xuXG4gIC8qKlxuICAgKiBBbGwgdmlld3MgYXNzb2NpYXRlZCB3aXRoIHRoZSBjdXJyZW50IHNwYWNlLlxuICAgKlxuICAgKiBgYGB0eXBlc2NyaXB0XG4gICAqIG1wU2RrLlZpZXcudmlld3Muc3Vic2NyaWJlKHtcbiAgICogICBvbkFkZGVkKGluZGV4LCB2aWV3LCBjb2xsZWN0aW9uKSB7XG4gICAqICAgICBjb25zb2xlLmxvZygnYSB2aWV3IHdpdGggaWQnLCB2aWV3LmlkLCAnbmFtZWQnLCB2aWV3Lm5hbWUpO1xuICAgKiAgIH0sXG4gICAqICAgb25Db2xsZWN0aW9uVXBkYXRlZChjb2xsZWN0aW9uKSB7XG4gICAqICAgICBjb25zb2xlLmxvZygnYWxsIHZpZXdzJywgY29sbGVjdGlvbik7XG4gICAqICAgfSxcbiAgICogfSk7XG4gICAqIGBgYFxuICAgKiBAZWFybHlhY2Nlc3NcbiAgICovXG4gIHZpZXdzOiBJT2JzZXJ2YWJsZU1hcDxWaWV3LlZpZXc+O1xuXG4gIC8qKlxuICAgKiBBbGwgbGF5ZXJzIGFzc29jaWF0ZWQgd2l0aCB0aGUgY3VycmVudCBzcGFjZS5cbiAgICpcbiAgICogTGF5ZXJzIGluIGluYWN0aXZlIFZpZXdzIG1heSBub3QgcG9wdWxhdGUgcmlnaHQgYXdheS4gQWN0aXZhdGluZyBhIFZpZXcgd2lsbCB0cmlnZ2VyIHRoZSBMYXllcnMgdG8gcG9wdWxhdGUuXG4gICAqXG4gICAqIGBgYHR5cGVzY3JpcHRcbiAgICogbXBTZGsuVmlldy5sYXllcnMuc3Vic2NyaWJlKHtcbiAgICogICBvbkFkZGVkKGluZGV4LCBsYXllciwgY29sbGVjdGlvbikge1xuICAgKiAgICAgY29uc29sZS5sb2coJ2EgbGF5ZXIgd2l0aCBpZCcsIGxheWVyLmlkLCAnbmFtZWQnLCBsYXllci5uYW1lKTtcbiAgICogICB9LFxuICAgKiAgIG9uQ29sbGVjdGlvblVwZGF0ZWQoY29sbGVjdGlvbikge1xuICAgKiAgICAgY29uc29sZS5sb2coJ2FsbCBsYXllcnMnLCBjb2xsZWN0aW9uKTtcbiAgICogICB9LFxuICAgKiB9KTtcbiAgICogYGBgXG4gICAqL1xuICBsYXllcnM6IElPYnNlcnZhYmxlTWFwPFZpZXcuTGF5ZXI+O1xuXG4gIC8qKlxuICAgKiBDcmVhdGUgYSBsYXllciB0aGF0IGNhbiBiZSBsYXRlciBhZGRlZCB0byBhIFZpZXcgb3IgVmlld3NcbiAgICpcbiAgICogYGBgdHlwZXNjcmlwdFxuICAgKiAvLyBjcmVhdGUgYSBzdGFuZGFyZCBMYXllciB0byBiZSBhZGRlZCB0byBhIFZpZXdcbiAgICogY29uc3QgbGF5ZXIgPSBhd2FpdCBtcFNkay5WaWV3LmNyZWF0ZUxheWVyKCdteSBsYXllcicpO1xuICAgKiAvLyBjcmVhdGUgYSBjb21tb24gTGF5ZXIgdGhhdCBpcyBpbiBhbGwgVmlld3NcbiAgICogY29uc3QgbGF5ZXIgPSBhd2FpdCBtcFNkay5WaWV3LmNyZWF0ZUxheWVyKCdteSBsYXllcicsIHsgY29tbW9uOiB0cnVlIH0pO1xuICAgKiBgYGBcbiAgICogQHBhcmFtIG5hbWVcbiAgICogQHBhcmFtIG9wdGlvbnNcbiAgICovXG4gIGNyZWF0ZUxheWVyKG5hbWU6IHN0cmluZywgb3B0aW9ucz86IHsgY29tbW9uOiBib29sZWFuOyB9KTogUHJvbWlzZTxWaWV3LkxheWVyPjtcblxuICAvKipcbiAgICogRGVsZXRlIGEgbGF5ZXIuIFRoZSBMYXllciB3aWxsIGJlIHJlbW92ZWQgZnJvbSBhbGwgdmlld3MgdGhhdCBpdCBpcyBpbi5cbiAgICpcbiAgICogYGBgdHlwZXNjcmlwdFxuICAgKiBjb25zdCBsYXllciA9IGF3YWl0IG1wU2RrLlZpZXcuY3JlYXRlTGF5ZXIoJ215IGxheWVyJyk7XG4gICAqIGF3YWl0IG1wU2RrLlZpZXcuZGVsZXRlTGF5ZXIobGF5ZXIpO1xuICAgKiBgYGBcbiAgICpcbiAgICogQGludHJvZHVjZWQgMjUuMy40XG4gICAqL1xuICBkZWxldGVMYXllcihsYXllcjogVmlldy5MYXllcik6IFByb21pc2U8dm9pZD47XG59XG4iLCJpbXBvcnQgdHlwZSB7IENvbG9yLCBJRGlzcG9zYWJsZSwgSVN1YnNjcmlwdGlvbiwgVmVjdG9yMyB9IGZyb20gJy4vZ2xvYmFsJztcbmltcG9ydCB0eXBlICogYXMgVEhSRUUgZnJvbSAndGhyZWUnO1xuaW1wb3J0IHR5cGUgeyBFZmZlY3RDb21wb3NlciB9IGZyb20gJ3RocmVlL2V4YW1wbGVzL2pzbS9wb3N0cHJvY2Vzc2luZy9FZmZlY3RDb21wb3Nlcic7XG5cbi8qKlxuICogVGhlIFNjZW5lIG5hbWVzcGFjZSBpcyBjdXJyZW50bHkgb25seSBhdmFpbGFibGUgZm9yIEJ1bmRsZSBTREsgZGlzdHJpYnV0aW9ucy5cbiAqIFtMZWFybiBtb3JlIGFib3V0IHRoZSBCdW5kbGUgU0RLXShodHRwczovL21hdHRlcnBvcnQuZ2l0aHViLmlvL3Nob3djYXNlLXNkay9zZGtidW5kbGVfaG9tZS5odG1sKVxuICovXG5leHBvcnQgbmFtZXNwYWNlIFNjZW5lIHtcbiAgZXhwb3J0IGVudW0gQ29tcG9uZW50IHtcbiAgICBPQkpfTE9BREVSID0gJ21wLm9iakxvYWRlcicsXG4gICAgRkJYX0xPQURFUiA9ICdtcC5mYnhMb2FkZXInLFxuICAgIERBRV9MT0FERVIgPSAnbXAuZGFlTG9hZGVyJyxcbiAgICBHTFRGX0xPQURFUiA9ICdtcC5nbHRmTG9hZGVyJyxcbiAgICBTQ1JPTExJTkdfVFVCRSA9ICdtcC5zY3JvbGxpbmdUdWJlJyxcbiAgICBUUkFOU0ZPUk1fQ09OVFJPTFMgPSAnbXAudHJhbnNmb3JtQ29udHJvbHMnLFxuICAgIExJR0hUU19DT01QT05FTlQgPSAnbXAubGlnaHRzJyxcbiAgICBQT0lOVF9MSUdIVCA9ICdtcC5wb2ludExpZ2h0JyxcbiAgICBESVJFQ1RJT05BTF9MSUdIVCA9ICdtcC5kaXJlY3Rpb25hbExpZ2h0JyxcbiAgICBBTUJJRU5UX0xJR0hUID0gJ21wLmFtYmllbnRMaWdodCcsXG4gICAgQ0FNRVJBID0gJ21wLmNhbWVyYScsXG4gICAgSU5QVVQgPSAnbXAuaW5wdXQnLFxuICAgIFhSID0gJ21wLnhyJyxcbiAgfVxuXG4gIC8vIEF1dG9jb21wbGV0ZSBmb3IgbmFtZWQgY29tcG9uZW50IGZhY3Rvcmllc1xuICBleHBvcnQgdHlwZSBTY2VuZUNvbXBvbmVudE5hbWUgPVxuICAgIC8vIGFueSB2YWx1ZXMgZnJvbSBDb21wb25lbnRUeXBlIGVudW0gLSBzZWU6XG4gICAgLy8gaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzUyMzk2NzA2LzE4ODQ5MTMwXG4gICAgYCR7Q29tcG9uZW50fWBcbiAgICAvLyBhZGRpbmcgYChzdHJpbmcgJiB7fSlgIGVuYWJsZXMgYW55IHN0cmluZyB0byBiZSB1c2VkIHdoaWxlIGFsc28gaW5jbHVkaW5nXG4gICAgLy8gYXV0b2NvbXBsZXRlIG9wdGlvbnMgZm9yIHRoZSBsaXN0ZWQgdmFsdWVzXG4gICAgLy8gbGludCBwcmVmZXJzIFJlY29yZDxzdHJpbmcsIGFueT4gYnV0IGZvciBzb21lIHJlYXNvbiB0aGF0IGRvZXNuJ3QgZXZhbHVhdGVcbiAgICAvLyB0aGUgc2FtZSBhcyBzdHJpbmcgJiB7fSwgc28gd2UncmUgdHVybmluZyBsaW50aW5nIG9mZiBmb3IgdGhlIG5leHQgbGluZVxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgfCAoc3RyaW5nICYge30pO1xuXG4gIGludGVyZmFjZSBMaWdodENvbXBvbmVudENvbW1vbk9wdGlvbnMge1xuICAgIC8qKiBJZiB0cnVlIHRoZSBhbWJpZW50IGxpZ2h0IGlzIGFjdGl2ZSBpbiB0aGUgc2NlbmUuXG4gICAgICpcbiAgICAgKiBEZWZhdWx0IGB0cnVlYCAqL1xuICAgIGVuYWJsZWQ/OiBib29sZWFuO1xuICAgIC8qKiBUaGUgY29sb3Igb2YgdGhlIGxpZ2h0LiBFYWNoIGNvbG9yIGNvbXBvbmVudCBpcyBhIG51bWJlciBiZXR3ZWVuIDAgYW5kIDEuXG4gICAgICpcbiAgICAgKiBEZWZhdWx0IGB7IHI6IDEuMCwgZzogMS4wLCBiOiAxLjAgfWBcbiAgICAgKi9cbiAgICBjb2xvcj86IENvbG9yO1xuICAgIC8qKiBUaGUgbGlnaHQgaW50ZW5zaXR5LlxuICAgICAqXG4gICAgICogRGVmYXVsdCBgMS4wYCBmb3IgYW1iaWVudCBsaWdodHMsIGAyYCBmb3Igb3RoZXJzLlxuICAgICAqL1xuICAgIGludGVuc2l0eT86IG51bWJlcjtcbiAgfVxuICBpbnRlcmZhY2UgTG9hZGVyQ29tbW9uT3B0aW9ucyB7XG4gICAgLyoqIFRoZSB1cmwgdG8gdGhlIGZpbGUuXG4gICAgICpcbiAgICAgKiBEZWZhdWx0IGAnJ2BcbiAgICAgKi9cbiAgICB1cmw/OiBzdHJpbmc7XG4gICAgLyoqIElmIHRydWUsIHRoZSBtb2RlbCBpcyB2aXNpYmxlLlxuICAgICAqXG4gICAgICogRGVmYXVsdCBgdHJ1ZWBcbiAgICAgKi9cbiAgICB2aXNpYmxlPzogYm9vbGVhbjtcbiAgICAvKiogVGhlIGxvY2FsIG9mZnNldCBvZiB0aGUgbW9kZWwuXG4gICAgICpcbiAgICAgKiBEZWZhdWx0IGB7IHg6IDAsIHk6IDAsIHo6IDAgfWBcbiAgICAgKi9cbiAgICBsb2NhbFBvc2l0aW9uPzogVmVjdG9yMztcbiAgICAvKiogVGhlIGxvY2FsIHJvdGF0aW9uIG9mIHRoZSBtb2RlbCBpbiBldWxlciBhbmdsZXMuXG4gICAgICpcbiAgICAgKiBEZWZhdWx0IGB7IHg6IDAsIHk6IDAsIHo6IDAgfWBcbiAgICAgKi9cbiAgICBsb2NhbFJvdGF0aW9uPzogVmVjdG9yMztcbiAgICAvKiogVGhlIGxvY2FsIHNjYWxlIG9mIHRoZSBtb2RlbC5cbiAgICAgKlxuICAgICAqIERlZmF1bHQgYHsgeDogMSwgeTogMSwgejogMSB9YFxuICAgICAqL1xuICAgIGxvY2FsU2NhbGU/OiBWZWN0b3IzO1xuICAgIC8qKiBXaGVuIHNldCwgdGhlIGNvbGxpZGVyIG91dHB1dCBpcyBzZXQgdG8gdGhlIGxvYWRlZCBtb2RlbC5cbiAgICAgKlxuICAgICAqIERlZmF1bHQgYHRydWVgXG4gICAgICovXG4gICAgY29sbGlkZXJFbmFibGVkPzogYm9vbGVhbjtcbiAgfVxuXG4gIGV4cG9ydCBpbnRlcmZhY2UgU2NlbmVDb21wb25lbnRPcHRpb25zIGV4dGVuZHMgUmVjb3JkPFNjZW5lQ29tcG9uZW50TmFtZSwgYW55PiB7XG4gICAgW0NvbXBvbmVudC5BTUJJRU5UX0xJR0hUXTogTGlnaHRDb21wb25lbnRDb21tb25PcHRpb25zO1xuICAgIFtDb21wb25lbnQuRElSRUNUSU9OQUxfTElHSFRdOiBMaWdodENvbXBvbmVudENvbW1vbk9wdGlvbnMgJiB7XG4gICAgICAvKiogVGhlIHdvcmxkIHNwYWNlIHBvc2l0aW9uIG9mIHRoZSBkaXJlY3Rpb25hbCBsaWdodC5cbiAgICAgICAqXG4gICAgICAgKiBEZWZhdWx0IGB7IHg6IDEsIHk6IDUsIHo6IDF9YFxuICAgICAgICovXG4gICAgICBwb3NpdGlvbj86IFZlY3RvcjM7XG4gICAgICAvKiogVGhlIGRpcmVjdGlvbmFsIGxpZ2h04oCZcyB3b3JsZCBzcGFjZSB0YXJnZXQgcG9zaXRpb24uXG4gICAgICAgKlxuICAgICAgICogRGVmYXVsdCBgeyB4OiAwLCB5OiAwLCB6OiAwIH1gXG4gICAgICAgKi9cbiAgICAgIHRhcmdldD86IFZlY3RvcjM7XG4gICAgICAvKiogRW5hYmxlcyBkZWJ1Z2dpbmcgdmlzdWFscy5cbiAgICAgICAqXG4gICAgICAgKiBEZWZhdWx0IGBmYWxzZWBcbiAgICAgICAqL1xuICAgICAgZGVidWc/OiBib29sZWFuO1xuICAgIH07XG4gICAgW0NvbXBvbmVudC5QT0lOVF9MSUdIVF06IExpZ2h0Q29tcG9uZW50Q29tbW9uT3B0aW9ucyAmIHtcbiAgICAgIC8qKiBUaGUgd29ybGQgc3BhY2UgcG9zaXRpb24gb2YgdGhlIHBvaW50IGxpZ2h0LlxuICAgICAgICpcbiAgICAgICAqIERlZmF1bHQgYHsgeDogMSwgeTogNSwgejogMSB9YFxuICAgICAgICovXG4gICAgICBwb3NpdGlvbj86IFZlY3RvcjM7XG4gICAgICAvKiogTWF4aW11bSByYW5nZSBvZiB0aGUgbGlnaHQuXG4gICAgICAgKlxuICAgICAgICogRGVmYXVsdCBgMGAgKG5vIGxpbWl0KVxuICAgICAgICovXG4gICAgICBkaXN0YW5jZT86IG51bWJlcjtcbiAgICAgIC8qKiBUaGUgYW1vdW50IHRoZSBsaWdodCBkaW1zIGZyb20gdGhlIHBvaW50IGxpZ2h0LlxuICAgICAgICpcbiAgICAgICAqIERlZmF1bHQgYDFgXG4gICAgICAgKi9cbiAgICAgIGRlY2F5PzogbnVtYmVyO1xuICAgICAgLyoqIEVuYWJsZXMgZGVidWdnaW5nIHZpc3VhbHMuXG4gICAgICAgKlxuICAgICAgICogRGVmYXVsdCBgZmFsc2VgXG4gICAgICAgKi9cbiAgICAgIGRlYnVnPzogYm9vbGVhbjtcbiAgICB9O1xuXG4gICAgW0NvbXBvbmVudC5HTFRGX0xPQURFUl06IExvYWRlckNvbW1vbk9wdGlvbnM7XG4gICAgW0NvbXBvbmVudC5EQUVfTE9BREVSXTogTG9hZGVyQ29tbW9uT3B0aW9ucztcbiAgICBbQ29tcG9uZW50LkZCWF9MT0FERVJdOiBMb2FkZXJDb21tb25PcHRpb25zO1xuICAgIFtDb21wb25lbnQuT0JKX0xPQURFUl06IExvYWRlckNvbW1vbk9wdGlvbnMgJiB7XG4gICAgICAvKiogVGhlIHVybCB0byB0aGUgbWF0ZXJpYWwgZmlsZS5cbiAgICAgICAqXG4gICAgICAgKiBEZWZhdWx0IGAnJ2BcbiAgICAgICAqL1xuICAgICAgbWF0ZXJpYWxVcmw/OiBzdHJpbmc7XG4gICAgfTtcblxuICAgIFtDb21wb25lbnQuVFJBTlNGT1JNX0NPTlRST0xTXToge1xuICAgICAgLyoqIElmIHRydWUgdGhlIHRyYW5zZm9ybSBjb250cm9sIGlzIHZpc2libGUgaW4gdGhlIHNjZW5lLlxuICAgICAgICpcbiAgICAgICAqIERlZmF1bHQgYHRydWVgXG4gICAgICAgKi9cbiAgICAgIHZpc2libGU/OiBib29sZWFuO1xuICAgICAgLyoqIFRoZSB0cmFuc2Zvcm1hdGlvbiBtb2RlLlxuICAgICAgICpcbiAgICAgICAqIERlZmF1bHQgYHRyYW5zbGF0ZWBcbiAgICAgICAqL1xuICAgICAgbW9kZT86ICd0cmFuc2xhdGUnIHwgJ3JvdGF0ZScgfCAnc2NhbGUnO1xuICAgICAgLyoqIFRoZSBub2RlIGJlaW5nIGNvbnRyb2xsZWQgYnkgdGhpcyBjb21wb25lbnQuXG4gICAgICAgKlxuICAgICAgICogRGVmYXVsdCBgbnVsbGAgKGhpZGRlbilcbiAgICAgICAqL1xuICAgICAgc2VsZWN0aW9uPzogU2NlbmUuSU5vZGUgfCBudWxsO1xuICAgICAgLyoqIFggYXhpcyBjb250cm9sIHZpc2liaWxpdHkuXG4gICAgICAgKlxuICAgICAgICogRGVmYXVsdCBgdHJ1ZWBcbiAgICAgICAqL1xuICAgICAgc2hvd1g/OiBib29sZWFuO1xuICAgICAgLyoqIFkgYXhpcyBjb250cm9sIHZpc2liaWxpdHkuXG4gICAgICAgKlxuICAgICAgICogRGVmYXVsdCBgdHJ1ZWBcbiAgICAgICAqL1xuICAgICAgc2hvd1k/OiBib29sZWFuO1xuICAgICAgLyoqIFogYXhpcyBjb250cm9sIHZpc2liaWxpdHkuXG4gICAgICAgKlxuICAgICAgICogRGVmYXVsdCBgdHJ1ZWBcbiAgICAgICAqL1xuICAgICAgc2hvd1o/OiBib29sZWFuO1xuICAgICAgLyoqIFRoZSBzaXplIG9mIHRoZSB0cmFuc2Zvcm0gY29udHJvbC5cbiAgICAgICAqXG4gICAgICAgKiBEZWZhdWx0IGAxYFxuICAgICAgICovXG4gICAgICBzaXplPzogbnVtYmVyO1xuICAgIH07XG5cbiAgICBbQ29tcG9uZW50LklOUFVUXToge1xuICAgICAgLyoqIElmIHRydWUsIGV2ZW50cyB3aWxsIGJlIGF2YWlsYWJsZSBmb3IgYmluZGluZyBvciBzcHlpbmcuIElmIGZhbHNlLCBubyBldmVudHMgd2lsbCBmaXJlLlxuICAgICAgICpcbiAgICAgICAqIERlZmF1bHQgYHRydWVgXG4gICAgICAgKi9cbiAgICAgIGV2ZW50c0VuYWJsZWQ/OiBib29sZWFuO1xuICAgICAgLyoqIElmIHNldCB0byBmYWxzZSwgYWxsIHNob3djYXNlIHVzZXIgYmFzZWQgbmF2aWdhdGlvbiB3aWxsIGJlIHR1cm5lZCBvZmYuXG4gICAgICAgKlxuICAgICAgICogRGVmYXVsdCBgdHJ1ZWBcbiAgICAgICAqL1xuICAgICAgdXNlck5hdmlnYXRpb25FbmFibGVkPzogYm9vbGVhbjtcbiAgICAgIC8qKiBJZiBzZXQgdG8gZmFsc2UsIHRoZSBpbnB1dCBjb21wb25lbnQgd2lsbCBvbmx5IHJlY2VpdmUgdW5oYW5kbGVkIGV2ZW50cy5cbiAgICAgICAqXG4gICAgICAgKiBEZWZhdWx0IGB0cnVlYFxuICAgICAgICovXG4gICAgICB1bmZpbHRlcmVkPzogYm9vbGVhbjtcbiAgICB9O1xuXG4gICAgW0NvbXBvbmVudC5DQU1FUkFdOiB7XG4gICAgICAvKiogSWYgdHJ1ZSwgdGhpcyBjb21wb25lbnRzIGFjcXVpcmVzIGNvbnRyb2wgb2YgdGhlIGNhbWVyYS5cbiAgICAgICAqXG4gICAgICAgKiBEZWZhdWx0IGBmYWxzZWBcbiAgICAgICAqL1xuICAgICAgZW5hYmxlZD86IGJvb2xlYW47XG4gICAgICAvKiogQSB0aHJlZS5qcyBjYW1lcmEgb2JqZWN0LlxuICAgICAgICpcbiAgICAgICAqIERlZmF1bHQgYG51bGxgXG4gICAgICAgKi9cbiAgICAgIGNhbWVyYT86IFRIUkVFLkNhbWVyYSB8IG51bGw7XG4gICAgfTtcblxuICAgIFtDb21wb25lbnQuWFJdOiBSZWNvcmQ8c3RyaW5nLCBuZXZlcj47XG5cbiAgICBbbmFtZTogc3RyaW5nXTogdW5rbm93bjtcbiAgfVxuXG4gIGV4cG9ydCB0eXBlIFByZWRlZmluZWRPdXRwdXRzID0ge1xuICAgIC8qKlxuICAgICAqIFNldCB0aGlzIHRvIGFueSBPYmplY3QzRCBhbmQgaXQgd2lsbCBiZSBhZGRlZCB0byB0aGUgc2NlbmUuXG4gICAgICovXG4gICAgb2JqZWN0Um9vdDogVEhSRUUuT2JqZWN0M0QgfCBudWxsO1xuXG4gICAgLyoqXG4gICAgICogU2V0IHRoaXMgdG8gYW55IE9iamVjdDNEIGFuZCBpdCB3aWxsIGJlIGludGVyYWN0YWJsZS4gU2VlIFtbSUNvbXBvbmVudC5vbkV2ZW50XV1cbiAgICAgKi9cbiAgICBjb2xsaWRlcjogVEhSRUUuT2JqZWN0M0QgfCBudWxsO1xuICB9O1xuXG4gIGV4cG9ydCBlbnVtIEludGVyYWN0aW9uVHlwZSB7XG4gICAgLyoqIENMSUNLIGV2ZW50cyAqL1xuICAgIENMSUNLID0gJ0lOVEVSQUNUSU9OLkNMSUNLJyxcbiAgICAvKiogSE9WRVIgZXZlbnRzICovXG4gICAgSE9WRVIgPSAnSU5URVJBQ1RJT04uSE9WRVInLFxuICAgIC8qKiBEUkFHIGV2ZW50cyAobW91c2Vkb3duIHRoZW4gbW92ZSkgKi9cbiAgICBEUkFHID0gJ0lOVEVSQUNUSU9OLkRSQUcnLFxuICAgIERSQUdfQkVHSU4gPSAnSU5URVJBQ1RJT04uRFJBR19CRUdJTicsXG4gICAgRFJBR19FTkQgPSAnSU5URVJBQ1RJT04uRFJBR19FTkQnLFxuICAgIFBPSU5URVJfTU9WRSA9ICdJTlRFUkFDVElPTi5QT0lOVEVSX01PVkUnLFxuICAgIFBPSU5URVJfQlVUVE9OID0gJ0lOVEVSQUNUSU9OLlBPSU5URVJfQlVUVE9OJyxcbiAgICBTQ1JPTEwgPSAnSU5URVJBQ1RJT04uU0NST0xMJyxcbiAgICBLRVkgPSAnSU5URVJBQ1RJT04uS0VZJyxcbiAgICBMT05HX1BSRVNTX1NUQVJUID0gJ0lOVEVSQUNUSU9OLkxPTkdfUFJFU1NfU1RBUlQnLFxuICAgIExPTkdfUFJFU1NfRU5EID0gJ0lOVEVSQUNUSU9OLkxPTkdfUFJFU1NfRU5EJyxcbiAgICBNVUxUSV9TV0lQRSA9ICdJTlRFUkFDVElPTi5NVUxUSV9TV0lQRScsXG4gICAgTVVMVElfU1dJUEVfRU5EID0gJ0lOVEVSQUNUSU9OLk1VTFRJX1NXSVBFX0VORCcsXG4gICAgUElOQ0ggPSAnSU5URVJBQ1RJT04uUElOQ0gnLFxuICAgIFBJTkNIX0VORCA9ICdJTlRFUkFDVElPTi5QSU5DSF9FTkQnLFxuICAgIFJPVEFURSA9ICdJTlRFUkFDVElPTi5ST1RBVEUnLFxuICAgIFJPVEFURV9FTkQgPSAnSU5URVJBQ1RJT04uUk9UQVRFX0VORCcsXG4gIH1cblxuICAvKipcbiAgICogVGhlIHBheWxvYWQgZm9yIGEgM0QgaW50ZXJhY3Rpb24gZXZlbnQuXG4gICAqL1xuICBleHBvcnQgdHlwZSBJbnRlcmFjdGlvbkV2ZW50ID0ge1xuICAgIGhvdmVyPzogYm9vbGVhbjtcbiAgICBjb2xsaWRlcjogVEhSRUUuT2JqZWN0M0Q7XG4gICAgcG9pbnQ6IFRIUkVFLlZlY3RvcjMgfCBudWxsO1xuICAgIG5vcm1hbDogVEhSRUUuVmVjdG9yMyB8IG51bGw7XG4gICAgaW5wdXQ6IHVua25vd247XG4gIH07XG5cbiAgLyoqXG4gICAqIFRoZSB0eXBlIG9mIGEgcGF0aCB3aXRoIHJlZ2FyZHMgdG8gd2hpY2ggcHJvcGVydHkgb2YgYSBjb21wb25lbnQgaXQgcmVwcmVzZW50c1xuICAgKi9cbiAgZXhwb3J0IGVudW0gUGF0aFR5cGUge1xuICAgIElOUFVUID0gJ2lucHV0JyxcbiAgICBPVVRQVVQgPSAnb3V0cHV0JyxcbiAgICBFVkVOVCA9ICdldmVudCcsXG4gICAgRU1JVCA9ICdlbWl0JyxcbiAgfVxuXG4gIC8qKlxuICAgKiAqKlNjZW5lIE5vZGUqKlxuICAgKlxuICAgKiBBIHNjZW5lIG5vZGUgaXMgYW4gb2JqZWN0IHdpdGggYSAzRCB0cmFuc2Zvcm06IHBvc2l0aW9uLCByb3RhdGlvbiwgYW5kIHNjYWxlLlxuICAgKiBJdCBjYW4gY29udGFpbiBhIGNvbGxlY3Rpb24gb2YgY29tcG9uZW50cyBhbmQgbWFuYWdlcyB0aGVpciBsaWZlIGN5Y2xlLlxuICAgKlxuICAgKiBBIHNjZW5lIG5vZGUgaGFzIHRoZSBmb2xsb3dpbmcgc3RhdGVzOlxuICAgKlxuICAgKiAqKkluaXRpYWxpemluZyoqIC0gYWZ0ZXIgY29uc3RydWN0aW9uIGJ1dCBiZWZvcmUgc3RhcnQgaGFzIGJlZW4gY2FsbGVkPGJyPlxuICAgKiAqKlVwZGF0aW5nKiogLSBhZnRlciBzdGFydCBoYXMgYmVlbiBjYWxsZWQgYnV0IGJlZm9yZSBzdG9wIGhhcyBiZWVuIGNhbGxlZDxicj5cbiAgICogKipEZXN0cm95ZWQqKiAtIGFmdGVyIHN0b3AgaGFzIGJlZW4gY2FsbGVkXG4gICAqXG4gICAqIENvbXBvbmVudHMgY2FuIG9ubHkgYmUgYWRkZWQgZHVyaW5nIHRoZSBJbml0aWFsaXppbmcgc3RhdGUuIEEgc2NlbmUgbm9kZSBjYW5ub3QgYmUgcmVzdGFydGVkLlxuICAgKlxuICAgKiBgYGBcbiAgICogc2RrLlNjZW5lLmNyZWF0ZU5vZGUoKS50aGVuKGZ1bmN0aW9uKG5vZGUpIHtcbiAgICogICAgbm9kZS5hZGRDb21wb25lbnQoJ21wLmdsdGZMb2FkZXInLCB7XG4gICAqICAgICAgdXJsOiAnaHR0cDovL3d3dy5zb21lTW9kZWxTaXRlLmNvbS9yYWJiaXQuZ2x0ZidcbiAgICogICAgfSk7XG4gICAqXG4gICAqICAgIG5vZGUucG9zaXRpb24uc2V0KDAsIDEsIDApO1xuICAgKiAgICBub2RlLnN0YXJ0KCk7XG4gICAqIH0pO1xuICAgKiBgYGBcbiAgICpcbiAgICogU2V0dGluZyB0aGUgcG9zaXRpb24sIHJvdGF0aW9uLCBvciBzY2FsZSBvZiBhIHNjZW5lIG5vZGUgYWZmZWN0cyBjaGlsZCBjb21wb25lbnRzLlxuICAgKlxuICAgKi9cbiAgZXhwb3J0IGludGVyZmFjZSBJTm9kZSB7XG4gICAgLyoqXG4gICAgICogSW5zdGFudGlhdGVzIGEgY29tcG9uZW50IGFuZCBhZGRzIGl0IHRvIHRoZSBub2RlcyBpbnRlcm5hbCBjb21wb25lbnQgbGlzdC5cbiAgICAgKiBUaGlzIGZ1bmN0aW9uIGRvZXMgbm90aGluZyBpZiB0aGUgbm9kZSBpcyBpbiB0aGUgT3BlcmF0aW5nIG9yIERlc3Ryb3llZCBzdGF0ZS5cbiAgICAgKiBAcGFyYW0gbmFtZSBUaGUgcmVnaXN0ZXJlZCBjb21wb25lbnQgbmFtZS5cbiAgICAgKiBAcGFyYW0gaW5pdGlhbElucHV0cyBpbml0aWFsIGtleS12YWx1ZSBwYWlycyB0aGF0IHdpbGwgYmUgYXBwbGllZCB0byB0aGUgY29tcG9uZW50IGJlZm9yZSBvbkluaXQgaXMgY2FsbGVkLlxuICAgICAqIElmIHRoZSBrZXlzIGRvIG5vdCBtYXRjaCB0aGUgY29tcG9uZW50cyBpbnB1dHMsIHRoZXkgYXJlIGlnbm9yZWQuXG4gICAgICogQHBhcmFtIGlkIGFuIG9wdGlvbmFsIGlkIGZvciB0aGlzIGNvbXBvbmVudCwgaWYgbm90IHNwZWNpZmllZCBhbiBpZCB3aWxsIGJlIGNvbXB1dGVkIGZvciB0aGUgY29tcG9uZW50LlxuICAgICAqXG4gICAgICogQHJldHVybnMgVGhlIG5ld2x5IGNyZWF0ZWQgY29tcG9uZW50LlxuICAgICAqL1xuICAgIGFkZENvbXBvbmVudDxUIGV4dGVuZHMgU2NlbmVDb21wb25lbnROYW1lPihcbiAgICAgIG5hbWU6IFQsXG4gICAgICBpbml0aWFsSW5wdXRzPzogU2NlbmVDb21wb25lbnRPcHRpb25zW1RdLFxuICAgICAgaWQ/OiBzdHJpbmdcbiAgICApOiBJQ29tcG9uZW50O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBpbiBpdGVyYXRvciBpdGVyYXRpbmcgb3ZlciBhbGwgdGhlIGNvbXBvbmVudHMgY29udGFpbmVkIGJ5IHRoaXMgbm9kZS5cbiAgICAgKi9cbiAgICBjb21wb25lbnRJdGVyYXRvcigpOiBJdGVyYWJsZUl0ZXJhdG9yPElDb21wb25lbnQ+O1xuXG4gICAgLyoqXG4gICAgICogVHJhbnNpdGlvbnMgdGhlIG5vZGUgdG8gT3BlcmF0aW5nIGlmIGl0IGlzIGluIHRoZSBJbml0aWFsaXppbmcgc3RhdGUuXG4gICAgICogQ2FsbGluZyB0aGlzIGZ1bmN0aW9uIGhhcyBubyBlZmZlY3QgaWYgdGhlIG5vZGUgaXMgYWxyZWFkeSBPcGVyYXRpbmcuXG4gICAgICovXG4gICAgc3RhcnQoKTogdm9pZDtcblxuICAgIC8qKlxuICAgICAqIFRyYW5zaXRpb25zIHRoZSBub2RlIHRvIERlc3Ryb3llZCBzdGF0ZSBpZiBpdCBpcyBpbiBhbnkgc3RhdGUuXG4gICAgICogQ2FsbGluZyB0aGlzIGZ1bmN0aW9uIGhhcyBubyBlZmZlY3QgaWYgdGhlIG5vZGUgaXMgYWxyZWFkeSBEZXN0cm95ZWQuXG4gICAgICovXG4gICAgc3RvcCgpOiB2b2lkO1xuXG4gICAgLyoqXG4gICAgICogVGhlIG5vZGUgbmFtZS5cbiAgICAgKi9cbiAgICBuYW1lOiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgc2NlbmUgbm9kZSBwb3NpdGlvbi4gWW91IGNhbiBjYWxsIG1ldGhvZHMgb24gdGhpcyBvYmplY3QgdG8gc2V0IGl0cyB2YWx1ZXMuXG4gICAgICogU2VlIDxodHRwczovL3RocmVlanMub3JnL2RvY3MvI2FwaS9lbi9tYXRoL1ZlY3RvcjM+XG4gICAgICovXG4gICAgcmVhZG9ubHkgcG9zaXRpb246IFRIUkVFLlZlY3RvcjM7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgc2NlbmUgbm9kZSByb3RhdGlvbi4gWW91IGNhbiBjYWxsIG1ldGhvZHMgb24gdGhpcyBvYmplY3QgdG8gc2V0IGl0cyB2YWx1ZXMuXG4gICAgICogU2VlIDxodHRwczovL3RocmVlanMub3JnL2RvY3MvI2FwaS9lbi9tYXRoL1F1YXRlcm5pb24+XG4gICAgICovXG4gICAgcmVhZG9ubHkgcXVhdGVybmlvbjogVEhSRUUuUXVhdGVybmlvbjtcblxuICAgIC8qKlxuICAgICAqIFRoZSBzY2VuZSBub2RlIHNjYWxlIHZlY3Rvci4gWW91IGNhbiBjYWxsIG1ldGhvZHMgb24gdGhpcyBvYmplY3QgdG8gc2V0IGl0cyB2YWx1ZXMuXG4gICAgICogU2VlIDxodHRwczovL3RocmVlanMub3JnL2RvY3MvI2FwaS9lbi9tYXRoL1ZlY3RvcjM+XG4gICAgICovXG4gICAgcmVhZG9ubHkgc2NhbGU6IFRIUkVFLlZlY3RvcjM7XG5cbiAgICAvKipcbiAgICAgKiBBIHJlYWQtb25seSB1bmlxdWUgaWQgdXNlZCB0byByZWZlcmVuY2UgdGhpcyBub2RlIGluIGEgcGF0aCBiaW5kaW5nLlxuICAgICAqIFRoaXMgaWQgaXMgYXV0b2dlbmVyYXRlZCB1bmxlc3MgaXQgaXMgc3BlY2lmZWQgYW5kIGNyZWF0ZWQgdmlhIHRoZSBTY2VuZS5PYmplY3QuXG4gICAgICovXG4gICAgcmVhZG9ubHkgaWQ6IHN0cmluZztcbiAgfVxuXG4gIC8qKlxuICAgKiAqKkNvbXBvbmVudCBDb250ZXh0Kio8YnI+XG4gICAqIFRoZSBjb250ZXh0IG9iamVjdCBjb250YWlucyB0aGUgdGhyZWUuanMgbW9kdWxlIGFuZCB0aGUgbWFpbiBhc3BlY3RzIG9mIHRoZSByZW5kZXJpbmcgZW5naW5lLjxicj5cbiAgICogVGhlIGNhbWVyYSwgc2NlbmUsIG9yIHJlbmRlcmVyIG1heSB3aWxsIGxpa2VseSBiZSByZXBsYWNlZCBpbiB0aGUgZnV0dXJlIHdpdGggYW4gc2RrIG1vZHVsZS5cbiAgICpcbiAgICogYGBgXG4gICAqIGZ1bmN0aW9uIEN5bGluZGVyKCkge1xuICAgKiAgICB0aGlzLm9uSW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgKiAgICAgIHZhciBUSFJFRSA9IHRoaXMuY29udGV4dC50aHJlZTtcbiAgICogICAgICB2YXIgZ2VvbWV0cnkgPSBuZXcgVEhSRUUuQ3lsaW5kZXJHZW9tZXRyeSggNSwgNSwgMjAsIDMyICk7XG4gICAqICAgICAgdmFyIG1hdGVyaWFsID0gbmV3IFRIUkVFLk1lc2hCYXNpY01hdGVyaWFsKCB7Y29sb3I6IDB4ZmZmZjAwfSApO1xuICAgKiAgICAgIHZhciBjeWxpbmRlciA9IG5ldyBUSFJFRS5NZXNoKCBnZW9tZXRyeSwgbWF0ZXJpYWwgKTtcbiAgICogICAgfTtcbiAgICogfVxuICAgKiBgYGBcbiAgICovXG4gIGV4cG9ydCBpbnRlcmZhY2UgSUNvbXBvbmVudENvbnRleHQge1xuICAgIC8qKlxuICAgICAqIFRoZSB0aHJlZS5qcyBtb2R1bGUuXG4gICAgICovXG4gICAgdGhyZWU6IHR5cGVvZiBUSFJFRTtcblxuICAgIC8qKlxuICAgICAqIFRoZSBzaG93Y2FzZSB0aHJlZS5qcyByZW5kZXJlci48YnI+XG4gICAgICogU2VlIDxhIGhyZWY9XCJodHRwczovL3RocmVlanMub3JnL2RvY3MvI2FwaS9lbi9yZW5kZXJlcnMvV2ViR0xSZW5kZXJlclwiIHRhcmdldD1cIl9ibGFua1wiPmh0dHBzOi8vdGhyZWVqcy5vcmcvZG9jcy8jYXBpL2VuL3JlbmRlcmVycy9XZWJHTFJlbmRlcmVyPC9hPlxuICAgICAqL1xuICAgIHJlbmRlcmVyOiBUSFJFRS5XZWJHTFJlbmRlcmVyO1xuXG4gICAgLyoqXG4gICAgICogVGhlIHNob3djYXNlIHNjZW5lLjxicj5cbiAgICAgKiBTZWUgPGEgaHJlZj1cImh0dHBzOi8vdGhyZWVqcy5vcmcvZG9jcy8jYXBpL2VuL3NjZW5lcy9TY2VuZVwiIHRhcmdldD1cIl9ibGFua1wiPmh0dHBzOi8vdGhyZWVqcy5vcmcvZG9jcy8jYXBpL2VuL3NjZW5lcy9TY2VuZTwvYT5cbiAgICAgKlxuICAgICAqL1xuICAgIHNjZW5lOiBUSFJFRS5TY2VuZTtcblxuICAgIC8qKlxuICAgICAqIFRoZSBtYWluIGNhbWVyYS4gSXQgaXMgcmVhZC1vbmx5Ljxicj5cbiAgICAgKiBTZWUgPGEgaHJlZj1cImh0dHBzOi8vdGhyZWVqcy5vcmcvZG9jcy8jYXBpL2VuL2NhbWVyYXMvQ2FtZXJhXCIgdGFyZ2V0PVwiX2JsYW5rXCI+aHR0cHM6Ly90aHJlZWpzLm9yZy9kb2NzLyNhcGkvZW4vY2FtZXJhcy9DYW1lcmE8L2E+XG4gICAgICovXG4gICAgY2FtZXJhOiBUSFJFRS5DYW1lcmE7XG4gIH1cbiAgLyoqXG4gICAqIElDb21wb25lbnRcbiAgICpcbiAgICogVXNlIHRoaXMgaW50ZXJmYWNlIHRvIGltcGxlbWVudCBhIGNvbXBvbmVudCBhbmQgcmVnaXN0ZXIgaXQgd2l0aCB0aGUgc2RrLlxuICAgKlxuICAgKiBgYGBcbiAgICogZnVuY3Rpb24gQm94KCkge1xuICAgKiAgICB0aGlzLmlucHV0cyA9IHtcbiAgICogICAgICB2aXNpYmxlOiBmYWxzZSxcbiAgICogICAgfTtcbiAgICpcbiAgICogICAgdGhpcy5vbkluaXQgPSBmdW5jdGlvbigpIHtcbiAgICogICAgICB2YXIgVEhSRUUgPSB0aGlzLmNvbnRleHQudGhyZWU7XG4gICAqICAgICAgdmFyIGdlb21ldHJ5ID0gbmV3IFRIUkVFLkJveEdlb21ldHJ5KDEsIDEsIDEpO1xuICAgKiAgICAgIHRoaXMubWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaEJhc2ljTWF0ZXJpYWwoKTtcbiAgICogICAgICB2YXIgbWVzaCA9IG5ldyBUSFJFRS5NZXNoKCBnZW9tZXRyeSwgdGhpcy5tYXRlcmlhbCApO1xuICAgKiAgICAgIHRoaXMub3V0cHV0cy5vYmplY3RSb290ID0gbWVzaDtcbiAgICogICAgfTtcbiAgICpcbiAgICogICAgdGhpcy5vbkV2ZW50ID0gZnVuY3Rpb24odHlwZSwgZGF0YSkge1xuICAgKiAgICB9XG4gICAqXG4gICAqICAgIHRoaXMub25JbnB1dHNVcGRhdGVkID0gZnVuY3Rpb24ocHJldmlvdXMpIHtcbiAgICogICAgfTtcbiAgICpcbiAgICogICAgdGhpcy5vblRpY2sgPSBmdW5jdGlvbih0aWNrRGVsdGEpIHtcbiAgICogICAgfVxuICAgKlxuICAgKiAgICB0aGlzLm9uRGVzdHJveSA9IGZ1bmN0aW9uKCkge1xuICAgKiAgICAgIHRoaXMubWF0ZXJpYWwuZGlzcG9zZSgpO1xuICAgKiAgICB9O1xuICAgKiB9XG5cbiAgICogZnVuY3Rpb24gQm94RmFjdG9yeSgpIHtcbiAgICogICAgcmV0dXJuIG5ldyBCb3goKTtcbiAgICogfVxuICAgKlxuICAgKiAvLyBSZWdpc3RlcmluZyB0aGUgY29tcG9uZW50IHdpdGggdGhlIHNka1xuICAgKiBzZGsuU2NlbmUucmVnaXN0ZXIoJ2JveCcsIEJveEZhY3RvcnkpO1xuICAgKlxuICAgKiBgYGBcbiAgICovXG4gIGV4cG9ydCBpbnRlcmZhY2UgSUNvbXBvbmVudCB7XG4gICAgLyoqXG4gICAgICogVGhlIGNvbXBvbmVudCB0eXBlLiBUaGlzIHZhbHVlIGlzIHRoZSBzYW1lIHN0cmluZyB1c2VkIHRvIGlkZW50aWZ5IHRoZSBjb21wb25lbnQgZmFjdG9yeS5cbiAgICAgKi9cbiAgICByZWFkb25seSBjb21wb25lbnRUeXBlOiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiBBbiBvcHRpb25hbCBkaWN0aW9uYXJ5IG9mIHByb3BlcnRpZXMgdGhhdCBhZmZlY3RzIHRoZSBiZWhhdmlvciBvZiB0aGUgY29tcG9uZW50LlxuICAgICAqIFRoZXNlIHByb3BlcnRpZXMgY2FuIGJlIGNoYW5nZWQgYnkgYW4gZXh0ZXJuYWwgc291cmNlIGF0IGFueSB0aW1lLiBJdCBpcyB1cCB0byB0aGUgY29tcG9uZW50XG4gICAgICogdG8gcmVzcG9uZCBhcHByb3ByaWF0ZWx5IHRvIHRoZSBjaGFuZ2VzLiBUaGVzZSBpbnB1dCBwcm9wZXJ0aWVzIGNhbiBhbHNvIGJlIGJpbmQgdGFyZ2V0cyB0byBhblxuICAgICAqIG9ic2VydmFibGUgc291cmNlIGUuZy4gdGhlIG91dHB1dCBwcm9wZXJ0eSBvZiBhbm90aGVyIGNvbXBvbmVudC5cbiAgICAgKi9cbiAgICBpbnB1dHM/OiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPjtcblxuICAgIC8qKlxuICAgICAqIEFuIG9wdGlvbmFsIGRpY3Rpb25hcnkgb2YgcHJvcGVydGllcyB0aGF0IHRoaXMgY29tcG9uZW50IGNvbXB1dGVzLlxuICAgICAqIFRoaXMgZGljdGlvbmFyeSBpcyBvYnNlcnZhYmxlIGFuZCBjYW4gYmUgdGhlIHNvdXJjZSBvZiBhIGJpbmQgdGFyZ2V0LlxuICAgICAqXG4gICAgICogb2JqZWN0Um9vdCBhbmQgY29sbGlkZXIgYXJlIHJlc2VydmVkIHByb3BlcnRpZXMgd2hpY2ggYXJlIGFkZGVkIHRvIGFsbCBjb21wb25lbnRzIGF1dG9tYXRpY2FsbHkuXG4gICAgICogVGhlIHZhbHVlIHNldCB0byBvYmplY3RSb290IHdpbGwgZ2V0IGFkZGVkIHRvIHRoZSBzY2VuZSBncmFwaCBhcyBhIGNoaWxkIG9mIHRoZSBzY2VuZSBub2RlLlxuICAgICAqIFRoZSB2YWx1ZSBzZXQgdG8gY29sbGlkZXIgd2lsbCBnZXQgaW5jbHVkZWQgaW4gcmF5Y2FzdCBoaXQgZGV0ZWN0aW9uLlxuICAgICAqXG4gICAgICogYGBgXG4gICAgICogZnVuY3Rpb24gQm94KCkge1xuICAgICAqICAgIHRoaXMub25Jbml0ID0gZnVuY3Rpb24oKSB7XG4gICAgICogICAgICB2YXIgVEhSRUUgPSB0aGlzLmNvbnRleHQudGhyZWU7XG4gICAgICogICAgICB2YXIgZ2VvbWV0cnkgPSBuZXcgVEhSRUUuQm94R2VvbWV0cnkoMSwgMSwgMSk7XG4gICAgICogICAgICB0aGlzLm1hdGVyaWFsID0gbmV3IFRIUkVFLk1lc2hCYXNpY01hdGVyaWFsKCk7XG4gICAgICogICAgICB2YXIgbWVzaCA9IG5ldyBUSFJFRS5NZXNoKCBnZW9tZXRyeSwgdGhpcy5tYXRlcmlhbCApO1xuICAgICAqXG4gICAgICogICAgICB0aGlzLm91dHB1dHMub2JqZWN0Um9vdCA9IG1lc2g7ICAgLy8gZ2V0cyBhZGRlZCB0byB0aGUgc2NlbmUgbm9kZVxuICAgICAqICAgICAgdGhpcy5vdXRwdXRzLmNvbGxpZGVyID0gbWVzaDsgICAgIC8vIHdpbGwgbm93IGJlIHBhcnQgb2YgcmF5Y2FzdCB0ZXN0aW5nXG4gICAgICogICAgfVxuICAgICAqIH1cbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBvdXRwdXRzOiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPiAmIFByZWRlZmluZWRPdXRwdXRzO1xuXG4gICAgLyoqXG4gICAgICogQW4gb3B0aW9uYWwgZGljdGlvbmFyeSBvZiBldmVudHMgdGhhdCB0aGlzIGNvbXBvbmVudCBoYW5kbGVzIHRocm91Z2ggaXRzIGBvbkV2ZW50YC5cbiAgICAgKiBTZXR0aW5nIGFuIGV2ZW50IHRvIGEgZmFsc3kgdmFsdWUgdGVtcG9yYXJpbHkgc3RvcHMgdGhpcyBjb21wb25lbnQgZnJvbSByZWNlaXZpbmcgc2FpZCBldmVudC5cbiAgICAgKi9cbiAgICBldmVudHM6IFJlY29yZDxzdHJpbmcsIGJvb2xlYW4+O1xuXG4gICAgLyoqXG4gICAgICogQW4gb3B0aW9uYWwgZGljdGlvbmFyeSBvZiBldmVudHMgZW1pdHRlZCBieSB0aGlzIGNvbXBvbmVudC5cbiAgICAgKiBTZXR0aW5nIGFuIGVtaXQgdG8gYSBmYWxzeSB2YWx1ZSB3aWxsIHByZXZlbnQgdGhlIGNvbXBvbmVudCBmcm9tIGVtaXR0aW5nIHRoZSBldmVudCB3aGVuIHVzaW5nIGAubm90aWZ5YC5cbiAgICAgKiBUaGVzZSBwcm9wZXJ0aWVzIGNhbiBiZSBjaGFuZ2VkIGJ5IGFuIGV4dGVybmFsIHNvdXJjZSBhdCBhbnkgdGltZS5cbiAgICAgKiBJZiB0aGlzIGRpY3Rpb25hcnkgaXMgb21pdHRlZCwgYW55IGFuZCBhbGwgZXZlbnRzIHdpbGwgYmUgZW1pdHRlZCBmcm9tIGAubm90aWZ5YC5cbiAgICAgKi9cbiAgICBlbWl0cz86IFJlY29yZDxzdHJpbmcsIGJvb2xlYW4+O1xuXG4gICAgLyoqXG4gICAgICogVGhlIGNvbnRleHQgcHJvdmlkZXMgYWNjZXNzIHRvIHRoZSB1bmRlcmx5aW5nIHJlbmRlcmluZyBlbmdpbmUuIFRoZSBzZGsgZnJhbWV3b3JrIGFkZHMgaXRcbiAgICAgKiB0byB0aGUgY29tcG9uZW50IGR1cmluZyBjb25zdHJ1Y3Rpb24uXG4gICAgICovXG4gICAgY29udGV4dDogSUNvbXBvbmVudENvbnRleHQ7XG5cbiAgICAvKipcbiAgICAgKiBUaGlzIGZ1bmN0aW9uIGlzIGNhbGxlZCBvbmNlIGFmdGVyIHRoZSBzY2VuZSBub2RlIGl0cyBhdHRhY2hlZCB0byBoYXMgc3RhcnRlZC5cbiAgICAgKi9cbiAgICBvbkluaXQ/KCk6IHZvaWQ7XG5cbiAgICAvKipcbiAgICAgKiBUaGlzIGZ1bmN0aW9uIGlzIGNhbGxlZCBvbmNlIGZvciBlYWNoIGludGVyYWN0aW9uIG9yIGV2ZW50IHRoYXQgb2NjdXJyZWQgZHVyaW5nIHRoZSBsYXN0IGZyYW1lLlxuICAgICAqIFRoZSBjb21wb25lbnQgbXVzdCBzZXQgb3V0cHV0cy5jb2xsaWRlciB3aXRoIGFuIE9iamVjdDNEIHRvIGdldCBpbnRlcmFjdGlvbiBjYWxsYmFja3Mgb3IgYmluZEV2ZW50IHRvIHJlY2VpdmUgb3RoZXIgZXZlbnRzLlxuICAgICAqL1xuICAgIG9uRXZlbnQ/KGV2ZW50VHlwZTogc3RyaW5nIHwgSW50ZXJhY3Rpb25UeXBlLCBldmVudERhdGE/OiB1bmtub3duKTogdm9pZDtcblxuICAgIC8qKlxuICAgICAqIFRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIGFmdGVyIG9uZSBvciBtb3JlIGlucHV0IHByb3BlcnRpZXMgaGF2ZSBjaGFuZ2VkLlxuICAgICAqIEl0IHdpbGwgYmUgY2FsbGVkIGF0IG1vc3Qgb25jZSBhIGZyYW1lLlxuICAgICAqL1xuICAgIG9uSW5wdXRzVXBkYXRlZD8ocHJldmlvdXNJbnB1dHM6IFJlY29yZDxzdHJpbmcsIHVua25vd24+KTogdm9pZDtcblxuICAgIC8qKlxuICAgICAqICBUaGlzIGZ1bmN0aW9uIGlzIGNhbGxlZCBvbmNlIGEgZnJhbWUgYWZ0ZXIgaW5wdXQgY2hhbmdlcyBoYXZlIGJlZW4gZGV0ZWN0ZWQuXG4gICAgICovXG4gICAgb25UaWNrPyh0aWNrRGVsdGE6IG51bWJlcik6IHZvaWQ7XG5cbiAgICAvKipcbiAgICAgKiBUaGlzIGZ1bmN0aW9uIGlzIGNhbGxlZCBvbmNlIHJpZ2h0IGJlZm9yZSB0aGUgc2NlbmUgbm9kZSBoYXMgc3RvcHBlZC5cbiAgICAgKi9cbiAgICBvbkRlc3Ryb3k/KCk6IHZvaWQ7XG5cbiAgICAvKipcbiAgICAgKiBDYWxsIHRoaXMgZnVuY3Rpb24gdG8gYmluZCBhbiBpbnB1dCBwcm9wZXJ0eSB0byBhbiBvdXRwdXQgcHJvcGVydHkgb24gYW5vdGhlclxuICAgICAqIGNvbXBvbmVudC5cbiAgICAgKlxuICAgICAqIGBgYFxuICAgICAqIGNvbnN0IFtzY2VuZU9iamVjdF0gPSBhd2FpdCBzZGsuU2NlbmUuY3JlYXRlT2JqZWN0cygxKTtcbiAgICAgKiBjb25zdCBub2RlMSA9IHNjZW5lT2JqZWN0LmNyZWF0ZU5vZGUoKTtcbiAgICAgKiBjb25zdCBub2RlMiA9IHNjZW5lT2JqZWN0LmNyZWF0ZU5vZGUoKTtcbiAgICAgKlxuICAgICAqIC8vIG1wLm9iakxvYWRlciBoYXMgYW4gb3V0cHV0cy52aXNpYmxlIHByb3BlcnR5XG4gICAgICogY29uc3QgY29tcDEgPSBub2RlMS5hZGRDb21wb25lbnQoJ21wLm9iakxvYWRlcicpO1xuICAgICAqXG4gICAgICogLy8gbXlDb21wb25lbnQgaGFzIGFuIGlucHV0cy50b2dnbGVTdGF0ZSBwcm9wZXJ0eVxuICAgICAqIGNvbnN0IGNvbXAyID0gbm9kZTIuYWRkQ29tcG9uZW50KCdteUNvbXBvbmVudCcpO1xuICAgICAqXG4gICAgICogY29tcDEuYmluZCgndmlzaWJsZScsIGNvbXAyLCAndG9nZ2xlU3RhdGUnKTtcbiAgICAgKlxuICAgICAqIG5vZGUxLnN0YXJ0KCk7XG4gICAgICogbm9kZTIuc3RhcnQoKTtcbiAgICAgKlxuICAgICAqIC8vIGNvbXAxLmlucHV0cy52aXNpYmxlIHdpbGwgbm93IGFsd2F5cyBlcXVhbCBjb21wMi5vdXRwdXRzLnRvZ2dsZVN0YXRlXG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiBgYGBcbiAgICAgKiBAcGFyYW0gcHJvcCBpbnB1dHMgcHJvcGVydHkgbmFtZVxuICAgICAqIEBwYXJhbSBzcmMgc291cmNlIGNvbXBvbmVudFxuICAgICAqIEBwYXJhbSBzcmNQcm9wIHNvdXJjZSBvdXRwdXRzIHByb3BlcnR5IG5hbWVcbiAgICAgKiBAZGVwcmVjYXRlZCBVc2UgW1tJT2JqZWN0LmJpbmRQYXRoXV0gaW5zdGVhZC5cbiAgICAgKi9cbiAgICBiaW5kKHByb3A6IHN0cmluZywgc3JjOiBJQ29tcG9uZW50LCBzcmNQcm9wOiBzdHJpbmcpOiB2b2lkO1xuXG4gICAgLyoqXG4gICAgICogTm90aWZpZXMgdGhpcyBjb21wb25lbnQgb2YgYW4gYGV2ZW50VHlwZWAgd2hlbiB0aGUgYHNyY2AgQ29tcG9uZW50IGNhbGxzIGBub3RpZnlgIHdpdGggYSBgc3JjRXZlbnRUeXBlYCBldmVudFxuICAgICAqIEBkZXByZWNhdGVkIFVzZSBbW0lPYmplY3QuYmluZFBhdGhdXSBpbnN0ZWFkLlxuICAgICAqL1xuICAgIGJpbmRFdmVudChldmVudFR5cGU6IHN0cmluZywgc3JjOiBJQ29tcG9uZW50LCBzcmNFdmVudFR5cGU6IHN0cmluZyk6IHZvaWQ7XG5cbiAgICAvKipcbiAgICAgKiBFbWl0IGFuIGV2ZW50IHRvIG90aGVyIGNvbXBvbmVudHNcbiAgICAgKi9cbiAgICBub3RpZnkoZXZlbnRUeXBlOiBzdHJpbmcsIGV2ZW50RGF0YT86IHVua25vd24pOiB2b2lkO1xuXG4gICAgLyoqXG4gICAgICogU3B5IG9uIGEgY29tcG9uZW50J3Mgbm90aWZ5IGZyb20gb3V0c2lkZSBvZiB0aGUgY29tcG9uZW50IHN5c3RlbVxuICAgICAqIEByZXR1cm5zIHtJU3Vic2NyaXB0aW9ufSBhbiBvYmplY3QgcmVzcG9uc2libGUgZm9yIHJlbW92aW5nIHRoZSBzcHlcbiAgICAgKiBAZGVwcmVjYXRlZCBVc2UgW1tJT2JqZWN0LnNweU9uRXZlbnRdXSBpbnN0ZWFkLlxuICAgICAqL1xuICAgIHNweU9uRXZlbnQoc3B5OiBJQ29tcG9uZW50RXZlbnRTcHkpOiBJU3Vic2NyaXB0aW9uO1xuICB9XG5cbiAgLyoqXG4gICAqIEEgc3B5IHRoYXQgY2FuIGJlIGF0dGFjaGVkIHRvIGJlIG5vdGlmaWVkIG9mIGEgY29tcG9uZW50IGV2ZW50cyB1c2luZyBgc3B5T25FdmVudGBcbiAgICovXG4gIGV4cG9ydCBpbnRlcmZhY2UgSUNvbXBvbmVudEV2ZW50U3B5PFQgPSB1bmtub3duPiB7XG4gICAgLyoqXG4gICAgICogVGhlIHR5cGUgb2YgZXZlbnQgdG8gc3B5IG9uXG4gICAgICovXG4gICAgcmVhZG9ubHkgZXZlbnRUeXBlOiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiBDYWxsZWQgd2hlbiB0aGUgYXR0YWNoZWQgY29tcG9uZW50IG5vdGlmaWVzIG9mIGFuIGBldmVudFR5cGVgIGV2ZW50XG4gICAgICogQHBhcmFtIGV2ZW50RGF0YVxuICAgICAqL1xuICAgIG9uRXZlbnQoZXZlbnREYXRhPzogVCk6IHZvaWQ7XG4gIH1cblxuICBleHBvcnQgaW50ZXJmYWNlIElDb21wb25lbnREZXNjIHtcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgZmFjdG9yeTogKCkgPT4gSUNvbXBvbmVudDtcbiAgfVxuXG4gIC8qKlxuICAgKiBBIGRlc2NyaXB0b3IgZm9yIGFuIGlucHV0IGNvbXBvbmVudCBwcm9wZXJ0eSBjb250YWluZWQgYnkgYSBzY2VuZSBvYmplY3QuXG4gICAqL1xuICBleHBvcnQgdHlwZSBJbnB1dFBhdGhEZXNjcmlwdG9yID0ge1xuICAgIC8qKlxuICAgICAqIFRoZSB1c2VyIGRlZmluZWQgaWQgb2YgdGhlIHBhdGguIFRoaXMgaWQgbXVzdCBiZSBhIHVuaXF1ZSBzdHJpbmcgZm9yIHRoZSBzY2VuZSBvYmplY3QuXG4gICAgICovXG4gICAgaWQ6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgdHlwZSBvZiB0aGUgcGF0aDogUGF0aFR5cGUuSU5QVVRcbiAgICAgKi9cbiAgICB0eXBlOiBQYXRoVHlwZS5JTlBVVDtcbiAgICAvKipcbiAgICAgKiBUaGUgcGFyZW50IHNjZW5lIG5vZGUgb2YgdGhlIGNvbXBvbmVudC5cbiAgICAgKi9cbiAgICBub2RlOiBTY2VuZS5JTm9kZTtcbiAgICAvKipcbiAgICAgKiBUaGUgY29tcG9uZW50IHdpdGggdGhlIHByb3BlcnR5LlxuICAgICAqL1xuICAgIGNvbXBvbmVudDogU2NlbmUuSUNvbXBvbmVudDtcbiAgICAvKipcbiAgICAgKiBUaGUgcHJvcGVydHkgbmFtZSBvZiB0aGUgY29tcG9uZW50LlxuICAgICAqL1xuICAgIHByb3BlcnR5OiBzdHJpbmc7XG4gIH07XG5cbiAgLyoqXG4gICAqIEEgZGVzY3JpcHRvciBmb3IgYW4gb3V0cHV0IGNvbXBvbmVudCBwcm9wZXJ0eSBjb250YWluZWQgYnkgYSBzY2VuZSBvYmplY3QuXG4gICAqL1xuICBleHBvcnQgdHlwZSBPdXRwdXRQYXRoRGVzY3JpcHRvciA9IHtcbiAgICAvKipcbiAgICAgKiBUaGUgdXNlciBkZWZpbmVkIGlkIG9mIHRoZSBwYXRoLiBUaGlzIGlkIG11c3QgYmUgYSB1bmlxdWUgc3RyaW5nIGZvciB0aGUgc2NlbmUgb2JqZWN0LlxuICAgICAqL1xuICAgIGlkOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIHR5cGUgb2YgdGhlIHBhdGg6IFBhdGhUeXBlLk9VVFBVVFxuICAgICAqL1xuICAgIHR5cGU6IFBhdGhUeXBlLk9VVFBVVDtcbiAgICAvKipcbiAgICAgKiBUaGUgcGFyZW50IHNjZW5lIG5vZGUgb2YgdGhlIGNvbXBvbmVudC5cbiAgICAgKi9cbiAgICBub2RlOiBTY2VuZS5JTm9kZTtcbiAgICAvKipcbiAgICAgKiBUaGUgY29tcG9uZW50IHdpdGggdGhlIHByb3BlcnR5LlxuICAgICAqL1xuICAgIGNvbXBvbmVudDogU2NlbmUuSUNvbXBvbmVudDtcbiAgICAvKipcbiAgICAgKiBUaGUgcHJvcGVydHkgbmFtZSBvZiB0aGUgY29tcG9uZW50LlxuICAgICAqL1xuICAgIHByb3BlcnR5OiBzdHJpbmc7XG4gIH07XG5cbiAgLyoqXG4gICAqIEEgZGVzY3JpcHRvciBmb3IgYW4gZXZlbnQgY29tcG9uZW50IHByb3BlcnR5IGNvbnRhaW5lZCBieSBhIHNjZW5lIG9iamVjdC5cbiAgICovXG4gIGV4cG9ydCB0eXBlIEV2ZW50UGF0aERlc2NyaXB0b3IgPSB7XG4gICAgLyoqXG4gICAgICogVGhlIHVzZXIgZGVmaW5lZCBpZCBvZiB0aGUgcGF0aC4gVGhpcyBpZCBtdXN0IGJlIGEgdW5pcXVlIHN0cmluZyBmb3IgdGhlIHNjZW5lIG9iamVjdC5cbiAgICAgKi9cbiAgICBpZDogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSB0eXBlIG9mIHRoZSBwYXRoOiBQYXRoVHlwZS5FVkVOVFxuICAgICAqL1xuICAgIHR5cGU6IFBhdGhUeXBlLkVWRU5UO1xuICAgIC8qKlxuICAgICAqIFRoZSBwYXJlbnQgc2NlbmUgbm9kZSBvZiB0aGUgY29tcG9uZW50LlxuICAgICAqL1xuICAgIG5vZGU6IFNjZW5lLklOb2RlO1xuICAgIC8qKlxuICAgICAqIFRoZSBjb21wb25lbnQgd2l0aCB0aGUgcHJvcGVydHkuXG4gICAgICovXG4gICAgY29tcG9uZW50OiBTY2VuZS5JQ29tcG9uZW50O1xuICAgIC8qKlxuICAgICAqIFRoZSBwcm9wZXJ0eSBuYW1lIG9mIHRoZSBjb21wb25lbnQuXG4gICAgICovXG4gICAgcHJvcGVydHk6IHN0cmluZztcbiAgfTtcblxuICAvKipcbiAgICogQSBkZXNjcmlwdG9yIGZvciBhbiBlbWl0IGNvbXBvbmVudCBwcm9wZXJ0eSBjb250YWluZWQgYnkgYSBzY2VuZSBvYmplY3QuXG4gICAqL1xuICBleHBvcnQgdHlwZSBFbWl0UGF0aERlc2NyaXB0b3IgPSB7XG4gICAgLyoqXG4gICAgICogVGhlIHVzZXIgZGVmaW5lZCBpZCBvZiB0aGUgcGF0aC4gVGhpcyBpZCBtdXN0IGJlIGEgdW5pcXVlIHN0cmluZyBmb3IgdGhlIHNjZW5lIG9iamVjdC5cbiAgICAgKi9cbiAgICBpZDogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSB0eXBlIG9mIHRoZSBwYXRoOiBQYXRoVHlwZS5FTUlUXG4gICAgICovXG4gICAgdHlwZTogUGF0aFR5cGUuRU1JVDtcbiAgICAvKipcbiAgICAgKiBUaGUgcGFyZW50IHNjZW5lIG5vZGUgb2YgdGhlIGNvbXBvbmVudC5cbiAgICAgKi9cbiAgICBub2RlOiBTY2VuZS5JTm9kZTtcbiAgICAvKipcbiAgICAgKiBUaGUgY29tcG9uZW50IHdpdGggdGhlIHByb3BlcnR5LlxuICAgICAqL1xuICAgIGNvbXBvbmVudDogU2NlbmUuSUNvbXBvbmVudDtcbiAgICAvKipcbiAgICAgKiBUaGUgcHJvcGVydHkgbmFtZSBvZiB0aGUgY29tcG9uZW50LlxuICAgICAqL1xuICAgIHByb3BlcnR5OiBzdHJpbmc7XG4gIH07XG5cbiAgZXhwb3J0IGludGVyZmFjZSBQYXRoQmFzZSB7XG4gICAgLyoqXG4gICAgICogVGhlIG9iamVjdCB0aGlzIHBhdGggaXMgYXNzb2NpYXRlZCB3aXRoXG4gICAgICovXG4gICAgcmVhZG9ubHkgb2JqZWN0OiBTY2VuZS5JT2JqZWN0O1xuICAgIC8qKlxuICAgICAqIFRoZSBpZCBvZiB0aGlzIHBhdGguIFNldCB0byBhIHJhbmRvbSBzdHJpbmcsIG9yIHRoZSBpZCBwcm92aWRlZCB3aGVuIGNyZWF0aW5nIHRoZSBwYXRoXG4gICAgICovXG4gICAgcmVhZG9ubHkgaWQ6IHN0cmluZztcbiAgfVxuICAvKipcbiAgICogQSBwYXRoIHRvIGEgY29tcG9uZW50J3MgaW5wdXQgcHJvcGVydHlcbiAgICovXG4gIGV4cG9ydCBpbnRlcmZhY2UgSW5wdXRQYXRoPFQgPSB1bmtub3duPiBleHRlbmRzIFBhdGhCYXNlIHtcbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIHZhbHVlIG9mIHRoZSBwcm9wZXJ0eSBhc3NvY2lhdGVkIHdpdGggdGhpcyBwYXRoXG4gICAgICovXG4gICAgZ2V0KCk6IFQ7XG4gICAgLyoqXG4gICAgICogU2V0IHRoZSB2YWx1ZSBvZiB0aGUgcHJvcGVydHkgYXNzb2NpYXRlZCB3aXRoIHRoaXMgcGF0aFxuICAgICAqIEBwYXJhbSBuZXdWYWxcbiAgICAgKi9cbiAgICBzZXQobmV3VmFsOiBUKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBCaW5kIHRoaXMgcGF0aCB0byBhbiBbW091dHB1dFBhdGhdXS4gQXMgdGhlIHZhbHVlIG9mIHRoZSBib3VuZCBvdXRwdXQgcGF0aCBjaGFuZ2VzLCB0aGUgdmFsdWUgcmV0dXJuZWQgYnkgW1tnZXRdXSB3aWxsIGFsc28gY2hhbmdlXG4gICAgICogQHBhcmFtIG91dHB1dFBhdGhcbiAgICAgKi9cbiAgICBiaW5kKG91dHB1dFBhdGg6IE91dHB1dFBhdGgpOiB2b2lkO1xuICB9XG5cbiAgLyoqXG4gICAqIEEgcGF0aCB0byBhIGNvbXBvbmVudCdzIG91dHB1dCBwcm9wZXJ0eVxuICAgKi9cbiAgZXhwb3J0IGludGVyZmFjZSBPdXRwdXRQYXRoPFQgPSB1bmtub3duPiBleHRlbmRzIFBhdGhCYXNlIHtcbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIHZhbHVlIG9mIHRoZSBwcm9wZXJ0eSBhc3NvY2lhdGVkIHdpdGggdGhpcyBwYXRoXG4gICAgICovXG4gICAgZ2V0KCk6IFQ7XG4gICAgLyoqXG4gICAgICogQmluZCB0aGlzIHBhdGggdG8gYW4gW1tJbnB1dFBhdGhdXS4gQXMgdGhlIHZhbHVlIG9mIHRoaXMgb3V0cHV0IGNoYW5nZXMsIHRoZSB2YWx1ZSByZXR1cm5lZCBieSB0aGUgYm91bmQgW1tJbnB1dFBhdGguZ2V0XV0gd2lsbCBhbHNvIGNoYW5nZVxuICAgICAqIEBwYXJhbSBvdXRwdXRQYXRoXG4gICAgICovXG4gICAgYmluZChpbnB1dFBhdGg6IElucHV0UGF0aCk6IHZvaWQ7XG4gIH1cblxuICAvKipcbiAgICogQSBwYXRoIHRvIGEgY29tcG9uZW50J3MgZXZlbnQgcHJvcGVydHlcbiAgICovXG4gIGV4cG9ydCBpbnRlcmZhY2UgRXZlbnRQYXRoPFQgPSB1bmtub3duPiBleHRlbmRzIFBhdGhCYXNlIHtcbiAgICAvKipcbiAgICAgKiBCaW5kIHRoaXMgcGF0aCB0byBhbiBbW0VtaXRQYXRoXV0uXG4gICAgICovXG4gICAgYmluZChlbWl0UGF0aDogRW1pdFBhdGgpOiB2b2lkO1xuXG4gICAgLyoqXG4gICAgICogRW1pdCB0aGUgZXZlbnQgYXNzb2NpYXRlZCB3aXRoIHRoaXMgcGF0aC4gVGhpcyBpcyBzaW1pbGFyIHRvIGNhbGxpbmcgW1tJQ29tcG9uZW50Lm9uRXZlbnRdXSBkaXJlY3RseS5cbiAgICAgKi9cbiAgICBlbWl0KHBheWxvYWQ6IFQpOiB2b2lkO1xuXG4gICAgLyoqXG4gICAgICogRGlzYWJsZSBgdGhpcy5lbWl0YCBhbmQgdGhlIGFzc29jaWF0ZWQgQ29tcG9uZW50J3MgYG9uRXZlbnRgIGZyb20gYmVpbmcgdHJpZ2dlcmVkXG4gICAgICovXG4gICAgZGlzYWJsZSgpOiB2b2lkO1xuXG4gICAgLyoqXG4gICAgICogRW5hYmxlIGB0aGlzLmVtaXRgIGFuZCB0aGUgYXNzb2NpYXRlZCBDb21wb25lbnQncyBgb25FdmVudGAgc28gaXQgY2FuIHJlY2VpdmUgdGhlIGV2ZW50IGFnYWluXG4gICAgICovXG4gICAgZW5hYmxlKCk6IHZvaWQ7XG4gIH1cblxuICAvKipcbiAgICogQSBwYXRoIHRvIGEgY29tcG9uZW50J3MgZW1pdCBwcm9wZXJ0eVxuICAgKi9cbiAgZXhwb3J0IGludGVyZmFjZSBFbWl0UGF0aDxUID0gdW5rbm93bj4gZXh0ZW5kcyBQYXRoQmFzZSB7XG4gICAgLyoqXG4gICAgICogQmluZCB0aGlzIHBhdGggdG8gYW4gW1tFdmVudFBhdGhdXS5cbiAgICAgKi9cbiAgICBiaW5kKGV2ZW50UGF0aDogRXZlbnRQYXRoKTogdm9pZDtcblxuICAgIC8qKlxuICAgICAqIEVtaXQgdGhlIGV2ZW50IGFzc29jaWF0ZWQgd2l0aCB0aGlzIHBhdGguIFRoaXMgaXMgc2ltaWxhciB0byBbW0lDb21wb25lbnQubm90aWZ5XV1cbiAgICAgKi9cbiAgICBlbWl0KHBheWxvYWQ6IFQpOiB2b2lkO1xuXG4gICAgLyoqXG4gICAgICogRGlzYWJsZSBgdGhpcy5lbWl0YCBhbmQgdGhlIGFzc29jaWF0ZWQgQ29tcG9uZW50J3MgYG5vdGlmeWBcbiAgICAgKi9cbiAgICBkaXNhYmxlKCk6IHZvaWQ7XG5cbiAgICAvKipcbiAgICAgKiBFbmFibGUgYHRoaXMuZW1pdGAgYW5kIHRoZSBhc3NvY2lhdGVkIENvbXBvbmVudCdzIGFiaWxpdHkgdG8gYG5vdGlmeWBcbiAgICAgKi9cbiAgICBlbmFibGUoKTogdm9pZDtcbiAgfVxuXG4gIC8qKlxuICAgKiBBIHNweSBhbGxvd3MgZm9yIHNweWluZyBvbiBldmVudHMgdHJpZ2dlcmVkIG9uIGEgY29tcG9uZW50IGZyb20gb3V0c2lkZSBvZiB0aGUgY29tcG9uZW50IHN5c3RlbVxuICAgKi9cbiAgZXhwb3J0IGludGVyZmFjZSBJU2NlbmVPYmplY3RTcHk8VCA9IHVua25vd24+IHtcbiAgICAvKipcbiAgICAgKiBUaGUgcGF0aCB0byBzcHkgb25cbiAgICAgKi9cbiAgICByZWFkb25seSBwYXRoOiBJbnB1dFBhdGggfCBPdXRwdXRQYXRoIHwgRXZlbnRQYXRoIHwgRW1pdFBhdGg7XG4gICAgLyoqXG4gICAgICogVHJpZ2dlcmVkIHdoZW4gdGhlIGRhdGEgYXQgYHBhdGhgIGNoYW5nZXMgb3Igd2hlbiBpdHMgZXZlbnQgaXMgdHJpZ2dlcmVkXG4gICAgICogQHBhcmFtIGV2ZW50RGF0YSBUaGUgZGF0YSBzZW50IHdpdGggZXZlbnQgZnJvbSBhIFtbSUNvbXBvbmVudC5ub3RpZnldXSBjYWxsIG9yIHRoZSBuZXcgdmFsdWUgb2YgdGhlIGlucHV0IG9yIG91dHB1dCByZWZlcmVuY2VkIGJ5IHRoZSBwYXRoLlxuICAgICAqL1xuICAgIG9uRXZlbnQoZXZlbnREYXRhOiBUKTogdm9pZDtcbiAgfVxuXG4gIC8qKlxuICAgKiBBIGZhY3RvcnkgYW5kIGNvbnRhaW5lciBmb3IgYSBjb2xsZWN0aW9uIG9mIHNjZW5lIG5vZGVzIGFuZCBjb21wb25lbnRzIGNvbm5lY3RlZCB2aWEgcHJvcGVydHkgYmluZGluZ3MuXG4gICAqL1xuICBleHBvcnQgaW50ZXJmYWNlIElPYmplY3Qge1xuICAgIC8qKlxuICAgICAqIEFkZHMgYSBzY2VuZSBub2RlIHRvIHRoaXMgc2NlbmUgb2JqZWN0IGFuZCByZXR1cm5zIGl0LiBJZiBhbiBpZCBpc24ndCBwcm92aWRlZCwgb25lIHdpbGwgYmUgYXV0b2dlbmVyYXRlZC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBpZCBhIG9wdGlvbmFsIHVuaXF1ZSBpZFxuICAgICAqXG4gICAgICogQHJldHVybiBUaGUgbmV3IHNjZW5lIG5vZGUuXG4gICAgICovXG4gICAgYWRkTm9kZShpZD86IHN0cmluZyk6IElOb2RlO1xuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGFuIGFycmF5IG9mIHNjZW5lIG5vZGVzLlxuICAgICAqXG4gICAgICogQHBhcmFtIG5vZGVDb3VudCB0aGUgbnVtYmVyIG9mIG5vZGVzIHRvIGNyZWF0ZS4gVGhpcyB2YWx1ZSBtdXN0IGJlIGdyZWF0ZXIgdGhhbiB6ZXJvLlxuICAgICAqXG4gICAgICogQHJldHVybiBBbiBhcnJheSBvZiBub2Rlcy5cbiAgICAgKi9cbiAgICBhZGROb2Rlcyhub2RlQ291bnQ6IG51bWJlcik6IElOb2RlW107XG5cbiAgICAvKipcbiAgICAgKiBTdGFydHMgYWxsIG5vZGVzIHJlZmVyZW5jZWQgYnkgdGhpcyBzY2VuZSBvYmplY3QuXG4gICAgICovXG4gICAgc3RhcnQoKTogdm9pZDtcblxuICAgIC8qKlxuICAgICAqIFN0b3BzIGFsbCBub2RlcyByZWZlcmVuY2VkIGJ5IHRoaXMgc2NlbmUgb2JqZWN0LiBUaGUgc2NlbmUgb2JqZWN0IGNhbm5vdCBiZSByZXN0YXJ0ZWQgYWZ0ZXIgdGhpcyBmdW5jdGlvbiBoYXMgYmVlbiBjYWxsZWQuXG4gICAgICovXG4gICAgc3RvcCgpOiB2b2lkO1xuXG4gICAgLyoqXG4gICAgICogQ2FsbCB0aGlzIGZ1bmN0aW9uIHRvIGJpbmQgYW4gaW5wdXQgcHJvcGVydHkgb2YgdGhlIHRhcmdldCBjb21wb25lbnQgdG8gYW4gb3V0cHV0IHByb3BlcnR5IG9mIHRoZSBzb3VyY2VcbiAgICAgKiBjb21wb25lbnQgYmV0d2VlbiBhbnkgbm9kZXMgY29udGFpbmVkIGJ5IHRoaXMgc2NlbmUgb2JqZWN0LlxuICAgICAqXG4gICAgICogQHBhcmFtIHRhcmdldENvbXBvbmVudCBUaGUgY29tcG9uZW50IGxpc3RlbmluZyB0byBwcm9wZXJ0eSBjaGFuZ2VzLlxuICAgICAqIEBwYXJhbSB0YXJnZXRQcm9wICBUaGUgY29tcG9uZW50IGlucHV0IHByb3BlcnR5IG5hbWUuXG4gICAgICogQHBhcmFtIHNvdXJjZUNvbXBvbmVudCBUaGUgY29tcG9uZW50IGJyb2FkY2FzdGluZyBwcm9wZXJ0eSBjaGFuZ2VzLlxuICAgICAqIEBwYXJhbSBzb3VyY2VQcm9wIFRoZSBjb21wb25lbnQgb3V0cHV0IHByb3BlcnR5IG5hbWUuXG4gICAgICogQGRlcHJlY2F0ZWQgVXNlIFtbSU9iamVjdC5iaW5kUGF0aF1dIGluc3RlYWQuXG4gICAgICovXG4gICAgYmluZCh0YXJnZXRDb21wb25lbnQ6IElDb21wb25lbnQsIHRhcmdldFByb3A6IHN0cmluZywgc291cmNlQ29tcG9uZW50OiBJQ29tcG9uZW50LCBzb3VyY2VQcm9wOiBzdHJpbmcpOiB2b2lkO1xuXG4gICAgLyoqXG4gICAgICogQWRkIGEgcGF0aCBpZGVudGlmaWVkIGJ5IGEgdW5pcXVlIHN0cmluZy5cbiAgICAgKiBUaGV5IGBwYXRoRGVzYy50eXBlYCB3aWxsIGRldGVybWluZSB3aGljaCBwYXRoIHR5cGUgaXMgcmV0dXJuZWQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gcGF0aERlc2MgVGhlIHBhdGggZGVzY3JpcHRvciB0byB0aGUgY29tcG9uZW50IHByb3BlcnR5LlxuICAgICAqIEBkZXByZWNhdGVkIFVzZSBvbmUgb2YgW1thZGRJbnB1dFBhdGhdXSwgW1thZGRPdXRwdXRQYXRoXV0sIFtbYWRkRXZlbnRQYXRoXV0sIG9yIFtbYWRkRW1pdFBhdGhdXVxuICAgICAqL1xuICAgIGFkZFBhdGgocGF0aERlc2M6IElucHV0UGF0aERlc2NyaXB0b3IpOiBJbnB1dFBhdGg7XG4gICAgYWRkUGF0aChwYXRoRGVzYzogT3V0cHV0UGF0aERlc2NyaXB0b3IpOiBPdXRwdXRQYXRoO1xuICAgIGFkZFBhdGgocGF0aERlc2M6IEV2ZW50UGF0aERlc2NyaXB0b3IpOiBFdmVudFBhdGg7XG4gICAgYWRkUGF0aChwYXRoRGVzYzogRW1pdFBhdGhEZXNjcmlwdG9yKTogRW1pdFBhdGg7XG5cbiAgICAvKipcbiAgICAgKiBBZGQgYW5kIHJlY2VpdmUgYW4gW1tJbnB1dFBhdGhdXSB0byB0aGUgcHJvcGVydHkgb2YgYW4gW1tJQ29tcG9uZW50XV0uXG4gICAgICogVGhlIHJldHVybmVkIFtbSW5wdXRQYXRoXV0gY2FuIGJlIHVzZWQgdG8gcmVhZCBvciBzZXQgdGhlIHZhbHVlIG9mIGBwcm9wZXJ0eWAgb24gYGNvbXBvbmVudGAncyBpbnB1dHMuXG4gICAgICogQ2hhbmdlcyB0byB0aGUgdmFsdWUgY2FuIGFsc28gYmUgb2JzZXJ2ZWQgYnkgY3JlYXRpbmcgYW4gW1tJU2NlbmVPYmplY3RTcHldXSBhbmQgY2FsbGluZyBbW3NweU9uRXZlbnRdXS5cbiAgICAgKiBUaGUgcGF0aCBjYW4gYWxzbyBiZSBib3VuZCB0byBhbiBbW091dHB1dFBhdGhdXSBvZiBhbm90aGVyIChvciB0aGUgc2FtZSkgY29tcG9uZW50IHRvIGF1dG9tYXRpY2FsbHkgdXBkYXRlIGEgY29tcG9uZW50J3MgaW5wdXQgdmFsdWUuXG4gICAgICpcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogIGNsYXNzIENvdW50ZXIge1xuICAgICAqICAgIHB1YmxpYyBpbnB1dHMgPSB7XG4gICAgICogICAgICBjb3VudDogMSxcbiAgICAgKiAgICB9O1xuICAgICAqICB9XG4gICAgICogIC8vIGNyZWF0ZSBhbiBgSU9iamVjdGAsIGFkZCBhbiBgSU5vZGVgIGFuZCBhbiBgSUNvbXBvbmVudGAgdG8gdGhlIG5vZGUsIHNlZSB0aGUgcmVsZXZhbnQgZnVuY3Rpb25zIChjcmVhdGVPYmplY3QsIGFkZE5vZGUsIGFkZENvbXBvbmVudClcbiAgICAgKiAgY29uc3QgW29iamVjdCwgbm9kZSwgY29tcG9uZW50XTtcbiAgICAgKlxuICAgICAqICAvLyBjcmVhdGUgdGhlIHBhdGhcbiAgICAgKiAgY29uc3QgaW5wdXRQYXRoID0gb2JqZWN0LmFkZElucHV0UGF0aChjb21wb25lbnQsICdjb3VudCcpO1xuICAgICAqXG4gICAgICogIC8vIG9ic2VydmUgY2hhbmdlcyB0byB0aGUgdmFsdWUgb2YgYGlucHV0cy5jb3VudGAgaW4gY29tcG9uZW50XG4gICAgICogIG9iamVjdC5zcHlPbkV2ZW50KHtcbiAgICAgKiAgICBwYXRoOiBpbnB1dFBhdGgsXG4gICAgICogICAgb25FdmVudChuZXdWYWx1ZSkge1xuICAgICAqICAgICAgY29uc29sZS5sb2coYGNvbXBvbmVudC5pbnB1dC5jb3VudCdzIG5ldyB2YWx1ZSBpcyAke25ld1ZhbHVlfWApO1xuICAgICAqICAgIH0sXG4gICAgICogIH0pO1xuICAgICAqICAvLyByZWFkIGFuZCBjaGFuZ2UgdGhlIHZhbHVlIG9mIHRoZSBpbnB1dCBpbiB0aGUgY29tcG9uZW50XG4gICAgICogIGNvbnN0IGNvdW50VmFsdWUgPSBpbnB1dFBhdGguZ2V0KCk7XG4gICAgICogIGlucHV0UGF0aC5zZXQoY291bnQgKyAxKTtcbiAgICAgKlxuICAgICAqIC8vIGJpbmQgdGhlIHBhdGggdG8gdGhlIHZhbHVlIGZyb20gYW5vdGhlciAob3V0cHV0KSBwYXRoXG4gICAgICogIG9iamVjdC5iaW5kUGF0aChpbnB1dFBhdGgsIG91dHB1dFBhdGgpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHBhcmFtIGNvbXBvbmVudFxuICAgICAqIEBwYXJhbSBwcm9wZXJ0eVxuICAgICAqIEBwYXJhbSBpZFxuICAgICAqIEBpbnRyb2R1Y2VkIDMuMS43MS4xNC0wLWdhZjc3YWRkMzgzXG4gICAgICovXG4gICAgYWRkSW5wdXRQYXRoKGNvbXBvbmVudDogSUNvbXBvbmVudCwgcHJvcGVydHk6IHN0cmluZywgaWQ/OiBzdHJpbmcpOiBJbnB1dFBhdGg7XG5cbiAgICAvKipcbiAgICAgKiBBZGQgYW5kIHJlY2VpdmUgYW4gW1tPdXRwdXRQYXRoXV0gdG8gdGhlIHByb3BlcnR5IG9mIGFuIFtbSUNvbXBvbmVudF1dLlxuICAgICAqIFRoZSByZXR1cm5lZCBbW091dHB1dFBhdGhdXSBjYW4gYmUgdXNlZCB0byByZWFkIHRoZSB2YWx1ZSBvZiBgY29tcG9uZW50YCdzIG91dHB1dCBgcHJvcGVydHlgLlxuICAgICAqIENoYW5nZXMgdG8gdGhlIHZhbHVlIGNhbiBhbHNvIGJlIG9ic2VydmVkIGJ5IGNyZWF0aW5nIGFuIFtbSVNjZW5lT2JqZWN0U3B5XV0gYW5kIGNhbGxpbmcgW1tzcHlPbkV2ZW50XV0uXG4gICAgICogVGhlIHBhdGggY2FuIGFsc28gYmUgYm91bmQgdG8gYW4gW1tJbnB1dFBhdGhdXSBvZiBhbm90aGVyIChvciB0aGUgc2FtZSkgY29tcG9uZW50IHRvIGF1dG9tYXRpY2FsbHkgdXBkYXRlIGEgY29tcG9uZW50J3MgaW5wdXQgdmFsdWUuXG4gICAgICpcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogIGNsYXNzIE51bWJlckdlbmVyYXRvciB7XG4gICAgICogICAgcHVibGljIG91dHB1dHMgPSB7XG4gICAgICogICAgICBjdXJyZW50OiAxLFxuICAgICAqICAgIH07XG4gICAgICogIH1cbiAgICAgKiAgLy8gY3JlYXRlIGFuIGBJT2JqZWN0YCwgYWRkIGFuIGBJTm9kZWAgYW5kIGFuIGBJQ29tcG9uZW50YCB0byB0aGUgbm9kZSwgc2VlIHRoZSByZWxldmFudCBmdW5jdGlvbnMgKGNyZWF0ZU9iamVjdCwgYWRkTm9kZSwgYWRkQ29tcG9uZW50KVxuICAgICAqICBjb25zdCBbb2JqZWN0LCBub2RlLCBjb21wb25lbnRdO1xuICAgICAqXG4gICAgICogIC8vIGNyZWF0ZSB0aGUgcGF0aFxuICAgICAqICBjb25zdCBvdXRwdXRQYXRoID0gb2JqZWN0LmFkZE91dHB1dFBhdGgoY29tcG9uZW50LCAnY3VycmVudCcpO1xuICAgICAqXG4gICAgICogIC8vIG9ic2VydmUgY2hhbmdlcyB0byB0aGUgdmFsdWUgb2YgYG91dHB1dHMuY3VycmVudGAgaW4gY29tcG9uZW50XG4gICAgICogIG9iamVjdC5zcHlPbkV2ZW50KHtcbiAgICAgKiAgICBwYXRoOiBvdXRwdXRQYXRoLFxuICAgICAqICAgIG9uRXZlbnQobmV3VmFsdWUpIHtcbiAgICAgKiAgICAgIGNvbnNvbGUubG9nKGBjb21wb25lbnQub3V0cHV0LmN1cnJlbnQncyBuZXcgdmFsdWUgaXMgJHtuZXdWYWx1ZX1gKTtcbiAgICAgKiAgICB9LFxuICAgICAqICB9KTtcbiAgICAgKiAgLy8gcmVhZCBhbmQgYmluZCB0aGUgdmFsdWUgb2YgdGhlIG91dHB1dCB0byBhbm90aGVyIGNvbXBvbmVudCdzIGlucHV0IHZhbHVlXG4gICAgICogIGNvbnN0IGN1cnJlbnRWYWx1ZSA9IG91dHB1dFBhdGguZ2V0KCk7XG4gICAgICogIG9iamVjdC5iaW5kUGF0aChpbnB1dFBhdGgsIG91dHB1dFBhdGgpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHBhcmFtIGNvbXBvbmVudFxuICAgICAqIEBwYXJhbSBwcm9wZXJ0eVxuICAgICAqIEBwYXJhbSBpZFxuICAgICAqIEBpbnRyb2R1Y2VkIDMuMS43MS4xNC0wLWdhZjc3YWRkMzgzXG4gICAgICovXG4gICAgYWRkT3V0cHV0UGF0aChjb21wb25lbnQ6IElDb21wb25lbnQsIHByb3BlcnR5OiBzdHJpbmcsIGlkPzogc3RyaW5nKTogT3V0cHV0UGF0aDtcblxuICAgIC8qKlxuICAgICAqIEFkZCBhbmQgcmVjZWl2ZSBhbiBbW0V2ZW50UGF0aF1dIGZvciBhbiBbW0lDb21wb25lbnRdXS5cbiAgICAgKiBUaGUgcGF0aCBjYW4gYmUgYm91bmQgdG8gYW4gW1tFbWl0UGF0aF1dIG9mIGFub3RoZXIgKG9yIHRoZSBzYW1lKSBjb21wb25lbnQgdG8gYXV0b21hdGljYWxseSB0cmlnZ2VyIHRoZSBjb21wb25lbnQncyBbW0lDb21wb25lbnQub25FdmVudF1dLlxuICAgICAqXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqICBjbGFzcyBSZW5kZXJhYmxlIHtcbiAgICAgKiAgICBwdWJsaWMgZXZlbnRzID0ge1xuICAgICAqICAgICAgcmVyZW5kZXI6IHRydWUsXG4gICAgICogICAgfTtcbiAgICAgKiAgfVxuICAgICAqICAvLyBjcmVhdGUgYW4gYElPYmplY3RgLCBhZGQgYW4gYElOb2RlYCBhbmQgYW4gYElDb21wb25lbnRgIHRvIHRoZSBub2RlLCBzZWUgdGhlIHJlbGV2YW50IGZ1bmN0aW9ucyAoY3JlYXRlT2JqZWN0LCBhZGROb2RlLCBhZGRDb21wb25lbnQpXG4gICAgICogIGNvbnN0IFtvYmplY3QsIG5vZGUsIGNvbXBvbmVudF07XG4gICAgICpcbiAgICAgKiAgLy8gY3JlYXRlIHRoZSBwYXRoXG4gICAgICogIGNvbnN0IGV2ZW50UGF0aCA9IG9iamVjdC5hZGRFdmVudFBhdGgoY29tcG9uZW50LCAncmVyZW5kZXInKTtcbiAgICAgKlxuICAgICAqICAvLyBiaW5kIHRoZSBldmVudCBwYXRoIHNvIHRoYXQgaXQgdHJpZ2dlcnMgdGhlIGNvbXBvbmVudCdzIG9uRXZlbnQgd2hlbiBgZW1pdFBhdGhgIGVtaXRzIGFuIGV2ZW50XG4gICAgICogIG9iamVjdC5iaW5kUGF0aChldmVudFBhdGgsIGVtaXRQYXRoKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEBwYXJhbSBjb21wb25lbnRcbiAgICAgKiBAcGFyYW0gcHJvcGVydHlcbiAgICAgKiBAcGFyYW0gaWRcbiAgICAgKiBAaW50cm9kdWNlZCAzLjEuNzEuMTQtMC1nYWY3N2FkZDM4M1xuICAgICAqL1xuICAgIGFkZEV2ZW50UGF0aChjb21wb25lbnQ6IElDb21wb25lbnQsIHByb3BlcnR5OiBzdHJpbmcsIGlkPzogc3RyaW5nKTogRXZlbnRQYXRoO1xuXG4gICAgLyoqXG4gICAgICogQWRkIGFuZCByZWNlaXZlIGFuIFtbRW1pdFBhdGhdXSBmb3IgYW4gW1tJQ29tcG9uZW50XV0uXG4gICAgICogSXQgaXMgYWxzbyBwb3NzaWJsZSB0byBzcHkgd2hlbiBhbiBldmVudCBpcyBlbWl0dGVkIGJ5IGNyZWF0aW5nIGFuIFtbSVNjZW5lT2JqZWN0U3B5XV0gYW5kIGNhbGxpbmcgW1tzcHlPbkV2ZW50XV0uXG4gICAgICogVGhlIHBhdGggY2FuIGJlIGJvdW5kIHRvIGFuIFtbRXZlbnRQYXRoXV0gb2YgYW5vdGhlciAob3IgdGhlIHNhbWUpIGNvbXBvbmVudCB0byBhdXRvbWF0aWNhbGx5IHRyaWdnZXIgdGhlIGNvbXBvbmVudCdzIFtbSUNvbXBvbmVudC5vbkV2ZW50XV0uXG4gICAgICpcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogIGNsYXNzIENsaWNrYWJsZSB7XG4gICAgICogICAgcHVibGljIGV2ZW50cyA9IHtcbiAgICAgKiAgICAgIGNsaWNrZWQ6IHRydWUsXG4gICAgICogICAgfTtcbiAgICAgKiAgfVxuICAgICAqICAvLyBjcmVhdGUgYW4gYElPYmplY3RgLCBhZGQgYW4gYElOb2RlYCBhbmQgYW4gYElDb21wb25lbnRgIHRvIHRoZSBub2RlLCBzZWUgdGhlIHJlbGV2YW50IGZ1bmN0aW9ucyAoY3JlYXRlT2JqZWN0LCBhZGROb2RlLCBhZGRDb21wb25lbnQpXG4gICAgICogIGNvbnN0IFtvYmplY3QsIG5vZGUsIGNvbXBvbmVudF07XG4gICAgICpcbiAgICAgKiAgLy8gY3JlYXRlIHRoZSBwYXRoXG4gICAgICogIGNvbnN0IGVtaXRQYXRoID0gb2JqZWN0LmFkZEVtaXRQYXRoKGNvbXBvbmVudCwgJ2NsaWNrZWQnKTtcbiAgICAgKlxuICAgICAqICAvLyBiaW5kIHRoZSBlbWl0IHBhdGggc28gdGhhdCBpdCB0cmlnZ2VycyB0aGUgYGVtaXRQYXRoYCdzIGFzc29jaWF0ZWQgY29tcG9uZW50J3Mgb25FdmVudCB3aGVuIGFuIGV2ZW50IGlzIGVtaXR0ZWRcbiAgICAgKiAgb2JqZWN0LmJpbmRQYXRoKGV2ZW50UGF0aCwgZW1pdFBhdGgpO1xuICAgICAqXG4gICAgICogIC8vIG9ic2VydmUgZW1pc3Npb25zIG9mICdjbGlja2VkJyBldmVudHMgaW4gY29tcG9uZW50XG4gICAgICogIG9iamVjdC5zcHlPbkV2ZW50KHtcbiAgICAgKiAgICBwYXRoOiBlbWl0UGF0aCxcbiAgICAgKiAgICBvbkV2ZW50KGV2ZW50RGF0YSkge1xuICAgICAqICAgICAgY29uc29sZS5sb2coYGEgJ2NsaWNrZWQnIGV2ZW50IHdhcyBlbWl0dGVkIHdpdGggdGhlIGRhdGE6ICR7ZXZlbnREYXRhfWApO1xuICAgICAqICAgIH0sXG4gICAgICogIH0pO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHBhcmFtIGNvbXBvbmVudFxuICAgICAqIEBwYXJhbSBwcm9wZXJ0eVxuICAgICAqIEBwYXJhbSBpZFxuICAgICAqIEBpbnRyb2R1Y2VkIDMuMS43MS4xNC0wLWdhZjc3YWRkMzgzXG4gICAgICovXG4gICAgYWRkRW1pdFBhdGgoY29tcG9uZW50OiBJQ29tcG9uZW50LCBwcm9wZXJ0eTogc3RyaW5nLCBpZD86IHN0cmluZyk6IEVtaXRQYXRoO1xuXG4gICAgLyoqXG4gICAgICogQmluZCB0aGUgdmFsdWUgcmVmZXJlbmNlZCBieSBgaW5wdXRQYXRoYCB0byB0aGUgdmFsdWUgb2YgYG91dHB1dFBhdGhgLlxuICAgICAqIEFzIHRoZSB2YWx1ZSBhdCBgb3V0cHV0UGF0aGAgY2hhbmdlcywgdGhlIHZhbHVlIG9mIGBpbnB1dFBhdGhgIHdpbGwgcmVmbGVjdCBpdC5cbiAgICAgKlxuICAgICAqIGBgYFxuICAgICAqIGNvbnN0IFtzY2VuZU9iamVjdF0gPSBhd2FpdCBzZGsuU2NlbmUuY3JlYXRlT2JqZWN0cygxKTtcbiAgICAgKiBjb25zdCBub2RlID0gc2NlbmVPYmplY3QuYWRkTm9kZSgpO1xuICAgICAqXG4gICAgICogLy8gbXAub2JqTG9hZGVyIGhhcyBhbiBvdXRwdXRzLnZpc2libGUgcHJvcGVydHlcbiAgICAgKiBjb25zdCBjb21wMSA9IG5vZGUuYWRkQ29tcG9uZW50KCdtcC5vYmpMb2FkZXInKTtcbiAgICAgKiBjb25zdCBvdXRwdXRQYXRoID0gc2NlbmVPYmplY3QuYWRkT3V0cHV0UGF0aChjb21wMSwgJ3Zpc2libGUnLCAnb2JqTG9hZGVyLXZpc2libGUnKTtcbiAgICAgKlxuICAgICAqIC8vIG15Q29tcG9uZW50IGhhcyBhbiBpbnB1dHMudG9nZ2xlU3RhdGUgcHJvcGVydHlcbiAgICAgKiBjb25zdCBjb21wMiA9IG5vZGUuYWRkQ29tcG9uZW50KCdteUNvbXBvbmVudCcpO1xuICAgICAqIGNvbnN0IGlucHV0UGF0aCA9IHNjZW5lT2JqZWN0LmFkZElucHV0UGF0aChjb21wMiwgJ3RvZ2dsZVN0YXRlJywgJ215Q29tcG9uZW50LXRvZ2dsZScpO1xuICAgICAqIHNjZW5lT2JqZWN0LmJpbmRQYXRoKGlucHV0UGF0aCwgb3V0cHV0UGF0aCk7XG4gICAgICpcbiAgICAgKiBub2RlLnN0YXJ0KCk7XG4gICAgICogLy8gY29tcDEuaW5wdXRzLnZpc2libGUgd2lsbCBub3cgYWx3YXlzIGVxdWFsIGNvbXAyLm91dHB1dHMudG9nZ2xlU3RhdGVcbiAgICAgKiBgYGBcbiAgICAgKiBAcGFyYW0gaW5wdXRQYXRoXG4gICAgICogQHBhcmFtIG91dHB1dFBhdGhcbiAgICAgKi9cbiAgICBiaW5kUGF0aChpbnB1dFBhdGg6IElucHV0UGF0aCwgb3V0cHV0UGF0aDogT3V0cHV0UGF0aCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQmluZCBhbiBldmVudCByZWZlcmVuY2VkIGJ5IGBldmVudFBhdGhgIHRvIGEgW1tJQ29tcG9uZW50Lm5vdGlmeV1dIGNhbGwgYXQgYGVtaXRQYXRoYFxuICAgICAqXG4gICAgICogYGBgXG4gICAgICogY29uc3QgW3NjZW5lT2JqZWN0XSA9IGF3YWl0IHNkay5TY2VuZS5jcmVhdGVPYmplY3QoMSk7XG4gICAgICogY29uc3Qgbm9kZSA9IHNjZW5lT2JqZWN0LmNyZWF0ZU5vZGUoKTtcbiAgICAgKlxuICAgICAqIC8vIG15UmVjZWl2ZXIgaGFzIGFuIGBvbkV2ZW50YCBsaWZlY3ljbGUgZnVuY3Rpb24gYW5kIGFuIGBldmVudHNbJ2RvLnVwZGF0ZSddYCBwcm9wZXJ0eVxuICAgICAqIGNvbnN0IHJlY2VpdmVyID0gbm9kZS5hZGRDb21wb25lbnQoYG15UmVjZWl2ZXInKTtcbiAgICAgKiBjb25zdCBldmVudFBhdGggPSBzY2VuZU9iamVjdC5hZGRFdmVudFBhdGgocmVjZWl2ZXIsICdkby51cGRhdGUnLCAnbXktcmVjaWV2ZXItdXBkYXRlJyk7XG4gICAgICpcbiAgICAgKiAvLyBteUVtaXR0ZXIgY2FsbHMgbm90aWZ5IHdpdGggYW4gJ3VwZGF0ZWQnIGV2ZW50IGFuZCBoYXMgYW4gYGVtaXRzWyd1cGRhdGVkJ11gIHByb3BlcnR5XG4gICAgICogY29uc3QgZW1pdHRlciA9IG5vZGUuYWRkQ29tcG9uZW50KCdteUVtaXR0ZXInKTtcbiAgICAgKiBjb25zdCBlbWl0UGF0aCA9IHNjZW5lT2JqZWN0LmFkZEVtaXRQYXRoKGVtaXR0ZXIsICd1cGRhdGVkJywgJ215LWNvbXBvbmVudC11cGRhdGVkJyk7XG4gICAgICogc2NlbmVPYmplY3QuYmluZFBhdGgoZXZlbnRQYXRoLCBlbWl0UGF0aCk7XG4gICAgICpcbiAgICAgKiBub2RlLnN0YXJ0KCk7XG4gICAgICogLy8gcmVjZWl2ZXIub25FdmVudCgnZG8udXBkYXRlJywgLi4uKSB3aWxsIG5vdyBiZSBjYWxsZWQgd2hlbmV2ZXIgZW1pdHRlciBjYWxscyBub3RpZnkoJ3VwZGF0ZWQnKVxuICAgICAqIGBgYFxuICAgICAqIEBwYXJhbSBldmVudFBhdGhcbiAgICAgKiBAcGFyYW0gZW1pdFBhdGhcbiAgICAgKi9cbiAgICBiaW5kUGF0aChldmVudFBhdGg6IEV2ZW50UGF0aCwgZW1pdFBhdGg6IEVtaXRQYXRoKTogdm9pZDtcblxuICAgIC8qKlxuICAgICAqIFNweSBvbiBldmVudHMgb3IgaW5wdXQgYW5kIG91dHB1dCB2YWx1ZSBjaGFuZ2VzXG4gICAgICpcbiAgICAgKiBgYGBcbiAgICAgKiBjb25zdCBbc2NlbmVPYmplY3RdID0gYXdhaXQgc2RrLlNjZW5lLmNyZWF0ZU9iamVjdHMoMSk7XG4gICAgICogY29uc3Qgbm9kZSA9IHNjZW5lT2JqZWN0LmNyZWF0ZU5vZGUoKTtcbiAgICAgKlxuICAgICAqIC8vIG1wLm9iakxvYWRlciBoYXMgYW4gb3V0cHV0cy52aXNpYmxlIHByb3BlcnR5XG4gICAgICogY29uc3QgY29tcDEgPSBub2RlLmFkZENvbXBvbmVudCgnbXAub2JqTG9hZGVyJyk7XG4gICAgICogY29uc3Qgb3V0cHV0UGF0aCA9IHNjZW5lT2JqZWN0LmFkZE91dHB1dFBhdGgoY29tcDEsICd2aXNpYmxlJywgJ29iakxvYWRlci12aXNpYmxlJyk7XG4gICAgICpcbiAgICAgKiBjb25zdCBvdXRwdXRTcHkgPSB7XG4gICAgICogICBwYXRoOiBvdXRwdXRQYXRoLFxuICAgICAqICAgb25FdmVudCh0eXBlLCBkYXRhKSB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKCdvdXRwdXRzIHVwZGF0ZWQnLCB0eXBlLCBkYXRhKTtcbiAgICAgKiAgIH1cbiAgICAgKiB9O1xuICAgICAqXG4gICAgICogc2NlbmVPYmplY3Quc3B5T25FdmVudChvdXRwdXRTcHkpO1xuICAgICAqXG4gICAgICogbm9kZS5zdGFydCgpO1xuICAgICAqIC8vIG91dHB1dFNweS5vbkV2ZW50KCdvdXRwdXRzVXBkYXRlZCcsIGNvbXAxLm91dHB1dHMudmlzaWJsZSkgd2lsbCBub3cgYmUgY2FsbGVkIHdoZW5ldmVyIGNvbXAxLm91dHB1dHMudmlzaWJsZSBjaGFuZ2VzXG4gICAgICogYGBgXG4gICAgICogQHBhcmFtIHNweVxuICAgICAqL1xuICAgIHNweU9uRXZlbnQoc3B5OiBJU2NlbmVPYmplY3RTcHkpOiBJU3Vic2NyaXB0aW9uO1xuXG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgaW5wdXQgcHJvcGVydHkgb2YgYSBwYXRoLiBUaGUgcGF0aCBtdXN0IGJlIGFkZGVkIHByaW9yIHRvIGNhbGxpbmcgdGhpcyBmdW5jdGlvbi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBwYXRoSWQgVGhlIHBhdGggaWQuXG4gICAgICogQHBhcmFtIHZhbHVlIFRoZSB2YWx1ZSB0byBzZXQuXG4gICAgICogQGRlcHJlY2F0ZWQgVXNlIFtbSW5wdXRQYXRoLnNldF1dIGluc3RlYWQuXG4gICAgICovXG4gICAgc2V0VmFsdWVBdFBhdGgocGF0aElkOiBzdHJpbmcsIHZhbHVlOiB1bmtub3duKTogdm9pZDtcblxuICAgIC8qKlxuICAgICAqIFJlYWRzIHRoZSBvdXRwdXQgcHJvcGVydHkgb2YgYSBwYXRoLiBUaGUgcGF0aCBtdXN0IGJlIGFkZGVkIHByaW9yIHRvIGNhbGxpbmcgdGhpcyBmdW5jdGlvbi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBwYXRoSWRcbiAgICAgKiBAcmV0dXJucyB0aGUgdmFsdWUgb2YgdGhlIG91dHB1dCBwcm9wZXJ0eS5cbiAgICAgKiBAZGVwcmVjYXRlZCBVc2UgW1tJbnB1dFBhdGguZ2V0XV0gb3IgW1tPdXRwdXRQYXRoLmdldF1dIGluc3RlYWQuXG4gICAgICovXG4gICAgZ2V0VmFsdWVBdFBhdGgocGF0aElkOiBzdHJpbmcpOiB1bmtub3duO1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhbiBpdGVyYXRvciBjb250YWluaW5nIGEgcGF0aCBhbmQgaXRzIGRlc2NyaXB0b3IuIFR5cGljYWxseSB1c2VkIHRvIGFjY2VzcyB0aGUgcGF0aHMgZnJvbSBhIGRlc2VyaWFsaXplZCBzY2VuZSBvYmplY3QuXG4gICAgICpcbiAgICAgKiBgYGBcbiAgICAgKiAvLyBUaGlzIGV4YW1wbGUgc2V0cyB0aGUgdmFsdWVzIG9mIGFsbCBpbnB1dCBwYXRocyBwcm92aWRlZCBieSBkZXNlcmlhbGl6ZWQgc2NlbmUgb2JqZWN0LlxuICAgICAqXG4gICAgICogY29uc3QgZGVzZXJpYWxpemVkID0gYXdhaXQgc2RrLlNjZW5lLmRlc2VyaWFsaXplKG15U3RyaW5nKTtcbiAgICAgKiBjb25zdCBwYXRocyA9IGRlc2VyaWFsaXplZC5wYXRoSXRlcmF0b3IoKTtcbiAgICAgKiBmb3IgKGNvbnN0IHsgZGVzYywgcGF0aCB9IG9mIHBhdGhzKSB7XG4gICAgICogICBpZiAoZGVzYy50eXBlID09PSBTY2VuZS5QYXRoVHlwZS5JTlBVVCkge1xuICAgICAqICAgICAvLyB3ZSBrbm93IHRoaXMgcGF0aCBpcyBhbiBpbnB1dCBwYXRoXG4gICAgICogICAgIGNvbnN0IGlucHV0UGF0aCA9IGRlc2MucGF0aCBhcyBTY2VuZS5JbnB1dFBhdGg7XG4gICAgICpcbiAgICAgKiAgICAgLy8gTm93IHlvdSBjYW4gc2V0IHRoZSB2YWx1ZSBhdCB0aGUgcGF0aFxuICAgICAqICAgICAvLyBZb3UgY2FuIGNhY2hlIHRoZSByZXR1cm5lZCBpbnB1dCBwYXRoIHRvIHVzZSBpdCBsYXRlci5cbiAgICAgKiAgICAgaW5wdXRQYXRoLnNldCgxMCk7XG4gICAgICogICB9XG4gICAgICogfVxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIHBhdGhJdGVyYXRvcigpOiBJdGVyYWJsZUl0ZXJhdG9yPFBhdGhJbmZvPjtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgaW4gaXRlcmF0b3IgaXRlcmF0aW5nIG92ZXIgYWxsIHRoZSBub2RlcyBjb250YWluZWQgYnkgdGhpcyBvYmplY3QuXG4gICAgICovXG4gICAgbm9kZUl0ZXJhdG9yKCk6IEl0ZXJhYmxlSXRlcmF0b3I8SU5vZGU+O1xuICB9XG5cbiAgLyoqXG4gICAqIFRoZSBvYmplY3RzIHJldHVybmVkIGJ5IHRoZSBbW3BhdGhJdGVyYXRvcl1dIGltcGxlbWVudCB0aGlzIGludGVyZmFjZS4gRWFjaCBkZXNjcmlwdG9yIGFuZCBwYXRoIHNob3VsZCBjb3JyZWxhdGUgYnkgdHlwZS5cbiAgICogRm9yIGV4YW1wbGUsIGEgcGF0aCBvZiB0eXBlIFtbUGF0aFR5cGUuSU5QVVRdXSB3b3VsZCBoYXZlIGEgZGVzY3JpcHRvciBvZiB0eXBlIFtbSW5wdXRQYXRoRGVzY3JpcHRvcl1dIGFuZCBwYXRoIG9mIHR5cGUgW1tJbnB1dFBhdGhdXS5cbiAgICovXG4gIGV4cG9ydCBpbnRlcmZhY2UgUGF0aEluZm8ge1xuICAgIGRlc2M6IElucHV0UGF0aERlc2NyaXB0b3IgfCBPdXRwdXRQYXRoRGVzY3JpcHRvciB8IEVtaXRQYXRoRGVzY3JpcHRvciB8IEV2ZW50UGF0aERlc2NyaXB0b3I7XG4gICAgcGF0aDogSW5wdXRQYXRoIHwgT3V0cHV0UGF0aCB8IEVtaXRQYXRoIHwgRXZlbnRQYXRoO1xuICB9XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2NlbmUge1xuICBDb21wb25lbnQ6IHR5cGVvZiBTY2VuZS5Db21wb25lbnQ7XG4gIEludGVyYWN0aW9uVHlwZTogdHlwZW9mIFNjZW5lLkludGVyYWN0aW9uVHlwZTtcbiAgUGF0aFR5cGU6IHR5cGVvZiBTY2VuZS5QYXRoVHlwZTtcblxuICAvKipcbiAgICogVGhpcyBpcyBhIGNvbnZlbmllbmNlIGZ1bmN0aW9uIHRoYXQgcHJvdmlkZXMgYWNjZXNzIHRvIHRocmVlLmpzIGZyYW1ld29yayBvYmplY3RzLlxuICAgKiBUeXBpY2FsbHkgdXNlZCB0byBjb25maWd1cmUgZ2xvYmFsIHByb3BlcnRpZXMgb24gdGhlIHJlbmRlcmVyIG9yIGVmZmVjdCBjb21wb3Nlci5cbiAgICpcbiAgICogYGBgXG4gICAqIGF3YWl0IHNkay5TY2VuZS5jb25maWd1cmUoZnVuY3Rpb24ocmVuZGVyZXIsIHRocmVlLCBlZmZlY3RDb21wb3Nlcil7XG4gICAqICAgLy8gY29uZmlndXJlIFBCUlxuICAgKiAgIHJlbmRlcmVyLnBoeXNpY2FsbHlDb3JyZWN0TGlnaHRzID0gdHJ1ZTtcbiAgICpcbiAgICogICAvLyBjb25maWd1cmUgc2hhZG93IG1hcHBpbmdcbiAgICogICByZW5kZXJlci5zaGFkb3dNYXAuZW5hYmxlZCA9IHRydWU7XG4gICAqICAgcmVuZGVyZXIuc2hhZG93TWFwLmJpYXMgPSAwLjAwMDE7XG4gICAqICAgcmVuZGVyZXIuc2hhZG93TWFwLnR5cGUgPSB0aHJlZS5QQ0ZTb2Z0U2hhZG93TWFwO1xuICAgKlxuICAgKiAgIGlmIChlZmZlY3RDb21wb3Nlcikge1xuICAgKiAgICAgLy8gYWRkIGEgY3VzdG9tIHBhc3MgaGVyZVxuICAgKiAgIH1cbiAgICogfSk7XG4gICAqIGBgYFxuICAgKlxuICAgKiBAcGFyYW0gY2FsbGJhY2sucmVuZGVyZXIgTWF0dGVycG9ydCdzIFdlYkdMUmVuZGVyZXIgb2JqZWN0LlxuICAgKiBAcGFyYW0gY2FsbGJhY2sudGhyZWUgdGhyZWUuanMgbW9kdWxlLlxuICAgKiBAcGFyYW0gY2FsbGJhY2suZWZmZWN0Q29tcG9zZXIgTWF0dGVycG9ydCdzIEVmZmVjdENvbXBvc2VyIG9iamVjdC4gVGhpcyB2YWx1ZSBjYW4gYmUgbnVsbC5cbiAgICogVG8gZW5hYmxlIHRoZSBlZmZlY3QgY29tcG9zZXIsIHlvdSBtdXN0IHNldCB1c2VFZmZlY3RDb21wb3NlcjogMSBpbiB5b3VyIGFwcGxpY2F0aW9uIGNvbmZpZy5cbiAgICogUGxlYXNlIG5vdGUgdGhhdCBlbmFibGluZyBlZmZlY3QgY29tcG9zZXIgZGlzYWJsZXMgcmVuZGVyZXIuYW50aWFsaWFzICgmYWE9MSlcbiAgICpcbiAgICogQGJ1bmRsZVxuICAgKi9cbiAgY29uZmlndXJlKFxuICAgIGNhbGxiYWNrOiAocmVuZGVyZXI6IFRIUkVFLldlYkdMUmVuZGVyZXIsIHRocmVlOiB0eXBlb2YgVEhSRUUsIGVmZmVjdENvbXBvc2VyOiBFZmZlY3RDb21wb3NlciB8IG51bGwpID0+IHZvaWRcbiAgKTogUHJvbWlzZTx2b2lkPjtcblxuICAvKipcbiAgICogQ3JlYXRlcyBhIHNjZW5lIG5vZGUuXG4gICAqIEByZXR1cm4gQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCB0aGUgbmV3IHNjZW5lIG5vZGUuXG4gICAqIEBkZXByZWNhdGVkIFVzZSBbW2NyZWF0ZU9iamVjdHNdXSB0byBjcmVhdGUgYW4gb2JqZWN0IHRvIHRoZW4gY3JlYXRlIG5vZGVzIGluc3RlYWQuXG4gICAqXG4gICAqIEBidW5kbGVcbiAgICovXG4gIGNyZWF0ZU5vZGUoKTogUHJvbWlzZTxTY2VuZS5JTm9kZT47XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgYW4gYXJyYXkgb2Ygc2NlbmUgbm9kZXMuXG4gICAqIEBwYXJhbSBjb3VudCBUaGUgbnVtYmVyIG9mIHNjZW5lIG5vZGVzIHRvIGNyZWF0ZS5cbiAgICogQHJldHVybiBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIHRoZSBhcnJheSBvZiBzY2VuZSBub2Rlcy5cbiAgICogQGRlcHJlY2F0ZWQgVXNlIFtbY3JlYXRlT2JqZWN0c11dIHRvIGNyZWF0ZSBhbiBvYmplY3QgdG8gdGhlbiBjcmVhdGUgbm9kZXMgaW5zdGVhZC5cbiAgICpcbiAgICogQGJ1bmRsZVxuICAgKi9cbiAgY3JlYXRlTm9kZXMoY291bnQ6IG51bWJlcik6IFByb21pc2U8U2NlbmUuSU5vZGVbXT47XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgYW4gYXJyYXkgb2Ygc2NlbmUgb2JqZWN0cy5cbiAgICogQHBhcmFtIGNvdW50IFRoZSBudW1iZXIgb2Ygc2NlbmUgb2JqZWN0cyB0byBjcmVhdGUuXG4gICAqIEByZXR1cm4gQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCB0aGUgYXJyYXkgb2Ygc2NlbmUgb2JqZWN0cy5cbiAgICogYGBgXG4gICAqIC8vIGNyZWF0ZSBhIHNpbmdsZSBvYmplY3QgYW5kIGRlc3RydWN0dXJlIGl0IGZyb20gdGhlIHJldHVybmVkIGFycmF5XG4gICAqIGNvbnN0IFtzY2VuZU9iamVjdF0gPSBhd2FpdCBzZGsuU2NlbmUuY3JlYXRlT2JqZWN0cygxKTtcbiAgICogY29uc3Qgbm9kZSA9IHNjZW5lT2JqZWN0LmNyZWF0ZU5vZGUoKTtcbiAgICogLy8gLi4uXG4gICAqIGBgYFxuICAgKlxuICAgKiBAYnVuZGxlXG4gICAqL1xuICBjcmVhdGVPYmplY3RzKGNvdW50OiBudW1iZXIpOiBQcm9taXNlPFNjZW5lLklPYmplY3RbXT47XG5cbiAgLyoqXG4gICAqIFRoaXMgZnVuY3Rpb24gcmV0dXJucyBhIHNjZW5lIG9iamVjdCB3aXRoIGFsbCBvZiBpdHMgc2NlbmUgbm9kZXMgZnJvbSBhIHNlcmlhbGl6ZWQgc2NlbmUuXG4gICAqIFRoZSByZXR1cm5lZCBzY2VuZSBvYmplY3QgaGFzIG5vdCBiZWVuIHN0YXJ0ZWQgeWV0LlxuICAgKiBAcGFyYW0gdGV4dCBUaGUgc2VyaWFsaXplZCBzY2VuZS5cbiAgICogQHJldHVybiBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIGEgc2NlbmUgb2JqZWN0LlxuICAgKlxuICAgKiBAYnVuZGxlXG4gICAqL1xuICBkZXNlcmlhbGl6ZSh0ZXh0OiBzdHJpbmcpOiBQcm9taXNlPFNjZW5lLklPYmplY3Q+O1xuXG4gIC8qKlxuICAgKiBTZXJpYWxpemUgYSBzY2VuZSBvYmplY3QsIGl0cyBub2RlcywgYW5kIHRoZWlyIGNvbXBvbmVudHMgdG8gYSBzdHJpbmcuXG4gICAqIEBwYXJhbSBzY2VuZU9iamVjdFxuICAgKiBAcmV0dXJuIEEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIHNlcmlhbGl6ZWQgc3RyaW5nLlxuICAgKlxuICAgKiBAYnVuZGxlXG4gICAqL1xuICBzZXJpYWxpemUoc2NlbmVPYmplY3Q6IFNjZW5lLklPYmplY3QpOiBQcm9taXNlPHN0cmluZz47XG5cbiAgLyoqXG4gICAqIFRoaXMgZnVuY3Rpb24gc2VyaWFsaXplcyBhbiBhcnJheSBvZiBzY2VuZSBub2RlcyBhbmQgdGhlaXIgY29tcG9uZW50cyB0byBhIHN0cmluZy5cbiAgICogVGhpcyBmdW5jdGlvbiBpcyBvbmx5IHByb3ZpZGVkIHRvIHByb3ZpZGUgYW4gdXBncmFkZSBwYXRoIGZyb20gbm9kZXMgdGhhdCB3ZXJlIGNyZWF0ZWQgYmVmb3JlIHRoZSBpbnRyb2R1Y3Rpb24gb2YgYElPYmplY3Rgcy5cbiAgICpcbiAgICogQHBhcmFtIHNjZW5lTm9kZXMgQW4gYXJyYXkgb2Ygc2NlbmUgbm9kZXMuXG4gICAqIEByZXR1cm4gQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCB0aGUgc2VyaWFsaXplZCBzdHJpbmcuXG4gICAqXG4gICAqIEBidW5kbGVcbiAgICogQGRlcHJlY2F0ZWQgUHJlZmVyIHRvIHNlcmlhbGl6ZSBhbiBhcnJheSBvZiBgU2NlbmUuSU5vZGVgIHRocm91Z2ggdGhlaXIgY29udGFpbmluZyBgU2NlbmUuSU9iamVjdGAgaW5zdGVhZC5cbiAgICovXG4gIHNlcmlhbGl6ZShzY2VuZU5vZGVzOiBTY2VuZS5JTm9kZVtdKTogUHJvbWlzZTxzdHJpbmc+O1xuXG5cbiAgLyoqXG4gICAqIFJlZ2lzdGVyIGEgY29tcG9uZW50IGZhY3RvcnkuXG4gICAqIEBwYXJhbSBuYW1lIEEgdW5pcXVlIGNvbXBvbmVudCBuYW1lLlxuICAgKiBAcGFyYW0gZmFjdG9yeSBBIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhIG5ldyBpbnN0YW5jZSBvZiB0aGUgY29tcG9uZW50LlxuICAgKlxuICAgKiBAYnVuZGxlXG4gICAqIEByZXR1cm4gYSBkaXNwb3NhYmxlIHRoYXQgY2FuIGJlIHVzZWQgdG8gdW5yZWdpc3RlciB0aGUgY29tcG9uZW50LlxuICAgKi9cbiAgcmVnaXN0ZXIobmFtZTogc3RyaW5nLCBmYWN0b3J5OiAoKSA9PiBTY2VuZS5JQ29tcG9uZW50KTogUHJvbWlzZTxJRGlzcG9zYWJsZSB8IG51bGw+O1xuXG4gIC8qKlxuICAgKiBSZWdpc3RlciBhbiBhcnJheSBvZiBjb21wb25lbnQgZmFjdG9yaWVzIGFsbCBhdCBvbmNlIGFuZCByZXR1cm4gYW4gYXJyYXkgb2YgZGlzcG9zYWJsZXMuXG4gICAqIENhbGxpbmcgZGlzcG9zZSBvbiBhbnkgb2YgdGhlIHJldHVybmVkIGRpc3Bvc2FibGVzLCB1bnJlZ2lzdGVycyB0aGUgY29tcG9uZW50LlxuICAgKlxuICAgKlxuICAgKiBgYGBcbiAgICogZnVuY3Rpb24gbXlDb21wb25lbnQxRmFjdG9yeSgpIHtcbiAgICogICAgcmV0dXJuIG5ldyBNeUNvbXBvbmVudDEoKTtcbiAgICogfVxuICAgKlxuICAgKiBmdW5jdGlvbiBteUNvbXBvbmVudDJGYWN0b3J5KCkge1xuICAgKiAgICByZXR1cm4gbmV3IE15Q29tcG9uZW50MigpO1xuICAgKiB9XG4gICAqXG4gICAqIGNvbnN0IGRpc3Bvc2FibGVzID0gYXdhaXQgc2RrLlNjZW5lLnJlZ2lzdGVyQ29tcG9uZW50cyhbXG4gICAqICAge1xuICAgKiAgICAgbmFtZTogJ215Q29tcG9uZW50MScsXG4gICAqICAgICBmYWN0b3J5OiBteUNvbXBvbmVudDFGYWN0b3J5LFxuICAgKiAgIH0sXG4gICAqICAge1xuICAgKiAgICAgbmFtZTogJ215Q29tcG9uZW50MicsXG4gICAqICAgICBmYWN0b3J5OiBteUNvbXBvbmVudDJGYWN0b3J5LFxuICAgKiAgIH0sXG4gICAqIF0pO1xuICAgKlxuICAgKiAvLyB3aGVuIHlvdSBhcmUgZG9uZSB3aXRoIHRoZSBjb21wb25lbnRzLCB5b3UgY2FuIHVucmVnaXN0ZXIgdGhlIGNvbXBvbmVudHMgYnkgY2FsbGluZyBkaXNwb3NlIG9uIGVhY2ggaXRlbSBpbiB0aGUgcmV0dXJuIHJlc3VsdC5cbiAgICogZm9yIChjb25zdCBkaXNwb3NhYmxlIG9mIGRpc3Bvc2FibGVzKSB7XG4gICAqICAgZGlzcG9zYWJsZS5kaXNwb3NlKCk7XG4gICAqIH1cbiAgICpcbiAgICogYGBgXG4gICAqXG4gICAqIEBwYXJhbSBjb21wb25lbnRzIEFuIGFycmF5IG9mIFtbSUNvbXBvbmVudERlc2NdXVxuICAgKiBAcmV0dXJuIGFuIGFycmF5IG9mIGRpc3Bvc2FibGVzIHRoYXQgdW5yZWdpc3RlciB0aGUgY29tcG9uZW50cyB3aGVuIGRpc3Bvc2VkLlxuICAgKlxuICAgKiBAYnVuZGxlXG4gICAqL1xuICByZWdpc3RlckNvbXBvbmVudHMoY29tcG9uZW50czogU2NlbmUuSUNvbXBvbmVudERlc2NbXSk6IFByb21pc2U8SURpc3Bvc2FibGVbXSB8IG51bGw+O1xuXG4gIHVucmVnaXN0ZXJDb21wb25lbnRzKGNvbXBvbmVudHM6IFNjZW5lLklDb21wb25lbnREZXNjW10pOiBQcm9taXNlPHZvaWQ+O1xufVxuIiwiaW1wb3J0IHR5cGUgeyBJT2JzZXJ2YWJsZU1hcCB9IGZyb20gJy4vZ2xvYmFsJztcblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBuYW1lc3BhY2UgUGx1Z2luIHtcbiAgLyoqXG4gICAqIFRoZSB2aXNpYmlsaXR5IHN0YXRlIG9mIHBsdWdpbnNcbiAgICovXG4gIGV4cG9ydCBlbnVtIFZpc2liaWxpdHkge1xuICAgIC8qKlxuICAgICAqIERlZmF1bHRcbiAgICAgKi9cbiAgICBPTiA9ICdvbicsXG4gICAgLyoqXG4gICAgICogRGlzYWJsZWRcbiAgICAgKi9cbiAgICBPRkYgPSAnb2ZmJyxcbiAgICAvLyBISURFID0gJ2hpZGRlbidcbiAgICAvLyBNSU4gPSAnbWluaW1pemVkJ1xuICB9XG5cbiAgZXhwb3J0IHR5cGUgS2V5ID0ge1xuICAgIGFwcGxpY2F0aW9uS2V5OiBzdHJpbmc7XG4gICAgaWQ6IHN0cmluZztcbiAgfVxuXG4gIGV4cG9ydCB0eXBlIERhdGEgPSBLZXkgJiB7XG4gICAgdmlzaWJpbGl0eTogVmlzaWJpbGl0eTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGUgaW50ZXJmYWNlIHRvIGEgcGx1Z2luIG1vZHVsZS4gVXNlZCBieSB0aGUgcGx1Z2luIHJlZ2lzdHJ5IHRvIHRyaWdnZXIgbGlmZWN5Y2xlIHRyYW5zaXRpb25zLlxuICAgKi9cbiAgZXhwb3J0IGludGVyZmFjZSBJUGx1Z2luTW9kdWxlPFNESz4ge1xuICAgIC8qKlxuICAgICAqIFRoZSBlbnRyeSBwb2ludCBvZiBhIHBsdWdpbi4gV2lsbCByZWNlaXZlIGFuIGluc3RhbmNlIG9mIHRoZSBzZGssIGFuZCBhbnkgcHJlLWNvbmZpZ3VlZCBjb25maWd1cmF0aW9uIHZhbHVlc1xuICAgICAqIEBwYXJhbSBtcFNka1xuICAgICAqIEBwYXJhbSBjb25maWdcbiAgICAgKi9cbiAgICBvbkluaXQ/KG1wU2RrOiBTREssIGNvbmZpZz86IFJlY29yZDxzdHJpbmcsIHVua25vd24+KTogUHJvbWlzZTx2b2lkPnx2b2lkO1xuICAgIC8qKlxuICAgICAqIFRlYXJkb3duIHRoZSBwbHVnaW4uIFNob3VsZCBiZSB1c2VkIHRvIGNsZWFudXAgYW55IHJlc291cmNlcyBwcmV2aW91c2x5IGFsbG9jYXRlZCBieSB0aGUgcGx1Z2luLFxuICAgICAqL1xuICAgIG9uRGVzdHJveT8oKTogUHJvbWlzZTx2b2lkPnx2b2lkO1xuXG4gICAgLyoqXG4gICAgICogVXNlIFtvbkluaXRdXG4gICAgICogQGRlcHJlY2F0ZWRcbiAgICAgKi9cbiAgICBpbml0PyhtcFNkazogU0RLLCBjb25maWc/OiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPik6IFByb21pc2U8dm9pZD58dm9pZDtcbiAgICAvKipcbiAgICAgKiBVc2UgW29uRGVzdHJveV1cbiAgICAgKiBAZGVwcmVjYXRlZFxuICAgICAqL1xuICAgIGRpc3Bvc2U/KCk6IFByb21pc2U8dm9pZD58dm9pZDtcbiAgfVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIFBsdWdpbiB7XG4gIFZpc2liaWxpdHk6IHR5cGVvZiBQbHVnaW4uVmlzaWJpbGl0eTtcbiAgLyoqXG4gICAqIEluaXRpYXRlIHRoZSBsb2FkaW5nIG9mIGEgcGx1Z2luLiBPbmx5IGEgc2luZ2xlIHBsdWdpbiBjYW4gYmUgbG9hZGVkIGZvciBlYWNoIGFwcGxpY2F0aW9uIGtleS9wbHVnaW4gaWQgcGFpci5cbiAgICogSWYgYSBwbHVnaW4gaXMgYWxyZWFkeSBleGVjdXRpbmcgZm9yIHRoZSBwcm92aWRlZCBwbHVnaW4ga2V5LCBpdCBpcyB1bmxvYWRlZCBiZWZvcmUgdGhlIG5ldyBvbmUgaXMgbG9hZGVkLlxuICAgKlxuICAgKiBAcGFyYW0ga2V5IEFuIGFwcGxpY2F0aW9uIGtleSBhbmQgcGx1Z2luIGlkIHBhaXIuIFRoZSBwbHVnaW4gaWQgaXMgYW4gYXJiaXRyYXJ5IHN0cmluZyBzcGVjaWZpZWQgYnlcbiAgICogdGhlIHBsdWdpbiBhdXRob3IsIGlmIG5vbmUgaXMgcHJvdmlkZWQgJ2RlZmF1bHQnIHdpbGwgYmUgdXNlZC5cbiAgICpcbiAgICogQHBhcmFtIHVybCBUaGUgdXJsIHRvIGEgcGx1Z2luIGphdmFzY3JpcHQgZmlsZSBvciB0aGUgc291cmNlIGphdmFzY3JpcHQgc3RyaW5nLlxuICAgKlxuICAgKiBAcGFyYW0gY29uZmlnIFRoZSBjb25maWcgdG8gcGFzcyB0byB0aGUgcGx1Z2luXG4gICAqL1xuICBsb2FkKGtleTogUGx1Z2luLktleSwgdXJsOiBzdHJpbmcsIGNvbmZpZz86IFJlY29yZDxzdHJpbmcsIGFueT4sIG1ldGFkYXRhPzogUmVjb3JkPHN0cmluZywgYW55Pik6IFByb21pc2U8dm9pZD47XG5cbiAgLyoqXG4gICAqIFVubG9hZCBhIHJ1bm5pbmcgcGx1Z2luLlxuICAgKlxuICAgKiBAcGFyYW0ga2V5IEFuIGFwcGxpY2F0aW9uIGtleSBhbmQgcGx1Z2luIGlkIHBhaXIuIElmIG5vIHBsdWdpbiBpZCBpcyBwcm92aWRlZCAnZGVmYXVsdCcgd2lsbCBiZSB1c2VkLlxuICAgKi9cbiAgdW5sb2FkKGtleTogUGx1Z2luLktleSk6IFByb21pc2U8dm9pZD47XG5cbiAgLyoqXG4gICAqIEEgbWFwIG9mIHBsdWdpbnMgdGhhdCBhcmUgbG9hZGVkLlxuICAgKi9cbiAgZGF0YTogSU9ic2VydmFibGVNYXA8UGx1Z2luLkRhdGE+O1xufVxuIiwiZXhwb3J0IGVudW0gS2V5cyB7XG4gIEJBQ0tTUEFDRT0gOCxcbiAgVEFCID0gOSxcbiAgUkVUVVJOID0gMTMsXG4gIFNISUZUID0gMTYsXG4gIENPTlRST0wgPSAxNyxcbiAgQUxUID0gMTgsXG4gIEVTQ0FQRSA9IDI3LFxuICBTUEFDRSA9IDMyLFxuICBIQVNIID0gMzUsXG4gIExFRlRBUlJPVyA9IDM3LFxuICBVUEFSUk9XID0gMzgsXG4gIFJJR0hUQVJST1cgPSAzOSxcbiAgRE9XTkFSUk9XID0gNDAsXG4gIERFTEVURSA9IDQ2LFxuICBaRVJPID0gNDgsXG4gIE9ORSA9IDQ5LFxuICBUV08gPSA1MCxcbiAgVEhSRUUgPSA1MSxcbiAgRk9VUiA9IDUyLFxuICBGSVZFID0gNTMsXG4gIFNJWCA9IDU0LFxuICBTRVZFTiA9IDU1LFxuICBFSUdIVCA9IDU2LFxuICBOSU5FID0gNTcsXG4gIEFUID0gNjQsXG4gIEEgPSA2NSxcbiAgQiA9IDY2LFxuICBDID0gNjcsXG4gIEQgPSA2OCxcbiAgRSA9IDY5LFxuICBGID0gNzAsXG4gIEcgPSA3MSxcbiAgSCA9IDcyLFxuICBJID0gNzMsXG4gIEogPSA3NCxcbiAgSyA9IDc1LFxuICBMID0gNzYsXG4gIE0gPSA3NyxcbiAgTiA9IDc4LFxuICBPID0gNzksXG4gIFAgPSA4MCxcbiAgUSA9IDgxLFxuICBSID0gODIsXG4gIFMgPSA4MyxcbiAgVCA9IDg0LFxuICBVID0gODUsXG4gIFYgPSA4NixcbiAgVyA9IDg3LFxuICBYID0gODgsXG4gIFkgPSA4OSxcbiAgWiA9IDkwLFxuICBMX01FVEEgPSA5MSxcbiAgUl9NRVRBID0gOTMsXG4gIFNFTUlDT0xPTiA9IDE4NixcbiAgUExVU0VRVUFMUyA9IDE4NyxcbiAgQ09NTUEgPSAxODgsXG4gIERBU0hVTkRFUlNDT1JFID0gMTg5LFxuICBQRVJJT0QgPSAxOTAsXG4gIE9QRU5CUkFDS0VUID0gMjE5LFxufVxuIiwiZXhwb3J0IGVudW0gS2V5U3RhdGUge1xuICBET1dOLFxuICBQUkVTU0VELFxuICBVUCxcbn1cbiIsImV4cG9ydCBlbnVtIFBvaW50ZXJCdXR0b24ge1xuICBQUklNQVJZLFxuICBNSURETEUsXG4gIFNFQ09OREFSWSxcbiAgQkFDSyxcbiAgRk9SV0FSRCxcbiAgQ09VTlRcbn1cblxuZXhwb3J0IGVudW0gUG9pbnRlckJ1dHRvbk1hc2sge1xuICBOT05FLFxuICBQUklNQVJZID0gMSA8PCBQb2ludGVyQnV0dG9uLlBSSU1BUlksXG4gIFNFQ09OREFSWSA9IDEgPDwgUG9pbnRlckJ1dHRvbi5TRUNPTkRBUlksXG4gIE1JRERMRSA9IDEgPDwgUG9pbnRlckJ1dHRvbi5NSURETEUsXG4gIEJBQ0sgPSAxIDw8IFBvaW50ZXJCdXR0b24uQkFDSyxcbiAgRk9SV0FSRCA9IDEgPDwgUG9pbnRlckJ1dHRvbi5GT1JXQVJELFxuICBBTEwgPSAoMSA8PCBQb2ludGVyQnV0dG9uLkNPVU5UKSAtIDFcbn1cbiIsImltcG9ydCB7IEZyYWdtZW50LCB1c2VDYWxsYmFjaywgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB0eXBlIHsgTW91c2VFdmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB0eXBlIHsgTXBTZGsgfSBmcm9tICdAc2RrL3R5cGVzJztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2RrOiBNcFNkaztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIENvbnZlcnNpb25Xb3JsZFRvU2NyZWVuKHByb3BzOiBQcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgY29uc3QgW21lc3NhZ2UsIHNldE1lc3NhZ2VdID0gdXNlU3RhdGU8c3RyaW5nPignJyk7XG4gIGNvbnN0IHhJbnB1dEVsZW1lbnQgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG4gIGNvbnN0IHlJbnB1dEVsZW1lbnQgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG4gIGNvbnN0IHpJbnB1dEVsZW1lbnQgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG5cbiAgY29uc3QgZXhlY3V0ZSA9IHVzZUNhbGxiYWNrKChlbGVtZW50OiBNb3VzZUV2ZW50KSA9PiB7XG4gICAgY29uc3QgY29tcHV0ZVZhbHVlID0gYXN5bmMgZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoIXhJbnB1dEVsZW1lbnQuY3VycmVudCB8fCAheUlucHV0RWxlbWVudC5jdXJyZW50IHx8ICF6SW5wdXRFbGVtZW50LmN1cnJlbnQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBzZGsgID0gcHJvcHMuc2RrO1xuICAgICAgY29uc3QgeCA9IHhJbnB1dEVsZW1lbnQuY3VycmVudD8udmFsdWU7XG4gICAgICBjb25zdCB5ID0geUlucHV0RWxlbWVudC5jdXJyZW50Py52YWx1ZTtcbiAgICAgIGNvbnN0IHogPSB6SW5wdXRFbGVtZW50LmN1cnJlbnQ/LnZhbHVlO1xuXG4gICAgICBpZiAoIXggfHwgIXkgfHwgIXopIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBsZXQgcG9zZTogYW55ID0gbnVsbDtcbiAgICAgIGF3YWl0IHNkay5DYW1lcmEucG9zZS53YWl0VW50aWwoZnVuY3Rpb24ocG9zZUNhbGxiYWNrKSB7XG4gICAgICAgIHBvc2UgPSBwb3NlQ2FsbGJhY2s7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfSk7XG5cbiAgICAgIGNvbnN0IHNob3djYXNlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Nob3djYXNlJykgYXMgSFRNTElGcmFtZUVsZW1lbnQ7XG4gICAgICBjb25zdCBzaG93Y2FzZVNpemUgPSB7XG4gICAgICAgdzogc2hvd2Nhc2UuY2xpZW50V2lkdGgsXG4gICAgICAgaDogc2hvd2Nhc2UuY2xpZW50SGVpZ2h0LFxuICAgICAgfTtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgKHByb3BzLnNkay5Db252ZXJzaW9uLndvcmxkVG9TY3JlZW4oe3g6IHBhcnNlRmxvYXQoeCksIHk6IHBhcnNlRmxvYXQoeSksIHo6IHBhcnNlRmxvYXQoeil9LCBwb3NlLCBzaG93Y2FzZVNpemUpKTtcbiAgICAgICAgcmVzdWx0LnggPSBNYXRoLnRydW5jKHJlc3VsdC54KTtcbiAgICAgICAgcmVzdWx0LnkgPSBNYXRoLnRydW5jKHJlc3VsdC55KTtcblxuICAgICAgICBzZXRNZXNzYWdlKGBzdWNjZXNzIHg6JHtyZXN1bHQueH0geToke3Jlc3VsdC55fWApO1xuICAgICAgfVxuICAgICAgY2F0Y2goZSkge1xuICAgICAgICBzZXRNZXNzYWdlKGBlcnJvcmApO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBjb21wdXRlVmFsdWUoKTtcbiAgfSwgW3Byb3BzLnNka10pO1xuXG4gIHJldHVybiAoXG4gICAgPEZyYWdtZW50PlxuICAgICAgPHRyPlxuICAgICAgICA8dGQ+XG4gICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtleGVjdXRlfT53b3JsZFRvU2NyZWVuPC9idXR0b24+XG4gICAgICAgIDwvdGQ+XG4gICAgICAgIDx0ZD5cbiAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBpZD0nY29udmVyc2lvbi13b3JsZHRvc2NyZWVuLXgnIGNsYXNzTmFtZT1cInNtYWxsLWlucHV0XCIgcGxhY2Vob2xkZXI9J3gnIHJlZj17eElucHV0RWxlbWVudH0vPlxuICAgICAgICA8L3RkPlxuICAgICAgICA8dGQ+XG4gICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgaWQ9J2NvbnZlcnNpb24td29ybGR0b3NjcmVlbi15JyBjbGFzc05hbWU9XCJzbWFsbC1pbnB1dFwiIHBsYWNlaG9sZGVyPSd5JyByZWY9e3lJbnB1dEVsZW1lbnR9Lz5cbiAgICAgICAgPC90ZD5cbiAgICAgICAgPHRkPlxuICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIGlkPSdjb252ZXJzaW9uLXdvcmxkdG9zY3JlZW4teicgY2xhc3NOYW1lPVwic21hbGwtaW5wdXRcIiBwbGFjZWhvbGRlcj0neicgcmVmPXt6SW5wdXRFbGVtZW50fS8+XG4gICAgICAgIDwvdGQ+XG4gICAgICA8L3RyPlxuICAgICAgPHRyPlxuICAgICAgICA8dGQgY29sU3Bhbj17M30+XG4gICAgICAgICAgPGRpdiBpZD0nc2V0dGluZ3MtdXBkYXRlLW1lc3NhZ2UnPnttZXNzYWdlfTwvZGl2PlxuICAgICAgICA8L3RkPlxuICAgICAgPC90cj5cbiAgICA8L0ZyYWdtZW50PlxuICApO1xufVxuIiwiaW1wb3J0IHsgdXNlUmVmLCB1c2VTdGF0ZSwgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdHlwZSB7IE1wU2RrLCBRdWF0ZXJuaW9uLCBWZWN0b3IzIH0gZnJvbSAnQHNkay90eXBlcyc7XG5pbXBvcnQgeyBDb252ZXJzaW9uIH0gZnJvbSAnQHNkay90eXBlcyc7XG5cbnR5cGUgVHJhbnNmb3JtT3BlcmF0b3IgPSBrZXlvZiB0eXBlb2YgQ29udmVyc2lvbi5UcmFuc2Zvcm1UeXBlO1xudHlwZSBUcmFuc2Zvcm1EaXJlY3Rpb24gPSAnVE9fQVBJJyB8ICdUT19TREsnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBzZGs6IE1wU2RrO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gQ29udmVyc2lvbkJhc2lzQ2hhbmdlKHsgc2RrIH06IFByb3BzKTogSlNYLkVsZW1lbnQge1xuICBjb25zdCBbbWVzc2FnZSwgc2V0TWVzc2FnZV0gPSB1c2VTdGF0ZTxSZWFjdC5SZWFjdEVsZW1lbnQ+KDw+PC8+KTtcbiAgY29uc3QgW29wZXJhdG9yLCBzZXRPcGVyYXRvcl0gPSB1c2VTdGF0ZTxUcmFuc2Zvcm1PcGVyYXRvcj4oJ0Nvb3JkaW5hdGVzJyk7XG4gIGNvbnN0IFtmdW4sIHNldEZ1bl0gPSB1c2VTdGF0ZTxUcmFuc2Zvcm1EaXJlY3Rpb24+KCdUT19TREsnKTtcblxuICBjb25zdCB4SW5wdXRFbGVtZW50ID0gdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwpO1xuICBjb25zdCB5SW5wdXRFbGVtZW50ID0gdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwpO1xuICBjb25zdCB6SW5wdXRFbGVtZW50ID0gdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwpO1xuICBjb25zdCB3SW5wdXRFbGVtZW50ID0gdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwpO1xuXG4gIGNvbnN0IHRyYW5zZm9ybSA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBjb25zdCB4ID0geElucHV0RWxlbWVudC5jdXJyZW50Py52YWx1ZTtcbiAgICBjb25zdCB5ID0geUlucHV0RWxlbWVudC5jdXJyZW50Py52YWx1ZTtcbiAgICBjb25zdCB6ID0geklucHV0RWxlbWVudC5jdXJyZW50Py52YWx1ZTtcbiAgICBjb25zdCB3ID0gd0lucHV0RWxlbWVudC5jdXJyZW50Py52YWx1ZTtcblxuICAgIGNvbnN0IHRyYW5zZm9ybVR5cGUgPSBDb252ZXJzaW9uLlRyYW5zZm9ybVR5cGVbb3BlcmF0b3JdO1xuICAgIGNvbnN0IGJhc2lzQ2hhbmdlRnVuY3Rpb24gPSB0cmFuc2Zvcm1UeXBlW2Z1bl07XG5cbiAgICAvLyBEZXRlcm1pbmUgaWYgdGhpcyBpcyBhIFF1YXRlcm5pb24gb3BlcmF0aW9uIChuZWVkcyB3KSBvciBWZWN0b3IzXG4gICAgbGV0IHJlc3VsdDogVmVjdG9yMyB8IFF1YXRlcm5pb24gfCB1bmRlZmluZWQ7XG4gICAgaWYgKG9wZXJhdG9yID09PSAnU3dlZXBSb3RhdGlvbicgfHwgb3BlcmF0b3IgPT09ICdDYW1lcmFSb3RhdGlvbicpIHtcbiAgICAgIC8vIFF1YXRlcm5pb25cbiAgICAgIGNvbnN0IHF1YXRlcm5pb24gPSB7XG4gICAgICAgIHg6IE51bWJlcih4KSxcbiAgICAgICAgeTogTnVtYmVyKHkpLFxuICAgICAgICB6OiBOdW1iZXIoeiksXG4gICAgICAgIHc6IE51bWJlcih3KSxcbiAgICAgIH07XG4gICAgICByZXN1bHQgPSBzZGsuQ29udmVyc2lvbi5iYXNpc0NoYW5nZShxdWF0ZXJuaW9uLCBiYXNpc0NoYW5nZUZ1bmN0aW9uIGFzIGFueSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFZlY3RvcjNcbiAgICAgIGNvbnN0IHBvaW50OiBWZWN0b3IzID0geyB4OiBOdW1iZXIoeCksIHk6IE51bWJlcih5KSwgejogTnVtYmVyKHopIH07XG4gICAgICByZXN1bHQgPSBzZGsuQ29udmVyc2lvbi5iYXNpc0NoYW5nZShwb2ludCwgYmFzaXNDaGFuZ2VGdW5jdGlvbiBhcyBhbnkpO1xuICAgIH1cblxuICAgIGlmIChyZXN1bHQpIHtcbiAgICAgIHJldHVybiBzZXRNZXNzYWdlKFxuICAgICAgICA8PlxuICAgICAgICAgIDx0ZD57cmVzdWx0LngudG9GaXhlZCgyKX08L3RkPlxuICAgICAgICAgIDx0ZD57cmVzdWx0LnkudG9GaXhlZCgyKX08L3RkPlxuICAgICAgICAgIDx0ZD57cmVzdWx0LnoudG9GaXhlZCgyKX08L3RkPlxuICAgICAgICAgIDx0ZD57J3cnIGluIHJlc3VsdCAmJiB0eXBlb2YgKHJlc3VsdCBhcyBhbnkpLncgPT09ICdudW1iZXInID8gKHJlc3VsdCBhcyBRdWF0ZXJuaW9uKS53LnRvRml4ZWQoMikgOiAnJ308L3RkPlxuICAgICAgICA8Lz5cbiAgICAgICk7XG4gICAgfVxuICB9LCBbZnVuLCBvcGVyYXRvciwgc2RrXSk7XG5cbiAgY29uc3QgaGFuZGxlU2V0RnVuID0gdXNlQ2FsbGJhY2soKHZhbHVlOiBzdHJpbmcpID0+IHtcbiAgICBzZXRGdW4odmFsdWUgYXMgVHJhbnNmb3JtRGlyZWN0aW9uKTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPHRhYmxlPlxuICAgICAgPHRib2R5PlxuICAgICAgICA8dHI+XG4gICAgICAgICAgPHRkPlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlPVwiMFwiXG4gICAgICAgICAgICAgIGlkPVwiY29udmVyc2lvbi14XCJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwic21hbGwtaW5wdXRcIlxuICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cInhcIlxuICAgICAgICAgICAgICByZWY9e3hJbnB1dEVsZW1lbnR9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgPHRkPlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlPVwiMFwiXG4gICAgICAgICAgICAgIGlkPVwiY29udmVyc2lvbi15XCJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwic21hbGwtaW5wdXRcIlxuICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cInlcIlxuICAgICAgICAgICAgICByZWY9e3lJbnB1dEVsZW1lbnR9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgPHRkPlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlPVwiMFwiXG4gICAgICAgICAgICAgIGlkPVwiY29udmVyc2lvbi16XCJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwic21hbGwtaW5wdXRcIlxuICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cInpcIlxuICAgICAgICAgICAgICByZWY9e3pJbnB1dEVsZW1lbnR9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgPHRkPlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlPVwiMFwiXG4gICAgICAgICAgICAgIGlkPVwiY29udmVyc2lvbi13XCJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwic21hbGwtaW5wdXRcIlxuICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIndcIlxuICAgICAgICAgICAgICByZWY9e3dJbnB1dEVsZW1lbnR9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvdGQ+XG4gICAgICAgIDwvdHI+XG4gICAgICAgIDx0cj5cbiAgICAgICAgICA8dGQgY29sU3Bhbj17NH0+XG4gICAgICAgICAgICA8c2VsZWN0IG9uQ2hhbmdlPXsoZSkgPT4gc2V0T3BlcmF0b3IoZS50YXJnZXQudmFsdWUgYXMgVHJhbnNmb3JtT3BlcmF0b3IpfSBkZWZhdWx0VmFsdWU9e29wZXJhdG9yfT5cbiAgICAgICAgICAgICAge09iamVjdC5rZXlzKENvbnZlcnNpb24uVHJhbnNmb3JtVHlwZSkubWFwKCh0eXBlKSA9PiAoXG4gICAgICAgICAgICAgICAgPG9wdGlvbiBrZXk9e3R5cGV9IHZhbHVlPXt0eXBlfT5cbiAgICAgICAgICAgICAgICAgIHt0eXBlfVxuICAgICAgICAgICAgICAgIDwvb3B0aW9uPlxuICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICAgICAge29wZXJhdG9yID8gKFxuICAgICAgICAgICAgICA8c2VsZWN0IG9uQ2hhbmdlPXsoZSkgPT4gaGFuZGxlU2V0RnVuKGUudGFyZ2V0LnZhbHVlKX0gZGVmYXVsdFZhbHVlPXtmdW59PlxuICAgICAgICAgICAgICAgIHtvcGVyYXRvciAmJiBPYmplY3Qua2V5cyhDb252ZXJzaW9uLlRyYW5zZm9ybVR5cGVbb3BlcmF0b3JdKS5tYXAoKHR5cGUpID0+IChcbiAgICAgICAgICAgICAgICAgIDxvcHRpb24ga2V5PXt0eXBlfSB2YWx1ZT17dHlwZX0+XG4gICAgICAgICAgICAgICAgICAgIHt0eXBlfVxuICAgICAgICAgICAgICAgICAgPC9vcHRpb24+XG4gICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgPD48Lz5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC90ZD5cbiAgICAgICAgPC90cj5cbiAgICAgICAgPHRyPlxuICAgICAgICAgIDx0ZCBjb2xTcGFuPXs0fT5cbiAgICAgICAgICAgIDxidXR0b24gb25DbGljaz17dHJhbnNmb3JtfT5iYXNpc0NoYW5nZTwvYnV0dG9uPlxuICAgICAgICAgIDwvdGQ+XG4gICAgICAgIDwvdHI+XG4gICAgICAgIDx0cj57bWVzc2FnZX08L3RyPlxuICAgICAgPC90Ym9keT5cbiAgICA8L3RhYmxlPlxuICApO1xufVxuIiwiaW1wb3J0IHR5cGUgeyBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuaW1wb3J0IHsgQ29udHJvbFBhbmVsIH0gZnJvbSAnLi4vQ29udHJvbFBhbmVsJztcblxuaW1wb3J0IHsgQ29udmVyc2lvbldvcmxkVG9TY3JlZW4gfSBmcm9tICcuL0NvbnZlcnNpb25Xb3JsZFRvU2NyZWVuJztcbmltcG9ydCB7IENvbnZlcnNpb25CYXNpc0NoYW5nZSB9IGZyb20gJy4vQ29udmVyc2lvbkJhc2lzQ2hhbmdlJztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2RrOiBNcFNkaztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIENvbnZlcnNpb24ocHJvcHM6IFByb3BzKTogSlNYLkVsZW1lbnQge1xuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8Q29udHJvbFBhbmVsIGhlYWRlcj17J0NvbnZlcnNpb24uYmFzaXNDaGFuZ2UnfT5cbiAgICAgICAgPENvbnZlcnNpb25CYXNpc0NoYW5nZSBzZGs9e3Byb3BzLnNka30gLz5cbiAgICAgIDwvQ29udHJvbFBhbmVsPlxuICAgICAgPENvbnRyb2xQYW5lbCBoZWFkZXI9eydDb252ZXJzaW9uLndvcmxkVG9TY3JlZW4nfT5cbiAgICAgICAgPENvbnZlcnNpb25Xb3JsZFRvU2NyZWVuIHNkaz17cHJvcHMuc2RrfSAvPlxuICAgICAgPC9Db250cm9sUGFuZWw+XG4gICAgPC8+XG4gICk7XG59XG4iLCJpbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB0eXBlIHsgQ1NTUHJvcGVydGllcyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB0eXBlIHsgTXBTZGssIEZsb29yIH0gZnJvbSAnQHNkay90eXBlcyc7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHNkazogTXBTZGs7XG59XG5cbmNvbnN0IHRleHRBcmVhU3R5bGU6IENTU1Byb3BlcnRpZXMgPSB7XG4gIGhlaWdodDogNTAsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gRmxvb3JHZXREYXRhKHByb3BzOiBQcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgY29uc3QgW2Zsb29ycywgc2V0Rmxvb3JzXSA9IHVzZVN0YXRlPEZsb29yLkZsb29yc3xudWxsPihudWxsKTtcblxuICBjb25zdCBjYWxsYmFjayA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBzZGtGbG9vcnMgPSBhd2FpdCBwcm9wcy5zZGsuRmxvb3IuZ2V0RGF0YSgpO1xuICAgIHNldEZsb29ycyhzZGtGbG9vcnMpO1xuICB9LCBbcHJvcHMuc2RrLkZsb29yXSk7XG5cbiAgY29uc3Qgc2VyaWFsaXplZCA9IEpTT04uc3RyaW5naWZ5KGZsb29ycyk7XG5cbiAgcmV0dXJuIChcbiAgICA8dHI+XG4gICAgICA8dGQgY29sU3Bhbj17MX0+XG4gICAgICAgIDxidXR0b24gb25DbGljaz17Y2FsbGJhY2t9PmdldERhdGE8L2J1dHRvbj5cbiAgICAgIDwvdGQ+XG4gICAgICA8dGQgY29sU3Bhbj17Mn0+XG4gICAgICAgIDx0ZXh0YXJlYSByb3dzPXszfSBzdHlsZT17dGV4dEFyZWFTdHlsZX0gdmFsdWU9e3NlcmlhbGl6ZWR9IHJlYWRPbmx5PXt0cnVlfS8+XG4gICAgICA8L3RkPlxuICAgIDwvdHI+XG4gICk7XG59XG4iLCJpbXBvcnQgeyBGcmFnbWVudCwgdXNlQ2FsbGJhY2ssIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdHlwZSB7IE1wU2RrIH0gZnJvbSAnQHNkay90eXBlcyc7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHNkazogTXBTZGs7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBGbG9vck1vdmVUbyhwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IFttZXNzYWdlLCBzZXRNZXNzYWdlXSA9IHVzZVN0YXRlPHN0cmluZz4oJycpO1xuICBjb25zdCBbbW92ZUNhbWVyYU9wdGlvbkNoYW5nZWQsIHNldE1vdmVDYW1lcmFPcHRpb25DaGFuZ2VkXSA9IHVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcblxuICBjb25zdCBpbnB1dEVsZW1lbnQgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG4gIGNvbnN0IGNoZWNrYm94RWxlbWVudCA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcblxuICBjb25zdCBjYWxsYmFjayA9IHVzZUNhbGxiYWNrKGFzeW5jIChlbGVtZW50OiBhbnkpID0+IHtcbiAgICBpZiAoIWlucHV0RWxlbWVudC5jdXJyZW50IHx8ICFjaGVja2JveEVsZW1lbnQuY3VycmVudCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGxldCByZXN1bHQ6IHN0cmluZztcbiAgICB0cnkge1xuICAgICAgY29uc3QgZmxvb3JJbmRleCA9IHBhcnNlSW50KGlucHV0RWxlbWVudC5jdXJyZW50LnZhbHVlLCAxMCk7XG4gICAgICBsZXQgbmV3Rmxvb3I7XG4gICAgICBpZiAobW92ZUNhbWVyYU9wdGlvbkNoYW5nZWQpIHtcbiAgICAgICAgbmV3Rmxvb3IgPSBhd2FpdCAoKHByb3BzLnNkayBhcyBhbnkpLkZsb29yLm1vdmVUbyhmbG9vckluZGV4KSkgYXMgc3RyaW5nfHVuZGVmaW5lZDtcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICBjb25zdCBzdXBwcmVzc0NhbWVyYSA9IGNoZWNrYm94RWxlbWVudC5jdXJyZW50LmNoZWNrZWQ7XG4gICAgICAgIG5ld0Zsb29yID0gYXdhaXQgKChwcm9wcy5zZGsgYXMgYW55KS5GbG9vci5tb3ZlVG8oZmxvb3JJbmRleCwgc3VwcHJlc3NDYW1lcmEpKSBhcyBzdHJpbmd8dW5kZWZpbmVkO1xuICAgICAgfVxuXG4gICAgICByZXN1bHQgPSBgTW92ZWQgdG8gZmxvb3IgaW5kZXggJHtuZXdGbG9vcn1gO1xuICAgIH1cbiAgICBjYXRjaChlKSB7XG4gICAgICByZXN1bHQgPSBgRXJyb3IgJHtlfWA7XG4gICAgfVxuXG4gICAgc2V0TWVzc2FnZShyZXN1bHQpO1xuICB9LCBbbW92ZUNhbWVyYU9wdGlvbkNoYW5nZWQsIHByb3BzLnNka10pO1xuXG4gIGNvbnN0IHRvZ2dsZU1vdmVDYW1lcmFPcHRpb24gPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgc2V0TW92ZUNhbWVyYU9wdGlvbkNoYW5nZWQodHJ1ZSk7XG4gIH0sIFtdKTtcblxuICBjb25zdCBtb3ZlQ2FtZXJhRGVzYyA9ICFtb3ZlQ2FtZXJhT3B0aW9uQ2hhbmdlZCA/ICdNb3ZlIGNhbWVyYSh1bnNldCknIDogJ01vdmUgY2FtZXJhKHNldCknO1xuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDx0cj5cbiAgICAgICAgPHRkIGNvbFNwYW49ezF9PlxuICAgICAgICAgIDxidXR0b24gb25DbGljaz17Y2FsbGJhY2t9Pm1vdmVUbzwvYnV0dG9uPlxuICAgICAgICA8L3RkPlxuICAgICAgICA8dGQgY29sU3Bhbj17MX0+XG4gICAgICAgICAgPGlucHV0IHR5cGU9XCJudW1iZXJcIiBpZD0nZmxvb3ItbW92ZXRvLWluZGV4JyBjbGFzc05hbWU9J3NtYWxsLWlucHV0JyBwbGFjZWhvbGRlcj0naW5kZXgnIHJlZj17aW5wdXRFbGVtZW50fS8+XG4gICAgICAgIDwvdGQ+XG4gICAgICAgIDx0ZCBjb2xTcGFuPXsxfT5cbiAgICAgICAgICA8ZGl2Pnttb3ZlQ2FtZXJhRGVzY308L2Rpdj5cbiAgICAgICAgICA8aW5wdXQgaWQ9J2Zsb29yLW1vdmV0by1tb3ZlY2FtZXJhJyB0eXBlPSdjaGVja2JveCcgcmVmPXtjaGVja2JveEVsZW1lbnR9IGRlZmF1bHRDaGVja2VkIG9uQ2hhbmdlPXt0b2dnbGVNb3ZlQ2FtZXJhT3B0aW9ufS8+XG4gICAgICAgIDwvdGQ+XG4gICAgICA8L3RyPlxuICAgICAgPHRyPlxuICAgICAgICA8dGQgY29sU3Bhbj17Mn0+XG4gICAgICAgICAgPGRpdiBpZD0nc2V0dGluZ3MtZ2V0LW1lc3NhZ2UnPnttZXNzYWdlfTwvZGl2PlxuICAgICAgICA8L3RkPlxuICAgICAgPC90cj5cbiAgICA8L0ZyYWdtZW50PlxuICApO1xufVxuIiwiaW1wb3J0IHsgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdHlwZSB7IE1wU2RrIH0gZnJvbSAnQHNkay90eXBlcyc7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHNkazogTXBTZGs7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBGbG9vclNob3dBbGwocHJvcHM6IFByb3BzKTogSlNYLkVsZW1lbnQge1xuICBjb25zdCBjYWxsYmFjayA9IHVzZUNhbGxiYWNrKGFzeW5jIChlbGVtZW50OiBhbnkpID0+IHtcbiAgICBhd2FpdCBwcm9wcy5zZGsuRmxvb3Iuc2hvd0FsbCgpO1xuICB9LCBbcHJvcHMuc2RrLkZsb29yXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8dHI+XG4gICAgICA8dGQgY29sU3Bhbj17MX0+XG4gICAgICAgIDxidXR0b24gb25DbGljaz17Y2FsbGJhY2t9PnNob3dBbGw8L2J1dHRvbj5cbiAgICAgIDwvdGQ+XG4gICAgPC90cj5cbiAgKTtcbn1cbiIsImltcG9ydCB0eXBlIHsgQ1NTUHJvcGVydGllcyB9IGZyb20gJ3JlYWN0JztcblxuY29uc3QgY3NzOiBDU1NQcm9wZXJ0aWVzID0ge1xuICBoZWlnaHQ6IDUsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gUm93U3BhY2VyKCk6IEpTWC5FbGVtZW50IHtcbiAgcmV0dXJuIChcbiAgICA8dHIgc3R5bGU9e2Nzc30vPlxuICApO1xufVxuIiwiaW1wb3J0IHR5cGUgeyBDU1NQcm9wZXJ0aWVzICwgU3ludGhldGljRXZlbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBGcmFnbWVudCAsIHVzZUNhbGxiYWNrLCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBJT2JzZXJ2YWJsZU1hcCwgRGljdGlvbmFyeSB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuXG5pbnRlcmZhY2UgQ29sbFByb3BzPFQ+IHtcbiAgbmFtZTogc3RyaW5nO1xuICBjb2xsZWN0aW9uOiBJT2JzZXJ2YWJsZU1hcDxUPjtcbn1cblxuaW50ZXJmYWNlIEV2ZW50IHtcbiAgY2hlY2tlZDogYm9vbGVhbjtcbiAgdHlwZTogc3RyaW5nO1xuICBwYXlsb2FkOiBhbnk7XG59XG5cbmNvbnN0IGV2ZW50TGlzdFN0eWxlOiBDU1NQcm9wZXJ0aWVzID0ge1xuICB3aWR0aDogJzIwMHB4JyxcbiAgYm9yZGVyV2lkdGg6IDEsXG4gIGJvcmRlclN0eWxlOiAnc29saWQnLFxuICBib3JkZXJDb2xvcjogJ2xpZ2h0Z3JheScsXG59O1xuXG5jb25zdCBpbnB1dFN0eWxlOiBDU1NQcm9wZXJ0aWVzID0ge1xuICBtYXhXaWR0aDogMjAsXG59O1xuXG5jb25zdCBvbFN0eWxlOiBDU1NQcm9wZXJ0aWVzID0ge1xuICBwYWRkaW5nOiAyLFxuICBoZWlnaHQ6ICc1MCUnLFxuICBvdmVyZmxvdzogJ3Njcm9sbCcsXG59O1xuXG5jb25zdCB1bnN1YmJlZFN0eWxlOiBDU1NQcm9wZXJ0aWVzID0ge1xuICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDIzOSwgMjM5LCAyMzksIDAuMyknLFxufTtcblxuY29uc3QgdGV4dEFyZWFTdHlsZSA9IGZ1bmN0aW9uKHNob3c6IGJvb2xlYW4pOiBDU1NQcm9wZXJ0aWVzIHtcbiAgcmV0dXJuIHtcbiAgICBoZWlnaHQ6IDMyLFxuICAgIGRpc3BsYXk6IHNob3cgPyAnYmxvY2snIDogJ25vbmUnLFxuICB9O1xufTtcblxuLyoqXG4gKiBBIGNvbXBvbmVudCB0aGF0IHdpbGwgc3Vic2NpYmUgdG8gU0RLIENvbGxlY3Rpb24gYW5kIHJlcG9ydCBhbGwgb2YgdGhlIGV2ZW50cyB0aGF0IGhhdmUgb2NjdXJyZWQgb24gdGhhdCBjb2xsZWN0aW9uXG4gKiBXaGVuIHVuc3Vic2NyaWJlZCwgdGhlIGV2ZW50IGxpc3QgaXMgdW5tb2RpZmllZC4gV2hlbiAocmUpc3Vic2NyaWJpbmcsIHRoZSBldmVudCBsaXN0IGlzIGNsZWFyZWQgYW5kIHJlLXJlbmRlcmVkXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBPYnNlcnZhYmxlQ29sbGVjdGlvbjxUPihwcm9wczogQ29sbFByb3BzPFQ+KTogSlNYLkVsZW1lbnQge1xuICBjb25zdCBbIGV2ZW50TGlzdCwgc2V0RXZlbnRMaXN0IF0gPSB1c2VTdGF0ZTxFdmVudFtdPihbXSk7XG4gIGNvbnN0IFsgaXNTdWJzY3JpYmVkLCBzdWJzY3JpYmUgXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgY2xlYXJFdmVudExpc3QgPSB1c2VDYWxsYmFjaygoKSA9PiBzZXRFdmVudExpc3QoW10pLCBbXSk7XG5cbiAgY29uc3Qgc3ViID0gdXNlUmVmPGFueT4obnVsbCk7XG4gIGNvbnN0IGV2ZW50TGlzdFJlZiA9IHVzZVJlZjxFdmVudFtdPigpO1xuICBldmVudExpc3RSZWYuY3VycmVudCA9IGV2ZW50TGlzdDtcblxuICBjb25zdCBzdWJUb0NvbGxlY3Rpb24gPSB1c2VDYWxsYmFjayhmdW5jdGlvbigpIHtcbiAgICBjb25zdCBoYW5kbGVyID0gZnVuY3Rpb24odHlwZTogc3RyaW5nLCBpdGVtOiBhbnksIGluZGV4Pzogc3RyaW5nKSB7XG4gICAgICBjb25zdCBuZXdFdmVudDogRXZlbnQgPSB7XG4gICAgICAgIGNoZWNrZWQ6IGZhbHNlLFxuICAgICAgICB0eXBlLFxuICAgICAgICBwYXlsb2FkOiBpdGVtLFxuICAgICAgfTtcblxuICAgICAgLy8gbW9kaWZ5aW5nIHRoZSBsaXN0IG11bHRpcGxlIHRpbWVzIHBlciBmcmFtZSByZXF1aXJlcyB0aGF0IHdlIHVzZSB0aGUgKG9sZFN0YXRlKSA9PiBuZXdTdGF0ZSBmb3JtIG9mIHRoZSBzZXR0ZXIgZnJvbSBgdXNlU3RhdGVgXG4gICAgICAvLyBvdGhlcndpc2UsIHdoZW4gUmVhY3QgYmF0Y2hlcyB0aGUgY2hhbmdlcyAoc2luY2Ugb3VyIHN0YXRlIGhhc24ndCB1cGRhdGVkKSB3ZSB3aWxsIGJlIHNldHRpbmcgc3RhdGUgYXMgb25seSB0aGUgbGF0ZXN0IGV2ZW50XG4gICAgICBzZXRFdmVudExpc3QoKGN1cnJlbnRFdmVudHMpID0+IFtcbiAgICAgICAgLi4uY3VycmVudEV2ZW50cyxcbiAgICAgICAgbmV3RXZlbnQsXG4gICAgICBdKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIHByb3BzLmNvbGxlY3Rpb24uc3Vic2NyaWJlKHtcbiAgICAgIG9uQWRkZWQ6IChpbmRleDogc3RyaW5nLCBpdGVtOiBUKSA9PiB7XG4gICAgICAgIGhhbmRsZXIoJ29uQWRkZWQnLCBpdGVtLCBpbmRleCk7XG4gICAgICB9LFxuICAgICAgb25SZW1vdmVkOiAoaW5kZXg6IHN0cmluZywgaXRlbTogVCkgPT4ge1xuICAgICAgICBoYW5kbGVyKCdvblJlbW92ZWQnLCBpdGVtLCBpbmRleCk7XG4gICAgICB9LFxuICAgICAgb25VcGRhdGVkOiAoaW5kZXg6IHN0cmluZywgaXRlbTogVCkgPT4ge1xuICAgICAgICBoYW5kbGVyKCdvblVwZGF0ZWQnLCBpdGVtLCBpbmRleCk7XG4gICAgICB9LFxuICAgICAgb25Db2xsZWN0aW9uVXBkYXRlZDogKGNvbGxlY3Rpb246IERpY3Rpb25hcnk8VD4pID0+IHtcbiAgICAgICAgaGFuZGxlcignb25Db2xsZWN0aW9uVXBkYXRlZCcsIGNvbGxlY3Rpb24pO1xuICAgICAgfSxcbiAgICB9KTtcbiAgfSwgW3Byb3BzLmNvbGxlY3Rpb25dKTtcblxuICBjb25zdCBkb1N1YnNjcmlwdGlvbiA9IHVzZUNhbGxiYWNrKChldmVudDogU3ludGhldGljRXZlbnQ8SFRNTElucHV0RWxlbWVudD4pID0+IHtcbiAgICBjb25zdCB7IGN1cnJlbnRUYXJnZXQ6IGNoZWNrYm94IH0gPSBldmVudDtcbiAgICBpZiAoY2hlY2tib3guY2hlY2tlZCkge1xuICAgICAgLy8gY2xlYXIgdGhlIGV2ZW50IGxpc3QgYW5kIHN0YXJ0IHBvcHVsYXRpbmcgaXQgYWdhaW5cbiAgICAgIHNldEV2ZW50TGlzdChbXSk7XG4gICAgICBzdWIuY3VycmVudCA9IHN1YlRvQ29sbGVjdGlvbigpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdWIuY3VycmVudC5jYW5jZWwoKTtcbiAgICAgIHN1Yi5jdXJyZW50ID0gbnVsbDtcbiAgICB9XG5cbiAgICBzdWJzY3JpYmUoY2hlY2tib3guY2hlY2tlZCk7XG4gIH0sIFtzdWJUb0NvbGxlY3Rpb25dKTtcblxuICBjb25zdCBvbkNoZWNrYm94Q2hhbmdlZCA9IHVzZUNhbGxiYWNrKGZ1bmN0aW9uKGVsZW1lbnQ6IFN5bnRoZXRpY0V2ZW50PEhUTUxJbnB1dEVsZW1lbnQ+KSB7XG4gICAgY29uc3QgaW5kZXggPSBwYXJzZUludChlbGVtZW50LmN1cnJlbnRUYXJnZXQudmFsdWUsIDEwKTtcbiAgICBjb25zdCBuZXdBcnJheSA9IFsuLi5ldmVudExpc3RdO1xuICAgIG5ld0FycmF5W2luZGV4XS5jaGVja2VkID0gZWxlbWVudC5jdXJyZW50VGFyZ2V0LmNoZWNrZWQ7XG4gICAgc2V0RXZlbnRMaXN0KG5ld0FycmF5KTtcbiAgfSwgW2V2ZW50TGlzdF0pO1xuXG4gIGNvbnN0IHJlbmRlckV2ZW50cyA9IGZ1bmN0aW9uKCkge1xuICAgIGNvbnN0IGV2ZW50cyA9IGV2ZW50TGlzdC5tYXAoZnVuY3Rpb24oZXZlbnQ6IEV2ZW50LCBpbmRleDogbnVtYmVyKSB7XG4gICAgICByZXR1cm4oXG4gICAgICAgIDxsaSBrZXk9e2luZGV4fT5cbiAgICAgICAgICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgdmFsdWU9e2luZGV4fSBvbkNoYW5nZT17b25DaGVja2JveENoYW5nZWR9IHN0eWxlPXtpbnB1dFN0eWxlfS8+e2V2ZW50LnR5cGV9XG4gICAgICAgICAgPHRleHRhcmVhIHJvd3M9ezN9IHN0eWxlPXt0ZXh0QXJlYVN0eWxlKGV2ZW50LmNoZWNrZWQpfSBkZWZhdWx0VmFsdWU9e0pTT04uc3RyaW5naWZ5KGV2ZW50LnBheWxvYWQpfS8+XG4gICAgICAgIDwvbGk+XG4gICAgICApO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGV2ZW50cztcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDxkaXY+Q29sbGVjdGlvbjoge3Byb3BzLm5hbWV9PC9kaXY+XG4gICAgICA8ZGl2PlxuICAgICAgICBzdWJzY3JpYmU6IDxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBvbkNoYW5nZT17ZG9TdWJzY3JpcHRpb259IC8+XG4gICAgICAgIDxzcGFuIHN0eWxlPXt7ZmxvYXQ6ICdyaWdodCd9fT48YnV0dG9uIG9uQ2xpY2s9e2NsZWFyRXZlbnRMaXN0fT5DbGVhcjwvYnV0dG9uPjwvc3Bhbj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBzdHlsZT17aXNTdWJzY3JpYmVkID8geyAuLi5ldmVudExpc3RTdHlsZSB9IDogeyAuLi5ldmVudExpc3RTdHlsZSwgLi4udW5zdWJiZWRTdHlsZSB9fT5cbiAgICAgICAgPG9sIHN0eWxlPXtvbFN0eWxlfT5cbiAgICAgICAgICB7cmVuZGVyRXZlbnRzKCl9XG4gICAgICAgIDwvb2w+XG4gICAgICA8L2Rpdj5cbiAgICA8L0ZyYWdtZW50PlxuICApO1xufVxuIiwiaW1wb3J0IHsgdHlwZSBDU1NQcm9wZXJ0aWVzLCB0eXBlIFN5bnRoZXRpY0V2ZW50LCB1c2VDYWxsYmFjaywgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB0eXBlIHsgTXBTZGsgfSBmcm9tICdAc2RrL3R5cGVzJztcblxuaW50ZXJmYWNlIEV2ZW50UHJvcHM8VD4ge1xuICBzZGs6IE1wU2RrO1xuICBldmVudHM6IFJlY29yZDxzdHJpbmcsIFQ+O1xufVxuXG5pbnRlcmZhY2UgRXZlbnQ8VD4ge1xuICBjaGVja2VkOiBib29sZWFuO1xuICB0eXBlOiBUO1xuICBkYXRhOiBzdHJpbmc7XG59XG5cbmNvbnN0IGV2ZW50TGlzdFN0eWxlOiBDU1NQcm9wZXJ0aWVzID0ge1xuICB3aWR0aDogJzIwMHB4JyxcbiAgYm9yZGVyV2lkdGg6IDEsXG4gIGJvcmRlclN0eWxlOiAnc29saWQnLFxuICBib3JkZXJDb2xvcjogJ2xpZ2h0Z3JheScsXG59O1xuXG5jb25zdCBpbnB1dFN0eWxlOiBDU1NQcm9wZXJ0aWVzID0ge1xuICBtYXhXaWR0aDogMjAsXG59O1xuXG5jb25zdCBvbFN0eWxlOiBDU1NQcm9wZXJ0aWVzID0ge1xuICBwYWRkaW5nOiAyLFxuICBoZWlnaHQ6ICc1MCUnLFxuICBvdmVyZmxvdzogJ3Njcm9sbCcsXG59O1xuXG5jb25zdCB1bnN1YmJlZFN0eWxlOiBDU1NQcm9wZXJ0aWVzID0ge1xuICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDIzOSwgMjM5LCAyMzksIDAuMyknLFxufTtcblxuY29uc3QgdGV4dEFyZWFTdHlsZSA9IGZ1bmN0aW9uKHNob3c6IGJvb2xlYW4pOiBDU1NQcm9wZXJ0aWVzIHtcbiAgcmV0dXJuIHtcbiAgICBoZWlnaHQ6IDMyLFxuICAgIGRpc3BsYXk6IHNob3cgPyAnYmxvY2snIDogJ25vbmUnLFxuICB9O1xufTtcblxuXG4vKipcbiAqIEEgY29tcG9uZW50IHRoYXQgd2lsbCBzdWJzY2liZSB0byBTREsgRXZlbnRzIGFuZCByZXBvcnQgYWxsIG9mIHRoZSBldmVudHMgdGhhdCBoYXZlIG9jY3VycmVkXG4gKiBXaGVuIHVuc3Vic2NyaWJlZCwgdGhlIGV2ZW50IGxpc3QgaXMgdW5tb2RpZmllZC4gV2hlbiAocmUpc3Vic2NyaWJpbmcsIHRoZSBldmVudCBsaXN0IGlzIGNsZWFyZWQgYW5kIHJlLXJlbmRlcmVkXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBFdmVudDxUPihwcm9wczogRXZlbnRQcm9wczxUPik6IEpTWC5FbGVtZW50IHtcbiAgY29uc3QgWyBldmVudExpc3QsIHNldEV2ZW50TGlzdCBdID0gdXNlU3RhdGU8QXJyYXk8RXZlbnQ8VD4+PihbXSk7XG4gIGNvbnN0IFsgaXNTdWJzY3JpYmVkLCBzdWJzY3JpYmUgXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgY2xlYXJFdmVudExpc3QgPSB1c2VDYWxsYmFjaygoKSA9PiBzZXRFdmVudExpc3QoW10pLCBbXSk7XG5cbiAgY29uc3Qgc3ViID0gdXNlUmVmPGFueT4obnVsbCk7XG5cbiAgY29uc3Qgc3ViVG9FdmVudCA9IHVzZUNhbGxiYWNrKGZ1bmN0aW9uKCkge1xuICAgIGZ1bmN0aW9uIGNyZWF0ZUV2ZW50SGFuZGxlcihldmVudFR5cGU6IFQpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbiAoLi4uYXJnczogYW55KSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdDogc3RyaW5nW10gPSBbXTtcbiAgICAgICAgZm9yIChjb25zdCBhcmcgb2YgYXJncykge1xuICAgICAgICAgIGlmICh0eXBlb2YoYXJnKSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKEpTT04uc3RyaW5naWZ5KGFyZykpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKGFyZyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZXZlbnRMaXN0LnB1c2goe1xuICAgICAgICAgIGNoZWNrZWQ6IGZhbHNlLFxuICAgICAgICAgIHR5cGU6IGV2ZW50VHlwZSxcbiAgICAgICAgICBkYXRhOiByZXN1bHQuam9pbignLCcpLFxuICAgICAgICB9KTtcbiAgICAgICAgc2V0RXZlbnRMaXN0KFsuLi5ldmVudExpc3RdKTtcbiAgICAgIH07XG4gICAgfVxuXG4gICAgY29uc3QgaGFuZGxlcnMgPSBPYmplY3QudmFsdWVzKHByb3BzLmV2ZW50cykubWFwKGV2VHlwZSA9PiBbZXZUeXBlLCBjcmVhdGVFdmVudEhhbmRsZXIoZXZUeXBlKV0gYXMgY29uc3QpO1xuICAgIGZvciAoY29uc3QgW2tleSwgaGFuZGxlcl0gb2YgaGFuZGxlcnMpIHtcbiAgICAgIHByb3BzLnNkay5vbihrZXkgYXMgYW55LCBoYW5kbGVyKTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgY2FuY2VsKCkge1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3QudmFsdWVzKHByb3BzLmV2ZW50cykpIHtcbiAgICAgICAgICBwcm9wcy5zZGsub2ZmKGtleSwgY3JlYXRlRXZlbnRIYW5kbGVyKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICB9O1xuICB9LCBbZXZlbnRMaXN0LCBwcm9wcy5ldmVudHMsIHByb3BzLnNka10pO1xuXG4gIGNvbnN0IGRvU3Vic2NyaXB0aW9uID0gdXNlQ2FsbGJhY2soKGV2ZW50OiBTeW50aGV0aWNFdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4ge1xuICAgIGNvbnN0IHsgY3VycmVudFRhcmdldDogY2hlY2tib3ggfSA9IGV2ZW50O1xuICAgIGlmIChjaGVja2JveC5jaGVja2VkKSB7XG4gICAgICAvLyBjbGVhciB0aGUgZXZlbnQgbGlzdCBhbmQgc3RhcnQgcG9wdWxhdGluZyBpdCBhZ2FpblxuICAgICAgc2V0RXZlbnRMaXN0KFtdKTtcbiAgICAgIHN1Yi5jdXJyZW50ID0gc3ViVG9FdmVudCgpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdWIuY3VycmVudC5jYW5jZWwoKTtcbiAgICAgIHN1Yi5jdXJyZW50ID0gbnVsbDtcbiAgICB9XG5cbiAgICBzdWJzY3JpYmUoY2hlY2tib3guY2hlY2tlZCk7XG4gIH0sIFtzdWJUb0V2ZW50XSk7XG5cbiAgY29uc3Qgb25DaGVja2JveENoYW5nZWQgPSB1c2VDYWxsYmFjayhmdW5jdGlvbihlbGVtZW50OiBTeW50aGV0aWNFdmVudDxIVE1MSW5wdXRFbGVtZW50Pikge1xuICAgIGNvbnN0IGluZGV4ID0gcGFyc2VJbnQoZWxlbWVudC5jdXJyZW50VGFyZ2V0LnZhbHVlLCAxMCk7XG4gICAgY29uc3QgbmV3QXJyYXkgPSBbLi4uZXZlbnRMaXN0XTtcbiAgICBuZXdBcnJheVtpbmRleF0uY2hlY2tlZCA9IGVsZW1lbnQuY3VycmVudFRhcmdldC5jaGVja2VkO1xuICAgIHNldEV2ZW50TGlzdChuZXdBcnJheSk7XG4gIH0sIFtldmVudExpc3RdKTtcblxuICBjb25zdCByZW5kZXJFdmVudHMgPSBmdW5jdGlvbigpIHtcbiAgICBjb25zdCBldmVudHMgPSBldmVudExpc3QubWFwKGZ1bmN0aW9uKGV2ZW50OiBFdmVudDxUPiwgaW5kZXg6IG51bWJlcikge1xuICAgICAgcmV0dXJuKFxuICAgICAgICA8bGkga2V5PXtpbmRleH0+XG4gICAgICAgICAgPGlucHV0IHR5cGU9XCJjaGVja2JveFwiIHZhbHVlPXtpbmRleH0gb25DaGFuZ2U9e29uQ2hlY2tib3hDaGFuZ2VkfSBzdHlsZT17aW5wdXRTdHlsZX0vPntTdHJpbmcoZXZlbnQudHlwZSl9XG4gICAgICAgICAgPHRleHRhcmVhIHJvd3M9ezN9IHN0eWxlPXt0ZXh0QXJlYVN0eWxlKGV2ZW50LmNoZWNrZWQpfSBkZWZhdWx0VmFsdWU9e2V2ZW50LmRhdGF9Lz5cbiAgICAgICAgPC9saT5cbiAgICAgICk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gZXZlbnRzO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxkaXY+XG4gICAgICAgIHN1YnNjcmliZTogPGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG9uQ2hhbmdlPXtkb1N1YnNjcmlwdGlvbn0gLz5cbiAgICAgICAgPHNwYW4gc3R5bGU9e3tmbG9hdDogJ3JpZ2h0J319PjxidXR0b24gb25DbGljaz17Y2xlYXJFdmVudExpc3R9PkNsZWFyPC9idXR0b24+PC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IHN0eWxlPXtpc1N1YnNjcmliZWQgPyB7IC4uLmV2ZW50TGlzdFN0eWxlIH0gOiB7IC4uLmV2ZW50TGlzdFN0eWxlLCAuLi51bnN1YmJlZFN0eWxlIH19PlxuICAgICAgICA8b2wgc3R5bGU9e29sU3R5bGV9PlxuICAgICAgICAgIHtyZW5kZXJFdmVudHMoKX1cbiAgICAgICAgPC9vbD5cbiAgICAgIDwvZGl2PlxuICAgIDwvPlxuICApO1xufVxuIiwiaW1wb3J0IHsgRnJhZ21lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdHlwZSB7IE1wU2RrIH0gZnJvbSAnQHNkay90eXBlcyc7XG5pbXBvcnQgeyBGbG9vckdldERhdGEgfSBmcm9tICcuL0Zsb29yR2V0RGF0YSc7XG5pbXBvcnQgeyBGbG9vck1vdmVUbyB9IGZyb20gJy4vRmxvb3JNb3ZlVG8nO1xuaW1wb3J0IHsgRmxvb3JTaG93QWxsIH0gZnJvbSAnLi9GbG9vclNob3dBbGwnO1xuaW1wb3J0IHsgUm93U3BhY2VyIH0gZnJvbSAnLi4vUm93U3BhY2VyJztcbmltcG9ydCB7IE9ic2VydmFibGVDb2xsZWN0aW9uIH0gZnJvbSAnLi4vT2JzZXJ2YWJsZUNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJy4uL09ic2VydmFibGUnO1xuaW1wb3J0IHsgRXZlbnQgfSBmcm9tICcuLi9FdmVudCc7XG5pbXBvcnQgeyBDb250cm9sUGFuZWwgfSBmcm9tICcuLi9Db250cm9sUGFuZWwnO1xuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2RrOiBNcFNkaztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIEZsb29yKHByb3BzOiBQcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgcmV0dXJuIChcbiAgICA8RnJhZ21lbnQ+XG4gICAgICA8Q29udHJvbFBhbmVsIGhlYWRlcj17YEZsb29yYH0+XG4gICAgICAgIDx0YWJsZT5cbiAgICAgICAgICA8dGJvZHk+XG4gICAgICAgICAgICA8Rmxvb3JHZXREYXRhIHNkaz17cHJvcHMuc2RrfS8+XG4gICAgICAgICAgICA8Um93U3BhY2VyLz5cbiAgICAgICAgICAgIDxGbG9vck1vdmVUbyBzZGs9e3Byb3BzLnNka30vPlxuICAgICAgICAgICAgPFJvd1NwYWNlci8+XG4gICAgICAgICAgICA8Rmxvb3JTaG93QWxsIHNkaz17cHJvcHMuc2RrfS8+XG4gICAgICAgICAgPC90Ym9keT5cbiAgICAgICAgPC90YWJsZT5cbiAgICAgIDwvQ29udHJvbFBhbmVsPlxuICAgICAgPENvbnRyb2xQYW5lbCBoZWFkZXI9e2BGbG9vciAtIEN1cnJlbnRgfT5cbiAgICAgICAgPE9ic2VydmFibGUgb2JzZXJ2YWJsZT17cHJvcHMuc2RrLkZsb29yLmN1cnJlbnR9IG5hbWU9J0Zsb29yLmN1cnJlbnQnLz5cbiAgICAgIDwvQ29udHJvbFBhbmVsPlxuICAgICAgPENvbnRyb2xQYW5lbCBoZWFkZXI9e2BGbG9vciAtIENvbGxlY3Rpb25gfT5cbiAgICAgICAgPE9ic2VydmFibGVDb2xsZWN0aW9uIGNvbGxlY3Rpb249e3Byb3BzLnNkay5GbG9vci5kYXRhfSBuYW1lPSdGbG9vci5kYXRhJy8+XG4gICAgICA8L0NvbnRyb2xQYW5lbD5cbiAgICAgIDxDb250cm9sUGFuZWwgaGVhZGVyPXtgRmxvb3IgLSBFdmVudHNgfT5cbiAgICAgICAgPEV2ZW50IGV2ZW50cz17cHJvcHMuc2RrLkZsb29yLkV2ZW50fSBzZGs9e3Byb3BzLnNka30vPlxuICAgICAgPC9Db250cm9sUGFuZWw+XG4gICAgPC9GcmFnbWVudD5cbiAgKTtcbn1cbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHR5cGUgeyBDU1NQcm9wZXJ0aWVzIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBNcFNkaywgTGFiZWwgfSBmcm9tICdAc2RrL3R5cGVzJztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2RrOiBNcFNkaztcbn1cblxuY29uc3QgdGV4dEFyZWFTdHlsZTogQ1NTUHJvcGVydGllcyA9IHtcbiAgd2lkdGg6ICcxMDAlJyxcbiAgaGVpZ2h0OiA1MCxcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBMYWJlbEdldERhdGEocHJvcHM6IFByb3BzKTogSlNYLkVsZW1lbnQge1xuICBjb25zdCBbbGFiZWxzLCBzZXRMYWJlbHNdID0gdXNlU3RhdGU8TGFiZWwuTGFiZWxbXT4oW10pO1xuICBjb25zdCBbY3VycmVudExhYmVsU2lkLCBzZXRDdXJyZW50TGFiZWxTaWRdID0gdXNlU3RhdGU8c3RyaW5nPignJyk7XG5cbiAgY29uc3QgZ2V0RGF0YSA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBzZGtMYWJlbHMgPSBhd2FpdCBwcm9wcy5zZGsuTGFiZWwuZ2V0RGF0YSgpO1xuICAgIHNldExhYmVscyhzZGtMYWJlbHMpO1xuICAgIHNldEN1cnJlbnRMYWJlbFNpZChzZGtMYWJlbHMubGVuZ3RoID4gMD8gc2RrTGFiZWxzWzBdLnNpZCA6ICcnKTtcbiAgfSwgW3Byb3BzLnNkay5MYWJlbF0pO1xuXG4gIGxldCBsYWJlbE9wdGlvbnM6IEpTWC5FbGVtZW50fEpTWC5FbGVtZW50W10gPSA8b3B0aW9uIHZhbHVlPXswfSBkaXNhYmxlZCA+KG5vIGRhdGEpPC9vcHRpb24+O1xuICBsZXQgc2VyaWFsaXplZCA9ICcnO1xuXG4gIGlmIChsYWJlbHMubGVuZ3RoID4gMCkge1xuICAgIGxhYmVsT3B0aW9ucyA9IGxhYmVscy5tYXAoKGxhYmVsKSA9PiB7XG4gICAgICByZXR1cm4gPG9wdGlvbiBrZXk9e2xhYmVsLnNpZH0gdmFsdWU9e2xhYmVsLnNpZH0+e2xhYmVsLnNpZH08L29wdGlvbj47XG4gICAgfSk7XG4gICAgY29uc3QgaW5kZXggPSBsYWJlbHMuZmluZEluZGV4KChsYWJlbEl0ZW0pID0+IGxhYmVsSXRlbS5zaWQgPT09IGN1cnJlbnRMYWJlbFNpZCApO1xuXG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgY29uc3QgbGFiZWwgPSBsYWJlbHNbaW5kZXhdO1xuICAgICAgc2VyaWFsaXplZCA9IEpTT04uc3RyaW5naWZ5KGxhYmVsLCBudWxsLCAyKTtcbiAgICB9XG4gIH1cblxuICBjb25zdCBvblNlbGVjdGVkID0gdXNlQ2FsbGJhY2soKHZhbDogYW55KSA9PiBzZXRDdXJyZW50TGFiZWxTaWQodmFsLnRhcmdldC52YWx1ZSksIFtdKTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8ZGl2IHN0eWxlPXt7IGRpc3BsYXk6ICdmbGV4JywgZmxleERpcmVjdGlvbjogJ3Jvdyd9fT5cbiAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtnZXREYXRhfT5nZXREYXRhPC9idXR0b24+XG4gICAgICAgIDxkaXYgc3R5bGU9e3sgZmxleEdyb3c6IDEgfX0vPlxuICAgICAgICA8c2VsZWN0IHZhbHVlPXtjdXJyZW50TGFiZWxTaWR9IG9uQ2hhbmdlPXtvblNlbGVjdGVkfT5cbiAgICAgICAgICB7bGFiZWxPcHRpb25zfVxuICAgICAgICA8L3NlbGVjdD5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPHRleHRhcmVhIHN0eWxlPXt0ZXh0QXJlYVN0eWxlfSBkZWZhdWx0VmFsdWU9e3NlcmlhbGl6ZWR9Lz5cbiAgICAgIDwvZGl2PlxuICAgIDwvPlxuICApO1xufVxuIiwiaW1wb3J0IHR5cGUgeyBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuaW1wb3J0IHsgTGFiZWxHZXREYXRhIH0gZnJvbSAnLi9MYWJlbEdldERhdGEnO1xuaW1wb3J0IHsgRXZlbnQgfSBmcm9tICcuLi9FdmVudCc7XG5pbXBvcnQgeyBDb2xsZWN0aW9uSW5zcGVjdG9yIH0gZnJvbSAnLi4vQ29sbGVjdGlvbkluc3BlY3Rvcic7XG5pbXBvcnQgeyBDb250cm9sUGFuZWwgfSBmcm9tICcuLi9Db250cm9sUGFuZWwnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBzZGs6IE1wU2RrO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gTGFiZWwocHJvcHM6IFByb3BzKTogSlNYLkVsZW1lbnQge1xuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8Q29udHJvbFBhbmVsIGhlYWRlcj0nTGFiZWwgLSBEYXRhJz5cbiAgICAgICAgPExhYmVsR2V0RGF0YSBzZGs9e3Byb3BzLnNka30vPlxuICAgICAgPC9Db250cm9sUGFuZWw+XG4gICAgICA8Q29udHJvbFBhbmVsIGhlYWRlcj0nTGFiZWwgLSBFdmVudHMnPlxuICAgICAgICA8RXZlbnQgc2RrPXtwcm9wcy5zZGt9IGV2ZW50cz17cHJvcHMuc2RrLkxhYmVsLkV2ZW50fS8+XG4gICAgICA8L0NvbnRyb2xQYW5lbD5cblxuICAgICAgPENvbGxlY3Rpb25JbnNwZWN0b3JcbiAgICAgICAgY29sbGVjdGlvbj17cHJvcHMuc2RrLkxhYmVsLmRhdGF9XG4gICAgICAgIGxhYmVsPXsnTGFiZWwnfVxuICAgICAgLz5cbiAgICA8Lz5cbiAgKTtcbn1cbiIsImltcG9ydCB7IEZyYWdtZW50LCB1c2VDYWxsYmFjaywgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIGxhYmVsOiBzdHJpbmc7XG4gIGNyZWF0ZUxpbmsoKTogUHJvbWlzZTxzdHJpbmc+O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gTGlua0NyZWF0ZShwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IFtsaW5rLCBzZXRMaW5rXSA9IHVzZVN0YXRlPHN0cmluZz4oJycpO1xuXG4gIGNvbnN0IGNhbGxiYWNrID0gdXNlQ2FsbGJhY2soYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IG5ld0xpbmsgPSBhd2FpdCBwcm9wcy5jcmVhdGVMaW5rKCk7XG4gICAgc2V0TGluayhuZXdMaW5rKTtcbiAgfSwgW3Byb3BzXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8RnJhZ21lbnQ+XG4gICAgICA8YnV0dG9uIG9uQ2xpY2s9e2NhbGxiYWNrfT57cHJvcHMubGFiZWx9PC9idXR0b24+XG4gICAgICA8YnIvPlxuICAgICAgPHRleHRhcmVhIHN0eWxlPXt7aGVpZ2h0OiAnMy41ZW0nfX0gdmFsdWU9e2xpbmt9IHJlYWRPbmx5PXt0cnVlfS8+XG4gICAgPC9GcmFnbWVudD5cbiAgKTtcbn1cbiIsImltcG9ydCB7IExpbmsgfSBmcm9tICdAc2RrL3R5cGVzJztcbmltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBTeW50aGV0aWNFdmVudCB9IGZyb20gJ3JlYWN0JztcblxuaW50ZXJmYWNlIENyZWF0aW9uUHJvcHMge1xuICBzZXRQb2xpY3kocG9saWN5OiBMaW5rLkNyZWF0aW9uUG9saWN5LCBvcHRpb25zPzogUGFydGlhbDxMaW5rLkNyZWF0ZUxpbmtPcHRpb25zPik6IHZvaWQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBDcmVhdGlvblBvbGljeShwcm9wczogQ3JlYXRpb25Qcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgY29uc3Qgb3B0aW9uS2V5cyA9IE9iamVjdC5rZXlzKExpbmsuQ3JlYXRpb25Qb2xpY3kpIGFzIEFycmF5PGtleW9mIHR5cGVvZiBMaW5rLkNyZWF0aW9uUG9saWN5PjtcbiAgY29uc3Qgb3B0aW9ucyA9IG9wdGlvbktleXMubWFwKChrZXksIGkpID0+IDxvcHRpb24ga2V5PXtpfSB2YWx1ZT17TGluay5DcmVhdGlvblBvbGljeVtrZXldfT57a2V5fTwvb3B0aW9uPik7XG5cbiAgY29uc3Qgc2V0UG9saWN5ID0gdXNlQ2FsbGJhY2soKHNlbGVjdG9yOiBTeW50aGV0aWNFdmVudDxIVE1MU2VsZWN0RWxlbWVudD4pID0+IHtcbiAgICBjb25zdCBwb2xpY3kgPSBzZWxlY3Rvci5jdXJyZW50VGFyZ2V0LnZhbHVlIGFzIExpbmsuQ3JlYXRpb25Qb2xpY3k7XG4gICAgaWYgKHBvbGljeSA9PT0gTGluay5DcmVhdGlvblBvbGljeS5NQVRURVJQT1JUKSB7XG4gICAgICBwcm9wcy5zZXRQb2xpY3kocG9saWN5KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcHJvcHMuc2V0UG9saWN5KHBvbGljeSwge1xuICAgICAgICBpbmNsdWRlUGFyYW1zOiBwb2xpY3kgPT09IExpbmsuQ3JlYXRpb25Qb2xpY3kuUkVGRVJSRVIgPyBbJ2FwaUhvc3QnLCAnYXBwbGljYXRpb25LZXknXTogWydhcGlIb3N0J10sXG4gICAgICB9KTtcbiAgICB9XG4gIH0sIFtwcm9wc10pO1xuXG4gIHJldHVybiAoXG4gICAgPHNlbGVjdCBvbkNoYW5nZT17c2V0UG9saWN5fT5cbiAgICAgIHtvcHRpb25zfVxuICAgIDwvc2VsZWN0PlxuICApO1xufVxuXG5pbnRlcmZhY2UgT3BlblByb3BzIHtcbiAgc2V0UG9saWN5KHBvbGljeTogTGluay5PcGVuUG9saWN5LCBvcHRpb25zOiBQYXJ0aWFsPExpbmsuT3BlblBvbGljeU9wdGlvbnM+KTogdm9pZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIE9wZW5pbmdQb2xpY3kocHJvcHM6IE9wZW5Qcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgY29uc3Qgb3B0aW9uS2V5cyA9IE9iamVjdC5rZXlzKExpbmsuT3BlblBvbGljeSkgYXMgQXJyYXk8a2V5b2YgdHlwZW9mIExpbmsuT3BlblBvbGljeT47XG4gIGNvbnN0IG9wdGlvbnMgPSBvcHRpb25LZXlzLm1hcCgoa2V5LCBpKSA9PiA8b3B0aW9uIGtleT17aX0gdmFsdWU9e0xpbmsuT3BlblBvbGljeVtrZXldfT57a2V5fTwvb3B0aW9uPik7XG5cbiAgY29uc3Qgc2V0UG9saWN5ID0gdXNlQ2FsbGJhY2soKHNlbGVjdG9yOiBTeW50aGV0aWNFdmVudDxIVE1MU2VsZWN0RWxlbWVudD4pID0+IHtcbiAgICBjb25zdCBwb2xpY3kgPSBzZWxlY3Rvci5jdXJyZW50VGFyZ2V0LnZhbHVlIGFzIExpbmsuT3BlblBvbGljeTtcbiAgICBwcm9wcy5zZXRQb2xpY3kocG9saWN5LCB7XG4gICAgICB0ZW1wbGF0ZUhyZWY6IHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4gKyB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUgKyAnPyR7YnVuZGxlVmVyc2lvbn0mJHthcGlIb3N0fSYke21kc30mJHthcHBsaWNhdGlvbktleX0nLFxuICAgIH0pO1xuICB9LCBbcHJvcHNdKTtcblxuICByZXR1cm4gKFxuICAgIDxzZWxlY3Qgb25DaGFuZ2U9e3NldFBvbGljeX0+XG4gICAgICB7b3B0aW9uc31cbiAgICA8L3NlbGVjdD5cbiAgKTtcbn1cblxuaW50ZXJmYWNlIEV4dGVybmFsTGlua1BvbGljeVByb3BzIHtcbiAgc2V0UG9saWN5KG9wZW5Jbk5ld1dpbmRvdzogYm9vbGVhbik6IHZvaWQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBFeHRlcm5hbExpbmtpbmdQb2xpY3kocHJvcHM6IEV4dGVybmFsTGlua1BvbGljeVByb3BzKTogSlNYLkVsZW1lbnQge1xuXG4gIGNvbnN0IHNldFBvbGljeSA9IHVzZUNhbGxiYWNrKChzZWxlY3RvcjogU3ludGhldGljRXZlbnQ8SFRNTFNlbGVjdEVsZW1lbnQ+KSA9PiB7XG4gICAgY29uc3QgbmV3V2luZG93UG9saWN5ID0gc2VsZWN0b3IuY3VycmVudFRhcmdldC52YWx1ZSA9PT0gJ25ldyB3aW5kb3cnO1xuICAgIHByb3BzLnNldFBvbGljeShuZXdXaW5kb3dQb2xpY3kpO1xuICB9LCBbcHJvcHNdKTtcblxuICByZXR1cm4gKFxuICAgIDxzZWxlY3Qgb25DaGFuZ2U9e3NldFBvbGljeX0+XG4gICAgICA8b3B0aW9uIHZhbHVlPXsnbmV3IHdpbmRvdyd9Pk5FVyBXSU5ET1c8L29wdGlvbj5cbiAgICAgIDxvcHRpb24gdmFsdWU9eydzYW1lIHdpbmRvdyd9PlNBTUUgV0lORE9XPC9vcHRpb24+XG4gICAgPC9zZWxlY3Q+XG4gICk7XG59XG4iLCJpbXBvcnQgeyBGcmFnbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IExpbmtDcmVhdGUgfSBmcm9tICcuL0xpbmtDcmVhdGUnO1xuaW1wb3J0IHsgT3BlbmluZ1BvbGljeSwgRXh0ZXJuYWxMaW5raW5nUG9saWN5LCBDcmVhdGlvblBvbGljeSB9IGZyb20gJy4vTGlua1BvbGljeSc7XG5pbXBvcnQgdHlwZSB7IE1wU2RrIH0gZnJvbSAnQHNkay90eXBlcyc7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHNkazogTXBTZGs7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBMaW5rKHByb3BzOiBQcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgcmV0dXJuIChcbiAgICA8RnJhZ21lbnQ+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17YGNvbnRyb2xQYW5lbGB9PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YGNvbnRyb2xQYW5lbEhlYWRlcmB9PntgTGluayAtIENyZWF0ZWB9PC9kaXY+XG4gICAgICAgIDxsYWJlbD5Qb2xpY3k6PC9sYWJlbD48Q3JlYXRpb25Qb2xpY3kgc2V0UG9saWN5PXtwcm9wcy5zZGsuTGluay5zZXRTaGFyZUxpbmtQb2xpY3l9Lz5cbiAgICAgICAgPGJyLz5cbiAgICAgICAgPExpbmtDcmVhdGUgbGFiZWw9eydjcmVhdGVMaW5rJ30gY3JlYXRlTGluaz17cHJvcHMuc2RrLkxpbmsuY3JlYXRlTGlua30vPlxuICAgICAgICA8YnIvPlxuICAgICAgICA8TGlua0NyZWF0ZSBsYWJlbD17J2NyZWF0ZURlZXBMaW5rJ30gY3JlYXRlTGluaz17cHJvcHMuc2RrLkxpbmsuY3JlYXRlRGVlcExpbmt9Lz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Bjb250cm9sUGFuZWxgfT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2Bjb250cm9sUGFuZWxIZWFkZXJgfT57YExpbmsgLSBTZXQgUG9saWN5YH08L2Rpdj5cbiAgICAgICAgT3BlbmluZyBwb2xpY2llczpcbiAgICAgICAgPHRhYmxlPlxuICAgICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgPHRkPk1vZGVsOjwvdGQ+PHRkPjxPcGVuaW5nUG9saWN5IHNldFBvbGljeT17cHJvcHMuc2RrLkxpbmsuc2V0TW9kZWxMaW5rUG9saWN5fS8+PC90ZD5cbiAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgIDx0ZD5OYXZpZ2F0aW9uOjwvdGQ+PHRkPjxPcGVuaW5nUG9saWN5IHNldFBvbGljeT17cHJvcHMuc2RrLkxpbmsuc2V0TmF2aWdhdGlvbkxpbmtQb2xpY3l9Lz48L3RkPlxuICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgPHRkPlNhbWUgT3JpZ2luOjwvdGQ+PHRkPjxPcGVuaW5nUG9saWN5IHNldFBvbGljeT17cHJvcHMuc2RrLkxpbmsuc2V0U2FtZU9yaWdpbkxpbmtQb2xpY3l9Lz48L3RkPlxuICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgPHRkPkV4dGVybmFsOjwvdGQ+PHRkPjxFeHRlcm5hbExpbmtpbmdQb2xpY3kgc2V0UG9saWN5PXtwcm9wcy5zZGsuTGluay5zZXRFeHRlcm5hbExpbmtQb2xpY3l9Lz48L3RkPlxuICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICA8L3Rib2R5PlxuICAgICAgICA8L3RhYmxlPlxuICAgICAgPC9kaXY+XG4gICAgPC9GcmFnbWVudD5cbiAgKTtcbn1cbiIsImltcG9ydCB0eXBlIHsgTXBTZGsgfSBmcm9tICdAc2RrL3R5cGVzJztcbmltcG9ydCB7IEZyYWdtZW50LCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2RrOiBNcFNkaztcbiAgc2VsZWN0ZWRNYXR0ZXJ0YWc6IHN0cmluZztcbiAgc2VsZWN0ZWRBc3NldDogc3RyaW5nO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gRWRpdEljb24ocHJvcHM6IFByb3BzKTogSlNYLkVsZW1lbnQge1xuXG4gIGNvbnN0IGVkaXRJY29uID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHByb3BzLnNkay5NYXR0ZXJ0YWcuZWRpdEljb24ocHJvcHMuc2VsZWN0ZWRNYXR0ZXJ0YWcsIHByb3BzLnNlbGVjdGVkQXNzZXQpO1xuICB9LCBbcHJvcHMuc2RrLk1hdHRlcnRhZywgcHJvcHMuc2VsZWN0ZWRBc3NldCwgcHJvcHMuc2VsZWN0ZWRNYXR0ZXJ0YWddKTtcblxuICBjb25zdCByZXNldEljb24gPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgcHJvcHMuc2RrLk1hdHRlcnRhZy5yZXNldEljb24ocHJvcHMuc2VsZWN0ZWRNYXR0ZXJ0YWcpO1xuICB9LCBbcHJvcHMuc2RrLk1hdHRlcnRhZywgcHJvcHMuc2VsZWN0ZWRNYXR0ZXJ0YWddKTtcblxuXG4gIHJldHVybiAoXG4gICAgPEZyYWdtZW50PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtlZGl0SWNvbn0+RWRpdCBJY29uPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxidXR0b24gb25DbGljaz17cmVzZXRJY29ufT5SZXNldCBJY29uPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICA8L0ZyYWdtZW50PlxuICApO1xufVxuIiwiaW1wb3J0IHR5cGUgeyBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuaW1wb3J0IHsgRnJhZ21lbnQsIHVzZUNhbGxiYWNrLCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHNkazogTXBTZGs7XG4gIHNlbGVjdGVkTWF0dGVydGFnOiBzdHJpbmc7XG4gIHNlbGVjdGVkQXNzZXQ6IHN0cmluZztcbiAgYWRkQXNzZXQoaWQ6IHN0cmluZywgc3JjOiBzdHJpbmcpOiB2b2lkO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gUmVnaXN0ZXJJY29uKHByb3BzOiBQcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgY29uc3QgaWRJbnB1dCA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcbiAgY29uc3Qgc3JjSW5wdXQgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG5cbiAgY29uc3QgcmVnaXN0ZXJJY29uID0gdXNlQ2FsbGJhY2soYXN5bmMgKCkgPT4ge1xuICAgIGlmIChpZElucHV0LmN1cnJlbnQgJiYgc3JjSW5wdXQuY3VycmVudCkge1xuICAgICAgY29uc3QgaWQgPSBpZElucHV0LmN1cnJlbnQudmFsdWU7XG4gICAgICBjb25zdCBzcmMgPSBzcmNJbnB1dC5jdXJyZW50LnZhbHVlO1xuICAgICAgYXdhaXQgcHJvcHMuc2RrLk1hdHRlcnRhZy5yZWdpc3Rlckljb24oaWQsIHNyYyk7XG4gICAgICBwcm9wcy5hZGRBc3NldChpZCwgc3JjKTtcbiAgICB9XG4gIH0sIFtwcm9wc10pO1xuXG4gIHJldHVybiAoXG4gICAgPEZyYWdtZW50PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGRpdiBzdHlsZT17eyBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJywgd2lkdGg6ICcxNSUnIH19PlxuICAgICAgICAgIDxsYWJlbCBodG1sRm9yPSdtYXR0ZXJ0YWctaWNvbi1pZCc+aWQ6IDwvbGFiZWw+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IHN0eWxlPXt7IGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLCB3aWR0aDogJzg1JScgIH19PlxuICAgICAgICAgIDxpbnB1dCByZWY9e2lkSW5wdXR9IGlkPSdtYXR0ZXJ0YWctaWNvbi1pZCcgdHlwZT0nc3RyaW5nJy8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2PlxuICAgICAgICA8ZGl2IHN0eWxlPXt7IGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLCB3aWR0aDogJzE1JScgfX0+XG4gICAgICAgICAgPGxhYmVsIGh0bWxGb3I9J21hdHRlcnRhZy1pY29uLXNyYyc+c3JjOiA8L2xhYmVsPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBzdHlsZT17eyBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJywgd2lkdGg6ICc4NSUnICB9fT5cbiAgICAgICAgICA8aW5wdXQgcmVmPXtzcmNJbnB1dH0gaWQ9J21hdHRlcnRhZy1pY29uLXNyYycgdHlwZT0nc3RyaW5nJy8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2PlxuICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e3JlZ2lzdGVySWNvbn0+UmVnaXN0ZXI8L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvRnJhZ21lbnQ+XG4gICk7XG59XG4iLCJpbXBvcnQgeyBGcmFnbWVudCwgdXNlQ2FsbGJhY2ssIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuaW1wb3J0IHsgQ29udHJvbFBhbmVsIH0gZnJvbSAnLi4vQ29udHJvbFBhbmVsJztcbmltcG9ydCB7IE9ic2VydmFibGVDb2xsZWN0aW9uIH0gZnJvbSAnLi4vT2JzZXJ2YWJsZUNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgQ29sbGVjdGlvbkluc3BlY3RvciB9IGZyb20gJy4uL0NvbGxlY3Rpb25JbnNwZWN0b3InO1xuaW1wb3J0IHsgRWRpdEljb24gfSBmcm9tICcuL0VkaXRJY29uJztcbmltcG9ydCB7IFJlZ2lzdGVySWNvbiB9IGZyb20gJy4vUmVnaXN0ZXJJY29uJztcbmltcG9ydCB7IEV2ZW50IH0gZnJvbSAnLi4vRXZlbnQnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBzZGs6IE1wU2RrO1xuICBzZWxlY3RlZEFzc2V0OiBzdHJpbmc7XG4gIGFkZEFzc2V0KGlkOiBzdHJpbmcsIHNyYzogc3RyaW5nKTogdm9pZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIE1hdHRlcnRhZyhwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IFtzZWxlY3RlZE1hdHRlcnRhZywgc2VsZWN0TWF0dGVydGFnXSA9IHVzZVN0YXRlKCcnKTtcblxuICBjb25zdCBtYXR0ZXJ0YWdPcHRpb25MYWJlbCA9IHVzZUNhbGxiYWNrKGZ1bmN0aW9uIChpdGVtOiBNcFNkay5NYXR0ZXJ0YWcuT2JzZXJ2YWJsZU1hdHRlcnRhZ0RhdGEpOiBzdHJpbmcge1xuICAgIHJldHVybiBpdGVtLmxhYmVsIHx8ICcobm8gbGFiZWwpJztcbiAgfSwgW10pO1xuXG4gIGNvbnN0IG1hdHRlcnRhZ09wdGlvblNvcnQgPSB1c2VDYWxsYmFjayhmdW5jdGlvbiAoaXRlbTE6IE1wU2RrLk1hdHRlcnRhZy5PYnNlcnZhYmxlTWF0dGVydGFnRGF0YSwgaXRlbTI6IE1wU2RrLk1hdHRlcnRhZy5PYnNlcnZhYmxlTWF0dGVydGFnRGF0YSk6IG51bWJlciB7XG4gICAgaWYgKGl0ZW0xLmxhYmVsIDwgaXRlbTIubGFiZWwpIHtcbiAgICAgIHJldHVybiAtMTtcbiAgICB9XG4gICAgaWYgKGl0ZW0xLmxhYmVsID4gaXRlbTIubGFiZWwpIHtcbiAgICAgIHJldHVybiAxO1xuICAgIH1cbiAgICByZXR1cm4gMDtcbiAgfSwgW10pO1xuXG5cbiAgY29uc3QgeyBzZGsgfSA9IHByb3BzO1xuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDxDb250cm9sUGFuZWwgaGVhZGVyPXsnTWF0dGVydGFnIC0gQ29sbGVjdGlvbid9PlxuICAgICAgICA8T2JzZXJ2YWJsZUNvbGxlY3Rpb25cbiAgICAgICAgICBjb2xsZWN0aW9uPXtzZGsuTWF0dGVydGFnLmRhdGF9XG4gICAgICAgICAgbmFtZT17J01hdHRlcnRhZ3MnfVxuICAgICAgICAvPlxuICAgICAgPC9Db250cm9sUGFuZWw+XG5cbiAgICAgIDxDb2xsZWN0aW9uSW5zcGVjdG9yXG4gICAgICAgIGxhYmVsPXsnTWF0dGVydGFnJ31cbiAgICAgICAgY29sbGVjdGlvbj17c2RrLk1hdHRlcnRhZy5kYXRhfVxuICAgICAgICBvbkNoYW5nZWQ9e3NlbGVjdE1hdHRlcnRhZ31cbiAgICAgICAgb3B0aW9uTGFiZWw9e21hdHRlcnRhZ09wdGlvbkxhYmVsfVxuICAgICAgICBzb3J0PXttYXR0ZXJ0YWdPcHRpb25Tb3J0fVxuICAgICAgLz5cblxuICAgICAgPENvbnRyb2xQYW5lbCBoZWFkZXI9J01hdHRlcnRhZyAtIEV2ZW50cyc+XG4gICAgICAgIDxFdmVudCBzZGs9e3Nka30gZXZlbnRzPXtwcm9wcy5zZGsuTWF0dGVydGFnLkV2ZW50fSAvPlxuICAgICAgPC9Db250cm9sUGFuZWw+XG5cblxuICAgICAgPENvbnRyb2xQYW5lbCBoZWFkZXI9eydNYXR0ZXJ0YWcgLSBFZGl0IEljb24nfT5cbiAgICAgICAgPEVkaXRJY29uXG4gICAgICAgICAgc2RrPXtzZGt9XG4gICAgICAgICAgc2VsZWN0ZWRNYXR0ZXJ0YWc9e3NlbGVjdGVkTWF0dGVydGFnfVxuICAgICAgICAgIHNlbGVjdGVkQXNzZXQ9e3Byb3BzLnNlbGVjdGVkQXNzZXR9XG4gICAgICAgIC8+XG4gICAgICA8L0NvbnRyb2xQYW5lbD5cblxuICAgICAgPENvbnRyb2xQYW5lbCBoZWFkZXI9eydNYXR0ZXJ0YWcgLSBSZWdpc3RlciBJY29uJ30+XG4gICAgICAgIDxSZWdpc3Rlckljb25cbiAgICAgICAgICBzZGs9e3Nka31cbiAgICAgICAgICBzZWxlY3RlZE1hdHRlcnRhZz17c2VsZWN0ZWRNYXR0ZXJ0YWd9XG4gICAgICAgICAgc2VsZWN0ZWRBc3NldD17cHJvcHMuc2VsZWN0ZWRBc3NldH1cbiAgICAgICAgICBhZGRBc3NldD17cHJvcHMuYWRkQXNzZXR9XG4gICAgICAgIC8+XG4gICAgICA8L0NvbnRyb2xQYW5lbD5cblxuICAgIDwvRnJhZ21lbnQ+XG4gICk7XG59XG4iLCJpbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdHlwZSB7IENTU1Byb3BlcnRpZXMgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdHlwZSB7IE1wU2RrIH0gZnJvbSAnQHNkay90eXBlcyc7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHNkazogTXBTZGs7XG59XG5cbmNvbnN0IHRleHRBcmVhU3R5bGU6IENTU1Byb3BlcnRpZXMgPSB7XG4gIGhlaWdodDogNTAsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gTWVhc3VyZW1lbnRzR2V0RGF0YShwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IFttZXNzYWdlLCBzZXRNZXNzYWdlXSA9IHVzZVN0YXRlPHN0cmluZz4oJycpO1xuXG4gIGNvbnN0IGNhbGxiYWNrID0gdXNlQ2FsbGJhY2soYXN5bmMgKCkgPT4ge1xuICAgIGxldCBtZWFzdXJlbWVudHNEYXRhOiBhbnk7XG4gICAgdHJ5IHtcbiAgICAgIG1lYXN1cmVtZW50c0RhdGEgPSBhd2FpdCBwcm9wcy5zZGsuTWVhc3VyZW1lbnRzLmdldERhdGEoKTtcblxuICAgICAgc2V0TWVzc2FnZShKU09OLnN0cmluZ2lmeShtZWFzdXJlbWVudHNEYXRhKSk7XG4gICAgfVxuICAgIGNhdGNoKGUpIHtcbiAgICAgIHNldE1lc3NhZ2UoYGVycm9yICR7ZX1gKTtcbiAgICB9XG5cbiAgfSwgW3Byb3BzLnNkay5NZWFzdXJlbWVudHNdKTtcblxuICByZXR1cm4gKFxuICAgIDx0cj5cbiAgICAgIDx0ZCBjb2xTcGFuPXsxfT5cbiAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtjYWxsYmFja30+Z2V0RGF0YTwvYnV0dG9uPlxuICAgICAgPC90ZD5cbiAgICAgIDx0ZCBjb2xTcGFuPXsyfT5cbiAgICAgICAgPHRleHRhcmVhIHJvd3M9ezN9IHN0eWxlPXt0ZXh0QXJlYVN0eWxlfSB2YWx1ZT17bWVzc2FnZX0gcmVhZE9ubHk9e3RydWV9Lz5cbiAgICAgIDwvdGQ+XG4gICAgPC90cj5cbiAgKTtcbn1cbiIsImltcG9ydCB7IHR5cGUgTXBTZGsgfSBmcm9tICdAc2RrL3R5cGVzJztcbmltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuXG50eXBlIFByb3BzID0ge1xuICBzZGs6IE1wU2RrXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gTWVhc3VyZW1lbnRNb2RlVG9nZ2xlKHtzZGt9OiBQcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgY29uc3QgW2FjdGl2ZSwgc2V0QWN0aXZlXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICB1c2VFZmZlY3QoKCk9PiB7XG4gICAgY29uc3Qgc3ViID0gc2RrLk1lYXN1cmVtZW50cy5tb2RlLnN1YnNjcmliZSgobW9kZSkgPT4gc2V0QWN0aXZlKG1vZGUuYWN0aXZlKSk7XG4gICAgcmV0dXJuICgpID0+IHN1Yi5jYW5jZWwoKTtcbiAgfSwgW3Nkay5NZWFzdXJlbWVudHMubW9kZV0pO1xuXG4gIGNvbnN0IHRvZ2dsZU1vZGUgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgc2RrLk1lYXN1cmVtZW50cy50b2dnbGVNb2RlKCFhY3RpdmUpO1xuICB9LCBbYWN0aXZlLCBzZGsuTWVhc3VyZW1lbnRzXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgIG9uQ2xpY2s9e3RvZ2dsZU1vZGV9XG4gICAgICAgID5Ub2dnbGU8L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgQWN0aXZlOiA8c3Bhbj57U3RyaW5nKGFjdGl2ZSl9PC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgPC8+XG4gICk7XG59XG4iLCJpbXBvcnQgeyBNZWFzdXJlbWVudHNHZXREYXRhIH0gZnJvbSAnLi9NZWFzdXJlbWVudHNHZXREYXRhJztcbmltcG9ydCB0eXBlIHsgTXBTZGsgfSBmcm9tICdAc2RrL3R5cGVzJztcbmltcG9ydCB7IENvbnRyb2xQYW5lbCB9IGZyb20gJy4uL0NvbnRyb2xQYW5lbCc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAnLi4vT2JzZXJ2YWJsZSc7XG5pbXBvcnQgeyBDb2xsZWN0aW9uSW5zcGVjdG9yIH0gZnJvbSAnLi4vQ29sbGVjdGlvbkluc3BlY3Rvcic7XG5cbmltcG9ydCB7IE1lYXN1cmVtZW50TW9kZVRvZ2dsZSB9IGZyb20gJy4vVG9nZ2xlJztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2RrOiBNcFNkaztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIE1lYXN1cmVtZW50cyh7c2RrfTogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxDb2xsZWN0aW9uSW5zcGVjdG9yXG4gICAgICAgIGNvbGxlY3Rpb249e3Nkay5NZWFzdXJlbWVudHMuZGF0YX1cbiAgICAgICAgbGFiZWw9eydNZWFzdXJlbWVudHMnfVxuICAgICAgLz5cbiAgICAgIDxDb250cm9sUGFuZWwgaGVhZGVyPXsnTWVhc3VyZW1lbnRzIC0gTW9kZSd9PlxuICAgICAgICA8T2JzZXJ2YWJsZVxuICAgICAgICAgIG5hbWU9eydtb2RlJ31cbiAgICAgICAgICBvYnNlcnZhYmxlPXtzZGsuTWVhc3VyZW1lbnRzLm1vZGV9XG4gICAgICAgIC8+XG4gICAgICA8L0NvbnRyb2xQYW5lbD5cbiAgICAgIDxDb250cm9sUGFuZWwgaGVhZGVyPXsnTWVhc3VyZW1lbnRzIC0gVG9nZ2xlJ30+XG4gICAgICAgIDxNZWFzdXJlbWVudE1vZGVUb2dnbGVcbiAgICAgICAgICBzZGs9e3Nka31cbiAgICAgICAgLz5cbiAgICAgIDwvQ29udHJvbFBhbmVsPlxuICAgICAgPENvbnRyb2xQYW5lbCBoZWFkZXI9eydNZWFzdXJlbWVudHMgLSBHZXREYXRhJ30+XG4gICAgICAgIDx0YWJsZT5cbiAgICAgICAgICA8dGJvZHk+XG4gICAgICAgICAgICA8TWVhc3VyZW1lbnRzR2V0RGF0YSBzZGs9e3Nka30vPlxuICAgICAgICAgIDwvdGJvZHk+XG4gICAgICAgIDwvdGFibGU+XG4gICAgICA8L0NvbnRyb2xQYW5lbD5cbiAgICA8Lz5cbiAgKTtcbn1cbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB0eXBlIHsgQ1NTUHJvcGVydGllcyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB0eXBlIHsgTXBTZGsgfSBmcm9tICdAc2RrL3R5cGVzJztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2RrOiBNcFNkaztcbn1cblxuY29uc3QgdGV4dEFyZWFTdHlsZTogQ1NTUHJvcGVydGllcyA9IHtcbiAgaGVpZ2h0OiA1MCxcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBNb2RlbEdldERhdGEocHJvcHM6IFByb3BzKTogSlNYLkVsZW1lbnQge1xuICBjb25zdCBbbWVzc2FnZSwgc2V0TWVzc2FnZV0gPSB1c2VTdGF0ZTxzdHJpbmc+KCcnKTtcblxuICBjb25zdCBjYWxsYmFjayA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICBsZXQgbW9kZWxEYXRhOiBhbnk7XG4gICAgdHJ5IHtcbiAgICAgIG1vZGVsRGF0YSA9IGF3YWl0IHByb3BzLnNkay5Nb2RlbC5nZXREYXRhKCk7XG5cbiAgICAgIHNldE1lc3NhZ2UoSlNPTi5zdHJpbmdpZnkobW9kZWxEYXRhKSk7XG4gICAgfVxuICAgIGNhdGNoKGUpIHtcbiAgICAgIHNldE1lc3NhZ2UoYGVycm9yICR7ZX1gKTtcbiAgICB9XG5cbiAgfSwgW3Byb3BzLnNkay5Nb2RlbF0pO1xuXG4gIHJldHVybiAoXG4gICAgPHRyPlxuICAgICAgPHRkIGNvbFNwYW49ezF9PlxuICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e2NhbGxiYWNrfT5nZXREYXRhPC9idXR0b24+XG4gICAgICA8L3RkPlxuICAgICAgPHRkIGNvbFNwYW49ezN9PlxuICAgICAgICA8dGV4dGFyZWEgcm93cz17M30gc3R5bGU9e3RleHRBcmVhU3R5bGV9IHZhbHVlPXttZXNzYWdlfSByZWFkT25seT17dHJ1ZX0vPlxuICAgICAgPC90ZD5cbiAgICA8L3RyPlxuICApO1xufVxuIiwiaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBDU1NQcm9wZXJ0aWVzIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBzZGs6IE1wU2RrO1xufVxuXG5jb25zdCB0ZXh0QXJlYVN0eWxlOiBDU1NQcm9wZXJ0aWVzID0ge1xuICBoZWlnaHQ6IDUwLFxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIE1vZGVsR2V0RGV0YWlscyhwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IFttZXNzYWdlLCBzZXRNZXNzYWdlXSA9IHVzZVN0YXRlPHN0cmluZz4oJycpO1xuXG4gIGNvbnN0IGNhbGxiYWNrID0gdXNlQ2FsbGJhY2soYXN5bmMgKCkgPT4ge1xuICAgIGxldCBtb2RlbERldGFpbHM6IGFueTtcbiAgICB0cnkge1xuICAgICAgbW9kZWxEZXRhaWxzID0gYXdhaXQgcHJvcHMuc2RrLk1vZGVsLmdldERldGFpbHMoKTtcblxuICAgICAgc2V0TWVzc2FnZShKU09OLnN0cmluZ2lmeShtb2RlbERldGFpbHMpKTtcbiAgICB9XG4gICAgY2F0Y2goZSkge1xuICAgICAgc2V0TWVzc2FnZShgZXJyb3IgJHtlfWApO1xuICAgIH1cblxuICB9LCBbcHJvcHMuc2RrLk1vZGVsXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8dHI+XG4gICAgICA8dGQgY29sU3Bhbj17MX0+XG4gICAgICAgIDxidXR0b24gb25DbGljaz17Y2FsbGJhY2t9PmdldERldGFpbHM8L2J1dHRvbj5cbiAgICAgIDwvdGQ+XG4gICAgICA8dGQgY29sU3Bhbj17M30+XG4gICAgICAgIDx0ZXh0YXJlYSByb3dzPXszfSBzdHlsZT17dGV4dEFyZWFTdHlsZX0gdmFsdWU9e21lc3NhZ2V9IHJlYWRPbmx5PXt0cnVlfS8+XG4gICAgICA8L3RkPlxuICAgIDwvdHI+XG4gICk7XG59XG4iLCJpbXBvcnQgeyBNb2RlbEdldERhdGEgfSBmcm9tICcuL01vZGVsR2V0RGF0YSc7XG5pbXBvcnQgeyBNb2RlbEdldERldGFpbHMgfSBmcm9tICcuL01vZGVsR2V0RGV0YWlscyc7XG5pbXBvcnQgeyBFdmVudCB9IGZyb20gJy4uL0V2ZW50JztcbmltcG9ydCB0eXBlIHsgTXBTZGsgfSBmcm9tICdAc2RrL3R5cGVzJztcbmltcG9ydCB7IENvbnRyb2xQYW5lbCB9IGZyb20gJy4uL0NvbnRyb2xQYW5lbCc7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHNkazogTXBTZGs7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBNb2RlbChwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtgY29udHJvbFBhbmVsYH0+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgY29udHJvbFBhbmVsSGVhZGVyYH0+e2BNb2RlbGB9PC9kaXY+XG4gICAgICAgIDx0YWJsZT5cbiAgICAgICAgICA8dGJvZHk+XG4gICAgICAgICAgICA8TW9kZWxHZXREYXRhIHNkaz17cHJvcHMuc2RrfS8+XG4gICAgICAgICAgICA8TW9kZWxHZXREZXRhaWxzIHNkaz17cHJvcHMuc2RrfS8+XG4gICAgICAgICAgPC90Ym9keT5cbiAgICAgICAgPC90YWJsZT5cbiAgICAgIDwvZGl2PlxuICAgICAgPENvbnRyb2xQYW5lbCBoZWFkZXI9J01vZGVsIC0gRXZlbnRzJz5cbiAgICAgICAgPEV2ZW50IHNkaz17cHJvcHMuc2RrfSBldmVudHM9e3Byb3BzLnNkay5Nb2RlbC5FdmVudH0vPlxuICAgICAgPC9Db250cm9sUGFuZWw+XG4gICAgPC8+XG4gICk7XG59XG4iLCJpbXBvcnQgeyBGcmFnbWVudCwgdXNlQ2FsbGJhY2ssIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdHlwZSB7IEludGVybmFsTXBTZGsgfSBmcm9tICdAc2RrL3R5cGVzJztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2RrOiBJbnRlcm5hbE1wU2RrLk1wU2RrO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gUGx1Z2luTG9hZChwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IFttZXNzYWdlLCBzZXRNZXNzYWdlXSA9IHVzZVN0YXRlPHN0cmluZz4oJycpO1xuICBjb25zdCB1cmxJbnB1dEVsZW1lbnQgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG4gIGNvbnN0IGFwcEtleUlucHV0RWxlbWVudCA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcbiAgY29uc3QgcGx1Z2luSWRJbnB1dEVsZW1lbnQgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG5cbiAgY29uc3QgbG9hZFBsdWdpbiA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICBpZiAoIXVybElucHV0RWxlbWVudCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IHVybCA9IHVybElucHV0RWxlbWVudC5jdXJyZW50Py52YWx1ZTtcbiAgICBjb25zdCBhcHBsaWNhdGlvbktleSA9IGFwcEtleUlucHV0RWxlbWVudC5jdXJyZW50Py52YWx1ZTtcbiAgICBjb25zdCBwbHVnaW5JZCA9IHBsdWdpbklkSW5wdXRFbGVtZW50LmN1cnJlbnQ/LnZhbHVlO1xuXG4gICAgaWYgKHVybCA9PT0gdW5kZWZpbmVkIHx8IGFwcGxpY2F0aW9uS2V5ID09PSB1bmRlZmluZWQgfHwgcGx1Z2luSWQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBwbHVnaW4gPSBwcm9wcy5zZGsuUGx1Z2luO1xuXG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IHBsdWdpbi5sb2FkKHtcbiAgICAgICAgYXBwbGljYXRpb25LZXksXG4gICAgICAgIGlkOiBwbHVnaW5JZCxcbiAgICAgIH0sIG5ldyBVUkwodXJsLCB3aW5kb3cubG9jYXRpb24ub3JpZ2luKS5ocmVmKTtcbiAgICB9XG4gICAgY2F0Y2goZSkge1xuICAgICAgc2V0TWVzc2FnZShgZXJyb3I6ICR7ZX1gKTtcbiAgICB9XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHNcbiAgfSwgW10pO1xuXG4gIGNvbnN0IHVubG9hZFBsdWdpbiA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICBpZiAoIXVybElucHV0RWxlbWVudCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGFwcGxpY2F0aW9uS2V5ID0gYXBwS2V5SW5wdXRFbGVtZW50LmN1cnJlbnQ/LnZhbHVlO1xuICAgIGNvbnN0IHBsdWdpbklkID0gcGx1Z2luSWRJbnB1dEVsZW1lbnQuY3VycmVudD8udmFsdWU7XG5cbiAgICBpZiAoYXBwbGljYXRpb25LZXkgPT09IHVuZGVmaW5lZCB8fCBwbHVnaW5JZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgcGx1Z2luID0gcHJvcHMuc2RrLlBsdWdpbjtcblxuICAgIHRyeSB7XG4gICAgICBhd2FpdCBwbHVnaW4udW5sb2FkKHtcbiAgICAgICAgYXBwbGljYXRpb25LZXksXG4gICAgICAgIGlkOiBwbHVnaW5JZCxcbiAgICAgIH0pO1xuICAgICAgLy8gc2V0TWVzc2FnZShgdXJsIHNldG8gOiR7c3dlZXBJZH0gZGlzYWJsZWRgKTtcbiAgICB9XG4gICAgY2F0Y2goZSkge1xuICAgICAgc2V0TWVzc2FnZShgZXJyb3I6ICR7ZX1gKTtcbiAgICB9XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHNcbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPEZyYWdtZW50PlxuICAgICAgPHRyPlxuICAgICAgICA8dGQ+XG4gICAgICAgICAgPHNwYW4+QXBwIEtleTwvc3Bhbj5cbiAgICAgICAgPC90ZD5cbiAgICAgICAgPHRkPlxuICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIHBsYWNlaG9sZGVyPSdhcHBsaWNhdGlvbiBrZXknIGRlZmF1bHRWYWx1ZT0ncWEzMTRhcGYyOGQ0dW03Nm40NWN6OTFtZCcgcmVmPXthcHBLZXlJbnB1dEVsZW1lbnR9Lz5cbiAgICAgICAgPC90ZD5cbiAgICAgIDwvdHI+XG4gICAgICA8dHI+XG4gICAgICAgIDx0ZD5cbiAgICAgICAgICA8c3Bhbj5QbHVnaW4gSWQ8L3NwYW4+XG4gICAgICAgIDwvdGQ+XG4gICAgICAgIDx0ZD5cbiAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBwbGFjZWhvbGRlcj0ncGx1Z2luIGlkJyByZWY9e3BsdWdpbklkSW5wdXRFbGVtZW50fS8+XG4gICAgICAgIDwvdGQ+XG4gICAgICA8L3RyPlxuICAgICAgPHRyPlxuICAgICAgICA8dGQ+XG4gICAgICAgICAgPHNwYW4+VXJsPC9zcGFuPlxuICAgICAgICA8L3RkPlxuICAgICAgICA8dGQ+XG4gICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgaWQ9J3NjZW5lLXNvdXJjZS11cmwnIHBsYWNlaG9sZGVyPSdzb3VyY2UgdXJsJyByZWY9e3VybElucHV0RWxlbWVudH0vPlxuICAgICAgICA8L3RkPlxuICAgICAgPC90cj5cbiAgICAgIDx0cj5cbiAgICAgICAgPHRkPlxuICAgICAgICAgIDxidXR0b24gb25DbGljaz17bG9hZFBsdWdpbn0+TG9hZDwvYnV0dG9uPlxuICAgICAgICA8L3RkPlxuICAgICAgPC90cj5cbiAgICAgIDx0cj5cbiAgICAgICAgPHRkPlxuICAgICAgICAgIDxidXR0b24gb25DbGljaz17dW5sb2FkUGx1Z2lufT5VbmxvYWQ8L2J1dHRvbj5cbiAgICAgICAgPC90ZD5cbiAgICAgIDwvdHI+XG4gICAgICA8dHI+XG4gICAgICAgIDx0ZCBjb2xTcGFuPXszfT5cbiAgICAgICAgICA8ZGl2IGlkPSdzY2VuZS1zZXRwbHVnaW4tbWVzc2FnZSc+e21lc3NhZ2V9PC9kaXY+XG4gICAgICAgIDwvdGQ+XG4gICAgICA8L3RyPlxuICAgIDwvRnJhZ21lbnQ+XG4gICk7XG59XG4iLCJpbXBvcnQgeyBGcmFnbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB0eXBlIHsgSW50ZXJuYWxNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuXG5pbXBvcnQgeyBQbHVnaW5Mb2FkIH0gZnJvbSAnLi9QbHVnaW5Mb2FkJztcbmltcG9ydCB7IE9ic2VydmFibGVDb2xsZWN0aW9uIH0gZnJvbSAnLi9PYnNlcnZhYmxlQ29sbGVjdGlvbic7XG5pbXBvcnQgeyBDb250cm9sUGFuZWwgfSBmcm9tICcuL0NvbnRyb2xQYW5lbCc7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHNkazogSW50ZXJuYWxNcFNkay5NcFNkaztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFBsdWdpbihwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IHBsdWdpbiA9IHByb3BzLnNkay5QbHVnaW47XG4gIHJldHVybiAoXG4gICAgPEZyYWdtZW50PlxuICAgICAgPENvbnRyb2xQYW5lbCBoZWFkZXI9e2BQbHVnaW5gfT5cbiAgICAgICAgPHRhYmxlPlxuICAgICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAgIDxQbHVnaW5Mb2FkIHNkaz17cHJvcHMuc2RrfS8+XG4gICAgICAgICAgPC90Ym9keT5cbiAgICAgICAgPC90YWJsZT5cbiAgICAgIDwvQ29udHJvbFBhbmVsPlxuICAgICAgPENvbnRyb2xQYW5lbCBoZWFkZXI9e2BQbHVnaW4gLSBDb2xsZWN0aW9uYH0+XG4gICAgICAgIDxPYnNlcnZhYmxlQ29sbGVjdGlvbiBjb2xsZWN0aW9uPXtwbHVnaW4uZGF0YX0gbmFtZT0nUGx1Z2luLmRhdGEnIC8+XG4gICAgICA8L0NvbnRyb2xQYW5lbD5cbiAgICA8L0ZyYWdtZW50PlxuICApO1xufVxuIiwiaW1wb3J0IHR5cGUgeyBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuaW1wb3J0IHsgRnJhZ21lbnQsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuXG50eXBlIFByb3BzID0ge1xuICBzZGs6IE1wU2RrO1xuICBzZWxlY3RlZEFzc2V0OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBFZGl0VGV4dHVyZShwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IGVkaXRJY29uID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHByb3BzLnNkay5Qb2ludGVyLmVkaXRUZXh0dXJlKHByb3BzLnNlbGVjdGVkQXNzZXQpO1xuICB9LCBbcHJvcHMuc2RrLlBvaW50ZXIsIHByb3BzLnNlbGVjdGVkQXNzZXRdKTtcblxuICBjb25zdCByZXNldEljb24gPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgcHJvcHMuc2RrLlBvaW50ZXIucmVzZXRUZXh0dXJlKCk7XG4gIH0sIFtwcm9wcy5zZGsuUG9pbnRlcl0pO1xuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIFNlbGVjdGVkQXNzZXQ6IHtwcm9wcy5zZWxlY3RlZEFzc2V0fVxuICAgICAgPGRpdj5cbiAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtlZGl0SWNvbn0+RWRpdCBUZXh0dXJlPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxidXR0b24gb25DbGljaz17cmVzZXRJY29ufT5SZXNldCBUZXh0dXJlPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICA8L0ZyYWdtZW50PlxuICApO1xufVxuIiwiaW1wb3J0IHR5cGUgeyBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuaW1wb3J0IHsgRnJhZ21lbnQsIHVzZUNhbGxiYWNrLCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIHNkazogTXBTZGs7XG4gIGFkZEFzc2V0KGlkOiBzdHJpbmcsIHNyYzogc3RyaW5nKTogdm9pZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFJlZ2lzdGVyVGV4dHVyZShwcm9wczogT21pdDxQcm9wcywgJ3NlbGVjdGVkQXNzZXQnPik6IEpTWC5FbGVtZW50IHtcbiAgY29uc3QgaWRJbnB1dCA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcbiAgY29uc3Qgc3JjSW5wdXQgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG5cbiAgY29uc3QgcmVnaXN0ZXJUZXh0dXJlID0gdXNlQ2FsbGJhY2soYXN5bmMgKCkgPT4ge1xuICAgIGlmIChpZElucHV0LmN1cnJlbnQgJiYgc3JjSW5wdXQuY3VycmVudCkge1xuICAgICAgY29uc3QgaWQgPSBpZElucHV0LmN1cnJlbnQudmFsdWU7XG4gICAgICBjb25zdCBzcmMgPSBzcmNJbnB1dC5jdXJyZW50LnZhbHVlO1xuICAgICAgYXdhaXQgcHJvcHMuc2RrLlBvaW50ZXIucmVnaXN0ZXJUZXh0dXJlKGlkLCBzcmMpO1xuICAgICAgcHJvcHMuYWRkQXNzZXQoaWQsIHNyYyk7XG4gICAgfVxuICB9LCBbcHJvcHNdKTtcblxuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxsYWJlbCBodG1sRm9yPSdwb2ludGVyLXRleHR1cmUtaWQnPmlkOiA8L2xhYmVsPlxuICAgICAgICA8aW5wdXQgcmVmPXtpZElucHV0fSBpZD0ncG9pbnRlci10ZXh0dXJlLWlkJyB0eXBlPSdzdHJpbmcnLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGxhYmVsIGh0bWxGb3I9J3BvaW50ZXItdGV4dHVyZS1zcmMnPnNyYzogPC9sYWJlbD5cbiAgICAgICAgPGlucHV0IHJlZj17c3JjSW5wdXR9IGlkPSdwb2ludGVyLXRleHR1cmUtc3JjJyB0eXBlPSdzdHJpbmcnLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtyZWdpc3RlclRleHR1cmV9PlJlZ2lzdGVyPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICA8L0ZyYWdtZW50PlxuICApO1xufVxuIiwiaW1wb3J0IHR5cGUgeyBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuaW1wb3J0IHsgQ29udHJvbFBhbmVsIH0gZnJvbSAnLi4vQ29udHJvbFBhbmVsJztcbmltcG9ydCB7IEVkaXRUZXh0dXJlIH0gZnJvbSAnLi9FZGl0VGV4dHVyZSc7XG5pbXBvcnQgeyBSZWdpc3RlclRleHR1cmUgfSBmcm9tICcuL1JlZ2lzdGVyVGV4dHVyZSc7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIHNkazogTXBTZGs7XG4gIHNlbGVjdGVkQXNzZXQ6IHN0cmluZztcbiAgYWRkQXNzZXQoaWQ6IHN0cmluZywgc3JjOiBzdHJpbmcpOiB2b2lkO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gUG9pbnRlcihwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IHsgc2RrLCBzZWxlY3RlZEFzc2V0LCBhZGRBc3NldCB9ID0gcHJvcHM7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxDb250cm9sUGFuZWwgaGVhZGVyPXsnUG9pbnRlciAtIFJlZ2lzdGVyIFRleHR1cmUnfT5cbiAgICAgICAgPFJlZ2lzdGVyVGV4dHVyZSBzZGs9e3Nka30gYWRkQXNzZXQ9e2FkZEFzc2V0fSAvPlxuICAgICAgPC9Db250cm9sUGFuZWw+XG5cbiAgICAgIDxDb250cm9sUGFuZWwgaGVhZGVyPXsnUG9pbnRlciAtIEVkaXQgVGV4dHVyZSd9PlxuICAgICAgICA8RWRpdFRleHR1cmUgc2RrPXtzZGt9IHNlbGVjdGVkQXNzZXQ9e3NlbGVjdGVkQXNzZXR9IC8+XG4gICAgICA8L0NvbnRyb2xQYW5lbD5cbiAgICA8Lz5cbiAgKTtcbn1cbiIsImltcG9ydCB7IEZyYWdtZW50LCB1c2VDYWxsYmFjaywgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB0eXBlIHsgTW91c2VFdmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB0eXBlIHsgTXBTZGsgfSBmcm9tICdAc2RrL3R5cGVzJztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2RrOiBNcFNkaztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFJlbmRlcmVyR2V0U2NyZWVuUG9zaXRpb24ocHJvcHM6IFByb3BzKTogSlNYLkVsZW1lbnQge1xuICBjb25zdCBbbWVzc2FnZSwgc2V0TWVzc2FnZV0gPSB1c2VTdGF0ZTxzdHJpbmc+KCcnKTtcbiAgY29uc3QgeElucHV0RWxlbWVudCA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcbiAgY29uc3QgeUlucHV0RWxlbWVudCA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcbiAgY29uc3QgeklucHV0RWxlbWVudCA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcblxuICBjb25zdCBleGVjdXRlID0gdXNlQ2FsbGJhY2soKGVsZW1lbnQ6IE1vdXNlRXZlbnQpID0+IHtcbiAgICBjb25zdCBjb21wdXRlVmFsdWUgPSBhc3luYyBmdW5jdGlvbigpIHtcbiAgICAgIGlmICgheElucHV0RWxlbWVudC5jdXJyZW50IHx8ICF5SW5wdXRFbGVtZW50LmN1cnJlbnQgfHwgIXpJbnB1dEVsZW1lbnQuY3VycmVudCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHggPSB4SW5wdXRFbGVtZW50LmN1cnJlbnQ/LnZhbHVlO1xuICAgICAgY29uc3QgeSA9IHlJbnB1dEVsZW1lbnQuY3VycmVudD8udmFsdWU7XG4gICAgICBjb25zdCB6ID0geklucHV0RWxlbWVudC5jdXJyZW50Py52YWx1ZTtcblxuICAgICAgaWYgKCF4IHx8ICF5IHx8ICF6KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgKHByb3BzLnNkay5SZW5kZXJlci5nZXRTY3JlZW5Qb3NpdGlvbih7eDogcGFyc2VGbG9hdCh4KSwgeTogcGFyc2VGbG9hdCh5KSwgejogcGFyc2VGbG9hdCh6KX0pKTtcbiAgICAgICAgcmVzdWx0LnggPSBNYXRoLnRydW5jKHJlc3VsdC54KTtcbiAgICAgICAgcmVzdWx0LnkgPSBNYXRoLnRydW5jKHJlc3VsdC55KTtcblxuICAgICAgICBzZXRNZXNzYWdlKGBzdWNjZXNzIHg6JHtyZXN1bHQueH0geToke3Jlc3VsdC55fWApO1xuICAgICAgfVxuICAgICAgY2F0Y2goZSkge1xuICAgICAgICBzZXRNZXNzYWdlKGBlcnJvcmApO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBjb21wdXRlVmFsdWUoKTtcbiAgfSwgW3Byb3BzLnNkay5SZW5kZXJlcl0pO1xuXG4gIHJldHVybiAoXG4gICAgPEZyYWdtZW50PlxuICAgICAgPHRyPlxuICAgICAgICA8dGQ+XG4gICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtleGVjdXRlfT5nZXRTY3JlZW5Qb3NpdGlvbjwvYnV0dG9uPlxuICAgICAgICA8L3RkPlxuICAgICAgICA8dGQ+XG4gICAgICAgICAgPGlucHV0IHR5cGU9XCJudW1iZXJcIiBpZD0ncmVuZGVyZXItZ2V0c2NyZWVucG9zaXRpb24teCcgY2xhc3NOYW1lPVwic21hbGwtaW5wdXRcIiBwbGFjZWhvbGRlcj0neCcgcmVmPXt4SW5wdXRFbGVtZW50fS8+XG4gICAgICAgIDwvdGQ+XG4gICAgICAgIDx0ZD5cbiAgICAgICAgICA8aW5wdXQgdHlwZT1cIm51bWJlclwiIGlkPSdyZW5kZXJlci1nZXRzY3JlZW5wb3NpdGlvbi15JyBjbGFzc05hbWU9XCJzbWFsbC1pbnB1dFwiIHBsYWNlaG9sZGVyPSd5JyByZWY9e3lJbnB1dEVsZW1lbnR9Lz5cbiAgICAgICAgPC90ZD5cbiAgICAgICAgPHRkPlxuICAgICAgICAgIDxpbnB1dCB0eXBlPVwibnVtYmVyXCIgaWQ9J3JlbmRlcmVyLWdldHNjcmVlbnBvc2l0aW9uLXonIGNsYXNzTmFtZT1cInNtYWxsLWlucHV0XCIgcGxhY2Vob2xkZXI9J3onIHJlZj17eklucHV0RWxlbWVudH0vPlxuICAgICAgICA8L3RkPlxuICAgICAgPC90cj5cbiAgICAgIDx0cj5cbiAgICAgICAgPHRkIGNvbFNwYW49ezN9PlxuICAgICAgICAgIDxkaXYgaWQ9J3JlbmRlcmVyLWdldHNjcmVlbnBvc2l0aW9uLW1lc3NhZ2UnPnttZXNzYWdlfTwvZGl2PlxuICAgICAgICA8L3RkPlxuICAgICAgPC90cj5cbiAgICA8L0ZyYWdtZW50PlxuICApO1xufVxuIiwiaW1wb3J0IHsgRnJhZ21lbnQsIHVzZUNhbGxiYWNrLCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBNb3VzZUV2ZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBzZGs6IE1wU2RrO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gUmVuZGVyZXJHZXRXb3JsZFBvc2l0aW9uRGF0YShwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IFttZXNzYWdlLCBzZXRNZXNzYWdlXSA9IHVzZVN0YXRlPHN0cmluZz4oJycpO1xuICBjb25zdCB4SW5wdXRFbGVtZW50ID0gdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwpO1xuICBjb25zdCB5SW5wdXRFbGVtZW50ID0gdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwpO1xuXG4gIGNvbnN0IGV4ZWN1dGUgPSB1c2VDYWxsYmFjaygoZWxlbWVudDogTW91c2VFdmVudCkgPT4ge1xuICAgIGNvbnN0IGNvbXB1dGVWYWx1ZSA9IGFzeW5jIGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKCF4SW5wdXRFbGVtZW50LmN1cnJlbnQgfHwgIXlJbnB1dEVsZW1lbnQuY3VycmVudCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHggPSB4SW5wdXRFbGVtZW50LmN1cnJlbnQ/LnZhbHVlO1xuICAgICAgY29uc3QgeSA9IHlJbnB1dEVsZW1lbnQuY3VycmVudD8udmFsdWU7XG5cbiAgICAgIGlmICgheCB8fCAheSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHByb3BzLnNkay5SZW5kZXJlci5nZXRXb3JsZFBvc2l0aW9uRGF0YSh7eDogcGFyc2VGbG9hdCh4KSwgeTogcGFyc2VGbG9hdCh5KX0pO1xuICAgICAgICBzZXRNZXNzYWdlKGBzdWNjZXNzICR7SlNPTi5zdHJpbmdpZnkocmVzdWx0KX1gKTtcbiAgICAgIH1cbiAgICAgIGNhdGNoKGUpIHtcbiAgICAgICAgc2V0TWVzc2FnZShgZXJyb3JgKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgY29tcHV0ZVZhbHVlKCk7XG4gIH0sIFtwcm9wcy5zZGsuUmVuZGVyZXJdKTtcblxuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDx0cj5cbiAgICAgICAgPHRkPlxuICAgICAgICAgIDxidXR0b24gb25DbGljaz17ZXhlY3V0ZX0+Z2V0V29ybGRQb3NpdGlvbkRhdGE8L2J1dHRvbj5cbiAgICAgICAgPC90ZD5cbiAgICAgICAgPHRkPlxuICAgICAgICAgIDxpbnB1dCB0eXBlPVwibnVtYmVyXCIgaWQ9J3JlbmRlcmVyLWdldHdvcmxkcG9zaXRpb25kYXRhLXgnIGNsYXNzTmFtZT1cInNtYWxsLWlucHV0XCIgcGxhY2Vob2xkZXI9J3gnIHJlZj17eElucHV0RWxlbWVudH0vPlxuICAgICAgICA8L3RkPlxuICAgICAgICA8dGQ+XG4gICAgICAgICAgPGlucHV0IHR5cGU9XCJudW1iZXJcIiBpZD0ncmVuZGVyZXItZ2V0d29ybGRwb3NpdGlvbmRhdGEteScgY2xhc3NOYW1lPVwic21hbGwtaW5wdXRcIiBwbGFjZWhvbGRlcj0neScgcmVmPXt5SW5wdXRFbGVtZW50fS8+XG4gICAgICAgIDwvdGQ+XG4gICAgICA8L3RyPlxuICAgICAgPHRyPlxuICAgICAgICA8dGQgY29sU3Bhbj17M30+XG4gICAgICAgICAgPGRpdiBpZD0ncmVuZGVyZXItZ2V0c2NyZWVucG9zaXRpb24tbWVzc2FnZSc+e21lc3NhZ2V9PC9kaXY+XG4gICAgICAgIDwvdGQ+XG4gICAgICA8L3RyPlxuICAgIDwvRnJhZ21lbnQ+XG4gICk7XG59XG4iLCJpbXBvcnQgeyBGcmFnbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFJlbmRlcmVyR2V0U2NyZWVuUG9zaXRpb24gfSBmcm9tICcuL1JlbmRlcmVyR2V0U2NyZWVuUG9zaXRpb24nO1xuaW1wb3J0IHsgUmVuZGVyZXJHZXRXb3JsZFBvc2l0aW9uRGF0YSB9IGZyb20gJy4vUmVuZGVyZXJHZXRXb3JsZFBvc2l0aW9uRGF0YSc7XG5pbXBvcnQgdHlwZSB7IE1wU2RrIH0gZnJvbSAnQHNkay90eXBlcyc7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHNkazogTXBTZGs7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBSZW5kZXJlcihwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIHJldHVybiAoXG4gICAgPEZyYWdtZW50PlxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Bjb250cm9sUGFuZWxgfT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2Bjb250cm9sUGFuZWxIZWFkZXJgfT57YFJlbmRlcmVyYH08L2Rpdj5cbiAgICAgICAgPHRhYmxlPlxuICAgICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAgIDxSZW5kZXJlckdldFNjcmVlblBvc2l0aW9uIHNkaz17cHJvcHMuc2RrfS8+XG4gICAgICAgICAgICA8UmVuZGVyZXJHZXRXb3JsZFBvc2l0aW9uRGF0YSBzZGs9e3Byb3BzLnNka30vPlxuICAgICAgICAgIDwvdGJvZHk+XG4gICAgICAgIDwvdGFibGU+XG4gICAgICA8L2Rpdj5cbiAgICA8L0ZyYWdtZW50PlxuICApO1xufVxuIiwiaW1wb3J0IHsgRnJhZ21lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdHlwZSB7IE1wU2RrIH0gZnJvbSAnQHNkay90eXBlcyc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlQ29sbGVjdGlvbiB9IGZyb20gJy4uL09ic2VydmFibGVDb2xsZWN0aW9uJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICcuLi9PYnNlcnZhYmxlJztcbmltcG9ydCB7IENvbnRyb2xQYW5lbCB9IGZyb20gJy4uL0NvbnRyb2xQYW5lbCc7XG5pbXBvcnQgeyBDb2xsZWN0aW9uSW5zcGVjdG9yIH0gZnJvbSAnLi4vQ29sbGVjdGlvbkluc3BlY3Rvcic7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHNkazogTXBTZGs7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBSb29tKHByb3BzOiBQcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgcmV0dXJuIChcbiAgICA8RnJhZ21lbnQ+XG4gICAgICA8Q29udHJvbFBhbmVsIGhlYWRlcj17YFJvb20gLSBDdXJyZW50YH0+XG4gICAgICAgIDxPYnNlcnZhYmxlIG9ic2VydmFibGU9e3Byb3BzLnNkay5Sb29tLmN1cnJlbnR9IG5hbWU9J1Jvb20uY3VycmVudCcgLz5cbiAgICAgIDwvQ29udHJvbFBhbmVsPlxuICAgICAgPENvbnRyb2xQYW5lbCBoZWFkZXI9e2BSb29tIC0gQ29sbGVjdGlvbmB9PlxuICAgICAgICA8T2JzZXJ2YWJsZUNvbGxlY3Rpb24gY29sbGVjdGlvbj17cHJvcHMuc2RrLlJvb20uZGF0YX0gbmFtZT0nUm9vbS5kYXRhJy8+XG4gICAgICA8L0NvbnRyb2xQYW5lbD5cblxuICAgICAgPENvbGxlY3Rpb25JbnNwZWN0b3IgY29sbGVjdGlvbj17cHJvcHMuc2RrLlJvb20uZGF0YX0gbGFiZWw9J1Jvb20nIGFkZGl0aW9uYWxQcm9wZXJ0aWVzPXtbJ3NpemUnLCAnY2VudGVyJ119IC8+XG4gICAgPC9GcmFnbWVudD5cbiAgKTtcbn1cbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdHlwZSB7IFNjZW5lIH0gZnJvbSAnQHNkay90eXBlcyc7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIGlkOiBzdHJpbmc7XG4gIHBhdGg6IFNjZW5lLklucHV0UGF0aDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFNjZW5lUGF0aChwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IGlucHV0UmVmID0gdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwpO1xuXG4gIGNvbnN0IGNhbGxiYWNrID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGlmIChpbnB1dFJlZi5jdXJyZW50Py52YWx1ZSkge1xuICAgICAgcHJvcHMucGF0aC5zZXQoaW5wdXRSZWYuY3VycmVudD8udmFsdWUpO1xuICAgIH1cbiAgfSwgW3Byb3BzLnBhdGhdKTtcblxuICByZXR1cm4gKFxuICAgIDx0cj5cbiAgICAgIDx0ZCBjb2xTcGFuPXsyfT5cbiAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtjYWxsYmFja30+e3Byb3BzLmlkfTwvYnV0dG9uPlxuICAgICAgPC90ZD5cbiAgICAgIDx0ZCBjb2xTcGFuPXsyfT5cbiAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9J3N0cmluZycgcmVmPXtpbnB1dFJlZn0vPlxuICAgICAgPC90ZD5cbiAgICA8L3RyPlxuICApO1xufVxuIiwiaW1wb3J0IHsgRnJhZ21lbnQsIHVzZUNhbGxiYWNrLCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgU2NlbmUgfSBmcm9tICdAc2RrL3R5cGVzJztcbmltcG9ydCB7IFNjZW5lUGF0aCB9IGZyb20gJy4vU2NlbmVQYXRoJztcbmltcG9ydCBzY2VuZUxvYWRlckpzb24gZnJvbSAnLi9zY2VuZS1sb2FkZXIuanNvbic7XG5pbXBvcnQgdHlwZSB7IE1wU2RrIH0gZnJvbSAnQHNkay90eXBlcyc7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHNkazogTXBTZGs7XG59XG5cbnR5cGUgU2NlbmVPYmplY3RJbmZvID0ge1xuICBvYmplY3Q6IFNjZW5lLklPYmplY3R8bnVsbDtcbiAgb2JqZWN0czogU2NlbmUuSU5vZGVbXXxudWxsO1xuICBwYXRoczogc3RyaW5nW107XG59XG5jb25zdCBtb2RlbEpzb24gPSBKU09OLnN0cmluZ2lmeShzY2VuZUxvYWRlckpzb24pO1xuZXhwb3J0IGZ1bmN0aW9uIFNjZW5lRGVzZXJpYWxpemUocHJvcHM6IFByb3BzKTogSlNYLkVsZW1lbnQge1xuICBjb25zdCBbc2NlbmVPYmplY3RJbmZvLCBzZXRTY2VuZU9iamVjdEluZm9dID0gdXNlU3RhdGU8U2NlbmVPYmplY3RJbmZvfG51bGw+KG51bGwpO1xuICBjb25zdCBpbnB1dFJlZiA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcblxuICBjb25zdCBjbGVhclNjZW5lID0gdXNlQ2FsbGJhY2soKCk9PntcbiAgICBpZiAoc2NlbmVPYmplY3RJbmZvKSB7XG4gICAgICBpZiAoc2NlbmVPYmplY3RJbmZvLm9iamVjdCkge1xuICAgICAgICBzY2VuZU9iamVjdEluZm8ub2JqZWN0LnN0b3AoKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHNjZW5lT2JqZWN0SW5mby5vYmplY3RzKSB7XG4gICAgICAgIGZvciAoY29uc3Qgb2JqZWN0IG9mIHNjZW5lT2JqZWN0SW5mby5vYmplY3RzKSB7XG4gICAgICAgICAgb2JqZWN0LnN0b3AoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgc2V0U2NlbmVPYmplY3RJbmZvKG51bGwpO1xuICAgIH1cbiAgfSwgW3NjZW5lT2JqZWN0SW5mb10pO1xuXG5cbiAgY29uc3QgcHJvY2Vzc1RleHRGcm9tRmlsZUxvYWRlZCA9IHVzZUNhbGxiYWNrKGFzeW5jICh0ZXh0RnJvbUZpbGVMb2FkZWQ6IHN0cmluZykgPT4ge1xuICAgIGNvbnN0IGRlc2VyaWFsaXplZCA9IGF3YWl0IHByb3BzLnNkay5TY2VuZS5kZXNlcmlhbGl6ZSh0ZXh0RnJvbUZpbGVMb2FkZWQpO1xuICAgIGlmIChkZXNlcmlhbGl6ZWQpIHtcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGRlc2VyaWFsaXplZCkpIHtcbiAgICAgICAgY29uc3Qgb2JqZWN0cyA9IGRlc2VyaWFsaXplZCBhcyBTY2VuZS5JTm9kZVtdO1xuICAgICAgICBmb3IgKGNvbnN0IG9iamVjdCBvZiBvYmplY3RzKSB7XG4gICAgICAgICAgb2JqZWN0LnN0YXJ0KCk7XG4gICAgICAgIH1cblxuICAgICAgICBzZXRTY2VuZU9iamVjdEluZm8oe1xuICAgICAgICAgIG9iamVjdDogbnVsbCxcbiAgICAgICAgICBvYmplY3RzLFxuICAgICAgICAgIHBhdGhzOiBbXSxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBlbHNlIGlmICh0eXBlb2YgZGVzZXJpYWxpemVkID09PSAnb2JqZWN0Jykge1xuXG4gICAgICAgIC8vIHVzZSBqc29uIHRvIGV4dHJhY3QgcGF0aCBuYW1lc1xuICAgICAgICBjb25zdCBqc29uID0gSlNPTi5wYXJzZSh0ZXh0RnJvbUZpbGVMb2FkZWQpO1xuICAgICAgICBjb25zdCBwYXRocyA9IGpzb24/LnBheWxvYWQ/LnBhdGhzIGFzIEFycmF5PFtzdHJpbmcsc3RyaW5nXT47XG4gICAgICAgIGNvbnN0IG5ld1BhdGhzOiBzdHJpbmdbXSA9IFtdO1xuICAgICAgICBpZiAocGF0aHMpIHtcbiAgICAgICAgICBmb3IgKGNvbnN0IHBhdGggb2YgcGF0aHMpIHtcbiAgICAgICAgICAgIG5ld1BhdGhzLnB1c2gocGF0aFswXSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3Qgb2JqID0gZGVzZXJpYWxpemVkIGFzIFNjZW5lLklPYmplY3Q7XG4gICAgICAgIG9iai5zdGFydCgpO1xuXG4gICAgICAgIHNldFNjZW5lT2JqZWN0SW5mbyh7XG4gICAgICAgICAgb2JqZWN0OiBvYmosXG4gICAgICAgICAgb2JqZWN0czogbnVsbCxcbiAgICAgICAgICBwYXRoczogbmV3UGF0aHMsXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfSwgW3Byb3BzLnNkay5TY2VuZV0pO1xuXG4gIGNvbnN0IG9uTW9kZWxKc29uQ2xpY2sgPSAoZTogUmVhY3QuTW91c2VFdmVudCkgPT4ge1xuICAgIGlmIChpbnB1dFJlZi5jdXJyZW50KSBpbnB1dFJlZi5jdXJyZW50LnZhbHVlID0gJyc7XG4gICAgcHJvY2Vzc1RleHRGcm9tRmlsZUxvYWRlZChtb2RlbEpzb24pO1xuICB9O1xuXG4gIGNvbnN0IGNhbGxiYWNrID0gdXNlQ2FsbGJhY2soKGV2ZW50OiBhbnkpID0+IHtcbiAgICBjbGVhclNjZW5lKCk7XG5cbiAgICBpZiAoZXZlbnQudGFyZ2V0LmZpbGVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xuICAgIGZpbGVSZWFkZXIub25sb2FkID0gYXN5bmMoZmlsZUxvYWRlZEV2ZW50OiBQcm9ncmVzc0V2ZW50PEZpbGVSZWFkZXI+KSA9PiB7XG4gICAgICBpZiAoZmlsZUxvYWRlZEV2ZW50LnRhcmdldCkge1xuICAgICAgICBjb25zdCB0ZXh0RnJvbUZpbGVMb2FkZWQgPSBmaWxlTG9hZGVkRXZlbnQudGFyZ2V0LnJlc3VsdCBhcyBzdHJpbmc7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgIGNvbnNvbGUubG9nKHRleHRGcm9tRmlsZUxvYWRlZCk7XG4gICAgICAgIGF3YWl0IHByb2Nlc3NUZXh0RnJvbUZpbGVMb2FkZWQodGV4dEZyb21GaWxlTG9hZGVkKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgZmlsZVJlYWRlci5yZWFkQXNUZXh0KGV2ZW50LnRhcmdldC5maWxlc1swXSwgJ1VURi04Jyk7XG4gIH0sIFtjbGVhclNjZW5lLCBwcm9jZXNzVGV4dEZyb21GaWxlTG9hZGVkXSk7XG5cbiAgY29uc3QgY2xlYXJDYWxsYmFjayA9IHVzZUNhbGxiYWNrKChldmVudDogYW55KSA9PiB7XG4gICAgY2xlYXJTY2VuZSgpO1xuICAgIGlmIChpbnB1dFJlZi5jdXJyZW50KSB7XG4gICAgICBpbnB1dFJlZi5jdXJyZW50LnZhbHVlID0gJyc7XG4gICAgfVxuXG4gIH0sIFtjbGVhclNjZW5lXSk7XG5cbiAgY29uc3QgcmVuZGVyUGF0aHMgPSAoKSA9PiB7XG4gICAgaWYgKHNjZW5lT2JqZWN0SW5mbyAmJiBzY2VuZU9iamVjdEluZm8ub2JqZWN0KSB7XG4gICAgICB0eXBlIFBhdGhEZXNjID0geyBkZXNjOiBTY2VuZS5JbnB1dFBhdGhEZXNjcmlwdG9yLCBwYXRoOiBTY2VuZS5JbnB1dFBhdGggfTtcblxuICAgICAgY29uc3QgaW5wdXRQYXRoczogUGF0aERlc2NbXSA9IFtdO1xuICAgICAgZm9yIChjb25zdCB7ZGVzYywgcGF0aH0gb2Ygc2NlbmVPYmplY3RJbmZvLm9iamVjdC5wYXRoSXRlcmF0b3IoKSkge1xuICAgICAgICBpZiAoZGVzYy50eXBlID09PSBTY2VuZS5QYXRoVHlwZS5JTlBVVCkge1xuICAgICAgICAgIGlucHV0UGF0aHMucHVzaCh7XG4gICAgICAgICAgICBkZXNjOiBkZXNjIGFzIFNjZW5lLklucHV0UGF0aERlc2NyaXB0b3IsXG4gICAgICAgICAgICBwYXRoOiBwYXRoIGFzIFNjZW5lLklucHV0UGF0aCxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBjb25zdCBldmVudHMgPSBpbnB1dFBhdGhzLm1hcChmdW5jdGlvbihkZXNjOiBQYXRoRGVzYykge1xuICAgICAgICByZXR1cm4oXG4gICAgICAgICAgPFNjZW5lUGF0aCBpZD17ZGVzYy5kZXNjLmlkfSBrZXk9e2Rlc2MuZGVzYy5pZH0gcGF0aD17ZGVzYy5wYXRofS8+XG4gICAgICAgICk7XG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIGV2ZW50cztcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDx0cj5cbiAgICAgICAgPHRkIGNvbFNwYW49ezN9PlxuICAgICAgICAgIDxpbnB1dCB0eXBlPVwiZmlsZVwiIGlkPSdzY2VuZS1kZXNlcmlhbGl6ZS1rZXknIHBsYWNlaG9sZGVyPSdrZXknIGFjY2VwdD1cIi5qc29uXCIgb25DaGFuZ2U9e2NhbGxiYWNrfSByZWY9e2lucHV0UmVmfS8+XG4gICAgICAgICAgPGlucHV0IHR5cGU9XCJidXR0b25cIiBvbkNsaWNrPXtvbk1vZGVsSnNvbkNsaWNrfSB2YWx1ZT1cIk1vZGVsIExvYWRlclwiLz5cbiAgICAgICAgPC90ZD5cbiAgICAgIDwvdHI+XG4gICAgICA8dHI+XG4gICAgICAgIDx0ZCBjb2xTcGFuPXszfT5cbiAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e2NsZWFyQ2FsbGJhY2t9PkNsZWFyPC9idXR0b24+XG4gICAgICAgIDwvdGQ+XG4gICAgICA8L3RyPlxuICAgICAge3JlbmRlclBhdGhzKCl9XG4gICAgPC9GcmFnbWVudD5cbiAgKTtcbn1cblxuIiwiaW1wb3J0IHsgRnJhZ21lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBTY2VuZURlc2VyaWFsaXplIH0gZnJvbSAnLi9TY2VuZURlc2VyaWFsaXplJztcbmltcG9ydCB0eXBlIHsgTXBTZGsgfSBmcm9tICdAc2RrL3R5cGVzJztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2RrOiBNcFNkaztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFNjZW5lKHByb3BzOiBQcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgcmV0dXJuIChcbiAgICA8RnJhZ21lbnQ+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17YGNvbnRyb2xQYW5lbGB9PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YGNvbnRyb2xQYW5lbEhlYWRlcmB9PntgU2NlbmVgfTwvZGl2PlxuICAgICAgICA8dGFibGU+XG4gICAgICAgICAgPHRib2R5PlxuICAgICAgICAgICAgPFNjZW5lRGVzZXJpYWxpemUgc2RrPXtwcm9wcy5zZGt9Lz5cbiAgICAgICAgICA8L3Rib2R5PlxuICAgICAgICA8L3RhYmxlPlxuICAgICAgPC9kaXY+XG4gICAgPC9GcmFnbWVudD5cbiAgKTtcbn1cbiIsImltcG9ydCB7IEZyYWdtZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBzZGs6IE1wU2RrO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gU2Vuc29yQWRkU291cmNlKHByb3BzOiBQcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgcmV0dXJuIChcbiAgICA8RnJhZ21lbnQ+XG4gICAgICA8dHI+XG4gICAgICAgIDx0ZCBjb2xTcGFuPXszfT5cbiAgICAgICAgICA8ZGl2PlRCRDwvZGl2PlxuICAgICAgICA8L3RkPlxuICAgICAgPC90cj5cbiAgICAgIDx0cj5cbiAgICAgICAgPHRkIGNvbFNwYW49ezN9Lz5cbiAgICAgIDwvdHI+XG4gICAgPC9GcmFnbWVudD5cbiAgKTtcbn1cbiIsImltcG9ydCB7IEZyYWdtZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuaW1wb3J0IHsgU2Vuc29yQWRkU291cmNlIH0gZnJvbSAnLi9TZW5zb3JBZGRTb3VyY2UnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBzZGs6IE1wU2RrO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gU2Vuc29yKHByb3BzOiBQcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgcmV0dXJuIChcbiAgICA8RnJhZ21lbnQ+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17YGNvbnRyb2xQYW5lbGB9PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YGNvbnRyb2xQYW5lbEhlYWRlcmB9PntgU2Vuc29yYH08L2Rpdj5cbiAgICAgICAgPHRhYmxlPlxuICAgICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAgIDxTZW5zb3JBZGRTb3VyY2Ugc2RrPXtwcm9wcy5zZGt9Lz5cbiAgICAgICAgICA8L3Rib2R5PlxuICAgICAgICA8L3RhYmxlPlxuICAgICAgPC9kaXY+XG4gICAgPC9GcmFnbWVudD5cbiAgKTtcbn1cbiIsImltcG9ydCB7IEZyYWdtZW50LCB1c2VDYWxsYmFjaywgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB0eXBlIHsgTXBTZGsgfSBmcm9tICdAc2RrL3R5cGVzJztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2RrOiBNcFNkaztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFNldHRpbmdzR2V0KHByb3BzOiBQcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgY29uc3QgW21lc3NhZ2UsIHNldE1lc3NhZ2VdID0gdXNlU3RhdGU8c3RyaW5nPignJyk7XG5cbiAgY29uc3QgaW5wdXRFbGVtZW50ID0gdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwpO1xuICBjb25zdCBnZXRTZXR0aW5nID0gdXNlQ2FsbGJhY2soYXN5bmMgKGVsZW1lbnQ6IGFueSkgPT4ge1xuICAgIGlmICghaW5wdXRFbGVtZW50LmN1cnJlbnQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBuZXdLZXkgPSBpbnB1dEVsZW1lbnQuY3VycmVudD8udmFsdWU7XG4gICAgY29uc3QgbmV3VmFsdWUgPSBhd2FpdCAoKHByb3BzLnNkayBhcyBhbnkpLlNldHRpbmdzLmdldChuZXdLZXkpKSBhcyBzdHJpbmd8dW5kZWZpbmVkO1xuICAgIHNldE1lc3NhZ2UoYGtleToke25ld0tleX0gdmFsdWU6JHtuZXdWYWx1ZX1gKTtcbiAgfSwgW3Byb3BzLnNka10pO1xuXG4gIHJldHVybiAoXG4gICAgPEZyYWdtZW50PlxuICAgICAgPHRyPlxuICAgICAgICA8dGQ+XG4gICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtnZXRTZXR0aW5nfT5nZXQ8L2J1dHRvbj5cbiAgICAgICAgPC90ZD5cbiAgICAgICAgPHRkPlxuICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIGlkPSdzZXR0aW5ncy1nZXQta2V5JyBjbGFzc05hbWU9XCJzbWFsbC1pbnB1dFwiIHBsYWNlaG9sZGVyPSdrZXknIHJlZj17aW5wdXRFbGVtZW50fS8+XG4gICAgICAgIDwvdGQ+XG4gICAgICA8L3RyPlxuICAgICAgPHRyPlxuICAgICAgICA8dGQgY29sU3Bhbj17Mn0+XG4gICAgICAgICAgPGRpdiBpZD0nc2V0dGluZ3MtZ2V0LW1lc3NhZ2UnPnttZXNzYWdlfTwvZGl2PlxuICAgICAgICA8L3RkPlxuICAgICAgPC90cj5cbiAgICA8L0ZyYWdtZW50PlxuICApO1xufVxuIiwiaW1wb3J0IHsgRnJhZ21lbnQsIHVzZUNhbGxiYWNrLCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBzZGs6IE1wU2RrO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gU2V0dGluZ3NVcGRhdGUocHJvcHM6IFByb3BzKTogSlNYLkVsZW1lbnQge1xuICBjb25zdCBbbWVzc2FnZSwgc2V0TWVzc2FnZV0gPSB1c2VTdGF0ZTxzdHJpbmc+KCcnKTtcbiAgY29uc3Qga2V5SW5wdXRFbGVtZW50ID0gdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwpO1xuICBjb25zdCB2YWx1ZUlucHV0RWxlbWVudCA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcblxuICBjb25zdCB1cGRhdGVTZXR0aW5nID0gdXNlQ2FsbGJhY2soYXN5bmMgKCkgPT4ge1xuICAgIGlmICgha2V5SW5wdXRFbGVtZW50IHx8ICF2YWx1ZUlucHV0RWxlbWVudCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGtleSA9IGtleUlucHV0RWxlbWVudC5jdXJyZW50Py52YWx1ZTtcbiAgICBjb25zdCB2YWx1ZSA9IHZhbHVlSW5wdXRFbGVtZW50LmN1cnJlbnQ/LnZhbHVlO1xuXG4gICAgaWYgKGtleSA9PT0gdW5kZWZpbmVkIHx8IHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgYXdhaXQgcHJvcHMuc2RrLlNldHRpbmdzLnVwZGF0ZShrZXksIHZhbHVlKTtcbiAgICAgIHNldE1lc3NhZ2UoYHN1Y2Nlc3Mga2V5OiR7a2V5fSB2YWx1ZTogJHt2YWx1ZX1gKTtcbiAgICB9XG4gICAgY2F0Y2goZSkge1xuICAgICAgc2V0TWVzc2FnZShgZXJyb3Iga2V5OiR7a2V5fSB2YWx1ZTogJHt2YWx1ZX1gKTtcbiAgICB9XG4gIH0sIFtwcm9wcy5zZGsuU2V0dGluZ3NdKTtcblxuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDx0cj5cbiAgICAgICAgPHRkPlxuICAgICAgICAgIDxidXR0b24gb25DbGljaz17dXBkYXRlU2V0dGluZ30+dXBkYXRlPC9idXR0b24+XG4gICAgICAgIDwvdGQ+XG4gICAgICAgIDx0ZD5cbiAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBpZD0nc2V0dGluZ3MtdXBkYXRlLWtleScgY2xhc3NOYW1lPVwic21hbGwtaW5wdXRcIiBwbGFjZWhvbGRlcj0na2V5JyByZWY9e2tleUlucHV0RWxlbWVudH0vPlxuICAgICAgICA8L3RkPlxuICAgICAgICA8dGQ+XG4gICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgaWQ9J3NldHRpbmdzLXVwZGF0ZS12YWx1ZScgY2xhc3NOYW1lPVwic21hbGwtaW5wdXRcIiBwbGFjZWhvbGRlcj0ndmFsdWUnIHJlZj17dmFsdWVJbnB1dEVsZW1lbnR9Lz5cbiAgICAgICAgPC90ZD5cbiAgICAgIDwvdHI+XG4gICAgICA8dHI+XG4gICAgICAgIDx0ZCBjb2xTcGFuPXszfT5cbiAgICAgICAgICA8ZGl2IGlkPSdzZXR0aW5ncy11cGRhdGUtbWVzc2FnZSc+e21lc3NhZ2V9PC9kaXY+XG4gICAgICAgIDwvdGQ+XG4gICAgICA8L3RyPlxuICAgIDwvRnJhZ21lbnQ+XG4gICk7XG59XG4iLCJpbXBvcnQgdHlwZSB7IE1wU2RrIH0gZnJvbSAnQHNkay90eXBlcyc7XG5pbXBvcnQgeyBTZXR0aW5nc0dldCB9IGZyb20gJy4vU2V0dGluZ3NHZXQnO1xuaW1wb3J0IHsgU2V0dGluZ3NVcGRhdGUgfSBmcm9tICcuL1NldHRpbmdzVXBkYXRlJztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2RrOiBNcFNkaztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFNldHRpbmdzKHByb3BzOiBQcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT17YGNvbnRyb2xQYW5lbGB9PlxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Bjb250cm9sUGFuZWxIZWFkZXJgfT57YFNldHRpbmdzYH08L2Rpdj5cbiAgICAgIDx0YWJsZT5cbiAgICAgICAgPHRib2R5PlxuICAgICAgICAgIDxTZXR0aW5nc0dldCBzZGs9e3Byb3BzLnNka30vPlxuICAgICAgICAgIDxTZXR0aW5nc1VwZGF0ZSBzZGs9e3Byb3BzLnNka30vPlxuICAgICAgICA8L3Rib2R5PlxuICAgICAgPC90YWJsZT5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cbiIsImltcG9ydCB7IEZyYWdtZW50LCB1c2VDYWxsYmFjaywgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB0eXBlIHsgTXBTZGsgfSBmcm9tICdAc2RrL3R5cGVzJztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2RrOiBNcFNkaztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFN3ZWVwRGlzYWJsZShwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IFttZXNzYWdlLCBzZXRNZXNzYWdlXSA9IHVzZVN0YXRlPHN0cmluZz4oJycpO1xuICBjb25zdCBzd2VlcElucHV0RWxlbWVudCA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcblxuICBjb25zdCB1cGRhdGVTd2VlcCA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICBpZiAoIXN3ZWVwSW5wdXRFbGVtZW50KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3Qgc3dlZXBJZCA9IHN3ZWVwSW5wdXRFbGVtZW50LmN1cnJlbnQ/LnZhbHVlO1xuXG4gICAgaWYgKHN3ZWVwSWQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICBhd2FpdCBwcm9wcy5zZGsuU3dlZXAuZGlzYWJsZShzd2VlcElkKTtcbiAgICAgIHNldE1lc3NhZ2UoYHN3ZWVwSWQ6JHtzd2VlcElkfSBkaXNhYmxlZGApO1xuICAgIH1cbiAgICBjYXRjaChlKSB7XG4gICAgICBzZXRNZXNzYWdlKGBlcnJvciBkaXNhYmxpbmcgc3dlZXBJZDoke3N3ZWVwSWR9YCk7XG4gICAgfVxuICB9LCBbcHJvcHMuc2RrLlN3ZWVwXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8RnJhZ21lbnQ+XG4gICAgICA8dHI+XG4gICAgICAgIDx0ZD5cbiAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e3VwZGF0ZVN3ZWVwfT5kaXNhYmxlPC9idXR0b24+XG4gICAgICAgIDwvdGQ+XG4gICAgICAgIDx0ZD5cbiAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBpZD0nc3dlZXAtZGlzYWJsZS1zd2VlcElkJyBwbGFjZWhvbGRlcj0nc3dlZXAgaWQnIHJlZj17c3dlZXBJbnB1dEVsZW1lbnR9Lz5cbiAgICAgICAgPC90ZD5cbiAgICAgIDwvdHI+XG4gICAgICA8dHI+XG4gICAgICAgIDx0ZCBjb2xTcGFuPXszfT5cbiAgICAgICAgICA8ZGl2IGlkPSdzd2VlcC1kaXNhYmxlLW1lc3NhZ2UnPnttZXNzYWdlfTwvZGl2PlxuICAgICAgICA8L3RkPlxuICAgICAgPC90cj5cbiAgICA8L0ZyYWdtZW50PlxuICApO1xufVxuIiwiaW1wb3J0IHsgRnJhZ21lbnQsIHVzZUNhbGxiYWNrLCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBzZGs6IE1wU2RrO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gU3dlZXBFbmFibGUocHJvcHM6IFByb3BzKTogSlNYLkVsZW1lbnQge1xuICBjb25zdCBbbWVzc2FnZSwgc2V0TWVzc2FnZV0gPSB1c2VTdGF0ZTxzdHJpbmc+KCcnKTtcbiAgY29uc3Qgc3dlZXBJbnB1dEVsZW1lbnQgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG5cbiAgY29uc3QgdXBkYXRlU3dlZXAgPSB1c2VDYWxsYmFjayhhc3luYyAoKSA9PiB7XG4gICAgaWYgKCFzd2VlcElucHV0RWxlbWVudCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IHN3ZWVwSWQgPSBzd2VlcElucHV0RWxlbWVudC5jdXJyZW50Py52YWx1ZTtcblxuICAgIGlmIChzd2VlcElkID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgYXdhaXQgcHJvcHMuc2RrLlN3ZWVwLmVuYWJsZShzd2VlcElkKTtcbiAgICAgIHNldE1lc3NhZ2UoYHN3ZWVwSWQ6JHtzd2VlcElkfSBlbmFibGVkYCk7XG4gICAgfVxuICAgIGNhdGNoKGUpIHtcbiAgICAgIHNldE1lc3NhZ2UoYGVycm9yIGVuYWJsaW5nIHN3ZWVwSWQ6JHtzd2VlcElkfWApO1xuICAgIH1cbiAgfSwgW3Byb3BzLnNkay5Td2VlcF0pO1xuXG4gIHJldHVybiAoXG4gICAgPEZyYWdtZW50PlxuICAgICAgPHRyPlxuICAgICAgICA8dGQ+XG4gICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt1cGRhdGVTd2VlcH0+ZW5hYmxlPC9idXR0b24+XG4gICAgICAgIDwvdGQ+XG4gICAgICAgIDx0ZD5cbiAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBpZD0nc3dlZXAtZW5hYmxlLXN3ZWVwSWQnIHBsYWNlaG9sZGVyPSdzd2VlcCBpZCcgcmVmPXtzd2VlcElucHV0RWxlbWVudH0vPlxuICAgICAgICA8L3RkPlxuICAgICAgPC90cj5cbiAgICAgIDx0cj5cbiAgICAgICAgPHRkIGNvbFNwYW49ezN9PlxuICAgICAgICAgIDxkaXYgaWQ9J3N3ZWVwLWVuYWJsZS1tZXNzYWdlJz57bWVzc2FnZX08L2Rpdj5cbiAgICAgICAgPC90ZD5cbiAgICAgIDwvdHI+XG4gICAgPC9GcmFnbWVudD5cbiAgKTtcbn1cbiIsImltcG9ydCB0eXBlIHsgSVN1YnNjcmlwdGlvbiwgTXBTZGssIFN3ZWVwIH0gZnJvbSAnQHNkay90eXBlcyc7XG5pbXBvcnQge1xuICB0eXBlIENoYW5nZUV2ZW50LFxuICB1c2VFZmZlY3QsXG4gIHVzZVN0YXRlLFxuICB1c2VSZWYsXG4gIHVzZUNhbGxiYWNrLFxufSBmcm9tICdyZWFjdCc7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHNkazogTXBTZGs7XG59XG5cbmV4cG9ydCBjb25zdCBTd2VlcE1vZGlmeU5laWdoYm9ycyA9IChwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCA9PiB7XG4gIGNvbnN0IFtsYWJlbE1hcCwgc2V0TGFiZWxNYXBdID0gdXNlU3RhdGU8e1trZXk6IHN0cmluZ106IHN0cmluZ30+KHt9KTtcbiAgY29uc3QgW2FsbFN3ZWVwcywgc2V0QWxsU3dlZXBzXSA9IHVzZVN0YXRlPHtba2V5OiBzdHJpbmddOiBTd2VlcC5PYnNlcnZhYmxlU3dlZXBEYXRhfT4oe30pO1xuICBjb25zdCBbYWxsU3dlZXBJZHMsIHNldEFsbFN3ZWVwSWRzXSA9IHVzZVN0YXRlPHN0cmluZ1tdPihbXSk7XG5cbiAgY29uc3QgW2FjdGl2ZVN3ZWVwTmVpZ2hib3JzLCBzZXRBY3RpdmVTd2VlcE5laWdoYm9yc10gPSB1c2VTdGF0ZTxzdHJpbmdbXT4oW10pO1xuICBjb25zdCBbY3VycmVudFN3ZWVwSWQsIHNldEN1cnJlbnRTd2VlcElkXSA9IHVzZVN0YXRlPHN0cmluZz4oJycpO1xuICBjb25zdCBbYWN0aXZlU3dlZXBJZCwgc2V0QWN0aXZlU3dlZXBJZF0gPSB1c2VTdGF0ZTxzdHJpbmc+KCcnKTtcblxuICBjb25zdCBpbml0aWFsaXplZCA9IHVzZVJlZjxib29sZWFuPihmYWxzZSk7XG4gIGNvbnN0IGFjdGl2ZVN3ZWVwSWRSZWYgPSB1c2VSZWY8c3RyaW5nPignJyk7XG5cblxuICBjb25zdCBhY3RpdmF0ZVN3ZWVwID0gdXNlQ2FsbGJhY2soKGlkOiBzdHJpbmcpID0+IHtcbiAgICBjb25zdCBzd2VlcDogTXBTZGsuU3dlZXAuT2JzZXJ2YWJsZVN3ZWVwRGF0YSA9IGFsbFN3ZWVwc1tpZF07XG4gICAgaWYgKCFzd2VlcCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJZCBkb2VzblxcJ3QgY29ycmVzcG9uZCB0byBzd2VlcDogJyArIGlkKTtcbiAgICB9XG4gICAgc2V0QWN0aXZlU3dlZXBOZWlnaGJvcnMoc3dlZXAubmVpZ2hib3JzKTtcbiAgICBzZXRBY3RpdmVTd2VlcElkKGlkKTtcbiAgICBhY3RpdmVTd2VlcElkUmVmLmN1cnJlbnQgPSBpZDtcbiAgfSwgW2FsbFN3ZWVwc10pO1xuXG4gIGZ1bmN0aW9uIG9uU2VsZWN0U3dlZXAoZXZlbnQ6IENoYW5nZUV2ZW50PEhUTUxTZWxlY3RFbGVtZW50Pikge1xuICAgIGNvbnN0IGlkID0gZXZlbnQuY3VycmVudFRhcmdldC52YWx1ZTtcbiAgICBhY3RpdmF0ZVN3ZWVwKGlkKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHVwZGF0ZUFsbFN3ZWVwc0RpY3QoY29sbGVjdGlvbjogTXBTZGsuRGljdGlvbmFyeTxNcFNkay5Td2VlcC5PYnNlcnZhYmxlU3dlZXBEYXRhPiwgbWFwOiBNcFNkay5EaWN0aW9uYXJ5PHN0cmluZz4pOiBzdHJpbmdbXSB7XG4gICAgY29uc3QgYWxsU3dlZXBEaWN0OiB7W2tleTogc3RyaW5nXTogU3dlZXAuT2JzZXJ2YWJsZVN3ZWVwRGF0YX0gPSB7fTtcbiAgICBjb25zdCBuZXdBbGxTd2VlcElkcyA9IE9iamVjdC52YWx1ZXMoY29sbGVjdGlvbikubWFwKChzd2VlcDogTXBTZGsuU3dlZXAuT2JzZXJ2YWJsZVN3ZWVwRGF0YSkgPT4ge1xuICAgICAgY29uc3QgdXNlSWQgPSBtYXBbc3dlZXAuaWRdID8/IHN3ZWVwLmlkO1xuICAgICAgYWxsU3dlZXBEaWN0W3VzZUlkXSA9IHN3ZWVwO1xuICAgICAgcmV0dXJuIHVzZUlkO1xuICAgIH0pO1xuICAgIHNldEFsbFN3ZWVwcyhhbGxTd2VlcERpY3QpO1xuICAgIGNvbnN0IGFjdGl2ZUlkID0gbWFwW2FjdGl2ZVN3ZWVwSWRSZWYuY3VycmVudF0gPz8gYWN0aXZlU3dlZXBJZFJlZi5jdXJyZW50O1xuICAgIGlmIChhbGxTd2VlcERpY3QgJiYgYWxsU3dlZXBEaWN0W2FjdGl2ZUlkXSl7XG4gICAgICBzZXRBY3RpdmVTd2VlcE5laWdoYm9ycyhhbGxTd2VlcERpY3RbYWN0aXZlSWRdLm5laWdoYm9ycyk7XG4gICAgfVxuICAgIHJldHVybiBuZXdBbGxTd2VlcElkcztcbiAgfVxuXG4gIGNvbnN0IG1hcElkc1RvTGFiZWxzID0gdXNlQ2FsbGJhY2soYXN5bmMgKGNvbGxlY3Rpb246IE1wU2RrLkRpY3Rpb25hcnk8TXBTZGsuU3dlZXAuT2JzZXJ2YWJsZVN3ZWVwRGF0YT4sIG1hcDogTXBTZGsuRGljdGlvbmFyeTxzdHJpbmc+KSA9PiB7XG4gICAgLy8gY3JlYXRlL3VwZGF0ZSBtYXAgb2YgaWRzIHRvIGxhYmVsc1xuICAgIGNvbnN0IG5ld0xhYmVsTWFwOiB7W2tleTogc3RyaW5nXTogc3RyaW5nfSA9IHt9O1xuICAgIGF3YWl0IFByb21pc2UuYWxsKE9iamVjdC52YWx1ZXMoY29sbGVjdGlvbikubWFwKGFzeW5jIChzd2VlcCkgPT4ge1xuICAgICAgY29uc3QgbGFiZWwgPSBhd2FpdCBwcm9wcy5zZGsuU3dlZXAuQ29udmVyc2lvbi5nZXRMYWJlbEZyb21JZChzd2VlcC5pZCk7XG4gICAgICBuZXdMYWJlbE1hcFtzd2VlcC5pZF0gPSBsYWJlbDtcbiAgICAgIG5ld0xhYmVsTWFwW21hcFtzd2VlcC5pZF1dID0gbGFiZWw7XG4gICAgfSkpLnRoZW4oKCkgPT4ge1xuICAgICAgc2V0TGFiZWxNYXAobmV3TGFiZWxNYXApO1xuICAgICAgaWYgKGN1cnJlbnRTd2VlcElkKSB7XG4gICAgICAgIGFjdGl2YXRlU3dlZXAoY3VycmVudFN3ZWVwSWQpO1xuICAgICAgfVxuICAgIH0pO1xuICB9LCBbYWN0aXZhdGVTd2VlcCwgY3VycmVudFN3ZWVwSWQsIHByb3BzLnNkay5Td2VlcC5Db252ZXJzaW9uXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBzaG91bGQgb25seSBydW4gb25jZVxuICAgIGNvbnN0IHN1YnM6IElTdWJzY3JpcHRpb25bXSA9IFtdO1xuICAgIGFzeW5jIGZ1bmN0aW9uIHJ1blVzZUVmZmVjdCgpIHtcbiAgICAgIC8vIHdhaXQgZm9yIGRhdGEgdG8gYmUgcmVhZHlcbiAgICAgIGF3YWl0IHByb3BzLnNkay5BcHAuc3RhdGUud2FpdFVudGlsKChzdGF0ZSkgPT4gc3RhdGUucGhhc2UgPT09IHByb3BzLnNkay5BcHAuUGhhc2UuUExBWUlORyk7XG5cbiAgICAgIC8vIGZpcnN0LCBidWlsZCBhIG1hcCB0byBiZSBpbmRlcGVuZGVudCBvZiB1c2VMZWdhY3lJZHMuLi5cbiAgICAgIGNvbnN0IG1hcDogTXBTZGsuRGljdGlvbmFyeTxzdHJpbmc+ID0gYXdhaXQgcHJvcHMuc2RrLlN3ZWVwLkNvbnZlcnNpb24uY3JlYXRlSWRNYXAodHJ1ZSk7XG5cbiAgICAgIC8vIHN1YnNjcmliZSB0byBjdXJyZW50IHN3ZWVwIC0gbmVlZHMgbWFwXG4gICAgICBzdWJzLnB1c2gocHJvcHMuc2RrLlN3ZWVwLmN1cnJlbnQuc3Vic2NyaWJlKChzd2VlcERhdGE6IFN3ZWVwLk9ic2VydmFibGVTd2VlcERhdGEpID0+IHtcbiAgICAgICAgaWYgKCFzd2VlcERhdGEuaWQpIHsgcmV0dXJuOyB9XG4gICAgICAgIHNldEN1cnJlbnRTd2VlcElkKG1hcFtzd2VlcERhdGEuaWRdID8/IHN3ZWVwRGF0YS5pZCk7XG4gICAgICB9KSk7XG4gICAgICBzdWJzLnB1c2gocHJvcHMuc2RrLlN3ZWVwLmRhdGEuc3Vic2NyaWJlKHtcbiAgICAgICAgYXN5bmMgb25Db2xsZWN0aW9uVXBkYXRlZChjb2xsZWN0aW9uKSB7XG4gICAgICAgICAgLy8gc2hvdWxkIHJ1biBlYWNoIHRpbWUgc3dlZXBzIGNoYW5nZVxuICAgICAgICAgIGNvbnN0IGlkRGljdCA9IHVwZGF0ZUFsbFN3ZWVwc0RpY3QoY29sbGVjdGlvbiwgbWFwKTtcbiAgICAgICAgICBpZiAoIWluaXRpYWxpemVkLmN1cnJlbnQpIHtcbiAgICAgICAgICAgIC8vIG9ubHkgbmVlZCB0byBkbyBmaXJzdCB0aW1lXG4gICAgICAgICAgICBzZXRBbGxTd2VlcElkcyhpZERpY3QpO1xuICAgICAgICAgICAgaW5pdGlhbGl6ZWQuY3VycmVudCA9IHRydWU7XG4gICAgICAgICAgICBtYXBJZHNUb0xhYmVscyhjb2xsZWN0aW9uLCBtYXApO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBhbGwgc3dlZXBzIHNob3VsZCBoYXZlIGJlZW4gdXBkYXRlZCBieSB0aGlzIHBvaW50IC0gcnVuIGV2ZXJ5IHRpbWVcbiAgICAgICAgICAgIGlmIChjdXJyZW50U3dlZXBJZCkgYWN0aXZhdGVTd2VlcChjdXJyZW50U3dlZXBJZCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgfSkpO1xuICAgIH1cbiAgICBydW5Vc2VFZmZlY3QoKS5jYXRjaCgoZSkgPT4ge2NvbnNvbGUuZXJyb3IoZSk7fSk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIC8vIHByb2JhYmx5IG5vdCBjYWxsZWQsIGJ1dCBsZXQncyBiZSBwcm9hY3RpdmVcbiAgICAgIHN1YnMuZm9yRWFjaCggKHN1YikgPT4ge3N1Yi5jYW5jZWwoKTt9ICk7XG4gICAgfTtcbiAgfSwgW2FjdGl2YXRlU3dlZXAsIGN1cnJlbnRTd2VlcElkLCBtYXBJZHNUb0xhYmVscywgcHJvcHMuc2RrLkFwcC5QaGFzZS5QTEFZSU5HLCBwcm9wcy5zZGsuQXBwLnN0YXRlLCBwcm9wcy5zZGsuU3dlZXBdKTtcblxuXG4gIGFzeW5jIGZ1bmN0aW9uIGFkZFN3ZWVwKGV2ZW50OiBDaGFuZ2VFdmVudDxIVE1MU2VsZWN0RWxlbWVudD4pOiBQcm9taXNlPHZvaWQ+IHtcbiAgICBjb25zdCBhZGRJZCA9IGV2ZW50LmN1cnJlbnRUYXJnZXQudmFsdWU7XG4gICAgaWYgKCFhZGRJZCkgeyBjb25zb2xlLndhcm4oJ2Nhbm5vdCBzZWxlY3Qgc3BhY2VyIGFzIElEIScpOyByZXR1cm47fVxuICAgIGNvbnN0IG1hcDogTXBTZGsuRGljdGlvbmFyeTxzdHJpbmc+ID0gYXdhaXQgcHJvcHMuc2RrLlN3ZWVwLkNvbnZlcnNpb24uY3JlYXRlSWRNYXAodHJ1ZSk7XG4gICAgYXdhaXQgcHJvcHMuc2RrLlN3ZWVwLmFkZE5laWdoYm9ycyhhY3RpdmVTd2VlcElkLCBbbWFwW2FkZElkXSA/PyBhZGRJZF0pO1xuICAgIGNvbnNvbGUubG9nKCdhZGRlZCBzd2VlcCcsIGFkZElkKTtcbiAgfVxuXG4gIGFzeW5jIGZ1bmN0aW9uIHJlbW92ZVN3ZWVwKGV2ZW50OiBDaGFuZ2VFdmVudDxIVE1MU2VsZWN0RWxlbWVudD4pOiBQcm9taXNlPHZvaWQ+IHtcbiAgICBjb25zdCByZW1vdmVJZCA9IGV2ZW50LmN1cnJlbnRUYXJnZXQudmFsdWU7XG4gICAgaWYgKCFyZW1vdmVJZCkgeyBjb25zb2xlLndhcm4oJ2Nhbm5vdCBzZWxlY3Qgc3BhY2VyIGFzIElEIScpOyByZXR1cm47fVxuICAgIGNvbnN0IG1hcDogTXBTZGsuRGljdGlvbmFyeTxzdHJpbmc+ID0gYXdhaXQgcHJvcHMuc2RrLlN3ZWVwLkNvbnZlcnNpb24uY3JlYXRlSWRNYXAodHJ1ZSk7XG4gICAgYXdhaXQgcHJvcHMuc2RrLlN3ZWVwLnJlbW92ZU5laWdoYm9ycyhhY3RpdmVTd2VlcElkLCBbbWFwW3JlbW92ZUlkXSA/PyByZW1vdmVJZF0pO1xuICAgIGNvbnNvbGUubG9nKCdyZW1vdmVkIHN3ZWVwJywgcmVtb3ZlSWQpO1xuICB9XG5cbiAgY29uc3QgZGVmYXVsdE9wdGlvbiA9IDxvcHRpb24ga2V5PXstMX0gdmFsdWU9eycnfT4tPC9vcHRpb24+O1xuICBjb25zdCBhbGxTd2VlcE9wdGlvbnMgPSBhbGxTd2VlcElkcy5tYXAoKGtleSwgaSkgPT4gPG9wdGlvbiBrZXk9e2l9IHZhbHVlPXtrZXl9PntsYWJlbE1hcFtrZXldfTwvb3B0aW9uPik7XG4gIGFsbFN3ZWVwT3B0aW9ucy51bnNoaWZ0KGRlZmF1bHRPcHRpb24pO1xuICByZXR1cm4gKDw+XG4gICAgPHA+U2VsZWN0IFN3ZWVwOiZuYnNwO1xuICAgICAgPHNlbGVjdCBvbkNoYW5nZT17b25TZWxlY3RTd2VlcH0gdmFsdWU9e2FjdGl2ZVN3ZWVwSWR9PlxuICAgICAgICB7YWxsU3dlZXBPcHRpb25zfVxuICAgICAgPC9zZWxlY3Q+XG4gICAgICA8YnV0dG9uIHN0eWxlPXt7IGZsb2F0OiAncmlnaHQnIH19XG4gICAgICAgIGRpc2FibGVkPXshY3VycmVudFN3ZWVwSWQgfHwgY3VycmVudFN3ZWVwSWQ9PT1hY3RpdmVTd2VlcElkfVxuICAgICAgICBvbkNsaWNrPXsoKSA9PiB7IGFjdGl2YXRlU3dlZXAoY3VycmVudFN3ZWVwSWQpO319XG4gICAgICA+IFVzZSBDdXJyZW50ICh7bGFiZWxNYXBbY3VycmVudFN3ZWVwSWRdfSkgPC9idXR0b24+XG4gICAgPC9wPlxuICAgIDxkaXYgc3R5bGU9e3t3aWR0aDogJzI1MHB4J319PlxuICAgICAgTmVpZ2hib3JzOiB7IGFjdGl2ZVN3ZWVwTmVpZ2hib3JzLm1hcCgoa2V5LCBpKSA9PiBsYWJlbE1hcFtrZXldKS5qb2luKCcsICcpIH1cbiAgICA8L2Rpdj5cbiAgICA8aHIvPlxuICAgIDxkaXY+XG4gICAgICBSZW1vdmUgc3dlZXAgbmVpZ2hib3I6XG4gICAgICA8c2VsZWN0IG9uQ2hhbmdlPXtyZW1vdmVTd2VlcH0gdmFsdWU9ey0xfSBzdHlsZT17e2Zsb2F0OidyaWdodCcsIHdpZHRoOiAnNDBweCd9fT5cbiAgICAgICAgeyBkZWZhdWx0T3B0aW9uIH1cbiAgICAgICAgeyBhY3RpdmVTd2VlcE5laWdoYm9ycy5tYXAoKGtleSwgaSkgPT4gPG9wdGlvbiBrZXk9e2l9IHZhbHVlPXtrZXl9PntsYWJlbE1hcFtrZXldfTwvb3B0aW9uPikgfVxuICAgICAgPC9zZWxlY3Q+XG4gICAgPC9kaXY+XG4gICAgPGRpdj5cbiAgICAgIEFkZCBzd2VlcCBuZWlnaGJvcjpcbiAgICAgIDxzZWxlY3Qgb25DaGFuZ2U9e2FkZFN3ZWVwfSB2YWx1ZT17LTF9IHN0eWxlPXt7ZmxvYXQ6J3JpZ2h0Jywgd2lkdGg6ICc0MHB4J319PlxuICAgICAgICB7YWxsU3dlZXBPcHRpb25zfVxuICAgICAgPC9zZWxlY3Q+XG4gICAgPC9kaXY+XG4gIDwvPik7XG59O1xuIiwiaW1wb3J0IHR5cGUgeyBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuaW1wb3J0IHsgU3dlZXBEaXNhYmxlIH0gZnJvbSAnLi9Td2VlcERpc2FibGUnO1xuaW1wb3J0IHsgU3dlZXBFbmFibGUgfSBmcm9tICcuL1N3ZWVwRW5hYmxlJztcbmltcG9ydCB7IE9ic2VydmFibGVDb2xsZWN0aW9uIH0gZnJvbSAnLi4vT2JzZXJ2YWJsZUNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJy4uL09ic2VydmFibGUnO1xuaW1wb3J0IHsgRXZlbnQgfSBmcm9tICcuLi9FdmVudCc7XG5pbXBvcnQgeyBDb250cm9sUGFuZWwgfSBmcm9tICcuLi9Db250cm9sUGFuZWwnO1xuaW1wb3J0IHsgU3dlZXBNb2RpZnlOZWlnaGJvcnMgfSBmcm9tICcuL1N3ZWVwTW9kaWZ5TmVpZ2hib3JzJztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2RrOiBNcFNkaztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFN3ZWVwKHByb3BzOiBQcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPENvbnRyb2xQYW5lbCBoZWFkZXI9eydTd2VlcCAtIEN1cnJlbnQnfT5cbiAgICAgICAgPE9ic2VydmFibGUgb2JzZXJ2YWJsZT17cHJvcHMuc2RrLlN3ZWVwLmN1cnJlbnR9IG5hbWU9J1N3ZWVwLmN1cnJlbnQnIC8+XG4gICAgICA8L0NvbnRyb2xQYW5lbD5cbiAgICAgIDxDb250cm9sUGFuZWwgaGVhZGVyPXsnU3dlZXAgLSBDb2xsZWN0aW9uJ30+XG4gICAgICAgIDxPYnNlcnZhYmxlQ29sbGVjdGlvbiBjb2xsZWN0aW9uPXtwcm9wcy5zZGsuU3dlZXAuZGF0YX0gbmFtZT0nU3dlZXAuZGF0YScgLz5cbiAgICAgIDwvQ29udHJvbFBhbmVsPlxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Bjb250cm9sUGFuZWxgfT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2Bjb250cm9sUGFuZWxIZWFkZXJgfT57YFN3ZWVwYH08L2Rpdj5cbiAgICAgICAgPHRhYmxlPlxuICAgICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAgIDxTd2VlcERpc2FibGUgc2RrPXtwcm9wcy5zZGt9IC8+XG4gICAgICAgICAgICA8U3dlZXBFbmFibGUgc2RrPXtwcm9wcy5zZGt9IC8+XG4gICAgICAgICAgPC90Ym9keT5cbiAgICAgICAgPC90YWJsZT5cbiAgICAgIDwvZGl2PlxuICAgICAgPENvbnRyb2xQYW5lbCBoZWFkZXI9J1N3ZWVwIC0gRXZlbnRzJz5cbiAgICAgICAgPEV2ZW50IHNkaz17cHJvcHMuc2RrfSBldmVudHM9e3Byb3BzLnNkay5Td2VlcC5FdmVudH0vPlxuICAgICAgPC9Db250cm9sUGFuZWw+XG4gICAgICA8Q29udHJvbFBhbmVsIGhlYWRlcj17YFN3ZWVwIE5laWdoYm9yIENvbm5lY3Rpb25zYH0+XG4gICAgICAgIDxTd2VlcE1vZGlmeU5laWdoYm9ycyBzZGs9e3Byb3BzLnNka30vPlxuICAgICAgPC9Db250cm9sUGFuZWw+XG4gICAgPC8+XG4gICk7XG59XG4iLCJpbXBvcnQgeyBGcmFnbWVudCwgdXNlQ2FsbGJhY2ssIHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IENvbGxlY3Rpb25TZWxlY3QgfSBmcm9tICcuLi9Db2xsZWN0aW9uU2VsZWN0b3InO1xuaW1wb3J0IHsgR3JhcGggfSBmcm9tICdAc2RrL3R5cGVzJztcbmltcG9ydCB0eXBlIHsgSVN1YnNjcmlwdGlvbiwgTXBTZGssIFN3ZWVwIH0gZnJvbSAnQHNkay90eXBlcyc7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHNkazogTXBTZGs7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBTd2VlcEdyYXBoKHByb3BzOiBQcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgY29uc3QgW3BhdGhEaXJ0eSwgc2V0UGF0aERpcnR5XSA9IHVzZVN0YXRlPGJvb2xlYW4+KHRydWUpO1xuXG4gIGNvbnN0IGdyYXBoID0gdXNlUmVmPE1wU2RrLkdyYXBoLklEaXJlY3RlZEdyYXBoPFN3ZWVwLk9ic2VydmFibGVTd2VlcERhdGE+PigpO1xuICBjb25zdCBwYXRoRW5kUG9pbnRzOiBbc3RyaW5nLCBzdHJpbmddID0gWycnLCAnJ107XG5cbiAgY29uc3QgYVN0YXJTdWIgPSB1c2VSZWY8SVN1YnNjcmlwdGlvbj4oKTtcbiAgY29uc3QgcnVubmVyID0gdXNlUmVmPE1wU2RrLkdyYXBoLklBU3RhclJ1bm5lcjxTd2VlcC5PYnNlcnZhYmxlU3dlZXBEYXRhPj4oKTtcbiAgY29uc3Qgb25TdGFydENoYW5nZWQgPSB1c2VDYWxsYmFjayhmdW5jdGlvbiAoaWQ6IHN0cmluZykge1xuICAgIHBhdGhFbmRQb2ludHNbMF0gPSBpZDtcbiAgICB1cGRhdGVQYXRoKCk7XG4gICAgLy8gMS0yOC0yMDI0IENBLTk3NjAgbWZvcmQgLSBJIHdvdWxkIGhhdmUgdG8gZXNzZW50aWFsbHkgY29tcGxldGVseSByZXdyaXRlIHRoaXMgY29tcG9uZW50IHRvIG1ha2UgdGhlIGNoYWluIG9mIHJlYWN0XG4gICAgLy8gc3RhdGUgLyB1c2UgZGVwZW5kZW5jaWVzIGhhcHB5LiBJdCBzZWVtcyB0byB3b3JrIHNvIEknbSBqdXN0IHN1cHByZXNzaW5nIGZvciBub3cuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwc1xuICB9LCBbXSk7XG4gIGNvbnN0IG9uRW5kQ2hhbmdlZCA9IHVzZUNhbGxiYWNrKGZ1bmN0aW9uIChpZDogc3RyaW5nKSB7XG4gICAgcGF0aEVuZFBvaW50c1sxXSA9IGlkO1xuICAgIHVwZGF0ZVBhdGgoKTtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzXG4gIH0sIFtdKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHByb3BzLnNkay5Td2VlcC5jcmVhdGVHcmFwaCgpLnRoZW4oKHN3ZWVwR3JhcGgpID0+IGdyYXBoLmN1cnJlbnQgPSBzd2VlcEdyYXBoKTtcbiAgfSk7XG5cbiAgZnVuY3Rpb24gdXBkYXRlUGF0aCgpIHtcbiAgICBpZiAoZ3JhcGguY3VycmVudCkge1xuICAgICAgY29uc3Qgc3RhcnQgPSBncmFwaC5jdXJyZW50LnZlcnRleChwYXRoRW5kUG9pbnRzWzBdKTtcbiAgICAgIGNvbnN0IGVuZCA9IGdyYXBoLmN1cnJlbnQudmVydGV4KHBhdGhFbmRQb2ludHNbMV0pO1xuICAgICAgaWYgKHN0YXJ0ICYmIGVuZCkge1xuICAgICAgICBpZiAoYVN0YXJTdWIuY3VycmVudCkge1xuICAgICAgICAgIGFTdGFyU3ViLmN1cnJlbnQuY2FuY2VsKCk7XG4gICAgICAgIH1cbiAgICAgICAgcnVubmVyLmN1cnJlbnQgPSBwcm9wcy5zZGsuR3JhcGguY3JlYXRlQVN0YXJSdW5uZXIoZ3JhcGguY3VycmVudCwgc3RhcnQsIGVuZCk7XG4gICAgICAgIGFTdGFyU3ViLmN1cnJlbnQgPSBydW5uZXIuY3VycmVudC5zdWJzY3JpYmUoe1xuICAgICAgICAgIG9uQ2hhbmdlZCgpIHtcbiAgICAgICAgICAgIHNldFBhdGhEaXJ0eSh0cnVlKTtcbiAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gICAgc2V0UGF0aERpcnR5KHRydWUpO1xuICB9XG5cbiAgY29uc3QgcmVzdWx0UmVmID0gdXNlUmVmPEhUTUxUZXh0QXJlYUVsZW1lbnQ+KG51bGwpO1xuICBjb25zdCByZWNhbGNQYXRoID0gdXNlQ2FsbGJhY2soZnVuY3Rpb24gKCkge1xuICAgIGlmIChydW5uZXIuY3VycmVudCkge1xuICAgICAgY29uc3QgcmVzdWx0ID0gcnVubmVyLmN1cnJlbnQuZXhlYygpO1xuICAgICAgaWYgKHJlc3VsdFJlZi5jdXJyZW50KSB7XG4gICAgICAgIGlmIChyZXN1bHQuc3RhdHVzICE9PSBHcmFwaC5BU3RhclN0YXR1cy5TVUNDRVNTKSB7XG4gICAgICAgICAgcmVzdWx0UmVmLmN1cnJlbnQudmFsdWUgPSAnTm8gcGF0aCBmb3VuZCc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmVzdWx0UmVmLmN1cnJlbnQudmFsdWUgPSByZXN1bHQucGF0aC5tYXAoKHYsIGkpID0+IGkgKyAnOiAnICsgdi5pZCkuam9pbignXFxuJyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHNldFBhdGhEaXJ0eShmYWxzZSk7XG4gICAgfVxuICB9LCBbXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8RnJhZ21lbnQ+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17YGNvbnRyb2xQYW5lbGB9PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YGNvbnRyb2xQYW5lbEhlYWRlcmB9PkdyYXBoIC0gU3dlZXA8L2Rpdj5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICBTdGFydDogPENvbGxlY3Rpb25TZWxlY3RcbiAgICAgICAgICAgIGNvbGxlY3Rpb249e3Byb3BzLnNkay5Td2VlcC5kYXRhfVxuICAgICAgICAgICAgZmlsdGVyPXtlbmFibGVkU3dlZXBGaWx0ZXJ9XG4gICAgICAgICAgICBvbkNoYW5nZWQ9e29uU3RhcnRDaGFuZ2VkfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIEVuZDogPENvbGxlY3Rpb25TZWxlY3RcbiAgICAgICAgICAgIGNvbGxlY3Rpb249e3Byb3BzLnNkay5Td2VlcC5kYXRhfVxuICAgICAgICAgICAgZmlsdGVyPXtlbmFibGVkU3dlZXBGaWx0ZXJ9XG4gICAgICAgICAgICBvbkNoYW5nZWQ9e29uRW5kQ2hhbmdlZH1cbiAgICAgICAgICAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICBQYXRoIERpcnR5OiB7cGF0aERpcnR5LnRvU3RyaW5nKCl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxidXR0b24gb25DbGljaz17cmVjYWxjUGF0aH0+Q0FMQ1VMQVRFIFBBVEg8L2J1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPHRleHRhcmVhIHN0eWxlPXt7d2lkdGg6ICczMDBweCcsIGhlaWdodDogJzcycHgnLCB3aGl0ZVNwYWNlOiAncHJlJ319IHJlZj17cmVzdWx0UmVmfS8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9GcmFnbWVudD5cbiAgKTtcbn1cblxuZnVuY3Rpb24gZW5hYmxlZFN3ZWVwRmlsdGVyKHN3ZWVwOiBNcFNkay5Td2VlcC5PYnNlcnZhYmxlU3dlZXBEYXRhKTogYm9vbGVhbiB7XG4gIHJldHVybiBzd2VlcC5lbmFibGVkO1xufVxuIiwiaW1wb3J0IHsgdHlwZSBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuaW1wb3J0IHsgdHlwZSBSZWFjdEVsZW1lbnQsIHR5cGUgUHJvcHNXaXRoQ2hpbGRyZW4sIENoaWxkcmVuLCBjbG9uZUVsZW1lbnQsIHVzZUNhbGxiYWNrLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxudHlwZSBQcm9wcyA9IHtcbiAgc2RrOiBNcFNkaztcbiAgc2VsZWN0ZWRMYXllcjogTXBTZGsuVmlldy5MYXllciB8IHVuZGVmaW5lZDtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBMYXllclN1cHBvcnQoe3Nkaywgc2VsZWN0ZWRMYXllciwgY2hpbGRyZW59OiBQcm9wc1dpdGhDaGlsZHJlbjxQcm9wcz4pOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IFt1c2VMYXllciwgc2V0VXNlTGF5ZXJdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBvbkNoZWNrQ2hhbmdlZCA9IHVzZUNhbGxiYWNrKChlOiBSZWFjdC5DaGFuZ2VFdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4ge1xuICAgIHNldFVzZUxheWVyKGUudGFyZ2V0LmNoZWNrZWQpO1xuICB9LCBbXSk7XG5cbiAgLy8gcmVuZGVyIHRoZSBjaGlsZCBjb250cm9sIGJ1dCBjaGFuZ2UgdGhlIGBzZGtgIHByb3AgdG8gYmUgdGhlIGFjdGl2ZSBgc2VsZWN0ZWRMYXllcmAgaW5zdGVhZCBpZiB0aGUgYHVzZUxheWVyYCBmbGFnIGlzIHNldFxuICBmdW5jdGlvbiByZW5kZXJDaGlsZHJlbigpIHtcbiAgICByZXR1cm4gQ2hpbGRyZW4ubWFwKGNoaWxkcmVuLCBjaGlsZCA9PiBjbG9uZUVsZW1lbnQoY2hpbGQgYXMgUmVhY3RFbGVtZW50LCB7XG4gICAgICBzZGs6IHVzZUxheWVyICYmIHNlbGVjdGVkTGF5ZXIgPyBzZWxlY3RlZExheWVyIDogc2RrLFxuICAgIH0pKTtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxkaXYgc3R5bGU9e3sgYmFja2dyb3VuZENvbG9yOiAnI2Q3ZGVlMCcgfX0+XG4gICAgICAgIDxkaXYgc3R5bGU9e3sgZGlzcGxheTogJ2lubGluZS1ibG9jaycgfX0+XG4gICAgICAgICAgPGxhYmVsIGh0bWxGb3I9Jyc+VXNlIExheWVyPC9sYWJlbD48aW5wdXQgdHlwZT0nY2hlY2tib3gnIG9uQ2hhbmdlPXtvbkNoZWNrQ2hhbmdlZH0gLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgc3R5bGU9e3sgZGlzcGxheTogJ2lubGluZS1ibG9jaycgfX0+XG4gICAgICAgICAgPGlucHV0IHdpZHRoPScyMDBweCcgdHlwZT0ndGV4dCcgdmFsdWU9e3NlbGVjdGVkTGF5ZXIgPyBzZWxlY3RlZExheWVyLmlkIDogJ25vIGxheWVyIHNlbGVjdGVkJ30gcmVhZE9ubHkgZGlzYWJsZWQ9eyF1c2VMYXllcn0gLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIHtyZW5kZXJDaGlsZHJlbigpfVxuICAgICAgPC9kaXY+XG4gICAgPC8+XG4gICk7XG59XG4iLCJpbXBvcnQgdHlwZSB7IE1wU2RrIH0gZnJvbSAnQHNkay90eXBlcyc7XG5pbXBvcnQgeyBGcmFnbWVudCwgdXNlQ2FsbGJhY2ssIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2RrOiBNcFNkaztcbiAgc2VsZWN0ZWRBc3NldDogc3RyaW5nO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gQWRkKHByb3BzOiBQcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgY29uc3QgbGFiZWxJbnB1dCA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcbiAgY29uc3QgZGVzY0lucHV0ID0gdXNlUmVmPEhUTUxUZXh0QXJlYUVsZW1lbnQ+KG51bGwpO1xuXG4gIGNvbnN0IHhJbnB1dCA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcbiAgY29uc3QgeUlucHV0ID0gdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwpO1xuICBjb25zdCB6SW5wdXQgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG5cbiAgY29uc3QgeE5vcm1JbnB1dCA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcbiAgY29uc3QgeU5vcm1JbnB1dCA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcbiAgY29uc3Qgek5vcm1JbnB1dCA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcblxuICBjb25zdCBpZElucHV0ID0gdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwpO1xuICBjb25zdCBvcGFjaXR5SW5wdXQgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG4gIGNvbnN0IHN1Ym1pdEljb24gPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG5cbiAgY29uc3QgYWRkVGFnID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGlmIChcbiAgICAgIGxhYmVsSW5wdXQuY3VycmVudCAmJlxuICAgICAgZGVzY0lucHV0LmN1cnJlbnQgJiZcbiAgICAgIHhJbnB1dC5jdXJyZW50ICYmXG4gICAgICB5SW5wdXQuY3VycmVudCAmJlxuICAgICAgeklucHV0LmN1cnJlbnQgJiZcbiAgICAgIHhOb3JtSW5wdXQuY3VycmVudCAmJlxuICAgICAgeU5vcm1JbnB1dC5jdXJyZW50ICYmXG4gICAgICB6Tm9ybUlucHV0LmN1cnJlbnQgJiZcbiAgICAgIGlkSW5wdXQuY3VycmVudCAmJlxuICAgICAgb3BhY2l0eUlucHV0LmN1cnJlbnRcbiAgICApIHtcbiAgICAgIHByb3BzLnNkay5UYWcuYWRkKHtcbiAgICAgICAgaWQ6IGlkSW5wdXQuY3VycmVudC52YWx1ZSA9PT0gJycgPyB1bmRlZmluZWQgOiBpZElucHV0LmN1cnJlbnQudmFsdWUsXG4gICAgICAgIGxhYmVsOiBsYWJlbElucHV0LmN1cnJlbnQudmFsdWUsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBkZXNjSW5wdXQuY3VycmVudC52YWx1ZSxcbiAgICAgICAgYW5jaG9yUG9zaXRpb246IHtcbiAgICAgICAgICB4OiBwYXJzZUZsb2F0KHhJbnB1dC5jdXJyZW50LnZhbHVlKSxcbiAgICAgICAgICB5OiBwYXJzZUZsb2F0KHlJbnB1dC5jdXJyZW50LnZhbHVlKSxcbiAgICAgICAgICB6OiBwYXJzZUZsb2F0KHpJbnB1dC5jdXJyZW50LnZhbHVlKSxcbiAgICAgICAgfSxcbiAgICAgICAgc3RlbVZlY3Rvcjoge1xuICAgICAgICAgIHg6IHBhcnNlRmxvYXQoeE5vcm1JbnB1dC5jdXJyZW50LnZhbHVlKSxcbiAgICAgICAgICB5OiBwYXJzZUZsb2F0KHlOb3JtSW5wdXQuY3VycmVudC52YWx1ZSksXG4gICAgICAgICAgejogcGFyc2VGbG9hdCh6Tm9ybUlucHV0LmN1cnJlbnQudmFsdWUpLFxuICAgICAgICB9LFxuICAgICAgICBvcGFjaXR5OiBwYXJzZUZsb2F0KG9wYWNpdHlJbnB1dC5jdXJyZW50LnZhbHVlKSxcbiAgICAgICAgaWNvbklkOiAoc3VibWl0SWNvbi5jdXJyZW50Py5jaGVja2VkICYmIHByb3BzLnNlbGVjdGVkQXNzZXQpID8gcHJvcHMuc2VsZWN0ZWRBc3NldCA6IHVuZGVmaW5lZCxcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwgW3Byb3BzLnNkay5UYWcsIHByb3BzLnNlbGVjdGVkQXNzZXRdKTtcblxuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxsYWJlbCBodG1sRm9yPSd0YWcyLWFkZC10aXRsZSc+VGl0bGU6PC9sYWJlbD5cbiAgICAgICAgPGlucHV0IHJlZj17bGFiZWxJbnB1dH0gdHlwZT0ndGV4dCcgaWQ9J3RhZzItYWRkLXRpdGxlJyAvPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2PlxuICAgICAgICA8bGFiZWwgaHRtbEZvcj0ndGFnMi1hZGQtZGVzYyc+RGVzYzo8L2xhYmVsPlxuICAgICAgICA8dGV4dGFyZWEgcmVmPXtkZXNjSW5wdXR9IGlkPSd0YWcyLWFkZC1kZXNjJyAvPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2PlxuICAgICAgICA8ZGl2PnBvc2l0aW9uOjwvZGl2PlxuICAgICAgICA8bGFiZWwgaHRtbEZvcj0ndGFnMi1hZGQtcG9zLXgnPng6IDwvbGFiZWw+XG4gICAgICAgIDxpbnB1dCByZWY9e3hJbnB1dH0gY2xhc3NOYW1lPSdzbWFsbC1pbnB1dCcgaWQ9J3RhZzItYWRkLXBvcy14JyB0eXBlPSdudW1iZXInIHN0ZXA9JzAuMDAxJyBkZWZhdWx0VmFsdWU9JzAnIC8+XG4gICAgICAgIDxsYWJlbCBodG1sRm9yPSd0YWcyLWFkZC1wb3MteSc+eTogPC9sYWJlbD5cbiAgICAgICAgPGlucHV0IHJlZj17eUlucHV0fSBjbGFzc05hbWU9J3NtYWxsLWlucHV0JyBpZD0ndGFnMi1hZGQtcG9zLXknIHR5cGU9J251bWJlcicgc3RlcD0nMC4wMDEnIGRlZmF1bHRWYWx1ZT0nMCcgLz5cbiAgICAgICAgPGxhYmVsIGh0bWxGb3I9J3RhZzItYWRkLXBvcy16Jz56OiA8L2xhYmVsPlxuICAgICAgICA8aW5wdXQgcmVmPXt6SW5wdXR9IGNsYXNzTmFtZT0nc21hbGwtaW5wdXQnIGlkPSd0YWcyLWFkZC1wb3MteicgdHlwZT0nbnVtYmVyJyBzdGVwPScwLjAwMScgZGVmYXVsdFZhbHVlPScwJyAvPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2PlxuICAgICAgICA8ZGl2Pm5vcm1hbDo8L2Rpdj5cbiAgICAgICAgPGxhYmVsIGh0bWxGb3I9J3RhZzItYWRkLW5vcm0teCc+eDogPC9sYWJlbD5cbiAgICAgICAgPGlucHV0IHJlZj17eE5vcm1JbnB1dH0gY2xhc3NOYW1lPSdzbWFsbC1pbnB1dCcgaWQ9J3RhZzItYWRkLW5vcm0teCcgdHlwZT0nbnVtYmVyJyBzdGVwPScwLjAwMScgZGVmYXVsdFZhbHVlPScwJyAvPlxuICAgICAgICA8bGFiZWwgaHRtbEZvcj0ndGFnMi1hZGQtbm9ybS15Jz55OiA8L2xhYmVsPlxuICAgICAgICA8aW5wdXQgcmVmPXt5Tm9ybUlucHV0fSBjbGFzc05hbWU9J3NtYWxsLWlucHV0JyBpZD0ndGFnMi1hZGQtbm9ybS15JyB0eXBlPSdudW1iZXInIHN0ZXA9JzAuMDAxJyBkZWZhdWx0VmFsdWU9JzEnIC8+XG4gICAgICAgIDxsYWJlbCBodG1sRm9yPSd0YWcyLWFkZC1ub3JtLXonPno6IDwvbGFiZWw+XG4gICAgICAgIDxpbnB1dCByZWY9e3pOb3JtSW5wdXR9IGNsYXNzTmFtZT0nc21hbGwtaW5wdXQnIGlkPSd0YWcyLWFkZC1ub3JtLXonIHR5cGU9J251bWJlcicgc3RlcD0nMC4wMDEnIGRlZmF1bHRWYWx1ZT0nMCcgLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGxhYmVsIGh0bWxGb3I9J3RhZzItYWRkLWlkJz5pZDogPC9sYWJlbD5cbiAgICAgICAgPGlucHV0IHJlZj17aWRJbnB1dH0gY2xhc3NOYW1lPSdzbWFsbC1pbnB1dCcgaWQ9J3RhZzItYWRkLWlkJyB0eXBlPSdzdHJpbmcnIC8+XG4gICAgICAgIDxsYWJlbCBodG1sRm9yPSd0YWcyLWFkZC1vcGFjaXR5Jz5vcGFjaXR5OiA8L2xhYmVsPlxuICAgICAgICA8aW5wdXQgcmVmPXtvcGFjaXR5SW5wdXR9IGNsYXNzTmFtZT0nc21hbGwtaW5wdXQnIGlkPSd0YWcyLWFkZC1vcGFjaXR5JyB0eXBlPSdudW1iZXInIHN0ZXA9JzAuMDEnIGRlZmF1bHRWYWx1ZT0nMScgLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgaWNvbjogPGlucHV0IHJlZj17c3VibWl0SWNvbn0gdHlwZT0nY2hlY2tib3gnIGRlZmF1bHRDaGVja2VkPXtmYWxzZX0gLz5cbiAgICAgICAgPGlucHV0IHR5cGU9J3RleHQnIHJlYWRPbmx5PXt0cnVlfSB2YWx1ZT17cHJvcHMuc2VsZWN0ZWRBc3NldH0gLz5cbiAgICAgICAgPGJ1dHRvbiBpZD0ndGFnMi1hZGQnIG9uQ2xpY2s9e2FkZFRhZ30+QWRkPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICA8L0ZyYWdtZW50PlxuICApO1xufVxuIiwiaW1wb3J0IHR5cGUgeyBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuaW1wb3J0IHsgRnJhZ21lbnQsIHVzZUNhbGxiYWNrLCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBzZGs6IE1wU2RrO1xuICBzZWxlY3RlZFRhZzogc3RyaW5nO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gQWxsb3dBY3Rpb24ocHJvcHM6IFByb3BzKTogSlNYLkVsZW1lbnQge1xuICBjb25zdCBhbGxvd0RvY2tpbmcgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG4gIGNvbnN0IGFsbG93T3BlbmluZyA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcbiAgY29uc3QgYWxsb3dOYXZpZ2F0aW9uID0gdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwpO1xuICBjb25zdCBhbGxvd1NoYXJpbmcgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG5cbiAgY29uc3QgW2FsbG93ZWRBY3Rpb25zLCBzZXRBbGxvd2VkQWN0aW9uc10gPSB1c2VTdGF0ZShuZXcgTWFwPHN0cmluZywgeyBkb2NraW5nOiBib29sZWFuOyBvcGVuaW5nOiBib29sZWFuOyBuYXZpZ2F0aW5nOiBib29sZWFuOyBzaGFyaW5nOiBib29sZWFuOyB9PigpKTtcblxuICBjb25zdCBhbGxvd0FjdGlvbnMgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgaWYgKGFsbG93RG9ja2luZy5jdXJyZW50ICYmIGFsbG93T3BlbmluZy5jdXJyZW50ICYmIGFsbG93TmF2aWdhdGlvbi5jdXJyZW50ICYmIGFsbG93U2hhcmluZy5jdXJyZW50KSB7XG4gICAgICBwcm9wcy5zZGsuVGFnLmFsbG93QWN0aW9uKHByb3BzLnNlbGVjdGVkVGFnLCB7XG4gICAgICAgIGRvY2tpbmc6IGFsbG93RG9ja2luZy5jdXJyZW50LmNoZWNrZWQsXG4gICAgICAgIG9wZW5pbmc6IGFsbG93T3BlbmluZy5jdXJyZW50LmNoZWNrZWQsXG4gICAgICAgIG5hdmlnYXRpbmc6IGFsbG93TmF2aWdhdGlvbi5jdXJyZW50LmNoZWNrZWQsXG4gICAgICAgIHNoYXJpbmc6IGFsbG93U2hhcmluZy5jdXJyZW50LmNoZWNrZWQsXG4gICAgICB9KTtcbiAgICB9XG4gIH0sIFtwcm9wcy5zZGsuVGFnLCBwcm9wcy5zZWxlY3RlZFRhZ10pO1xuXG4gIGNvbnN0IGNoYW5nZUFsbG93ZWRBY3Rpb25zOiBSZWFjdC5DaGFuZ2VFdmVudEhhbmRsZXI8SFRNTElucHV0RWxlbWVudD4gPSB1c2VDYWxsYmFjaygoZSkgPT4ge1xuICAgIGNvbnN0IGN1cnJlbnRBY3Rpb25zID0gYWxsb3dlZEFjdGlvbnMuZ2V0KHByb3BzLnNlbGVjdGVkVGFnKSB8fCB7IGRvY2tpbmc6IHRydWUsIG9wZW5pbmc6IHRydWUsIG5hdmlnYXRpbmc6IHRydWUsIHNoYXJpbmc6IHRydWUgfTtcbiAgICBpZiAoZS50YXJnZXQgPT09IGFsbG93RG9ja2luZy5jdXJyZW50KSB7XG4gICAgICBjdXJyZW50QWN0aW9ucy5kb2NraW5nID0gIWN1cnJlbnRBY3Rpb25zLmRvY2tpbmc7XG4gICAgfVxuICAgIGlmIChlLnRhcmdldCA9PT0gYWxsb3dOYXZpZ2F0aW9uLmN1cnJlbnQpIHtcbiAgICAgIGN1cnJlbnRBY3Rpb25zLm5hdmlnYXRpbmcgPSAhY3VycmVudEFjdGlvbnMubmF2aWdhdGluZztcbiAgICB9XG4gICAgaWYgKGUudGFyZ2V0ID09PSBhbGxvd09wZW5pbmcuY3VycmVudCkge1xuICAgICAgY3VycmVudEFjdGlvbnMub3BlbmluZyA9ICFjdXJyZW50QWN0aW9ucy5vcGVuaW5nO1xuICAgIH1cbiAgICBpZiAoZS50YXJnZXQgPT09IGFsbG93U2hhcmluZy5jdXJyZW50KSB7XG4gICAgICBjdXJyZW50QWN0aW9ucy5zaGFyaW5nID0gIWN1cnJlbnRBY3Rpb25zLnNoYXJpbmc7XG4gICAgfVxuXG4gICAgYWxsb3dlZEFjdGlvbnMuc2V0KHByb3BzLnNlbGVjdGVkVGFnLCBjdXJyZW50QWN0aW9ucyk7XG4gICAgc2V0QWxsb3dlZEFjdGlvbnMobmV3IE1hcChhbGxvd2VkQWN0aW9ucykpO1xuICAgIGFsbG93QWN0aW9ucygpO1xuICB9LCBbYWxsb3dBY3Rpb25zLCBhbGxvd2VkQWN0aW9ucywgcHJvcHMuc2VsZWN0ZWRUYWddKTtcblxuICBjb25zdCBzZWxlY3RlZFRhZ0FjdGlvbnMgPSBhbGxvd2VkQWN0aW9ucy5nZXQocHJvcHMuc2VsZWN0ZWRUYWcpIHx8IHsgZG9ja2luZzogdHJ1ZSwgb3BlbmluZzogdHJ1ZSwgbmF2aWdhdGluZzogdHJ1ZSwgc2hhcmluZzogdHJ1ZSB9O1xuXG4gIHJldHVybiAoXG4gICAgPEZyYWdtZW50PlxuICAgICAgPGRpdj5cbiAgICAgICAgKGNoZWNrZWQgPT0gYWxsb3dlZClcbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGxhYmVsIGh0bWxGb3I9J3RhZzItYWxsb3ctb3Blbic+QmlsbGJvYXJkOjwvbGFiZWw+XG4gICAgICAgIDxpbnB1dCByZWY9e2FsbG93T3BlbmluZ30gdHlwZT0nY2hlY2tib3gnIGlkPSd0YWcyLWFsbG93LW9wZW4nIG9uQ2hhbmdlPXtjaGFuZ2VBbGxvd2VkQWN0aW9uc30gY2hlY2tlZD17c2VsZWN0ZWRUYWdBY3Rpb25zLm9wZW5pbmd9Lz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGxhYmVsIGh0bWxGb3I9J3RhZzItYWxsb3ctbmF2Jz5OYXZpZ2F0aW9uOjwvbGFiZWw+XG4gICAgICAgIDxpbnB1dCByZWY9e2FsbG93TmF2aWdhdGlvbn0gdHlwZT0nY2hlY2tib3gnIGlkPSd0YWcyLWFsbG93LW5hdicgb25DaGFuZ2U9e2NoYW5nZUFsbG93ZWRBY3Rpb25zfSBjaGVja2VkPXtzZWxlY3RlZFRhZ0FjdGlvbnMubmF2aWdhdGluZ30vPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2PlxuICAgICAgICA8bGFiZWwgaHRtbEZvcj0ndGFnMi1hbGxvdy1kb2NrJz5Eb2NrOjwvbGFiZWw+XG4gICAgICAgIDxpbnB1dCByZWY9e2FsbG93RG9ja2luZ30gdHlwZT0nY2hlY2tib3gnIGlkPSd0YWcyLWFsbG93LWRvY2snIG9uQ2hhbmdlPXtjaGFuZ2VBbGxvd2VkQWN0aW9uc30gY2hlY2tlZD17c2VsZWN0ZWRUYWdBY3Rpb25zLmRvY2tpbmd9Lz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGxhYmVsIGh0bWxGb3I9J3RhZzItYWxsb3ctc2hhcmUnPlNoYXJlOjwvbGFiZWw+XG4gICAgICAgIDxpbnB1dCByZWY9e2FsbG93U2hhcmluZ30gdHlwZT0nY2hlY2tib3gnIGlkPSd0YWcyLWFsbG93LXNoYXJlJyBvbkNoYW5nZT17Y2hhbmdlQWxsb3dlZEFjdGlvbnN9IGNoZWNrZWQ9e3NlbGVjdGVkVGFnQWN0aW9ucy5zaGFyaW5nfS8+XG4gICAgICA8L2Rpdj5cbiAgICA8L0ZyYWdtZW50PlxuICApO1xufVxuIiwiaW1wb3J0IHR5cGUgeyBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuaW1wb3J0IHsgRnJhZ21lbnQsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBzZGs6IE1wU2RrO1xuICBzZWxlY3RlZFRhZzogc3RyaW5nO1xuICBzZWxlY3RlZEF0dGFjaG1lbnQ6IHN0cmluZztcbn1cblxuY29uc3QgbGFiZWxTdHlsZTogUmVhY3QuQ1NTUHJvcGVydGllcyA9IHtcbiAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gIHdpZHRoOiAnODBweCcsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gQXR0YWNoKHsgc2RrLCBzZWxlY3RlZFRhZywgc2VsZWN0ZWRBdHRhY2htZW50fTogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IGF0dGFjaCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBzZGsuVGFnLmF0dGFjaChzZWxlY3RlZFRhZywgc2VsZWN0ZWRBdHRhY2htZW50KTtcbiAgfSwgW3Nkay5UYWcsIHNlbGVjdGVkQXR0YWNobWVudCwgc2VsZWN0ZWRUYWddKTtcblxuICBjb25zdCBkZXRhY2ggPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgc2RrLlRhZy5kZXRhY2goc2VsZWN0ZWRUYWcsIHNlbGVjdGVkQXR0YWNobWVudCk7XG4gIH0sIFtzZGsuVGFnLCBzZWxlY3RlZEF0dGFjaG1lbnQsIHNlbGVjdGVkVGFnXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8RnJhZ21lbnQ+XG4gICAgICA8ZGl2PlxuICAgICAgICA8bGFiZWwgc3R5bGU9e2xhYmVsU3R5bGV9PlRhZzo8L2xhYmVsPjxpbnB1dCB0eXBlPSd0ZXh0JyByZWFkT25seSBwbGFjZWhvbGRlcj17Jyhub25lKSd9IHZhbHVlPXtzZWxlY3RlZFRhZ30gLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGxhYmVsIHN0eWxlPXtsYWJlbFN0eWxlfT5BdHRhY2htZW50OjwvbGFiZWw+PGlucHV0IHR5cGU9J3RleHQnIHJlYWRPbmx5IHBsYWNlaG9sZGVyPXsnKG5vbmUpJ30gdmFsdWU9e3NlbGVjdGVkQXR0YWNobWVudH0gLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXthdHRhY2h9PkF0dGFjaDwvYnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2PlxuICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e2RldGFjaH0+RGV0YWNoPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICA8L0ZyYWdtZW50PlxuICApO1xufVxuIiwiaW1wb3J0IHR5cGUgeyBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuaW1wb3J0IHsgRnJhZ21lbnQsIHVzZUNhbGxiYWNrLCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHNkazogTXBTZGs7XG4gIHNlbGVjdGVkVGFnOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBFZGl0QmlsbGJvYXJkKHByb3BzOiBQcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgY29uc3QgdGl0bGVJbnB1dCA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcbiAgY29uc3QgZGVzY0lucHV0ID0gdXNlUmVmPEhUTUxUZXh0QXJlYUVsZW1lbnQ+KG51bGwpO1xuXG4gIGNvbnN0IGVkaXRUYWcgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgaWYgKHRpdGxlSW5wdXQuY3VycmVudCAmJiBkZXNjSW5wdXQuY3VycmVudCkge1xuICAgICAgcHJvcHMuc2RrLlRhZy5lZGl0QmlsbGJvYXJkKHByb3BzLnNlbGVjdGVkVGFnLCB7XG4gICAgICAgIGxhYmVsOiB0aXRsZUlucHV0LmN1cnJlbnQudmFsdWUgfHwgdW5kZWZpbmVkLFxuICAgICAgICBkZXNjcmlwdGlvbjogZGVzY0lucHV0LmN1cnJlbnQudmFsdWUgfHwgdW5kZWZpbmVkLFxuICAgICAgfSk7XG4gICAgfVxuICB9LCBbcHJvcHMuc2RrLlRhZywgcHJvcHMuc2VsZWN0ZWRUYWddKTtcblxuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxsYWJlbCBodG1sRm9yPSd0YWcyLWVkaXQtdGl0bGUnPlRpdGxlOjwvbGFiZWw+XG4gICAgICAgIDxpbnB1dCByZWY9e3RpdGxlSW5wdXR9IHR5cGU9J3RleHQnIGlkPSd0YWcyLWVkaXQtdGl0bGUnLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGxhYmVsIGh0bWxGb3I9J3RhZzItZWRpdC1kZXNjJz5EZXNjOjwvbGFiZWw+XG4gICAgICAgIDx0ZXh0YXJlYSByZWY9e2Rlc2NJbnB1dH0gaWQ9J3RhZzItZWRpdC1kZXNjJy8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxidXR0b24gaWQ9J3RhZzItZWRpdCcgb25DbGljaz17ZWRpdFRhZ30+RWRpdDwvYnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9GcmFnbWVudD5cbiAgKTtcbn1cbiIsImltcG9ydCB7IHR5cGUgTXBTZGsgfSBmcm9tICdAc2RrL3R5cGVzJztcbmltcG9ydCB7IHR5cGUgQ2hhbmdlRXZlbnQsIHVzZUNhbGxiYWNrLCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHNkazogTXBTZGs7XG4gIHNlbGVjdGVkVGFnOiBNcFNkay5UYWcuVGFnRGF0YSB8IHVuZGVmaW5lZDtcbn1cblxuY29uc3QgbGFiZWxTdHlsZTogUmVhY3QuQ1NTUHJvcGVydGllcyA9IHtcbiAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gIHdpZHRoOiAnODBweCcsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gRWRpdEVuYWJsZWQoe3Nkaywgc2VsZWN0ZWRUYWd9OiBQcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgY29uc3QgZW5hYmxlZElucHV0ID0gdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwpO1xuXG4gIGNvbnN0IGVkaXRFbmFibGVkID0gdXNlQ2FsbGJhY2soKGU6IENoYW5nZUV2ZW50PEhUTUxJbnB1dEVsZW1lbnQ+KSA9PiB7XG4gICAgaWYgKCFzZWxlY3RlZFRhZyB8fCAhZW5hYmxlZElucHV0LmN1cnJlbnQpIHJldHVybjtcbiAgICBzZWxlY3RlZFRhZy5lbmFibGVkID0gZW5hYmxlZElucHV0LmN1cnJlbnQuY2hlY2tlZDtcbiAgfSwgW3NlbGVjdGVkVGFnXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGxhYmVsIHN0eWxlPXtsYWJlbFN0eWxlfT5UYWc6PC9sYWJlbD5cbiAgICAgICAgPGlucHV0IHR5cGU9J3RleHQnIHJlYWRPbmx5IHBsYWNlaG9sZGVyPSdub25lJyB2YWx1ZT17c2VsZWN0ZWRUYWcgPyBzZWxlY3RlZFRhZy5pZCA6ICdObyBUYWcgc2VsZWN0ZWQnfSAvPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2PlxuICAgICAgICA8bGFiZWwgc3R5bGU9e2xhYmVsU3R5bGV9PkVuYWJsZWQ6PC9sYWJlbD5cbiAgICAgICAgPGlucHV0IHR5cGU9J2NoZWNrYm94JyByZWY9e2VuYWJsZWRJbnB1dH0gb25DaGFuZ2U9e2VkaXRFbmFibGVkfSBjaGVja2VkPXshIXNlbGVjdGVkVGFnPy5lbmFibGVkfSAvPlxuICAgICAgPC9kaXY+XG4gICAgPC8+XG4gICk7XG59XG4iLCJpbXBvcnQgdHlwZSB7IE1wU2RrIH0gZnJvbSAnQHNkay90eXBlcyc7XG5pbXBvcnQgeyBGcmFnbWVudCwgdXNlQ2FsbGJhY2ssIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2RrOiBNcFNkaztcbiAgc2VsZWN0ZWRUYWc6IHN0cmluZztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIEVkaXRDb2xvcihwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IHJJbnB1dCA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcbiAgY29uc3QgZ0lucHV0ID0gdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwpO1xuICBjb25zdCBiSW5wdXQgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG5cbiAgY29uc3QgZWRpdENvbG9yID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGlmIChcbiAgICAgIHJJbnB1dC5jdXJyZW50ICYmXG4gICAgICBnSW5wdXQuY3VycmVudCAmJlxuICAgICAgYklucHV0LmN1cnJlbnRcbiAgICApIHtcbiAgICAgIHByb3BzLnNkay5UYWcuZWRpdENvbG9yKHByb3BzLnNlbGVjdGVkVGFnLCB7XG4gICAgICAgIHI6IHBhcnNlRmxvYXQocklucHV0LmN1cnJlbnQudmFsdWUpLFxuICAgICAgICBnOiBwYXJzZUZsb2F0KGdJbnB1dC5jdXJyZW50LnZhbHVlKSxcbiAgICAgICAgYjogcGFyc2VGbG9hdChiSW5wdXQuY3VycmVudC52YWx1ZSksXG4gICAgICB9KTtcbiAgICB9XG4gIH0sIFtwcm9wcy5zZGsuVGFnLCBwcm9wcy5zZWxlY3RlZFRhZ10pO1xuXG4gIHJldHVybiAoXG4gICAgPEZyYWdtZW50PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGxhYmVsIGh0bWxGb3I9J3RhZzItY29sb3Itcic+UjogPC9sYWJlbD5cbiAgICAgICAgPGlucHV0IHJlZj17cklucHV0fSBjbGFzc05hbWU9J3NtYWxsLWlucHV0JyBpZD0ndGFnMi1jb2xvci1yJyB0eXBlPSdudW1iZXInIHN0ZXA9ezAuMDF9IGRlZmF1bHRWYWx1ZT17MX0gIG1pbj17MH0gbWF4PXswLjc1fSAvPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2PlxuICAgICAgICA8bGFiZWwgaHRtbEZvcj0ndGFnMi1jb2xvci1nJz5HOiA8L2xhYmVsPlxuICAgICAgICA8aW5wdXQgcmVmPXtnSW5wdXR9IGNsYXNzTmFtZT0nc21hbGwtaW5wdXQnIGlkPSd0YWcyLWNvbG9yLWcnIHR5cGU9J251bWJlcicgc3RlcD17MC4wMX0gZGVmYXVsdFZhbHVlPXswfSAgbWluPXswfSBtYXg9ezF9IC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxsYWJlbCBodG1sRm9yPSd0YWcyLWNvbG9yLWInPkI6IDwvbGFiZWw+XG4gICAgICAgIDxpbnB1dCByZWY9e2JJbnB1dH0gY2xhc3NOYW1lPSdzbWFsbC1pbnB1dCcgaWQ9J3RhZzItY29sb3ItYicgdHlwZT0nbnVtYmVyJyBzdGVwPXswLjAxfSBkZWZhdWx0VmFsdWU9ezF9ICBtaW49ezB9IG1heD17MC43NX0gLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGJ1dHRvbiBpZD0ndGFnMi1lZGl0LWNvbG9yJyBvbkNsaWNrPXtlZGl0Q29sb3J9PkVkaXQgQ29sb3I8L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvRnJhZ21lbnQ+XG4gICk7XG59XG4iLCJpbXBvcnQgdHlwZSB7IE1wU2RrIH0gZnJvbSAnQHNkay90eXBlcyc7XG5pbXBvcnQgeyBGcmFnbWVudCwgdXNlQ2FsbGJhY2ssIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHNkazogTXBTZGs7XG4gIHNlbGVjdGVkVGFnOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBFZGl0U3RlbShwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IFtzdWJtaXRIZWlnaHQsIHNldFN1Ym1pdEhlaWdodF0gPSB1c2VTdGF0ZSh0cnVlKTtcbiAgY29uc3QgW3N1Ym1pdFZpc2liaWxpdHksIHNldFN1Ym1pdFZpc2liaWxpdHldID0gdXNlU3RhdGUodHJ1ZSk7XG5cbiAgY29uc3QgaGVpZ2h0SW5wdXQgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG4gIGNvbnN0IHZpc2libGVJbnB1dCA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcblxuICBjb25zdCBzdWJtaXRIZWlnaHRDaGFuZ2VkID0gdXNlQ2FsbGJhY2soZnVuY3Rpb24gKCkge1xuICAgIHNldFN1Ym1pdEhlaWdodCghc3VibWl0SGVpZ2h0KTtcbiAgfSwgW3N1Ym1pdEhlaWdodF0pO1xuXG4gIGNvbnN0IHN1Ym1pdFZpc2liaWxpdHlDaGFuZ2VkID0gdXNlQ2FsbGJhY2soZnVuY3Rpb24gKCkge1xuICAgIHNldFN1Ym1pdFZpc2liaWxpdHkoIXN1Ym1pdFZpc2liaWxpdHkpO1xuICB9LCBbc3VibWl0VmlzaWJpbGl0eV0pO1xuXG4gIGNvbnN0IGVkaXRTdGVtID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGlmIChcbiAgICAgIGhlaWdodElucHV0LmN1cnJlbnQgJiYgdmlzaWJsZUlucHV0LmN1cnJlbnRcbiAgICApIHtcbiAgICAgIHByb3BzLnNkay5UYWcuZWRpdFN0ZW0ocHJvcHMuc2VsZWN0ZWRUYWcsIHtcbiAgICAgICAgc3RlbVZpc2libGU6IHN1Ym1pdFZpc2liaWxpdHkgPyB2aXNpYmxlSW5wdXQuY3VycmVudC5jaGVja2VkIDogdW5kZWZpbmVkLFxuICAgICAgICBzdGVtSGVpZ2h0OiAgc3VibWl0SGVpZ2h0ID8gcGFyc2VGbG9hdChoZWlnaHRJbnB1dC5jdXJyZW50LnZhbHVlKSA6IHVuZGVmaW5lZCxcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwgW3Byb3BzLnNkay5UYWcsIHByb3BzLnNlbGVjdGVkVGFnLCBzdWJtaXRIZWlnaHQsIHN1Ym1pdFZpc2liaWxpdHldKTtcblxuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxpbnB1dCB0eXBlPSdjaGVja2JveCcgY2hlY2tlZD17c3VibWl0SGVpZ2h0fSBvbkNoYW5nZT17c3VibWl0SGVpZ2h0Q2hhbmdlZH0gLz5cbiAgICAgICAgPGxhYmVsIGh0bWxGb3I9J3RhZzItc3RlbS1oZWlnaHQnPnN0ZW0gaGVpZ2h0OiA8L2xhYmVsPlxuICAgICAgICA8aW5wdXQgcmVmPXtoZWlnaHRJbnB1dH0gY2xhc3NOYW1lPSdzbWFsbC1pbnB1dCcgaWQ9J3RhZzItaGVpZ2h0LXN0ZW0nIHR5cGU9J251bWJlcicgc3RlcD17MC4xfSBkZWZhdWx0VmFsdWU9ezF9ICBtaW49ezB9IGRpc2FibGVkPXshc3VibWl0SGVpZ2h0fSAvPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2PlxuICAgICAgICA8aW5wdXQgdHlwZT0nY2hlY2tib3gnIGNoZWNrZWQ9e3N1Ym1pdFZpc2liaWxpdHl9IG9uQ2hhbmdlPXtzdWJtaXRWaXNpYmlsaXR5Q2hhbmdlZH0gLz5cbiAgICAgICAgPGxhYmVsIGh0bWxGb3I9J3RhZzItc3RlbS12aXNpYmxlJz5zdGVtIHZpc2libGU6PC9sYWJlbD5cbiAgICAgICAgPGlucHV0IHJlZj17dmlzaWJsZUlucHV0fSB0eXBlPSdjaGVja2JveCcgaWQ9J3RhZzItc3RlbS12aXNpYmxlJyBkaXNhYmxlZD17IXN1Ym1pdFZpc2liaWxpdHl9IC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxidXR0b24gaWQ9J3RhZzItZWRpdC1zdGVtJyBvbkNsaWNrPXtlZGl0U3RlbX0+RWRpdCBTdGVtPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICA8L0ZyYWdtZW50PlxuICApO1xufVxuIiwiaW1wb3J0IHR5cGUgeyBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuaW1wb3J0IHsgdHlwZSBDaGFuZ2VFdmVudCwgRnJhZ21lbnQsIHVzZUNhbGxiYWNrLCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBzZGs6IE1wU2RrO1xuICBzZWxlY3RlZFRhZzogc3RyaW5nO1xuICBzZWxlY3RlZEFzc2V0OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBFZGl0SWNvbihwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IGlkSW5wdXQgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG4gIGNvbnN0IFt1c2VTZWxlY3RlZEFzc2V0LCBzZXRVc2VTZWxlY3RlZEFzc2V0XSA9IHVzZVN0YXRlPGJvb2xlYW4+KHRydWUpO1xuXG4gIGNvbnN0IGVkaXRJY29uID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGlmICh1c2VTZWxlY3RlZEFzc2V0KSB7XG4gICAgICBwcm9wcy5zZGsuVGFnLmVkaXRJY29uKHByb3BzLnNlbGVjdGVkVGFnLCBwcm9wcy5zZWxlY3RlZEFzc2V0KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoaWRJbnB1dC5jdXJyZW50ID09PSBudWxsKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgcHJvcHMuc2RrLlRhZy5lZGl0SWNvbihwcm9wcy5zZWxlY3RlZFRhZywgaWRJbnB1dC5jdXJyZW50LnZhbHVlKTtcbiAgfSwgW3Byb3BzLnNkay5UYWcsIHByb3BzLnNlbGVjdGVkQXNzZXQsIHByb3BzLnNlbGVjdGVkVGFnLCB1c2VTZWxlY3RlZEFzc2V0XSk7XG5cbiAgY29uc3QgcmVzZXRJY29uID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHByb3BzLnNkay5UYWcucmVzZXRJY29uKHByb3BzLnNlbGVjdGVkVGFnKTtcbiAgfSwgW3Byb3BzLnNkay5UYWcsIHByb3BzLnNlbGVjdGVkVGFnXSk7XG5cbiAgY29uc3Qgb25Vc2VTZWxlY3RlZEFzc2V0Q2hhbmdlZCA9IChldmVudDogQ2hhbmdlRXZlbnQ8SFRNTElucHV0RWxlbWVudD4pID0+IHtcbiAgICBzZXRVc2VTZWxlY3RlZEFzc2V0KGV2ZW50LnRhcmdldC5jaGVja2VkKTtcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDxkaXY+XG4gICAgICAgIFVzZSBzZWxlY3RlZCBBc3NldD9cbiAgICAgICAgPGlucHV0XG4gICAgICAgICAgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgICBvbkNoYW5nZT17b25Vc2VTZWxlY3RlZEFzc2V0Q2hhbmdlZH1cbiAgICAgICAgICBkZWZhdWx0Q2hlY2tlZD17dXNlU2VsZWN0ZWRBc3NldH1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgICAgeyF1c2VTZWxlY3RlZEFzc2V0ID9cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgPGRpdiBzdHlsZT17eyBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJywgd2lkdGg6ICcxNSUnIH19PlxuICAgICAgICAgICAgICA8bGFiZWwgaHRtbEZvcj0nbWF0dGVydGFnLWljb24taWQnPmlkOiA8L2xhYmVsPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IHN0eWxlPXt7IGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLCB3aWR0aDogJzg1JScgfX0+XG4gICAgICAgICAgICAgIDxpbnB1dCByZWY9e2lkSW5wdXR9IGlkPSdtYXR0ZXJ0YWctaWNvbi1pZCcgdHlwZT0nc3RyaW5nJyBkZWZhdWx0VmFsdWU9e3Byb3BzLnNlbGVjdGVkQXNzZXR9IC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDpcbiAgICAgICAgbnVsbFxuICAgICAgfVxuICAgICAgPGRpdj5cbiAgICAgICAgPGJ1dHRvbiBpZD0ndGFnMi1lZGl0LWljb24nIG9uQ2xpY2s9e2VkaXRJY29ufT5FZGl0IEljb248L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGJ1dHRvbiBpZD0ndGFnMi1yZXNldC1pY29uJyBvbkNsaWNrPXtyZXNldEljb259PlJlc2V0IEljb248L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvRnJhZ21lbnQ+XG4gICk7XG59XG4iLCJpbXBvcnQgdHlwZSB7IE1wU2RrIH0gZnJvbSAnQHNkay90eXBlcyc7XG5pbXBvcnQgeyBGcmFnbWVudCwgdXNlQ2FsbGJhY2ssIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2RrOiBNcFNkaztcbiAgc2VsZWN0ZWRUYWc6IHN0cmluZztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIEVkaXRPcGFjaXR5KHByb3BzOiBQcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgY29uc3Qgb3BhY2l0eUlucHV0ID0gdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwpO1xuXG4gIGNvbnN0IGVkaXRPcGFjaXR5ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGlmIChvcGFjaXR5SW5wdXQuY3VycmVudCkge1xuICAgICAgcHJvcHMuc2RrLlRhZy5lZGl0T3BhY2l0eShwcm9wcy5zZWxlY3RlZFRhZywgcGFyc2VGbG9hdChvcGFjaXR5SW5wdXQuY3VycmVudC52YWx1ZSkpO1xuICAgIH1cbiAgfSwgW3Byb3BzLnNkay5UYWcsIHByb3BzLnNlbGVjdGVkVGFnXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8RnJhZ21lbnQ+XG4gICAgICA8ZGl2PlxuICAgICAgICA8bGFiZWwgaHRtbEZvcj0ndGFnMi1vcGFjaXR5Jz5vcGFjaXR5OiA8L2xhYmVsPlxuICAgICAgICA8aW5wdXQgcmVmPXtvcGFjaXR5SW5wdXR9IGNsYXNzTmFtZT0nc21hbGwtaW5wdXQnIGlkPSd0YWcyLW9wYWNpdHknIHR5cGU9J251bWJlcicgc3RlcD17MC4wMX0gZGVmYXVsdFZhbHVlPXswLjV9IG1pbj17MH0gbWF4PXsxfSAvPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2PlxuICAgICAgICA8YnV0dG9uIGlkPSd0YWcyLWVkaXQtb3BhY2l0eScgb25DbGljaz17ZWRpdE9wYWNpdHl9PkVkaXQgT3BhY2l0eTwvYnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9GcmFnbWVudD5cbiAgKTtcbn1cbiIsImltcG9ydCB7IHR5cGUgTXBTZGsgfSBmcm9tICdAc2RrL3R5cGVzJztcbmltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIHNlbGVjdGVkVGFnOiBNcFNkay5UYWcuVGFnRGF0YSB8IHVuZGVmaW5lZDtcbiAgc2VsZWN0ZWRUYWdLZXl3b3Jkczogc3RyaW5nW107XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gS2V5d29yZHMoe3NlbGVjdGVkVGFnLCBzZWxlY3RlZFRhZ0tleXdvcmRzfTogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IGtleXdvcmRJbnB1dCA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcblxuICBjb25zdCBhZGRLZXl3b3JkID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGlmICghc2VsZWN0ZWRUYWcgfHwgIWtleXdvcmRJbnB1dC5jdXJyZW50IHx8ICFrZXl3b3JkSW5wdXQuY3VycmVudC52YWx1ZSkgcmV0dXJuO1xuXG4gICAgc2VsZWN0ZWRUYWcua2V5d29yZHMucHVzaChrZXl3b3JkSW5wdXQuY3VycmVudC52YWx1ZSk7XG4gIH0sIFtzZWxlY3RlZFRhZ10pO1xuXG4gIGNvbnN0IHJlbW92ZUtleXdvcmQgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgaWYgKCFzZWxlY3RlZFRhZyB8fCAha2V5d29yZElucHV0LmN1cnJlbnQgfHwgIWtleXdvcmRJbnB1dC5jdXJyZW50LnZhbHVlKSByZXR1cm47XG5cbiAgICBjb25zdCBpbmRleCA9IHNlbGVjdGVkVGFnLmtleXdvcmRzLmluZGV4T2Yoa2V5d29yZElucHV0LmN1cnJlbnQudmFsdWUpO1xuICAgIGlmIChpbmRleCA+PSAwKSB7XG4gICAgICBzZWxlY3RlZFRhZy5rZXl3b3Jkcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIH1cbiAgfSwgW3NlbGVjdGVkVGFnXSk7XG5cbiAgcmV0dXJuKFxuICAgIDw+XG4gICAgICA8ZGl2PlxuICAgICAgICBUYWc6IDxpbnB1dCB0eXBlPSd0ZXh0JyByZWFkT25seSB2YWx1ZT17c2VsZWN0ZWRUYWcgPyBzZWxlY3RlZFRhZy5pZCA6ICdObyBUYWcgc2VsZWN0ZWQnfS8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIEtleXdvcmQ6IDxpbnB1dCB0eXBlPSd0ZXh0JyByZWY9e2tleXdvcmRJbnB1dH0vPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2PlxuICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e2FkZEtleXdvcmR9PkFERDwvYnV0dG9uPlxuICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e3JlbW92ZUtleXdvcmR9PlJFTU9WRTwvYnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2PlxuICAgICAgICA8dGV4dGFyZWEgc3R5bGU9e3sgaGVpZ2h0OiAnNmVtJ319IHJlYWRPbmx5IHZhbHVlPXtKU09OLnN0cmluZ2lmeShzZWxlY3RlZFRhZ0tleXdvcmRzKX0vPlxuICAgICAgPC9kaXY+XG4gICAgPC8+XG4gICk7XG59XG4iLCJpbXBvcnQgdHlwZSB7IE1wU2RrIH0gZnJvbSAnQHNkay90eXBlcyc7XG5pbXBvcnQgeyBGcmFnbWVudCwgdXNlQ2FsbGJhY2ssIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHNkazogTXBTZGs7XG4gIHNlbGVjdGVkVGFnOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBNb3ZlKHByb3BzOiBQcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgY29uc3QgW3N1Ym1pdFBvcywgc2V0U3VibWl0UG9zXSA9IHVzZVN0YXRlKHRydWUpO1xuICBjb25zdCBbc3VibWl0Tm9ybSwgc2V0U3VibWl0Tm9ybV0gPSB1c2VTdGF0ZSh0cnVlKTtcblxuICBjb25zdCB4SW5wdXQgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG4gIGNvbnN0IHlJbnB1dCA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcbiAgY29uc3QgeklucHV0ID0gdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwpO1xuXG4gIGNvbnN0IHhOb3JtSW5wdXQgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG4gIGNvbnN0IHlOb3JtSW5wdXQgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG4gIGNvbnN0IHpOb3JtSW5wdXQgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG5cbiAgY29uc3Qgc3VibWl0UG9zQ2hhbmdlZCA9IHVzZUNhbGxiYWNrKGZ1bmN0aW9uICgpIHtcbiAgICBzZXRTdWJtaXRQb3MoIXN1Ym1pdFBvcyk7XG4gIH0sIFtzdWJtaXRQb3NdKTtcbiAgY29uc3Qgc3VibWl0Tm9ybUNoYW5nZWQgPSB1c2VDYWxsYmFjayhmdW5jdGlvbiAoKSB7XG4gICAgc2V0U3VibWl0Tm9ybSghc3VibWl0Tm9ybSk7XG4gIH0sIFtzdWJtaXROb3JtXSk7XG5cbiAgY29uc3QgbW92ZVRhZyA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBpZiAoXG4gICAgICB4SW5wdXQuY3VycmVudCAmJlxuICAgICAgeUlucHV0LmN1cnJlbnQgJiZcbiAgICAgIHpJbnB1dC5jdXJyZW50ICYmXG4gICAgICB4Tm9ybUlucHV0LmN1cnJlbnQgJiZcbiAgICAgIHlOb3JtSW5wdXQuY3VycmVudCAmJlxuICAgICAgek5vcm1JbnB1dC5jdXJyZW50XG4gICAgKSB7XG4gICAgICBwcm9wcy5zZGsuVGFnLmVkaXRQb3NpdGlvbihwcm9wcy5zZWxlY3RlZFRhZywge1xuICAgICAgICBhbmNob3JQb3NpdGlvbjogc3VibWl0UG9zID8ge1xuICAgICAgICAgIHg6IHBhcnNlRmxvYXQoeElucHV0LmN1cnJlbnQudmFsdWUpLFxuICAgICAgICAgIHk6IHBhcnNlRmxvYXQoeUlucHV0LmN1cnJlbnQudmFsdWUpLFxuICAgICAgICAgIHo6IHBhcnNlRmxvYXQoeklucHV0LmN1cnJlbnQudmFsdWUpLFxuICAgICAgICB9IDogdW5kZWZpbmVkLFxuICAgICAgICBzdGVtVmVjdG9yOiBzdWJtaXROb3JtID8ge1xuICAgICAgICAgIHg6IHBhcnNlRmxvYXQoeE5vcm1JbnB1dC5jdXJyZW50LnZhbHVlKSxcbiAgICAgICAgICB5OiBwYXJzZUZsb2F0KHlOb3JtSW5wdXQuY3VycmVudC52YWx1ZSksXG4gICAgICAgICAgejogcGFyc2VGbG9hdCh6Tm9ybUlucHV0LmN1cnJlbnQudmFsdWUpLFxuICAgICAgICB9IDogdW5kZWZpbmVkLFxuICAgICAgfSk7XG4gICAgfVxuICB9LCBbcHJvcHMuc2RrLlRhZywgcHJvcHMuc2VsZWN0ZWRUYWcsIHN1Ym1pdE5vcm0sIHN1Ym1pdFBvc10pO1xuXG4gIHJldHVybiAoXG4gICAgPEZyYWdtZW50PlxuICAgICAgPGRpdj5cbiAgICAgICAgcG9zaXRpb246XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxpbnB1dCB0eXBlPSdjaGVja2JveCcgY2hlY2tlZD17c3VibWl0UG9zfSBvbkNoYW5nZT17c3VibWl0UG9zQ2hhbmdlZH0gLz5cbiAgICAgICAgPGxhYmVsIGh0bWxGb3I9J3RhZzItbW92ZS1wb3MteCc+eDogPC9sYWJlbD5cbiAgICAgICAgPGlucHV0IHJlZj17eElucHV0fSBjbGFzc05hbWU9J3NtYWxsLWlucHV0JyBpZD0ndGFnMi1tb3ZlLXBvcy14JyB0eXBlPSdudW1iZXInIHN0ZXA9JzAuMDAxJyBkZWZhdWx0VmFsdWU9JzAnIGRpc2FibGVkPXshc3VibWl0UG9zfSAvPlxuICAgICAgICA8bGFiZWwgaHRtbEZvcj0ndGFnMi1tb3ZlLXBvcy15Jz55OiA8L2xhYmVsPlxuICAgICAgICA8aW5wdXQgcmVmPXt5SW5wdXR9IGNsYXNzTmFtZT0nc21hbGwtaW5wdXQnIGlkPSd0YWcyLW1vdmUtcG9zLXknIHR5cGU9J251bWJlcicgc3RlcD0nMC4wMDEnIGRlZmF1bHRWYWx1ZT0nMCcgZGlzYWJsZWQ9eyFzdWJtaXRQb3N9IC8+XG4gICAgICAgIDxsYWJlbCBodG1sRm9yPSd0YWcyLW1vdmUtcG9zLXonPno6IDwvbGFiZWw+XG4gICAgICAgIDxpbnB1dCByZWY9e3pJbnB1dH0gY2xhc3NOYW1lPSdzbWFsbC1pbnB1dCcgaWQ9J3RhZzItbW92ZS1wb3MteicgdHlwZT0nbnVtYmVyJyBzdGVwPScwLjAwMScgZGVmYXVsdFZhbHVlPScwJyBkaXNhYmxlZD17IXN1Ym1pdFBvc30gLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgbm9ybWFsOlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2PlxuICAgICAgICA8aW5wdXQgdHlwZT0nY2hlY2tib3gnIGNoZWNrZWQ9e3N1Ym1pdE5vcm19IG9uQ2hhbmdlPXtzdWJtaXROb3JtQ2hhbmdlZH0gLz5cbiAgICAgICAgPGxhYmVsIGh0bWxGb3I9J3RhZzItbW92ZS1ub3JtLXgnPng6IDwvbGFiZWw+XG4gICAgICAgIDxpbnB1dCByZWY9e3hOb3JtSW5wdXR9IGNsYXNzTmFtZT0nc21hbGwtaW5wdXQnIGlkPSd0YWcyLW1vdmUtbm9ybS14JyB0eXBlPSdudW1iZXInIHN0ZXA9JzAuMDAxJyBkZWZhdWx0VmFsdWU9JzAnIGRpc2FibGVkPXshc3VibWl0Tm9ybX0gLz5cbiAgICAgICAgPGxhYmVsIGh0bWxGb3I9J3RhZzItbW92ZS1ub3JtLXknPnk6IDwvbGFiZWw+XG4gICAgICAgIDxpbnB1dCByZWY9e3lOb3JtSW5wdXR9IGNsYXNzTmFtZT0nc21hbGwtaW5wdXQnIGlkPSd0YWcyLW1vdmUtbm9ybS15JyB0eXBlPSdudW1iZXInIHN0ZXA9JzAuMDAxJyBkZWZhdWx0VmFsdWU9JzEnIGRpc2FibGVkPXshc3VibWl0Tm9ybX0gLz5cbiAgICAgICAgPGxhYmVsIGh0bWxGb3I9J3RhZzItbW92ZS1ub3JtLXonPno6IDwvbGFiZWw+XG4gICAgICAgIDxpbnB1dCByZWY9e3pOb3JtSW5wdXR9IGNsYXNzTmFtZT0nc21hbGwtaW5wdXQnIGlkPSd0YWcyLW1vdmUtbm9ybS16JyB0eXBlPSdudW1iZXInIHN0ZXA9JzAuMDAxJyBkZWZhdWx0VmFsdWU9JzAnIGRpc2FibGVkPXshc3VibWl0Tm9ybX0gLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGJ1dHRvbiBpZD0ndGFnMi1tb3ZlJyBvbkNsaWNrPXttb3ZlVGFnfT5Nb3ZlPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICA8L0ZyYWdtZW50PlxuICApO1xufVxuIiwiaW1wb3J0IHsgdHlwZSBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcblxudHlwZSBQcm9wcyA9IHtcbiAgc2RrOiBNcFNkaztcbiAgc2VsZWN0ZWRUYWc6IE1wU2RrLlRhZy5UYWdEYXRhIHwgdW5kZWZpbmVkO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gT3Blbih7IHNkaywgc2VsZWN0ZWRUYWcgfTogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IGZvcmNlT3BlbiA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcbiAgY29uc3QgZm9yY2VEb2NrID0gdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwpO1xuXG4gIGNvbnN0IG9wZW4gPSB1c2VDYWxsYmFjayhmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHNlbGVjdGVkVGFnKSB7XG4gICAgICBjb25zdCBmb3JjZSA9IGZvcmNlT3Blbi5jdXJyZW50Py5jaGVja2VkIHx8IGZhbHNlO1xuICAgICAgc2RrLlRhZy5vcGVuKHNlbGVjdGVkVGFnLmlkLCB7IGZvcmNlIH0pO1xuICAgIH1cbiAgfSwgW3Nkay5UYWcsIHNlbGVjdGVkVGFnXSk7XG5cbiAgY29uc3QgZG9jayA9IHVzZUNhbGxiYWNrKGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoc2VsZWN0ZWRUYWcpIHtcbiAgICAgIGNvbnN0IGZvcmNlID0gZm9yY2VEb2NrLmN1cnJlbnQ/LmNoZWNrZWQgfHwgZmFsc2U7XG4gICAgICBzZGsuVGFnLmRvY2soc2VsZWN0ZWRUYWcuaWQsIHsgZm9yY2UgfSk7XG4gICAgfVxuICB9LCBbc2RrLlRhZywgc2VsZWN0ZWRUYWddKTtcblxuICBjb25zdCBjbG9zZSA9IHVzZUNhbGxiYWNrKGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoc2VsZWN0ZWRUYWcpIHtcbiAgICAgIHNkay5UYWcuY2xvc2Uoc2VsZWN0ZWRUYWcuaWQpO1xuICAgIH1cbiAgfSwgW3Nkay5UYWcsIHNlbGVjdGVkVGFnXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGlucHV0IHR5cGU9J3RleHQnIHJlYWRPbmx5IHBsYWNlaG9sZGVyPXsnKG5vbmUpJ30gdmFsdWU9e3NlbGVjdGVkVGFnID8gc2VsZWN0ZWRUYWcuaWQgOiAnJ30gLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9J3NtYWxsLWlucHV0JyBvbkNsaWNrPXtvcGVufT5PcGVuPC9idXR0b24+XG4gICAgICAgIDxsYWJlbCBzdHlsZT17eyBtYXJnaW5MZWZ0OiAnNXB4JyB9fT5mb3JjZTo8L2xhYmVsPjxpbnB1dCByZWY9e2ZvcmNlT3Blbn0gaWQ9J3RhZy1mb3JjZS1vcGVuJyB0eXBlPSdjaGVja2JveCcgLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9J3NtYWxsLWlucHV0JyBvbkNsaWNrPXtkb2NrfT5Eb2NrPC9idXR0b24+XG4gICAgICAgIDxsYWJlbCBzdHlsZT17eyBtYXJnaW5MZWZ0OiAnNXB4JyB9fT5mb3JjZTo8L2xhYmVsPjxpbnB1dCByZWY9e2ZvcmNlRG9ja30gaWQ9J3RhZy1mb3JjZS1kb2NrJyB0eXBlPSdjaGVja2JveCcgLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9J3NtYWxsLWlucHV0JyBvbkNsaWNrPXtjbG9zZX0+Q2xvc2U8L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvPlxuICApO1xufVxuIiwiaW1wb3J0IHR5cGUgeyBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuaW1wb3J0IHsgRnJhZ21lbnQsIHVzZUNhbGxiYWNrLCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIHNkazogTXBTZGtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBSZWdpc3RlckF0dGFjaG1lbnQocHJvcHM6IFByb3BzKTogSlNYLkVsZW1lbnQge1xuICBjb25zdCBzcmNJbnB1dCA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcblxuICBjb25zdCByZWdpc3RlckF0dGFjaG1lbnQgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgaWYgKHNyY0lucHV0LmN1cnJlbnQpIHtcbiAgICAgIHByb3BzLnNkay5UYWcucmVnaXN0ZXJBdHRhY2htZW50KHNyY0lucHV0LmN1cnJlbnQudmFsdWUpO1xuICAgIH1cbiAgfSwgW3Byb3BzLnNkay5UYWddKTtcblxuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxsYWJlbCBodG1sRm9yPSd0YWcyLXJlZ2lzdGVyLWF0dGFjaG1lbnQtc3JjJz5TcmM6PC9sYWJlbD5cbiAgICAgICAgPGlucHV0IHJlZj17c3JjSW5wdXR9IHR5cGU9J3RleHQnIGlkPSd0YWcyLXJlZ2lzdGVyLWF0dGFjaG1lbnQtc3JjJyAvPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2PlxuICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e3JlZ2lzdGVyQXR0YWNobWVudH0+UmVnaXN0ZXI8L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvRnJhZ21lbnQ+XG4gICk7XG59XG4iLCJpbXBvcnQgdHlwZSB7IE1wU2RrIH0gZnJvbSAnQHNkay90eXBlcyc7XG5pbXBvcnQgeyBGcmFnbWVudCwgdXNlQ2FsbGJhY2ssIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2RrOiBNcFNkaztcbiAgc2VsZWN0ZWRUYWc6IHN0cmluZztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFJlZ2lzdGVyU2FuZGJveChwcm9wczogT21pdDxQcm9wcywgJ3NlbGVjdGVkVGFnJz4pOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IGh0bWxJbnB1dCA9IHVzZVJlZjxIVE1MVGV4dEFyZWFFbGVtZW50PihudWxsKTtcbiAgY29uc3QgbmFtZUlucHV0ID0gdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwpO1xuICBjb25zdCB3SW5wdXQgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG4gIGNvbnN0IGhJbnB1dCA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcblxuXG4gIGNvbnN0IHJlZ2lzdGVyU2FuZGJveCA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICBpZiAoaHRtbElucHV0LmN1cnJlbnQgJiYgbmFtZUlucHV0LmN1cnJlbnQgJiYgd0lucHV0LmN1cnJlbnQgJiYgaElucHV0LmN1cnJlbnQpIHtcbiAgICAgIGNvbnN0IFssIHBtXSA9IGF3YWl0IHByb3BzLnNkay5UYWcucmVnaXN0ZXJTYW5kYm94KGh0bWxJbnB1dC5jdXJyZW50LnZhbHVlLCB7XG4gICAgICAgIG5hbWU6IG5hbWVJbnB1dC5jdXJyZW50LnZhbHVlLFxuICAgICAgICBzaXplOiB7XG4gICAgICAgICAgaDogcGFyc2VJbnQoaElucHV0LmN1cnJlbnQudmFsdWUsIDEwKSxcbiAgICAgICAgICB3OiBwYXJzZUludCh3SW5wdXQuY3VycmVudC52YWx1ZSwgMTApLFxuICAgICAgICB9LFxuICAgICAgfSk7XG5cbiAgICAgIGZ1bmN0aW9uIGdlbkNvbG9yKCkge1xuICAgICAgICBsZXQgcmdiID0gJyc7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNjsgKytpKSB7XG4gICAgICAgICAgcmdiICs9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDE2KS50b1N0cmluZygxNik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICcjJyArIHJnYjtcbiAgICAgIH1cbiAgICAgIC8vIGRpcmVjdGx5IGNvbW11bmljYXRlIHdpdGggdGhlIGlmcmFtZSB0aGF0IHdhcyBqdXN0IGluamVjdGVkXG4gICAgICBwbS5vbignY2xpY2snLCBmdW5jdGlvbiAoZTogYW55KSB7XG4gICAgICAgIGNvbnN0IG5ld0NvbG9yID0gZ2VuQ29sb3IoKTtcbiAgICAgICAgcG0uc2VuZCgndXBkYXRlLmJ1dHRvbicsIG5ld0NvbG9yLCBuZXdDb2xvci50b1N0cmluZygpKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwgW3Byb3BzLnNkay5UYWddKTtcblxuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxpbnB1dCByZWY9e25hbWVJbnB1dH0gdHlwZT0ndGV4dCcgcGxhY2Vob2xkZXI9eyduYW1lJ30gLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPHRleHRhcmVhIHN0eWxlPXt7IGhlaWdodDogJzdlbScgfX0gcmVmPXtodG1sSW5wdXR9IGRlZmF1bHRWYWx1ZT17ZGVmYXVsdEluamVjdGVkU2NyaXB0fSAvPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2PlxuICAgICAgICB3aWR0aDo8aW5wdXQgY2xhc3NOYW1lPXsnc21hbGwtaW5wdXQnfSByZWY9e3dJbnB1dH0gdHlwZT0nbnVtYmVyJyBkZWZhdWx0VmFsdWU9ezM1MH0vPlxuICAgICAgICBoZWlnaHQ6PGlucHV0IGNsYXNzTmFtZT17J3NtYWxsLWlucHV0J30gcmVmPXtoSW5wdXR9IHR5cGU9J251bWJlcicgZGVmYXVsdFZhbHVlPXsxNTB9Lz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtyZWdpc3RlclNhbmRib3h9PlJlZ2lzdGVyPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICA8L0ZyYWdtZW50PlxuICApO1xufVxuXG5jb25zdCBkZWZhdWx0SW5qZWN0ZWRTY3JpcHQgPSBgPHN0eWxlPlxuYm9keSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjY2NjY2M7XG59XG4jYnRuMSB7XG4gIHdpZHRoOiAxMDBweDtcbiAgaGVpZ2h0OiAyMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCAyNTUsIDI1NSk7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG48L3N0eWxlPlxuPGJyPlxuPGJyPlxuPGRpdiBpZD0nYnRuMSc+Q0xJQ0sgTUUhPC9kaXY+XG48ZGl2IGlkPSd0YWcnPjwvZGl2PlxuPGRpdiBpZD0nZG9ja2VkJz48L2Rpdj5cbjxzY3JpcHQ+XG5jb25zdCBidG4xID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2J0bjEnKTtcbmJ0bjEuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gIHdpbmRvdy5zZW5kKCdjbGljaycsIHtidXR0b25JZDogMTIzNDMyMX0pO1xufSk7XG53aW5kb3cub24oJ3VwZGF0ZS5idXR0b24nLCBmdW5jdGlvbiAoY29sb3IsIG1lc3NhZ2UpIHtcbiAgYnRuMS5pbm5lclRleHQgPSBtZXNzYWdlO1xuICBidG4xLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGNvbG9yO1xufSk7XG5jb25zdCB0YWdPdXRwdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGFnJyk7XG50YWdPdXRwdXQuaW5uZXJIVE1MID0gJ0N1cnJlbnQgdGFnOiAnICsgd2luZG93LnRhZztcbmNvbnN0IGRvY2tlZE91dHB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkb2NrZWQnKTtcbmRvY2tlZE91dHB1dC5pbm5lckhUTUwgPSAnRG9ja2VkOiAnICsgd2luZG93LmRvY2tlZDtcbjwvc2NyaXB0PmA7XG4iLCJpbXBvcnQgdHlwZSB7IE1wU2RrIH0gZnJvbSAnQHNkay90eXBlcyc7XG5pbXBvcnQgeyBGcmFnbWVudCwgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHNkazogTXBTZGs7XG4gIHNlbGVjdGVkVGFnOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBSZW1vdmUocHJvcHM6IFByb3BzKTogSlNYLkVsZW1lbnQge1xuICBjb25zdCByZW1vdmVUYWcgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgcHJvcHMuc2RrLlRhZy5yZW1vdmUocHJvcHMuc2VsZWN0ZWRUYWcpO1xuICB9LCBbcHJvcHMuc2RrLlRhZywgcHJvcHMuc2VsZWN0ZWRUYWddKTtcblxuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxidXR0b24gaWQ9J3RhZzItcmVtb3ZlJyBvbkNsaWNrPXtyZW1vdmVUYWd9PlJlbW92ZTwvYnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9GcmFnbWVudD5cbiAgKTtcbn1cbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgZnVuY3Rpb24gVG9nZ2xlU2V0dGluZyh7dG9nZ2xlU2V0dGluZ306IHsgdG9nZ2xlU2V0dGluZzogKGVuYWJsZT86IGJvb2xlYW4pID0+IFByb21pc2U8dm9pZD4gfSk6IEpTWC5FbGVtZW50IHtcbiAgY29uc3QgdG9nZ2xlID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHRvZ2dsZVNldHRpbmcoKTtcbiAgfSwgW3RvZ2dsZVNldHRpbmddKTtcblxuICBjb25zdCBzaG93ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHRvZ2dsZVNldHRpbmcodHJ1ZSk7XG4gIH0sIFt0b2dnbGVTZXR0aW5nXSk7XG5cbiAgY29uc3QgaGlkZSA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICB0b2dnbGVTZXR0aW5nKGZhbHNlKTtcbiAgfSwgW3RvZ2dsZVNldHRpbmddKTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8ZGl2PlxuICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT0nc21hbGwtaW5wdXQnIG9uQ2xpY2s9e3RvZ2dsZX0+VG9nZ2xlPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxidXR0b24gY2xhc3NOYW1lPSdzbWFsbC1pbnB1dCcgb25DbGljaz17c2hvd30+U2hvdzwvYnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2PlxuICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT0nc21hbGwtaW5wdXQnIG9uQ2xpY2s9e2hpZGV9PkhpZGU8L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvPlxuICApO1xufVxuIiwiaW1wb3J0IHsgdHlwZSBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuXG5leHBvcnQgZnVuY3Rpb24gbGFiZWxBbHBoYVNvcnQoaXRlbTE6IE1wU2RrLlRhZy5UYWdEYXRhLCBpdGVtMjogTXBTZGsuVGFnLlRhZ0RhdGEpOiBudW1iZXIge1xuICBpZiAoaXRlbTEubGFiZWwgPCBpdGVtMi5sYWJlbCkge1xuICAgIHJldHVybiAtMTtcbiAgfVxuICBpZiAoaXRlbTEubGFiZWwgPiBpdGVtMi5sYWJlbCkge1xuICAgIHJldHVybiAxO1xuICB9XG4gIHJldHVybiAwO1xufVxuIiwiaW1wb3J0IHR5cGUgeyBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuaW1wb3J0IHsgRnJhZ21lbnQsIHVzZUNhbGxiYWNrLCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBzZGs6IE1wU2RrO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gSW1wb3J0VGFncyhwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IHNwYWNlSWRJbnB1dCA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcbiAgY29uc3QgW3RleHQsIHNldFRleHRdID0gdXNlU3RhdGU8c3RyaW5nPignJyk7XG5cbiAgY29uc3QgaW1wb3J0VGFncyA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICBpZiAoc3BhY2VJZElucHV0LmN1cnJlbnQpIHtcbiAgICAgIGNvbnN0IHRhZ3MgPSBhd2FpdCBwcm9wcy5zZGsuVGFnLmltcG9ydFRhZ3Moc3BhY2VJZElucHV0LmN1cnJlbnQudmFsdWUsIHt9KTtcblxuICAgICAgc2V0VGV4dChgTmV3IHRhZyBpZHM6ICR7dGFnc31gKTtcbiAgICB9XG4gIH0sIFtwcm9wcy5zZGsuVGFnXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8RnJhZ21lbnQ+XG4gICAgICA8ZGl2PlxuICAgICAgICA8bGFiZWwgaHRtbEZvcj0nc3BhY2UtaWQnPnNwYWNlSWQ6IDwvbGFiZWw+XG4gICAgICAgIDxpbnB1dCByZWY9e3NwYWNlSWRJbnB1dH0gY2xhc3NOYW1lPSdzbWFsbC1pbnB1dCcgaWQ9J3NwYWNlLWlkJyB0eXBlPSdzdHJpbmcnLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGJ1dHRvbiBpZD0nY29weS10YWdzJyBvbkNsaWNrPXtpbXBvcnRUYWdzfT5JbXBvcnQ8L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgICAgPHRleHRhcmVhXG4gICAgICAgIHN0eWxlPXt7IHdpZHRoOiAnMTAwJScsIGhlaWdodDogJzgwJScgfX1cbiAgICAgICAgcmVhZE9ubHlcbiAgICAgICAgdmFsdWU9e3RleHR9XG4gICAgICAgIC8+XG4gICAgPC9GcmFnbWVudD5cbiAgKTtcbn1cbiIsImV4cG9ydCB0eXBlIE1wRm9udElkID1cbiAgfCAnMzYwJ1xuICB8ICdhZGQtbGluaydcbiAgfCAnYXJyb3cnXG4gIHwgJ2Fycm93cydcbiAgfCAnYXR0YWNoJ1xuICB8ICdiYWNrJ1xuICB8ICdibG9ja2VkJ1xuICB8ICdibHVyLW91dGxpbmUnXG4gIHwgJ2JydXNoLW91dGxpbmUnXG4gIHwgJ2NoZWNrbWFyaydcbiAgfCAnY2hldnJvbi1sZWZ0J1xuICB8ICdjaGV2cm9uLXJpZ2h0J1xuICB8ICdjbG9zZSdcbiAgfCAnY29tbWVudC1sYXJnZSdcbiAgfCAnY29tbWVudC1vdXRsaW5lJ1xuICB8ICdjb21tZW50J1xuICB8ICdkZWxldGUnXG4gIHwgJ2RvY2snXG4gIHwgJ2RvbGxob3VzZSdcbiAgfCAnZG9vcidcbiAgfCAnZG93bmxvYWQnXG4gIHwgJ2RwYWQtZG93bidcbiAgfCAnZHBhZC1sZWZ0J1xuICB8ICdkcGFkLXJpZ2h0J1xuICB8ICdkcGFkLXVwJ1xuICB8ICdkcmFnLWVkaXQnXG4gIHwgJ2RyYXctbGluZXMnXG4gIHwgJ2VkaXQtZmxvb3JwbGFuJ1xuICB8ICdlbWFpbCdcbiAgfCAnZXJyb3InXG4gIHwgJ2VzY2FwZS1rZXknXG4gIHwgJ2V4cGFuZCdcbiAgfCAnZXh0LWxpbmsnXG4gIHwgJ2V5ZS1oaWRlJ1xuICB8ICdleWUtc2hvdydcbiAgfCAnZmFjZWJvb2snXG4gIHwgJ2ZpbGUnXG4gIHwgJ2ZpbHRlcidcbiAgfCAnZmluZ2VyLWRyYWcnXG4gIHwgJ2Zsb29yLWNvbnRyb2xzLWFsbCdcbiAgfCAnZmxvb3ItY29udHJvbHMnXG4gIHwgJ2Zsb29ycGxhbidcbiAgfCAnZnVsbHNjcmVlbi1leGl0J1xuICB8ICdmdWxsc2NyZWVuJ1xuICB8ICdmdWxsc2NyZWVuMidcbiAgfCAnZnVybml0dXJlLXNsYXNoJ1xuICB8ICdmdXJuaXR1cmUnXG4gIHwgJ2dpem1vLWFkZCdcbiAgfCAnZ2l6bW8tY2xvc2VkJ1xuICB8ICdnaXptby1leWUtaGlkZSdcbiAgfCAnZ2l6bW8tZXllLXNob3cnXG4gIHwgJ2dpem1vLWZsb29ycGxhbidcbiAgfCAnZ2l6bW8tZ2VhcidcbiAgfCAnZ2l6bW8tbGF5ZXJzJ1xuICB8ICdnaXptby1tYWduZXQtd2FsbCdcbiAgfCAnZ2l6bW8tbWFnbmV0J1xuICB8ICdnaXptby1tb2RlbCdcbiAgfCAnZ2l6bW8tbW92ZSdcbiAgfCAnZ2l6bW8tb3BlbidcbiAgfCAnZ2l6bW8tb3J0aG9ncmFwaGljJ1xuICB8ICdnaXptby1wZXJzcGVjdGl2ZSdcbiAgfCAnZ2l6bW8tcmVkbydcbiAgfCAnZ2l6bW8tc25hcCdcbiAgfCAnZ2l6bW8tdW5kbydcbiAgfCAnaGVscCdcbiAgfCAnaGxyLWJhZGdlJ1xuICB8ICdobHInXG4gIHwgJ2luZm8nXG4gIHwgJ2ludmlzaWJsZS13YWxsJ1xuICB8ICdrZXlib2FyZCdcbiAgfCAnbGF5ZXJzJ1xuICB8ICdsaW5rJ1xuICB8ICdsaW5rZWRpbidcbiAgfCAnbGlzdCdcbiAgfCAnbG9jYXRpb24nXG4gIHwgJ2xvY2snXG4gIHwgJ2xvZ28nXG4gIHwgJ21hZ25pZnlpbmctZ2xhc3MnXG4gIHwgJ21lZGlhLW1peCdcbiAgfCAnbWVudS1pbmRpY2F0b3InXG4gIHwgJ21lc2gtdHJpbSdcbiAgfCAnbWVzaCdcbiAgfCAnbWludXMnXG4gIHwgJ21vcmUtdmVydCdcbiAgfCAnbm90ZXMnXG4gIHwgJ29iamVjdC1haXItZHVjdHMnXG4gIHwgJ29iamVjdC1iYXRodHViJ1xuICB8ICdvYmplY3QtYmVkJ1xuICB8ICdvYmplY3QtY2FiaW5ldCdcbiAgfCAnb2JqZWN0LWNlaWxpbmctZmFuJ1xuICB8ICdvYmplY3QtY2hhaXInXG4gIHwgJ29iamVjdC1jb3VudGVydG9wJ1xuICB8ICdvYmplY3QtZGlzaHdhc2hlcidcbiAgfCAnb2JqZWN0LWRvb3ItbG9jaydcbiAgfCAnb2JqZWN0LWRvb3InXG4gIHwgJ29iamVjdC1mYXVjZXQnXG4gIHwgJ29iamVjdC1maXJlcGxhY2UnXG4gIHwgJ29iamVjdC1nYXJhZ2UtZG9vcidcbiAgfCAnb2JqZWN0LWtpdGNoZW4taXNsYW5kJ1xuICB8ICdvYmplY3QtbGlnaHQnXG4gIHwgJ29iamVjdC1taWNyb3dhdmUnXG4gIHwgJ29iamVjdC1taXJyb3InXG4gIHwgJ29iamVjdC1vdXRsZXQnXG4gIHwgJ29iamVjdC1vdmVuJ1xuICB8ICdvYmplY3QtcmFuZ2UtaG9vZCdcbiAgfCAnb2JqZWN0LXJhbmdlJ1xuICB8ICdvYmplY3QtcmVmcmlnZXJhdG9yJ1xuICB8ICdvYmplY3Qtc2hvd2VyJ1xuICB8ICdvYmplY3Qtc2luaydcbiAgfCAnb2JqZWN0LXNreWxpZ2h0J1xuICB8ICdvYmplY3Qtc21va2UtZGV0ZWN0b3InXG4gIHwgJ29iamVjdC1zb2ZhJ1xuICB8ICdvYmplY3QtdGFibGUnXG4gIHwgJ29iamVjdC10ZWxldmlzaW9uJ1xuICB8ICdvYmplY3QtdGhlcm1vc3RhdCdcbiAgfCAnb2JqZWN0LXRvaWxldCdcbiAgfCAnb2JqZWN0LXRvd2VsLXJhY2snXG4gIHwgJ29iamVjdC12YW5pdHknXG4gIHwgJ29iamVjdC13YWxsLXN3aXRjaCdcbiAgfCAnb2JqZWN0LXdhc2hlci1kcnllcidcbiAgfCAnb2JqZWN0LXdpbmRvdydcbiAgfCAnb3BlbmluZydcbiAgfCAncGFub3JhbWEtZGlzYWJsZSdcbiAgfCAncGFub3JhbWEnXG4gIHwgJ3BhcGVyLWNsaXAnXG4gIHwgJ3BhdXNlLW91dGxpbmUnXG4gIHwgJ3BhdXNlJ1xuICB8ICdwaG90by0yZCdcbiAgfCAncGhvdG8tMzYwJ1xuICB8ICdwaG90by1hZGQnXG4gIHwgJ3BpbidcbiAgfCAncGludGVyZXN0J1xuICB8ICdwbGF5LXVuaWNvZGUnXG4gIHwgJ3BsYXknXG4gIHwgJ3BsdXMnXG4gIHwgJ3Bvc2l0aW9uLTNkLWZhdCdcbiAgfCAncG9zaXRpb24tM2QnXG4gIHwgJ3ByZXNzLWhvbGQnXG4gIHwgJ3B1YmxpY19idWlsZGluZ3NfYXBhcnRtZW50J1xuICB8ICdwdWJsaWNfYnVpbGRpbmdzX2FyY2h3YXknXG4gIHwgJ3B1YmxpY19idWlsZGluZ3NfYnVpbGRpbmctY2lyY2xlLWFycm93LXJpZ2h0J1xuICB8ICdwdWJsaWNfYnVpbGRpbmdzX2J1aWxkaW5nLWNpcmNsZS1jaGVjaydcbiAgfCAncHVibGljX2J1aWxkaW5nc19idWlsZGluZy1jaXJjbGUtZXhjbGFtYXRpb24nXG4gIHwgJ3B1YmxpY19idWlsZGluZ3NfYnVpbGRpbmctY2lyY2xlLXhtYXJrJ1xuICB8ICdwdWJsaWNfYnVpbGRpbmdzX2J1aWxkaW5nLWNvbHVtbnMnXG4gIHwgJ3B1YmxpY19idWlsZGluZ3NfYnVpbGRpbmctZmxhZydcbiAgfCAncHVibGljX2J1aWxkaW5nc19idWlsZGluZy1sb2NrJ1xuICB8ICdwdWJsaWNfYnVpbGRpbmdzX2J1aWxkaW5nLXNoaWVsZCdcbiAgfCAncHVibGljX2J1aWxkaW5nc19idWlsZGluZy11c2VyJ1xuICB8ICdwdWJsaWNfYnVpbGRpbmdzX2J1aWxkaW5nLXdoZWF0J1xuICB8ICdwdWJsaWNfYnVpbGRpbmdzX2J1aWxkaW5nJ1xuICB8ICdwdWJsaWNfYnVpbGRpbmdzX2J1aWxkaW5ncydcbiAgfCAncHVibGljX2J1aWxkaW5nc19jYWJpbidcbiAgfCAncHVibGljX2J1aWxkaW5nc19jYW1wZ3JvdW5kJ1xuICB8ICdwdWJsaWNfYnVpbGRpbmdzX2Nhci1idWlsZGluZydcbiAgfCAncHVibGljX2J1aWxkaW5nc19jYXN0bGUnXG4gIHwgJ3B1YmxpY19idWlsZGluZ3NfY2hpbW5leSdcbiAgfCAncHVibGljX2J1aWxkaW5nc19jaHVyY2gnXG4gIHwgJ3B1YmxpY19idWlsZGluZ3NfY2l0eSdcbiAgfCAncHVibGljX2J1aWxkaW5nc19mYXJtJ1xuICB8ICdwdWJsaWNfYnVpbGRpbmdzX2ZlbmNlJ1xuICB8ICdwdWJsaWNfYnVpbGRpbmdzX2ZlcnJpcy13aGVlbCdcbiAgfCAncHVibGljX2J1aWxkaW5nc19mb3J0J1xuICB8ICdwdWJsaWNfYnVpbGRpbmdzX2dhcmFnZSdcbiAgfCAncHVibGljX2J1aWxkaW5nc19ob3NwaXRhbCdcbiAgfCAncHVibGljX2J1aWxkaW5nc19ob3RlbCdcbiAgfCAncHVibGljX2J1aWxkaW5nc19ob3VzZS1idWlsZGluZydcbiAgfCAncHVibGljX2J1aWxkaW5nc19ob3VzZS1jcmFjaydcbiAgfCAncHVibGljX2J1aWxkaW5nc19ob3VzZS1kYXknXG4gIHwgJ3B1YmxpY19idWlsZGluZ3NfaG91c2UtZmlyZSdcbiAgfCAncHVibGljX2J1aWxkaW5nc19ob3VzZS1mbGFnJ1xuICB8ICdwdWJsaWNfYnVpbGRpbmdzX2hvdXNlLWZsb29kLXdhdGVyJ1xuICB8ICdwdWJsaWNfYnVpbGRpbmdzX2hvdXNlLWhlYXJ0J1xuICB8ICdwdWJsaWNfYnVpbGRpbmdzX2hvdXNlLWxvY2snXG4gIHwgJ3B1YmxpY19idWlsZGluZ3NfaG91c2UtbWVkaWNhbCdcbiAgfCAncHVibGljX2J1aWxkaW5nc19ob3VzZS1uaWdodCdcbiAgfCAncHVibGljX2J1aWxkaW5nc19ob3VzZSdcbiAgfCAncHVibGljX2J1aWxkaW5nc19pbmR1c3RyeSdcbiAgfCAncHVibGljX2J1aWxkaW5nc19sYW5kbWFyaydcbiAgfCAncHVibGljX2J1aWxkaW5nc19tb251bWVudCdcbiAgfCAncHVibGljX2J1aWxkaW5nc19tb3NxdWUnXG4gIHwgJ3B1YmxpY19idWlsZGluZ3NfbW91bnRhaW4tY2l0eSdcbiAgfCAncHVibGljX2J1aWxkaW5nc19wbGFjZS1vZi13b3JzaGlwJ1xuICB8ICdwdWJsaWNfYnVpbGRpbmdzX3JvbGxlci1jb2FzdGVyJ1xuICB8ICdwdWJsaWNfYnVpbGRpbmdzX3NjaG9vbCdcbiAgfCAncHVibGljX2J1aWxkaW5nc19zdG9yZSdcbiAgfCAncHVibGljX2J1aWxkaW5nc19zeW5hZ29ndWUnXG4gIHwgJ3B1YmxpY19idWlsZGluZ3NfdGVudCdcbiAgfCAncHVibGljX2J1aWxkaW5nc190b2lsZXQnXG4gIHwgJ3B1YmxpY19idWlsZGluZ3NfdG9yaWktZ2F0ZSdcbiAgfCAncHVibGljX2J1aWxkaW5nc190b3dlci1vYnNlcnZhdGlvbidcbiAgfCAncHVibGljX2J1aWxkaW5nc190cmVlJ1xuICB8ICdwdWJsaWNfYnVpbGRpbmdzX3dhcmVob3VzZSdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfMCdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfMSdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfMidcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfMydcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfNCdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfNSdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfNidcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfNydcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfOCdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfOSdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfYSdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfYidcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfYydcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfY2lyY2xlLTAnXG4gIHwgJ3B1YmxpY19jaGFyYWN0ZXJzX2NpcmNsZS0xJ1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtMidcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfY2lyY2xlLTMnXG4gIHwgJ3B1YmxpY19jaGFyYWN0ZXJzX2NpcmNsZS00J1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtNSdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfY2lyY2xlLTYnXG4gIHwgJ3B1YmxpY19jaGFyYWN0ZXJzX2NpcmNsZS03J1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtOCdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfY2lyY2xlLTknXG4gIHwgJ3B1YmxpY19jaGFyYWN0ZXJzX2NpcmNsZS1hJ1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtYidcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfY2lyY2xlLWMnXG4gIHwgJ3B1YmxpY19jaGFyYWN0ZXJzX2NpcmNsZS1kJ1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtZSdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfY2lyY2xlLWYnXG4gIHwgJ3B1YmxpY19jaGFyYWN0ZXJzX2NpcmNsZS1nJ1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtaCdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfY2lyY2xlLWknXG4gIHwgJ3B1YmxpY19jaGFyYWN0ZXJzX2NpcmNsZS1qJ1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtaydcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfY2lyY2xlLWwnXG4gIHwgJ3B1YmxpY19jaGFyYWN0ZXJzX2NpcmNsZS1tJ1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtbidcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfY2lyY2xlLW8nXG4gIHwgJ3B1YmxpY19jaGFyYWN0ZXJzX2NpcmNsZS1wJ1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtcSdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfY2lyY2xlLXInXG4gIHwgJ3B1YmxpY19jaGFyYWN0ZXJzX2NpcmNsZS1zJ1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtdCdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfY2lyY2xlLXUnXG4gIHwgJ3B1YmxpY19jaGFyYWN0ZXJzX2NpcmNsZS12J1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtdydcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfY2lyY2xlLXgnXG4gIHwgJ3B1YmxpY19jaGFyYWN0ZXJzX2NpcmNsZS15J1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUteidcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfZCdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfZSdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfZidcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfZydcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfaCdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfaSdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfaidcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfaydcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfbCdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfbSdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfbidcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfbydcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfcCdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfcSdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfcidcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfcydcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfc3F1YXJlLTAnXG4gIHwgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS0xJ1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc19zcXVhcmUtMidcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfc3F1YXJlLTMnXG4gIHwgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS00J1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc19zcXVhcmUtNSdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfc3F1YXJlLTYnXG4gIHwgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS03J1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc19zcXVhcmUtOCdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfc3F1YXJlLTknXG4gIHwgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS1hJ1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc19zcXVhcmUtYidcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfc3F1YXJlLWMnXG4gIHwgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS1kJ1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc19zcXVhcmUtZSdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfc3F1YXJlLWYnXG4gIHwgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS1nJ1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc19zcXVhcmUtaCdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfc3F1YXJlLWknXG4gIHwgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS1qJ1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc19zcXVhcmUtaydcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfc3F1YXJlLWwnXG4gIHwgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS1tJ1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc19zcXVhcmUtbidcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfc3F1YXJlLW8nXG4gIHwgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS1wJ1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc19zcXVhcmUtcSdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfc3F1YXJlLXInXG4gIHwgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS1zJ1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc19zcXVhcmUtdCdcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfc3F1YXJlLXUnXG4gIHwgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS12J1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc19zcXVhcmUtdydcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfc3F1YXJlLXgnXG4gIHwgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS14bWFyaydcbiAgfCAncHVibGljX2NoYXJhY3RlcnNfc3F1YXJlLXknXG4gIHwgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS16J1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc190J1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc191J1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc192J1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc193J1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc194J1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc195J1xuICB8ICdwdWJsaWNfY2hhcmFjdGVyc196J1xuICB8ICdwdWJsaWNfZnVybml0dXJlX2JhdGgnXG4gIHwgJ3B1YmxpY19mdXJuaXR1cmVfYmVkLWFsdCdcbiAgfCAncHVibGljX2Z1cm5pdHVyZV9iZWQtYnVuaydcbiAgfCAncHVibGljX2Z1cm5pdHVyZV9iZWQtZW1wdHknXG4gIHwgJ3B1YmxpY19mdXJuaXR1cmVfYmVkJ1xuICB8ICdwdWJsaWNfZnVybml0dXJlX2JsZW5kZXInXG4gIHwgJ3B1YmxpY19mdXJuaXR1cmVfYmxpbmRzJ1xuICB8ICdwdWJsaWNfZnVybml0dXJlX2NhYmluZXQtZmlsaW5nJ1xuICB8ICdwdWJsaWNfZnVybml0dXJlX2Nhc2gtcmVnaXN0ZXInXG4gIHwgJ3B1YmxpY19mdXJuaXR1cmVfY2hhaXItb2ZmaWNlJ1xuICB8ICdwdWJsaWNfZnVybml0dXJlX2NoYWlyJ1xuICB8ICdwdWJsaWNfZnVybml0dXJlX2NoYXJnaW5nLXN0YXRpb24nXG4gIHwgJ3B1YmxpY19mdXJuaXR1cmVfY29tcHV0ZXItY2xhc3NpYydcbiAgfCAncHVibGljX2Z1cm5pdHVyZV9jb21wdXRlci1zcGVha2VyJ1xuICB8ICdwdWJsaWNfZnVybml0dXJlX2NvdWNoJ1xuICB8ICdwdWJsaWNfZnVybml0dXJlX2RyeWVyLWFsdCdcbiAgfCAncHVibGljX2Z1cm5pdHVyZV9kcnllcidcbiAgfCAncHVibGljX2Z1cm5pdHVyZV9kdW1iYmVsbCdcbiAgfCAncHVibGljX2Z1cm5pdHVyZV9kdW1wc3RlcidcbiAgfCAncHVibGljX2Z1cm5pdHVyZV9mYXVjZXQnXG4gIHwgJ3B1YmxpY19mdXJuaXR1cmVfZmF4J1xuICB8ICdwdWJsaWNfZnVybml0dXJlX2hvdC10dWInXG4gIHwgJ3B1YmxpY19mdXJuaXR1cmVfaW52ZW50b3J5J1xuICB8ICdwdWJsaWNfZnVybml0dXJlX2xhbXAtZGVzaydcbiAgfCAncHVibGljX2Z1cm5pdHVyZV9sYW1wLWZsb29yJ1xuICB8ICdwdWJsaWNfZnVybml0dXJlX2xhbXAnXG4gIHwgJ3B1YmxpY19mdXJuaXR1cmVfbGFwdG9wJ1xuICB8ICdwdWJsaWNfZnVybml0dXJlX2xpZ2h0LWNlaWxpbmcnXG4gIHwgJ3B1YmxpY19mdXJuaXR1cmVfbG92ZXNlYXQnXG4gIHwgJ3B1YmxpY19mdXJuaXR1cmVfbWljcm93YXZlJ1xuICB8ICdwdWJsaWNfZnVybml0dXJlX3BpYW5vJ1xuICB8ICdwdWJsaWNfZnVybml0dXJlX3BvZGl1bSdcbiAgfCAncHVibGljX2Z1cm5pdHVyZV9wcmVzZW50YXRpb24nXG4gIHwgJ3B1YmxpY19mdXJuaXR1cmVfcHJvamVjdG9yJ1xuICB8ICdwdWJsaWNfZnVybml0dXJlX3JhZGlvJ1xuICB8ICdwdWJsaWNfZnVybml0dXJlX3JlZnJpZ2VyYXRvcidcbiAgfCAncHVibGljX2Z1cm5pdHVyZV9zaG93ZXInXG4gIHwgJ3B1YmxpY19mdXJuaXR1cmVfc2hyZWRkZXInXG4gIHwgJ3B1YmxpY19mdXJuaXR1cmVfc2luaydcbiAgfCAncHVibGljX2Z1cm5pdHVyZV9zb2xhci1wYW5lbCdcbiAgfCAncHVibGljX2Z1cm5pdHVyZV9zcGVha2VyJ1xuICB8ICdwdWJsaWNfZnVybml0dXJlX3NwZWFrZXJzJ1xuICB8ICdwdWJsaWNfZnVybml0dXJlX3RvaWxldCdcbiAgfCAncHVibGljX2Z1cm5pdHVyZV90cmFzaC1hbHQnXG4gIHwgJ3B1YmxpY19mdXJuaXR1cmVfdHVybnRhYmxlJ1xuICB8ICdwdWJsaWNfZnVybml0dXJlX3R2LXJldHJvJ1xuICB8ICdwdWJsaWNfZnVybml0dXJlX3R2J1xuICB8ICdwdWJsaWNfZnVybml0dXJlX3R5cGV3cml0ZXInXG4gIHwgJ3B1YmxpY19vYmplY3RzX2FiYWN1cydcbiAgfCAncHVibGljX29iamVjdHNfYWxhcm0tY2xvY2snXG4gIHwgJ3B1YmxpY19vYmplY3RzX2FsYnVtLWNvbGxlY3Rpb24nXG4gIHwgJ3B1YmxpY19vYmplY3RzX2JhY2twYWNrJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19iYWdzLXNob3BwaW5nJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19iZWxsJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19iaWN5Y2xlJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19iaW5vY3VsYXJzJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19ibGFua2V0J1xuICB8ICdwdWJsaWNfb2JqZWN0c19ib29rJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19ib29rcydcbiAgfCAncHVibGljX29iamVjdHNfYm9vdCdcbiAgfCAncHVibGljX29iamVjdHNfYm94J1xuICB8ICdwdWJsaWNfb2JqZWN0c19icmVhZC1sb2FmJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19icmllZmNhc2UtbWVkaWNhbCdcbiAgfCAncHVibGljX29iamVjdHNfYnJpZWZjYXNlJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19icm9vbSdcbiAgfCAncHVibGljX29iamVjdHNfYnJ1c2gnXG4gIHwgJ3B1YmxpY19vYmplY3RzX2J1bGxob3JuJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19idXJnZXItc29kYSdcbiAgfCAncHVibGljX29iamVjdHNfY2FsY3VsYXRvcidcbiAgfCAncHVibGljX29iamVjdHNfY2FsZW5kYXInXG4gIHwgJ3B1YmxpY19vYmplY3RzX2NhbWVyYSdcbiAgfCAncHVibGljX29iamVjdHNfY2FyJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19jYXJyb3QnXG4gIHwgJ3B1YmxpY19vYmplY3RzX2NoZWVzZS1zd2lzcydcbiAgfCAncHVibGljX29iamVjdHNfY2hlc3MnXG4gIHwgJ3B1YmxpY19vYmplY3RzX2NsaXBib2FyZC1jaGVjaydcbiAgfCAncHVibGljX29iamVjdHNfY2xpcGJvYXJkLWxpc3QnXG4gIHwgJ3B1YmxpY19vYmplY3RzX2NsaXBib2FyZCdcbiAgfCAncHVibGljX29iamVjdHNfY29mZmVlLXBvdCdcbiAgfCAncHVibGljX29iamVjdHNfY29tcGFzcydcbiAgfCAncHVibGljX29iamVjdHNfY29va2llJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19jb3JuJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19jcm9pc3NhbnQnXG4gIHwgJ3B1YmxpY19vYmplY3RzX2RpY2UnXG4gIHwgJ3B1YmxpY19vYmplY3RzX2RydW1zdGljaydcbiAgfCAncHVibGljX29iamVjdHNfZWdnJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19maXNoJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19mbGFzaydcbiAgfCAncHVibGljX29iamVjdHNfZmxvd2VyLXR1bGlwJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19nYW1lcGFkJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19nZW0nXG4gIHwgJ3B1YmxpY19vYmplY3RzX2dpZnQnXG4gIHwgJ3B1YmxpY19vYmplY3RzX2dpZnRzJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19nbGFzcy1jaXRydXMnXG4gIHwgJ3B1YmxpY19vYmplY3RzX2dsYXNzJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19nbGFzc2VzJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19nbG9iZS1zdGFuZCdcbiAgfCAncHVibGljX29iamVjdHNfZ3JhZHVhdGlvbi1jYXAnXG4gIHwgJ3B1YmxpY19vYmplY3RzX2d1aXRhcidcbiAgfCAncHVibGljX29iamVjdHNfaGFtbWVyJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19oYXQtY2hlZidcbiAgfCAncHVibGljX29iamVjdHNfaWNlLWNyZWFtJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19pY2Utc2thdGUnXG4gIHwgJ3B1YmxpY19vYmplY3RzX2tleSdcbiAgfCAncHVibGljX29iamVjdHNfa25pZmUta2l0Y2hlbidcbiAgfCAncHVibGljX29iamVjdHNfbGlnaHRidWxiLW9uJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19saWdodGJ1bGItc2xhc2gnXG4gIHwgJ3B1YmxpY19vYmplY3RzX2xpZ2h0YnVsYidcbiAgfCAncHVibGljX29iamVjdHNfbWFnbmV0J1xuICB8ICdwdWJsaWNfb2JqZWN0c19tYWlsYm94J1xuICB8ICdwdWJsaWNfb2JqZWN0c19tYXAnXG4gIHwgJ3B1YmxpY19vYmplY3RzX21lYXQnXG4gIHwgJ3B1YmxpY19vYmplY3RzX21lZGFsJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19taWNyb3Bob25lJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19tb2JpbGUnXG4gIHwgJ3B1YmxpY19vYmplY3RzX21vbmV5LWJpbGwtd2F2ZSdcbiAgfCAncHVibGljX29iamVjdHNfbXVnLXRlYSdcbiAgfCAncHVibGljX29iamVjdHNfbXVnJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19uZXdzcGFwZXInXG4gIHwgJ3B1YmxpY19vYmplY3RzX3BhaW50LXJvbGxlcidcbiAgfCAncHVibGljX29iamVjdHNfcGFsZXR0ZSdcbiAgfCAncHVibGljX29iamVjdHNfcGVuJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19waG9uZSdcbiAgfCAncHVibGljX29iamVjdHNfcGl6emEtc2xpY2UnXG4gIHwgJ3B1YmxpY19vYmplY3RzX3B1bXAtc29hcCdcbiAgfCAncHVibGljX29iamVjdHNfcnVsZXItdHJpYW5nbGUnXG4gIHwgJ3B1YmxpY19vYmplY3RzX3J1bGVyJ1xuICB8ICdwdWJsaWNfb2JqZWN0c19zYWxhZCdcbiAgfCAncHVibGljX29iamVjdHNfc2FuZHdpY2gnXG4gIHwgJ3B1YmxpY19vYmplY3RzX3Nob3ZlbCdcbiAgfCAncHVibGljX29iamVjdHNfc3RlYWsnXG4gIHwgJ3B1YmxpY19vYmplY3RzX3N1bmdsYXNzZXMnXG4gIHwgJ3B1YmxpY19vYmplY3RzX3R1cmtleSdcbiAgfCAncHVibGljX29iamVjdHNfdXRlbnNpbHMnXG4gIHwgJ3B1YmxpY19vYmplY3RzX3ZpYWwnXG4gIHwgJ3B1YmxpY19vYmplY3RzX3dhbGxldCdcbiAgfCAncHVibGljX29iamVjdHNfd3JlbmNoJ1xuICB8ICdwdWJsaWNfcGVvcGxlX2JhYnknXG4gIHwgJ3B1YmxpY19wZW9wbGVfY2hpbGQtZHJlc3MnXG4gIHwgJ3B1YmxpY19wZW9wbGVfY2hpbGQtcmVhY2hpbmcnXG4gIHwgJ3B1YmxpY19wZW9wbGVfY2hpbGQnXG4gIHwgJ3B1YmxpY19wZW9wbGVfY2hpbGRyZW4nXG4gIHwgJ3B1YmxpY19wZW9wbGVfY2lyY2xlLXVzZXInXG4gIHwgJ3B1YmxpY19wZW9wbGVfY2xpcGJvYXJkLXVzZXInXG4gIHwgJ3B1YmxpY19wZW9wbGVfZmFjZS1hbmdyeSdcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLWFuZ3Vpc2hlZCdcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLWFzdG9uaXNoZWQnXG4gIHwgJ3B1YmxpY19wZW9wbGVfZmFjZS1iZWFtLWhhbmQtb3Zlci1tb3V0aCdcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLWNvbmZvdW5kZWQnXG4gIHwgJ3B1YmxpY19wZW9wbGVfZmFjZS1jb25mdXNlZCdcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLWRpYWdvbmFsLW1vdXRoJ1xuICB8ICdwdWJsaWNfcGVvcGxlX2ZhY2UtZGlzYXBwb2ludGVkJ1xuICB8ICdwdWJsaWNfcGVvcGxlX2ZhY2UtZGl6enknXG4gIHwgJ3B1YmxpY19wZW9wbGVfZmFjZS1leHByZXNzaW9ubGVzcydcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLWV5ZXMteG1hcmtzJ1xuICB8ICdwdWJsaWNfcGVvcGxlX2ZhY2UtZmVhcmZ1bCdcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLWZyb3duLXNsaWdodCdcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLWZyb3duJ1xuICB8ICdwdWJsaWNfcGVvcGxlX2ZhY2UtZ2xhc3NlcydcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLWdyaW1hY2UnXG4gIHwgJ3B1YmxpY19wZW9wbGVfZmFjZS1ncmluLWJlYW0tc3dlYXQnXG4gIHwgJ3B1YmxpY19wZW9wbGVfZmFjZS1ncmluLWJlYW0nXG4gIHwgJ3B1YmxpY19wZW9wbGVfZmFjZS1ncmluLWhlYXJ0cydcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLWdyaW4tc3F1aW50LXRlYXJzJ1xuICB8ICdwdWJsaWNfcGVvcGxlX2ZhY2UtZ3Jpbi1zcXVpbnQnXG4gIHwgJ3B1YmxpY19wZW9wbGVfZmFjZS1ncmluLXN0YXJzJ1xuICB8ICdwdWJsaWNfcGVvcGxlX2ZhY2UtZ3Jpbi10ZWFycydcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLWdyaW4tdG9uZ3VlLXNxdWludCdcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLWdyaW4tdG9uZ3VlLXdpbmsnXG4gIHwgJ3B1YmxpY19wZW9wbGVfZmFjZS1ncmluLXRvbmd1ZSdcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLWdyaW4td2lkZSdcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLWdyaW4td2luaydcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLWdyaW4nXG4gIHwgJ3B1YmxpY19wZW9wbGVfZmFjZS1oYW5kLW92ZXItbW91dGgnXG4gIHwgJ3B1YmxpY19wZW9wbGVfZmFjZS1odXNoZWQnXG4gIHwgJ3B1YmxpY19wZW9wbGVfZmFjZS1pY2ljbGVzJ1xuICB8ICdwdWJsaWNfcGVvcGxlX2ZhY2Uta2lzcydcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLWxhdWdoJ1xuICB8ICdwdWJsaWNfcGVvcGxlX2ZhY2UtbWFzaydcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLW1laC1ibGFuaydcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLW1laCdcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLW1vbm9jbGUnXG4gIHwgJ3B1YmxpY19wZW9wbGVfZmFjZS1uYXVzZWF0ZWQnXG4gIHwgJ3B1YmxpY19wZW9wbGVfZmFjZS1wYXJ0eSdcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLXBlbnNpdmUnXG4gIHwgJ3B1YmxpY19wZW9wbGVfZmFjZS1wZXJzZXZlcmluZydcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLXBsZWFkaW5nJ1xuICB8ICdwdWJsaWNfcGVvcGxlX2ZhY2UtcG91dGluZydcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLXJhaXNlZC1leWVicm93J1xuICB8ICdwdWJsaWNfcGVvcGxlX2ZhY2UtcmVsaWV2ZWQnXG4gIHwgJ3B1YmxpY19wZW9wbGVfZmFjZS1yb2xsaW5nLWV5ZXMnXG4gIHwgJ3B1YmxpY19wZW9wbGVfZmFjZS1zYWQtY3J5J1xuICB8ICdwdWJsaWNfcGVvcGxlX2ZhY2Utc2FkLXN3ZWF0J1xuICB8ICdwdWJsaWNfcGVvcGxlX2ZhY2Utc2FkLXRlYXInXG4gIHwgJ3B1YmxpY19wZW9wbGVfZmFjZS1zY3JlYW0nXG4gIHwgJ3B1YmxpY19wZW9wbGVfZmFjZS1zbGVlcGluZydcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLXNsZWVweSdcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLXNtaWxlLWJlYW0nXG4gIHwgJ3B1YmxpY19wZW9wbGVfZmFjZS1zbWlsZS1oYWxvJ1xuICB8ICdwdWJsaWNfcGVvcGxlX2ZhY2Utc21pbGUtaGVhcnRzJ1xuICB8ICdwdWJsaWNfcGVvcGxlX2ZhY2Utc21pbGUtcmVsYXhlZCdcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLXNtaWxlLXVwc2lkZS1kb3duJ1xuICB8ICdwdWJsaWNfcGVvcGxlX2ZhY2Utc21pbGUtd2luaydcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLXNtaWxlJ1xuICB8ICdwdWJsaWNfcGVvcGxlX2ZhY2Utc21pcmtpbmcnXG4gIHwgJ3B1YmxpY19wZW9wbGVfZmFjZS1zcGlyYWwtZXllcydcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLXN1bmdsYXNzZXMnXG4gIHwgJ3B1YmxpY19wZW9wbGVfZmFjZS1zdXJwcmlzZSdcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLXRoZXJtb21ldGVyJ1xuICB8ICdwdWJsaWNfcGVvcGxlX2ZhY2UtdGhpbmtpbmcnXG4gIHwgJ3B1YmxpY19wZW9wbGVfZmFjZS10aXJlZCdcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLXRpc3N1ZSdcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLXVuYW11c2VkJ1xuICB8ICdwdWJsaWNfcGVvcGxlX2ZhY2Utdm9taXQnXG4gIHwgJ3B1YmxpY19wZW9wbGVfZmFjZS13ZWFyeSdcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLXdvb3p5J1xuICB8ICdwdWJsaWNfcGVvcGxlX2ZhY2Utd29ycmllZCdcbiAgfCAncHVibGljX3Blb3BsZV9mYWNlLXppcHBlcidcbiAgfCAncHVibGljX3Blb3BsZV9mYW1pbHktZHJlc3MnXG4gIHwgJ3B1YmxpY19wZW9wbGVfZmFtaWx5LXBhbnRzJ1xuICB8ICdwdWJsaWNfcGVvcGxlX2ZhbWlseSdcbiAgfCAncHVibGljX3Blb3BsZV9maWxlLXVzZXInXG4gIHwgJ3B1YmxpY19wZW9wbGVfZm9sZGVyLXVzZXInXG4gIHwgJ3B1YmxpY19wZW9wbGVfaGVhZC1zaWRlLWJyYWluJ1xuICB8ICdwdWJsaWNfcGVvcGxlX2hlYWQtc2lkZS1jb3VnaC1zbGFzaCdcbiAgfCAncHVibGljX3Blb3BsZV9oZWFkLXNpZGUtY291Z2gnXG4gIHwgJ3B1YmxpY19wZW9wbGVfaGVhZC1zaWRlLWdvZ2dsZXMnXG4gIHwgJ3B1YmxpY19wZW9wbGVfaGVhZC1zaWRlLWhlYWRwaG9uZXMnXG4gIHwgJ3B1YmxpY19wZW9wbGVfaGVhZC1zaWRlLWhlYXJ0J1xuICB8ICdwdWJsaWNfcGVvcGxlX2hlYWQtc2lkZS1tYXNrJ1xuICB8ICdwdWJsaWNfcGVvcGxlX2hlYWQtc2lkZS1tZWRpY2FsJ1xuICB8ICdwdWJsaWNfcGVvcGxlX2hlYWQtc2lkZS12aXJ1cydcbiAgfCAncHVibGljX3Blb3BsZV9oZWFkLXNpZGUnXG4gIHwgJ3B1YmxpY19wZW9wbGVfcGVvcGxlJ1xuICB8ICdwdWJsaWNfcGVvcGxlX3BlcnNvbi1iaWtpbmcnXG4gIHwgJ3B1YmxpY19wZW9wbGVfcGVyc29uLWJvb3RoJ1xuICB8ICdwdWJsaWNfcGVvcGxlX3BlcnNvbi1icmVhc3RmZWVkaW5nJ1xuICB8ICdwdWJsaWNfcGVvcGxlX3BlcnNvbi1jYW5lJ1xuICB8ICdwdWJsaWNfcGVvcGxlX3BlcnNvbi1jYXJyeS1ib3gnXG4gIHwgJ3B1YmxpY19wZW9wbGVfcGVyc29uLWRpZ2dpbmcnXG4gIHwgJ3B1YmxpY19wZW9wbGVfcGVyc29uLWRvbGx5LWVtcHR5J1xuICB8ICdwdWJsaWNfcGVvcGxlX3BlcnNvbi1kb2xseSdcbiAgfCAncHVibGljX3Blb3BsZV9wZXJzb24tZHJlc3MnXG4gIHwgJ3B1YmxpY19wZW9wbGVfcGVyc29uLWRyb3duaW5nJ1xuICB8ICdwdWJsaWNfcGVvcGxlX3BlcnNvbi1mYWxsaW5nJ1xuICB8ICdwdWJsaWNfcGVvcGxlX3BlcnNvbi1oYWxmLWRyZXNzJ1xuICB8ICdwdWJsaWNfcGVvcGxlX3BlcnNvbi1oaWtpbmcnXG4gIHwgJ3B1YmxpY19wZW9wbGVfcGVyc29uLW1pbGl0YXJ5LXBvaW50aW5nJ1xuICB8ICdwdWJsaWNfcGVvcGxlX3BlcnNvbi1waW5iYWxsJ1xuICB8ICdwdWJsaWNfcGVvcGxlX3BlcnNvbi1wcmF5aW5nJ1xuICB8ICdwdWJsaWNfcGVvcGxlX3BlcnNvbi1wcmVnbmFudCdcbiAgfCAncHVibGljX3Blb3BsZV9wZXJzb24tcnVubmluZydcbiAgfCAncHVibGljX3Blb3BsZV9wZXJzb24tc2VhdC1yZWNsaW5lZCdcbiAgfCAncHVibGljX3Blb3BsZV9wZXJzb24tc2VhdCdcbiAgfCAncHVibGljX3Blb3BsZV9wZXJzb24tc2hlbHRlcidcbiAgfCAncHVibGljX3Blb3BsZV9wZXJzb24tc2thdGluZydcbiAgfCAncHVibGljX3Blb3BsZV9wZXJzb24tc2tpaW5nJ1xuICB8ICdwdWJsaWNfcGVvcGxlX3BlcnNvbi1zd2ltbWluZydcbiAgfCAncHVibGljX3Blb3BsZV9wZXJzb24tdG8tZG9vcidcbiAgfCAncHVibGljX3Blb3BsZV9wZXJzb24td2Fsa2luZy1sdWdnYWdlJ1xuICB8ICdwdWJsaWNfcGVvcGxlX3BlcnNvbi13YWxraW5nLXdpdGgtY2FuZSdcbiAgfCAncHVibGljX3Blb3BsZV9wZXJzb24td2Fsa2luZydcbiAgfCAncHVibGljX3Blb3BsZV9wZXJzb24nXG4gIHwgJ3B1YmxpY19wZW9wbGVfcmVzdHJvb20nXG4gIHwgJ3B1YmxpY19wZW9wbGVfc3F1YXJlLXVzZXInXG4gIHwgJ3B1YmxpY19wZW9wbGVfc3RyZWV0LXZpZXcnXG4gIHwgJ3B1YmxpY19wZW9wbGVfdXNlci1hc3Ryb25hdXQnXG4gIHwgJ3B1YmxpY19wZW9wbGVfdXNlci1jaGVjaydcbiAgfCAncHVibGljX3Blb3BsZV91c2VyLWNoZWYnXG4gIHwgJ3B1YmxpY19wZW9wbGVfdXNlci1jbG9jaydcbiAgfCAncHVibGljX3Blb3BsZV91c2VyLWNvd2JveSdcbiAgfCAncHVibGljX3Blb3BsZV91c2VyLWNyb3duJ1xuICB8ICdwdWJsaWNfcGVvcGxlX3VzZXItZG9jdG9yJ1xuICB8ICdwdWJsaWNfcGVvcGxlX3VzZXItZ2VhcidcbiAgfCAncHVibGljX3Blb3BsZV91c2VyLWdyYWR1YXRlJ1xuICB8ICdwdWJsaWNfcGVvcGxlX3VzZXItZ3JvdXAnXG4gIHwgJ3B1YmxpY19wZW9wbGVfdXNlci1oZWFkc2V0J1xuICB8ICdwdWJsaWNfcGVvcGxlX3VzZXItaGVsbWV0LXNhZmV0eSdcbiAgfCAncHVibGljX3Blb3BsZV91c2VyLWluanVyZWQnXG4gIHwgJ3B1YmxpY19wZW9wbGVfdXNlci1sYXJnZSdcbiAgfCAncHVibGljX3Blb3BsZV91c2VyLWxvY2snXG4gIHwgJ3B1YmxpY19wZW9wbGVfdXNlci1taW51cydcbiAgfCAncHVibGljX3Blb3BsZV91c2VyLW11c2ljJ1xuICB8ICdwdWJsaWNfcGVvcGxlX3VzZXItbnVyc2UnXG4gIHwgJ3B1YmxpY19wZW9wbGVfdXNlci1wZW4nXG4gIHwgJ3B1YmxpY19wZW9wbGVfdXNlci1waWxvdCdcbiAgfCAncHVibGljX3Blb3BsZV91c2VyLXBsdXMnXG4gIHwgJ3B1YmxpY19wZW9wbGVfdXNlci1wb2xpY2UnXG4gIHwgJ3B1YmxpY19wZW9wbGVfdXNlci1zaGllbGQnXG4gIHwgJ3B1YmxpY19wZW9wbGVfdXNlci1zbGFzaCdcbiAgfCAncHVibGljX3Blb3BsZV91c2VyLXVubG9jaydcbiAgfCAncHVibGljX3Blb3BsZV91c2VyJ1xuICB8ICdwdWJsaWNfcGVvcGxlX3VzZXJzJ1xuICB8ICdwdWJsaWNfcGVvcGxlX3doZWVsY2hhaXInXG4gIHwgJ3B1YmxpY19zeW1ib2xzX2Fycm93LWFsdC1jaXJjbGUtZG93bidcbiAgfCAncHVibGljX3N5bWJvbHNfYXJyb3ctYWx0LWNpcmNsZS1sZWZ0J1xuICB8ICdwdWJsaWNfc3ltYm9sc19hcnJvdy1hbHQtY2lyY2xlLXJpZ2h0J1xuICB8ICdwdWJsaWNfc3ltYm9sc19hcnJvdy1hbHQtY2lyY2xlLXVwJ1xuICB8ICdwdWJsaWNfc3ltYm9sc19hcnJvdy1hbHQtZG93bidcbiAgfCAncHVibGljX3N5bWJvbHNfYXJyb3ctYWx0LWxlZnQnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX2Fycm93LWFsdC1yaWdodCdcbiAgfCAncHVibGljX3N5bWJvbHNfYXJyb3ctYWx0LXVwJ1xuICB8ICdwdWJsaWNfc3ltYm9sc19hd2FyZCdcbiAgfCAncHVibGljX3N5bWJvbHNfYmFkZ2UtY2hlY2snXG4gIHwgJ3B1YmxpY19zeW1ib2xzX2JhZGdlLWRvbGxhcidcbiAgfCAncHVibGljX3N5bWJvbHNfYmFkZ2UnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX2JhbidcbiAgfCAncHVibGljX3N5bWJvbHNfYmVsbCdcbiAgfCAncHVibGljX3N5bWJvbHNfYm9sdC1zbGFzaCdcbiAgfCAncHVibGljX3N5bWJvbHNfYm9sdCdcbiAgfCAncHVibGljX3N5bWJvbHNfYm9va21hcmsnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX2NoZWNrLWNpcmNsZSdcbiAgfCAncHVibGljX3N5bWJvbHNfY2hlY2snXG4gIHwgJ3B1YmxpY19zeW1ib2xzX2NpcmNsZSdcbiAgfCAncHVibGljX3N5bWJvbHNfY2xvY2snXG4gIHwgJ3B1YmxpY19zeW1ib2xzX2NsdWInXG4gIHwgJ3B1YmxpY19zeW1ib2xzX2N1YmUnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX2N1YmVzJ1xuICB8ICdwdWJsaWNfc3ltYm9sc19kZWFmJ1xuICB8ICdwdWJsaWNfc3ltYm9sc19kaWFtb25kJ1xuICB8ICdwdWJsaWNfc3ltYm9sc19kb2xsYXItc2lnbidcbiAgfCAncHVibGljX3N5bWJvbHNfZXhjbGFtYXRpb24tY2lyY2xlJ1xuICB8ICdwdWJsaWNfc3ltYm9sc19leGNsYW1hdGlvbi1zcXVhcmUnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX2V4Y2xhbWF0aW9uLXRyaWFuZ2xlJ1xuICB8ICdwdWJsaWNfc3ltYm9sc19leGNsYW1hdGlvbidcbiAgfCAncHVibGljX3N5bWJvbHNfZXllLXNsYXNoJ1xuICB8ICdwdWJsaWNfc3ltYm9sc19leWUnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX2ZpbGUnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX2ZpbmdlcnByaW50J1xuICB8ICdwdWJsaWNfc3ltYm9sc19maXJlLWFsdCdcbiAgfCAncHVibGljX3N5bWJvbHNfZmxhZy1hbHQnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX2ZvbGRlcidcbiAgfCAncHVibGljX3N5bWJvbHNfZ2VuZGVybGVzcydcbiAgfCAncHVibGljX3N5bWJvbHNfaGVhcnQnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX2hleGFnb24nXG4gIHwgJ3B1YmxpY19zeW1ib2xzX2hvdXJnbGFzcydcbiAgfCAncHVibGljX3N5bWJvbHNfaW1hZ2UnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX2luZm8tY2lyY2xlJ1xuICB8ICdwdWJsaWNfc3ltYm9sc19pbmZvLXNxdWFyZSdcbiAgfCAncHVibGljX3N5bWJvbHNfbGF5ZXItZ3JvdXAnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX2xpbmsnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX2xvY2F0aW9uLWFycm93J1xuICB8ICdwdWJsaWNfc3ltYm9sc19sb2NrLW9wZW4nXG4gIHwgJ3B1YmxpY19zeW1ib2xzX2xvY2snXG4gIHwgJ3B1YmxpY19zeW1ib2xzX21hcC1tYXJrZXItYWx0J1xuICB8ICdwdWJsaWNfc3ltYm9sc19tYXAtbWFya2VyLWNoZWNrJ1xuICB8ICdwdWJsaWNfc3ltYm9sc19tYXAtbWFya2VyLWV4Y2xhbWF0aW9uJ1xuICB8ICdwdWJsaWNfc3ltYm9sc19tYXAtbWFya2VyLW1pbnVzJ1xuICB8ICdwdWJsaWNfc3ltYm9sc19tYXAtbWFya2VyLXBsdXMnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX21hcC1tYXJrZXItcXVlc3Rpb24nXG4gIHwgJ3B1YmxpY19zeW1ib2xzX21hcC1tYXJrZXItc21pbGUnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX21hcnMnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX21vb24nXG4gIHwgJ3B1YmxpY19zeW1ib2xzX29jdGFnb24nXG4gIHwgJ3B1YmxpY19zeW1ib2xzX3BhcGVyY2xpcCdcbiAgfCAncHVibGljX3N5bWJvbHNfcGFya2luZy1jaXJjbGUnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX3BhcmtpbmcnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX3BhdXNlJ1xuICB8ICdwdWJsaWNfc3ltYm9sc19wbGF5J1xuICB8ICdwdWJsaWNfc3ltYm9sc19xdWVzdGlvbi1jaXJjbGUnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX3F1ZXN0aW9uLXNxdWFyZSdcbiAgfCAncHVibGljX3N5bWJvbHNfcXVlc3Rpb24nXG4gIHwgJ3B1YmxpY19zeW1ib2xzX3JlY3ljbGUnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX3JlZG8nXG4gIHwgJ3B1YmxpY19zeW1ib2xzX3NoYXBlcydcbiAgfCAncHVibGljX3N5bWJvbHNfc2hpZWxkJ1xuICB8ICdwdWJsaWNfc3ltYm9sc19zbW9raW5nLWJhbidcbiAgfCAncHVibGljX3N5bWJvbHNfc21va2luZydcbiAgfCAncHVibGljX3N5bWJvbHNfc3BhZGUnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX3NxdWFyZSdcbiAgfCAncHVibGljX3N5bWJvbHNfc3Rhci1maWxsZWQnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX3N0YXInXG4gIHwgJ3B1YmxpY19zeW1ib2xzX3RhY2hvbWV0ZXInXG4gIHwgJ3B1YmxpY19zeW1ib2xzX3RhZydcbiAgfCAncHVibGljX3N5bWJvbHNfdGVtcGVyYXR1cmUtZG93bidcbiAgfCAncHVibGljX3N5bWJvbHNfdGVtcGVyYXR1cmUtZnJpZ2lkJ1xuICB8ICdwdWJsaWNfc3ltYm9sc190ZW1wZXJhdHVyZS1oaWdoJ1xuICB8ICdwdWJsaWNfc3ltYm9sc190ZW1wZXJhdHVyZS1ob3QnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX3RlbXBlcmF0dXJlLWxvdydcbiAgfCAncHVibGljX3N5bWJvbHNfdGVtcGVyYXR1cmUtdXAnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX3RleHQnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX3RoZXJtb21ldGVyLWVtcHR5J1xuICB8ICdwdWJsaWNfc3ltYm9sc190aGVybW9tZXRlci1mdWxsJ1xuICB8ICdwdWJsaWNfc3ltYm9sc190aGVybW9tZXRlci1oYWxmJ1xuICB8ICdwdWJsaWNfc3ltYm9sc190aGVybW9tZXRlci1xdWFydGVyJ1xuICB8ICdwdWJsaWNfc3ltYm9sc190aGVybW9tZXRlci10aHJlZS1xdWFydGVycydcbiAgfCAncHVibGljX3N5bWJvbHNfdGh1bWJ0YWNrJ1xuICB8ICdwdWJsaWNfc3ltYm9sc190aW50J1xuICB8ICdwdWJsaWNfc3ltYm9sc190cmFuc2dlbmRlci1hbHQnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX3RyYW5zZ2VuZGVyJ1xuICB8ICdwdWJsaWNfc3ltYm9sc190cmFzaC1hbHQnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX3RyaWFuZ2xlJ1xuICB8ICdwdWJsaWNfc3ltYm9sc191c2QtY2lyY2xlJ1xuICB8ICdwdWJsaWNfc3ltYm9sc191c2Qtc3F1YXJlJ1xuICB8ICdwdWJsaWNfc3ltYm9sc192ZW51cy1tYXJzJ1xuICB8ICdwdWJsaWNfc3ltYm9sc192ZW51cydcbiAgfCAncHVibGljX3N5bWJvbHNfdmlkZW8nXG4gIHwgJ3B1YmxpY19zeW1ib2xzX3ZvbHVtZS1kb3duJ1xuICB8ICdwdWJsaWNfc3ltYm9sc192b2x1bWUtbXV0ZSdcbiAgfCAncHVibGljX3N5bWJvbHNfdm9sdW1lLW9mZidcbiAgfCAncHVibGljX3N5bWJvbHNfdm9sdW1lLXNsYXNoJ1xuICB8ICdwdWJsaWNfc3ltYm9sc192b2x1bWUtdXAnXG4gIHwgJ3B1YmxpY19zeW1ib2xzX3ZvbHVtZSdcbiAgfCAncHVibGljX3N5bWJvbHNfd2F0ZXInXG4gIHwgJ3B1YmxpY19zeW1ib2xzX3dhdmVmb3JtJ1xuICB8ICdwdWJsaWNfc3ltYm9sc193aWZpLXNsYXNoJ1xuICB8ICdwdWJsaWNfc3ltYm9sc193aWZpJ1xuICB8ICdwdWJsaWNfc3ltYm9sc195ZW4tc2lnbidcbiAgfCAncXVlc3Rpb24nXG4gIHwgJ3Jlb3JkZXInXG4gIHwgJ3JlcGx5J1xuICB8ICdyZXN0YXJ0J1xuICB8ICdyZXZlcnQnXG4gIHwgJ3Jvb20tMDAyNThrMG1xdTg3NTBkdTE1MWJlODA1YydcbiAgfCAncm9vbS0wYW4ycmt5MjRnYjkxZmRucHptYndhZGliJ1xuICB8ICdyb29tLTBnbnV1bnB3eDYzZG1tcWVxNjRhcWZpeWQnXG4gIHwgJ3Jvb20tMm54Nm1heHhwYWV1dDdreDk2ZnVhY2R6YydcbiAgfCAncm9vbS00YnkyZDcwYjU0c3JiaW40M3Q1bTB5aDljJ1xuICB8ICdyb29tLTRncDh4MjFuaTRpOHkxOXI5cG00cmIzNWEnXG4gIHwgJ3Jvb20tNHFxNGU1aHo4NGhjdXI3cnk4N3VodG11YSdcbiAgfCAncm9vbS02NnBzYTR0cWdhemJuZmZyOWh1eTJkbnBkJ1xuICB8ICdyb29tLTkxbmFhMWszaGlpbTl6NG1rODM1MmVudGEnXG4gIHwgJ3Jvb20tYTExZDJnaTQzaDBldHdlZHcwbXg5cGd3ZCdcbiAgfCAncm9vbS1hZzV1cGhoYTcyc2FrNjVxYXpnc3AwOXlkJ1xuICB8ICdyb29tLWJ5cDdwejJ0bXQ0ZmY0N25oZngwdXd6ZWMnXG4gIHwgJ3Jvb20tZTZtZDJzcGFxZW1jNDQ4cG1hdTNhemtoZCdcbiAgfCAncm9vbS1laTNrbXR1bjJ4cHNwYmczZDVmZjN0M3pjJ1xuICB8ICdyb29tLWdiYThjcTBzMnJkZmcxemRiMWVwd3R5N2QnXG4gIHwgJ3Jvb20tZ2UwdGNhbjNpenR0YTVtdGdzZng5OXhwYidcbiAgfCAncm9vbS1ncXF3MXphYzFoemcxcDg2MjJkdWNnM3piJ1xuICB8ICdyb29tLWl6dDM5Z3l0Y2J5bWMwcXRkMzducmI3eGInXG4gIHwgJ3Jvb20tbXVsdGktdXNlJ1xuICB8ICdyb29tLW14NmUyeWZrMHRnMHpia2J6dXc1bWhrZGEnXG4gIHwgJ3Jvb20tbjA3aGhzOWdreTRjZ3JoN3E2NXM5cnAwZCdcbiAgfCAncm9vbS1ucXc3NTAwNGRjZzJiY3I0MTA0N3JoZzZjJ1xuICB8ICdyb29tLXBuZjB4enE2MXhjZWdhY2s0aWFpN3hwcGQnXG4gIHwgJ3Jvb20tcHI5aDR6eTdlYWs5MWYzYjd1bjk3dTQyYydcbiAgfCAncm9vbS1xYTIxdHFjc2lubnhkZTlnZG1pcGhhY3phJ1xuICB8ICdyb29tLXJtdThwaWtjeWUwbjduOWZzdTVlNGFjZGEnXG4gIHwgJ3Jvb20tczFoMGhiOHRwY2M5aTM1ZG11cGtuc2VnYSdcbiAgfCAncm9vbS11YTFtMHU4cG0zeW5ncmh6d2VjMXVlNXpjJ1xuICB8ICdyb29tLXc0dGRnZ2s1aTV1MnpwaXJ5dWdrdGdoZ2InXG4gIHwgJ3Jvb20teHdoaHo2M2EwaHc3MzVxZjgxa25wNjNoYSdcbiAgfCAncm9vbS15M3h1cHJteXdncnBybm0wMjczdTNwcGhkJ1xuICB8ICdyb29tLXllaDFhYTMyZndnbTcyYmgwZzkyZWJydWMnXG4gIHwgJ3Jvb20teXd0ZGR1OWhhZ3JheGh6bndpbm44dDR6YidcbiAgfCAncm9vbS16Z2gyMzA0dzVhbnUwdDI1aWEwNnl0ZnhkJ1xuICB8ICdyb29tLXpwMTg5dHgyaGRycnk4azVuaGFxNXg0NWQnXG4gIHwgJ3JvdGF0ZS1sZWZ0J1xuICB8ICdyb3RhdGUtcmlnaHQnXG4gIHwgJ3JvdGF0ZSdcbiAgfCAncm90YXRpb24tM2QnXG4gIHwgJ3NjYWxlLTNkJ1xuICB8ICdzZXR0aW5ncydcbiAgfCAnc2hhcmUnXG4gIHwgJ3NoYXJlMidcbiAgfCAnc2ltcGxlLXRhZy1waW4nXG4gIHwgJ3NpbXBsZS10YWctc21hbGwnXG4gIHwgJ3NpbXBsZS10YWcnXG4gIHwgJ3NuYXAnXG4gIHwgJ3NwYXJrbGUtZmlsbCdcbiAgfCAnc3BhcmtsZSdcbiAgfCAnc3RhcnQtbG9jYXRpb24nXG4gIHwgJ3N0ZW0taGVpZ2h0J1xuICB8ICd0YXBlLW1lYXN1cmUnXG4gIHwgJ3RvZ2dsZS1wZW5jaWwnXG4gIHwgJ3Rvb2xiYXItMzYwLXZpZXcnXG4gIHwgJ3Rvb2xiYXItZWRpdC12cidcbiAgfCAndG9vbGJhci1obHInXG4gIHwgJ3Rvb2xiYXItbGFiZWxzJ1xuICB8ICd0b29sYmFyLW1hdHRlcnRhZ3MnXG4gIHwgJ3Rvb2xiYXItbWVhc3VyZW1lbnRzJ1xuICB8ICd0b29sYmFyLW1vcmUtaG9yaXonXG4gIHwgJ3Rvb2xiYXItcGhvdG9zJ1xuICB8ICd0b29sYmFyLXBsdWdpbi1jb25maWcnXG4gIHwgJ3Rvb2xiYXItc2Nhbi1tZ210J1xuICB8ICd0b29sYmFyLXN0YXJ0LWxvY2F0aW9uJ1xuICB8ICd0cmFuc2l0aW9ucydcbiAgfCAndHJhc2gnXG4gIHwgJ3RyaW0ta2VlcCdcbiAgfCAndHJpbS1yZW1vdmUnXG4gIHwgJ3R3aXR0ZXInXG4gIHwgJ3VubG9jaydcbiAgfCAndXNlcidcbiAgfCAndmlzaWJpbGl0eSdcbiAgfCAndnInXG4gIHwgJ3dhbGwnXG4gIHwgJ3dpbmRvdydcbiAgfCAnem9vbS1yZXNldCc7XG5cbmV4cG9ydCB0eXBlIE1wRm9udEtleSA9XG4gIHwgJ2kzNjAnXG4gIHwgJ0FkZExpbmsnXG4gIHwgJ0Fycm93J1xuICB8ICdBcnJvd3MnXG4gIHwgJ0F0dGFjaCdcbiAgfCAnQmFjaydcbiAgfCAnQmxvY2tlZCdcbiAgfCAnQmx1ck91dGxpbmUnXG4gIHwgJ0JydXNoT3V0bGluZSdcbiAgfCAnQ2hlY2ttYXJrJ1xuICB8ICdDaGV2cm9uTGVmdCdcbiAgfCAnQ2hldnJvblJpZ2h0J1xuICB8ICdDbG9zZSdcbiAgfCAnQ29tbWVudExhcmdlJ1xuICB8ICdDb21tZW50T3V0bGluZSdcbiAgfCAnQ29tbWVudCdcbiAgfCAnRGVsZXRlJ1xuICB8ICdEb2NrJ1xuICB8ICdEb2xsaG91c2UnXG4gIHwgJ0Rvb3InXG4gIHwgJ0Rvd25sb2FkJ1xuICB8ICdEcGFkRG93bidcbiAgfCAnRHBhZExlZnQnXG4gIHwgJ0RwYWRSaWdodCdcbiAgfCAnRHBhZFVwJ1xuICB8ICdEcmFnRWRpdCdcbiAgfCAnRHJhd0xpbmVzJ1xuICB8ICdFZGl0Rmxvb3JwbGFuJ1xuICB8ICdFbWFpbCdcbiAgfCAnRXJyb3InXG4gIHwgJ0VzY2FwZUtleSdcbiAgfCAnRXhwYW5kJ1xuICB8ICdFeHRMaW5rJ1xuICB8ICdFeWVIaWRlJ1xuICB8ICdFeWVTaG93J1xuICB8ICdGYWNlYm9vaydcbiAgfCAnRmlsZSdcbiAgfCAnRmlsdGVyJ1xuICB8ICdGaW5nZXJEcmFnJ1xuICB8ICdGbG9vckNvbnRyb2xzQWxsJ1xuICB8ICdGbG9vckNvbnRyb2xzJ1xuICB8ICdGbG9vcnBsYW4nXG4gIHwgJ0Z1bGxzY3JlZW5FeGl0J1xuICB8ICdGdWxsc2NyZWVuJ1xuICB8ICdGdWxsc2NyZWVuMidcbiAgfCAnRnVybml0dXJlU2xhc2gnXG4gIHwgJ0Z1cm5pdHVyZSdcbiAgfCAnR2l6bW9BZGQnXG4gIHwgJ0dpem1vQ2xvc2VkJ1xuICB8ICdHaXptb0V5ZUhpZGUnXG4gIHwgJ0dpem1vRXllU2hvdydcbiAgfCAnR2l6bW9GbG9vcnBsYW4nXG4gIHwgJ0dpem1vR2VhcidcbiAgfCAnR2l6bW9MYXllcnMnXG4gIHwgJ0dpem1vTWFnbmV0V2FsbCdcbiAgfCAnR2l6bW9NYWduZXQnXG4gIHwgJ0dpem1vTW9kZWwnXG4gIHwgJ0dpem1vTW92ZSdcbiAgfCAnR2l6bW9PcGVuJ1xuICB8ICdHaXptb09ydGhvZ3JhcGhpYydcbiAgfCAnR2l6bW9QZXJzcGVjdGl2ZSdcbiAgfCAnR2l6bW9SZWRvJ1xuICB8ICdHaXptb1NuYXAnXG4gIHwgJ0dpem1vVW5kbydcbiAgfCAnSGVscCdcbiAgfCAnSGxyQmFkZ2UnXG4gIHwgJ0hscidcbiAgfCAnSW5mbydcbiAgfCAnSW52aXNpYmxlV2FsbCdcbiAgfCAnS2V5Ym9hcmQnXG4gIHwgJ0xheWVycydcbiAgfCAnTGluaydcbiAgfCAnTGlua2VkaW4nXG4gIHwgJ0xpc3QnXG4gIHwgJ0xvY2F0aW9uJ1xuICB8ICdMb2NrJ1xuICB8ICdMb2dvJ1xuICB8ICdNYWduaWZ5aW5nR2xhc3MnXG4gIHwgJ01lZGlhTWl4J1xuICB8ICdNZW51SW5kaWNhdG9yJ1xuICB8ICdNZXNoVHJpbSdcbiAgfCAnTWVzaCdcbiAgfCAnTWludXMnXG4gIHwgJ01vcmVWZXJ0J1xuICB8ICdOb3RlcydcbiAgfCAnT2JqZWN0QWlyRHVjdHMnXG4gIHwgJ09iamVjdEJhdGh0dWInXG4gIHwgJ09iamVjdEJlZCdcbiAgfCAnT2JqZWN0Q2FiaW5ldCdcbiAgfCAnT2JqZWN0Q2VpbGluZ0ZhbidcbiAgfCAnT2JqZWN0Q2hhaXInXG4gIHwgJ09iamVjdENvdW50ZXJ0b3AnXG4gIHwgJ09iamVjdERpc2h3YXNoZXInXG4gIHwgJ09iamVjdERvb3JMb2NrJ1xuICB8ICdPYmplY3REb29yJ1xuICB8ICdPYmplY3RGYXVjZXQnXG4gIHwgJ09iamVjdEZpcmVwbGFjZSdcbiAgfCAnT2JqZWN0R2FyYWdlRG9vcidcbiAgfCAnT2JqZWN0S2l0Y2hlbklzbGFuZCdcbiAgfCAnT2JqZWN0TGlnaHQnXG4gIHwgJ09iamVjdE1pY3Jvd2F2ZSdcbiAgfCAnT2JqZWN0TWlycm9yJ1xuICB8ICdPYmplY3RPdXRsZXQnXG4gIHwgJ09iamVjdE92ZW4nXG4gIHwgJ09iamVjdFJhbmdlSG9vZCdcbiAgfCAnT2JqZWN0UmFuZ2UnXG4gIHwgJ09iamVjdFJlZnJpZ2VyYXRvcidcbiAgfCAnT2JqZWN0U2hvd2VyJ1xuICB8ICdPYmplY3RTaW5rJ1xuICB8ICdPYmplY3RTa3lsaWdodCdcbiAgfCAnT2JqZWN0U21va2VEZXRlY3RvcidcbiAgfCAnT2JqZWN0U29mYSdcbiAgfCAnT2JqZWN0VGFibGUnXG4gIHwgJ09iamVjdFRlbGV2aXNpb24nXG4gIHwgJ09iamVjdFRoZXJtb3N0YXQnXG4gIHwgJ09iamVjdFRvaWxldCdcbiAgfCAnT2JqZWN0VG93ZWxSYWNrJ1xuICB8ICdPYmplY3RWYW5pdHknXG4gIHwgJ09iamVjdFdhbGxTd2l0Y2gnXG4gIHwgJ09iamVjdFdhc2hlckRyeWVyJ1xuICB8ICdPYmplY3RXaW5kb3cnXG4gIHwgJ09wZW5pbmcnXG4gIHwgJ1Bhbm9yYW1hRGlzYWJsZSdcbiAgfCAnUGFub3JhbWEnXG4gIHwgJ1BhcGVyQ2xpcCdcbiAgfCAnUGF1c2VPdXRsaW5lJ1xuICB8ICdQYXVzZSdcbiAgfCAnUGhvdG9fMmQnXG4gIHwgJ1Bob3RvXzM2MCdcbiAgfCAnUGhvdG9BZGQnXG4gIHwgJ1BpbidcbiAgfCAnUGludGVyZXN0J1xuICB8ICdQbGF5VW5pY29kZSdcbiAgfCAnUGxheSdcbiAgfCAnUGx1cydcbiAgfCAnUG9zaXRpb25fM2RGYXQnXG4gIHwgJ1Bvc2l0aW9uXzNkJ1xuICB8ICdQcmVzc0hvbGQnXG4gIHwgJ1B1YmxpY0J1aWxkaW5nc0FwYXJ0bWVudCdcbiAgfCAnUHVibGljQnVpbGRpbmdzQXJjaHdheSdcbiAgfCAnUHVibGljQnVpbGRpbmdzQnVpbGRpbmdDaXJjbGVBcnJvd1JpZ2h0J1xuICB8ICdQdWJsaWNCdWlsZGluZ3NCdWlsZGluZ0NpcmNsZUNoZWNrJ1xuICB8ICdQdWJsaWNCdWlsZGluZ3NCdWlsZGluZ0NpcmNsZUV4Y2xhbWF0aW9uJ1xuICB8ICdQdWJsaWNCdWlsZGluZ3NCdWlsZGluZ0NpcmNsZVhtYXJrJ1xuICB8ICdQdWJsaWNCdWlsZGluZ3NCdWlsZGluZ0NvbHVtbnMnXG4gIHwgJ1B1YmxpY0J1aWxkaW5nc0J1aWxkaW5nRmxhZydcbiAgfCAnUHVibGljQnVpbGRpbmdzQnVpbGRpbmdMb2NrJ1xuICB8ICdQdWJsaWNCdWlsZGluZ3NCdWlsZGluZ1NoaWVsZCdcbiAgfCAnUHVibGljQnVpbGRpbmdzQnVpbGRpbmdVc2VyJ1xuICB8ICdQdWJsaWNCdWlsZGluZ3NCdWlsZGluZ1doZWF0J1xuICB8ICdQdWJsaWNCdWlsZGluZ3NCdWlsZGluZydcbiAgfCAnUHVibGljQnVpbGRpbmdzQnVpbGRpbmdzJ1xuICB8ICdQdWJsaWNCdWlsZGluZ3NDYWJpbidcbiAgfCAnUHVibGljQnVpbGRpbmdzQ2FtcGdyb3VuZCdcbiAgfCAnUHVibGljQnVpbGRpbmdzQ2FyQnVpbGRpbmcnXG4gIHwgJ1B1YmxpY0J1aWxkaW5nc0Nhc3RsZSdcbiAgfCAnUHVibGljQnVpbGRpbmdzQ2hpbW5leSdcbiAgfCAnUHVibGljQnVpbGRpbmdzQ2h1cmNoJ1xuICB8ICdQdWJsaWNCdWlsZGluZ3NDaXR5J1xuICB8ICdQdWJsaWNCdWlsZGluZ3NGYXJtJ1xuICB8ICdQdWJsaWNCdWlsZGluZ3NGZW5jZSdcbiAgfCAnUHVibGljQnVpbGRpbmdzRmVycmlzV2hlZWwnXG4gIHwgJ1B1YmxpY0J1aWxkaW5nc0ZvcnQnXG4gIHwgJ1B1YmxpY0J1aWxkaW5nc0dhcmFnZSdcbiAgfCAnUHVibGljQnVpbGRpbmdzSG9zcGl0YWwnXG4gIHwgJ1B1YmxpY0J1aWxkaW5nc0hvdGVsJ1xuICB8ICdQdWJsaWNCdWlsZGluZ3NIb3VzZUJ1aWxkaW5nJ1xuICB8ICdQdWJsaWNCdWlsZGluZ3NIb3VzZUNyYWNrJ1xuICB8ICdQdWJsaWNCdWlsZGluZ3NIb3VzZURheSdcbiAgfCAnUHVibGljQnVpbGRpbmdzSG91c2VGaXJlJ1xuICB8ICdQdWJsaWNCdWlsZGluZ3NIb3VzZUZsYWcnXG4gIHwgJ1B1YmxpY0J1aWxkaW5nc0hvdXNlRmxvb2RXYXRlcidcbiAgfCAnUHVibGljQnVpbGRpbmdzSG91c2VIZWFydCdcbiAgfCAnUHVibGljQnVpbGRpbmdzSG91c2VMb2NrJ1xuICB8ICdQdWJsaWNCdWlsZGluZ3NIb3VzZU1lZGljYWwnXG4gIHwgJ1B1YmxpY0J1aWxkaW5nc0hvdXNlTmlnaHQnXG4gIHwgJ1B1YmxpY0J1aWxkaW5nc0hvdXNlJ1xuICB8ICdQdWJsaWNCdWlsZGluZ3NJbmR1c3RyeSdcbiAgfCAnUHVibGljQnVpbGRpbmdzTGFuZG1hcmsnXG4gIHwgJ1B1YmxpY0J1aWxkaW5nc01vbnVtZW50J1xuICB8ICdQdWJsaWNCdWlsZGluZ3NNb3NxdWUnXG4gIHwgJ1B1YmxpY0J1aWxkaW5nc01vdW50YWluQ2l0eSdcbiAgfCAnUHVibGljQnVpbGRpbmdzUGxhY2VPZldvcnNoaXAnXG4gIHwgJ1B1YmxpY0J1aWxkaW5nc1JvbGxlckNvYXN0ZXInXG4gIHwgJ1B1YmxpY0J1aWxkaW5nc1NjaG9vbCdcbiAgfCAnUHVibGljQnVpbGRpbmdzU3RvcmUnXG4gIHwgJ1B1YmxpY0J1aWxkaW5nc1N5bmFnb2d1ZSdcbiAgfCAnUHVibGljQnVpbGRpbmdzVGVudCdcbiAgfCAnUHVibGljQnVpbGRpbmdzVG9pbGV0J1xuICB8ICdQdWJsaWNCdWlsZGluZ3NUb3JpaUdhdGUnXG4gIHwgJ1B1YmxpY0J1aWxkaW5nc1Rvd2VyT2JzZXJ2YXRpb24nXG4gIHwgJ1B1YmxpY0J1aWxkaW5nc1RyZWUnXG4gIHwgJ1B1YmxpY0J1aWxkaW5nc1dhcmVob3VzZSdcbiAgfCAnUHVibGljQ2hhcmFjdGVyc18wJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzXzEnXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNfMidcbiAgfCAnUHVibGljQ2hhcmFjdGVyc18zJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzXzQnXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNfNSdcbiAgfCAnUHVibGljQ2hhcmFjdGVyc182J1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzXzcnXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNfOCdcbiAgfCAnUHVibGljQ2hhcmFjdGVyc185J1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzQSdcbiAgfCAnUHVibGljQ2hhcmFjdGVyc0InXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNDJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzQ2lyY2xlXzAnXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNDaXJjbGVfMSdcbiAgfCAnUHVibGljQ2hhcmFjdGVyc0NpcmNsZV8yJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzQ2lyY2xlXzMnXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNDaXJjbGVfNCdcbiAgfCAnUHVibGljQ2hhcmFjdGVyc0NpcmNsZV81J1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzQ2lyY2xlXzYnXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNDaXJjbGVfNydcbiAgfCAnUHVibGljQ2hhcmFjdGVyc0NpcmNsZV84J1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzQ2lyY2xlXzknXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNDaXJjbGVBJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzQ2lyY2xlQidcbiAgfCAnUHVibGljQ2hhcmFjdGVyc0NpcmNsZUMnXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNDaXJjbGVEJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzQ2lyY2xlRSdcbiAgfCAnUHVibGljQ2hhcmFjdGVyc0NpcmNsZUYnXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNDaXJjbGVHJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzQ2lyY2xlSCdcbiAgfCAnUHVibGljQ2hhcmFjdGVyc0NpcmNsZUknXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNDaXJjbGVKJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzQ2lyY2xlSydcbiAgfCAnUHVibGljQ2hhcmFjdGVyc0NpcmNsZUwnXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNDaXJjbGVNJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzQ2lyY2xlTidcbiAgfCAnUHVibGljQ2hhcmFjdGVyc0NpcmNsZU8nXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNDaXJjbGVQJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzQ2lyY2xlUSdcbiAgfCAnUHVibGljQ2hhcmFjdGVyc0NpcmNsZVInXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNDaXJjbGVTJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzQ2lyY2xlVCdcbiAgfCAnUHVibGljQ2hhcmFjdGVyc0NpcmNsZVUnXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNDaXJjbGVWJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzQ2lyY2xlVydcbiAgfCAnUHVibGljQ2hhcmFjdGVyc0NpcmNsZVgnXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNDaXJjbGVZJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzQ2lyY2xlWidcbiAgfCAnUHVibGljQ2hhcmFjdGVyc0QnXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNFJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzRidcbiAgfCAnUHVibGljQ2hhcmFjdGVyc0cnXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNIJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzSSdcbiAgfCAnUHVibGljQ2hhcmFjdGVyc0onXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNLJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzTCdcbiAgfCAnUHVibGljQ2hhcmFjdGVyc00nXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNOJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzTydcbiAgfCAnUHVibGljQ2hhcmFjdGVyc1AnXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNRJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzUidcbiAgfCAnUHVibGljQ2hhcmFjdGVyc1MnXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNTcXVhcmVfMCdcbiAgfCAnUHVibGljQ2hhcmFjdGVyc1NxdWFyZV8xJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzU3F1YXJlXzInXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNTcXVhcmVfMydcbiAgfCAnUHVibGljQ2hhcmFjdGVyc1NxdWFyZV80J1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzU3F1YXJlXzUnXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNTcXVhcmVfNidcbiAgfCAnUHVibGljQ2hhcmFjdGVyc1NxdWFyZV83J1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzU3F1YXJlXzgnXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNTcXVhcmVfOSdcbiAgfCAnUHVibGljQ2hhcmFjdGVyc1NxdWFyZUEnXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNTcXVhcmVCJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzU3F1YXJlQydcbiAgfCAnUHVibGljQ2hhcmFjdGVyc1NxdWFyZUQnXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNTcXVhcmVFJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzU3F1YXJlRidcbiAgfCAnUHVibGljQ2hhcmFjdGVyc1NxdWFyZUcnXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNTcXVhcmVIJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzU3F1YXJlSSdcbiAgfCAnUHVibGljQ2hhcmFjdGVyc1NxdWFyZUonXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNTcXVhcmVLJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzU3F1YXJlTCdcbiAgfCAnUHVibGljQ2hhcmFjdGVyc1NxdWFyZU0nXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNTcXVhcmVOJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzU3F1YXJlTydcbiAgfCAnUHVibGljQ2hhcmFjdGVyc1NxdWFyZVAnXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNTcXVhcmVRJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzU3F1YXJlUidcbiAgfCAnUHVibGljQ2hhcmFjdGVyc1NxdWFyZVMnXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNTcXVhcmVUJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzU3F1YXJlVSdcbiAgfCAnUHVibGljQ2hhcmFjdGVyc1NxdWFyZVYnXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNTcXVhcmVXJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzU3F1YXJlWCdcbiAgfCAnUHVibGljQ2hhcmFjdGVyc1NxdWFyZVhtYXJrJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzU3F1YXJlWSdcbiAgfCAnUHVibGljQ2hhcmFjdGVyc1NxdWFyZVonXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNUJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzVSdcbiAgfCAnUHVibGljQ2hhcmFjdGVyc1YnXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNXJ1xuICB8ICdQdWJsaWNDaGFyYWN0ZXJzWCdcbiAgfCAnUHVibGljQ2hhcmFjdGVyc1knXG4gIHwgJ1B1YmxpY0NoYXJhY3RlcnNaJ1xuICB8ICdQdWJsaWNGdXJuaXR1cmVCYXRoJ1xuICB8ICdQdWJsaWNGdXJuaXR1cmVCZWRBbHQnXG4gIHwgJ1B1YmxpY0Z1cm5pdHVyZUJlZEJ1bmsnXG4gIHwgJ1B1YmxpY0Z1cm5pdHVyZUJlZEVtcHR5J1xuICB8ICdQdWJsaWNGdXJuaXR1cmVCZWQnXG4gIHwgJ1B1YmxpY0Z1cm5pdHVyZUJsZW5kZXInXG4gIHwgJ1B1YmxpY0Z1cm5pdHVyZUJsaW5kcydcbiAgfCAnUHVibGljRnVybml0dXJlQ2FiaW5ldEZpbGluZydcbiAgfCAnUHVibGljRnVybml0dXJlQ2FzaFJlZ2lzdGVyJ1xuICB8ICdQdWJsaWNGdXJuaXR1cmVDaGFpck9mZmljZSdcbiAgfCAnUHVibGljRnVybml0dXJlQ2hhaXInXG4gIHwgJ1B1YmxpY0Z1cm5pdHVyZUNoYXJnaW5nU3RhdGlvbidcbiAgfCAnUHVibGljRnVybml0dXJlQ29tcHV0ZXJDbGFzc2ljJ1xuICB8ICdQdWJsaWNGdXJuaXR1cmVDb21wdXRlclNwZWFrZXInXG4gIHwgJ1B1YmxpY0Z1cm5pdHVyZUNvdWNoJ1xuICB8ICdQdWJsaWNGdXJuaXR1cmVEcnllckFsdCdcbiAgfCAnUHVibGljRnVybml0dXJlRHJ5ZXInXG4gIHwgJ1B1YmxpY0Z1cm5pdHVyZUR1bWJiZWxsJ1xuICB8ICdQdWJsaWNGdXJuaXR1cmVEdW1wc3RlcidcbiAgfCAnUHVibGljRnVybml0dXJlRmF1Y2V0J1xuICB8ICdQdWJsaWNGdXJuaXR1cmVGYXgnXG4gIHwgJ1B1YmxpY0Z1cm5pdHVyZUhvdFR1YidcbiAgfCAnUHVibGljRnVybml0dXJlSW52ZW50b3J5J1xuICB8ICdQdWJsaWNGdXJuaXR1cmVMYW1wRGVzaydcbiAgfCAnUHVibGljRnVybml0dXJlTGFtcEZsb29yJ1xuICB8ICdQdWJsaWNGdXJuaXR1cmVMYW1wJ1xuICB8ICdQdWJsaWNGdXJuaXR1cmVMYXB0b3AnXG4gIHwgJ1B1YmxpY0Z1cm5pdHVyZUxpZ2h0Q2VpbGluZydcbiAgfCAnUHVibGljRnVybml0dXJlTG92ZXNlYXQnXG4gIHwgJ1B1YmxpY0Z1cm5pdHVyZU1pY3Jvd2F2ZSdcbiAgfCAnUHVibGljRnVybml0dXJlUGlhbm8nXG4gIHwgJ1B1YmxpY0Z1cm5pdHVyZVBvZGl1bSdcbiAgfCAnUHVibGljRnVybml0dXJlUHJlc2VudGF0aW9uJ1xuICB8ICdQdWJsaWNGdXJuaXR1cmVQcm9qZWN0b3InXG4gIHwgJ1B1YmxpY0Z1cm5pdHVyZVJhZGlvJ1xuICB8ICdQdWJsaWNGdXJuaXR1cmVSZWZyaWdlcmF0b3InXG4gIHwgJ1B1YmxpY0Z1cm5pdHVyZVNob3dlcidcbiAgfCAnUHVibGljRnVybml0dXJlU2hyZWRkZXInXG4gIHwgJ1B1YmxpY0Z1cm5pdHVyZVNpbmsnXG4gIHwgJ1B1YmxpY0Z1cm5pdHVyZVNvbGFyUGFuZWwnXG4gIHwgJ1B1YmxpY0Z1cm5pdHVyZVNwZWFrZXInXG4gIHwgJ1B1YmxpY0Z1cm5pdHVyZVNwZWFrZXJzJ1xuICB8ICdQdWJsaWNGdXJuaXR1cmVUb2lsZXQnXG4gIHwgJ1B1YmxpY0Z1cm5pdHVyZVRyYXNoQWx0J1xuICB8ICdQdWJsaWNGdXJuaXR1cmVUdXJudGFibGUnXG4gIHwgJ1B1YmxpY0Z1cm5pdHVyZVR2UmV0cm8nXG4gIHwgJ1B1YmxpY0Z1cm5pdHVyZVR2J1xuICB8ICdQdWJsaWNGdXJuaXR1cmVUeXBld3JpdGVyJ1xuICB8ICdQdWJsaWNPYmplY3RzQWJhY3VzJ1xuICB8ICdQdWJsaWNPYmplY3RzQWxhcm1DbG9jaydcbiAgfCAnUHVibGljT2JqZWN0c0FsYnVtQ29sbGVjdGlvbidcbiAgfCAnUHVibGljT2JqZWN0c0JhY2twYWNrJ1xuICB8ICdQdWJsaWNPYmplY3RzQmFnc1Nob3BwaW5nJ1xuICB8ICdQdWJsaWNPYmplY3RzQmVsbCdcbiAgfCAnUHVibGljT2JqZWN0c0JpY3ljbGUnXG4gIHwgJ1B1YmxpY09iamVjdHNCaW5vY3VsYXJzJ1xuICB8ICdQdWJsaWNPYmplY3RzQmxhbmtldCdcbiAgfCAnUHVibGljT2JqZWN0c0Jvb2snXG4gIHwgJ1B1YmxpY09iamVjdHNCb29rcydcbiAgfCAnUHVibGljT2JqZWN0c0Jvb3QnXG4gIHwgJ1B1YmxpY09iamVjdHNCb3gnXG4gIHwgJ1B1YmxpY09iamVjdHNCcmVhZExvYWYnXG4gIHwgJ1B1YmxpY09iamVjdHNCcmllZmNhc2VNZWRpY2FsJ1xuICB8ICdQdWJsaWNPYmplY3RzQnJpZWZjYXNlJ1xuICB8ICdQdWJsaWNPYmplY3RzQnJvb20nXG4gIHwgJ1B1YmxpY09iamVjdHNCcnVzaCdcbiAgfCAnUHVibGljT2JqZWN0c0J1bGxob3JuJ1xuICB8ICdQdWJsaWNPYmplY3RzQnVyZ2VyU29kYSdcbiAgfCAnUHVibGljT2JqZWN0c0NhbGN1bGF0b3InXG4gIHwgJ1B1YmxpY09iamVjdHNDYWxlbmRhcidcbiAgfCAnUHVibGljT2JqZWN0c0NhbWVyYSdcbiAgfCAnUHVibGljT2JqZWN0c0NhcidcbiAgfCAnUHVibGljT2JqZWN0c0NhcnJvdCdcbiAgfCAnUHVibGljT2JqZWN0c0NoZWVzZVN3aXNzJ1xuICB8ICdQdWJsaWNPYmplY3RzQ2hlc3MnXG4gIHwgJ1B1YmxpY09iamVjdHNDbGlwYm9hcmRDaGVjaydcbiAgfCAnUHVibGljT2JqZWN0c0NsaXBib2FyZExpc3QnXG4gIHwgJ1B1YmxpY09iamVjdHNDbGlwYm9hcmQnXG4gIHwgJ1B1YmxpY09iamVjdHNDb2ZmZWVQb3QnXG4gIHwgJ1B1YmxpY09iamVjdHNDb21wYXNzJ1xuICB8ICdQdWJsaWNPYmplY3RzQ29va2llJ1xuICB8ICdQdWJsaWNPYmplY3RzQ29ybidcbiAgfCAnUHVibGljT2JqZWN0c0Nyb2lzc2FudCdcbiAgfCAnUHVibGljT2JqZWN0c0RpY2UnXG4gIHwgJ1B1YmxpY09iamVjdHNEcnVtc3RpY2snXG4gIHwgJ1B1YmxpY09iamVjdHNFZ2cnXG4gIHwgJ1B1YmxpY09iamVjdHNGaXNoJ1xuICB8ICdQdWJsaWNPYmplY3RzRmxhc2snXG4gIHwgJ1B1YmxpY09iamVjdHNGbG93ZXJUdWxpcCdcbiAgfCAnUHVibGljT2JqZWN0c0dhbWVwYWQnXG4gIHwgJ1B1YmxpY09iamVjdHNHZW0nXG4gIHwgJ1B1YmxpY09iamVjdHNHaWZ0J1xuICB8ICdQdWJsaWNPYmplY3RzR2lmdHMnXG4gIHwgJ1B1YmxpY09iamVjdHNHbGFzc0NpdHJ1cydcbiAgfCAnUHVibGljT2JqZWN0c0dsYXNzJ1xuICB8ICdQdWJsaWNPYmplY3RzR2xhc3NlcydcbiAgfCAnUHVibGljT2JqZWN0c0dsb2JlU3RhbmQnXG4gIHwgJ1B1YmxpY09iamVjdHNHcmFkdWF0aW9uQ2FwJ1xuICB8ICdQdWJsaWNPYmplY3RzR3VpdGFyJ1xuICB8ICdQdWJsaWNPYmplY3RzSGFtbWVyJ1xuICB8ICdQdWJsaWNPYmplY3RzSGF0Q2hlZidcbiAgfCAnUHVibGljT2JqZWN0c0ljZUNyZWFtJ1xuICB8ICdQdWJsaWNPYmplY3RzSWNlU2thdGUnXG4gIHwgJ1B1YmxpY09iamVjdHNLZXknXG4gIHwgJ1B1YmxpY09iamVjdHNLbmlmZUtpdGNoZW4nXG4gIHwgJ1B1YmxpY09iamVjdHNMaWdodGJ1bGJPbidcbiAgfCAnUHVibGljT2JqZWN0c0xpZ2h0YnVsYlNsYXNoJ1xuICB8ICdQdWJsaWNPYmplY3RzTGlnaHRidWxiJ1xuICB8ICdQdWJsaWNPYmplY3RzTWFnbmV0J1xuICB8ICdQdWJsaWNPYmplY3RzTWFpbGJveCdcbiAgfCAnUHVibGljT2JqZWN0c01hcCdcbiAgfCAnUHVibGljT2JqZWN0c01lYXQnXG4gIHwgJ1B1YmxpY09iamVjdHNNZWRhbCdcbiAgfCAnUHVibGljT2JqZWN0c01pY3JvcGhvbmUnXG4gIHwgJ1B1YmxpY09iamVjdHNNb2JpbGUnXG4gIHwgJ1B1YmxpY09iamVjdHNNb25leUJpbGxXYXZlJ1xuICB8ICdQdWJsaWNPYmplY3RzTXVnVGVhJ1xuICB8ICdQdWJsaWNPYmplY3RzTXVnJ1xuICB8ICdQdWJsaWNPYmplY3RzTmV3c3BhcGVyJ1xuICB8ICdQdWJsaWNPYmplY3RzUGFpbnRSb2xsZXInXG4gIHwgJ1B1YmxpY09iamVjdHNQYWxldHRlJ1xuICB8ICdQdWJsaWNPYmplY3RzUGVuJ1xuICB8ICdQdWJsaWNPYmplY3RzUGhvbmUnXG4gIHwgJ1B1YmxpY09iamVjdHNQaXp6YVNsaWNlJ1xuICB8ICdQdWJsaWNPYmplY3RzUHVtcFNvYXAnXG4gIHwgJ1B1YmxpY09iamVjdHNSdWxlclRyaWFuZ2xlJ1xuICB8ICdQdWJsaWNPYmplY3RzUnVsZXInXG4gIHwgJ1B1YmxpY09iamVjdHNTYWxhZCdcbiAgfCAnUHVibGljT2JqZWN0c1NhbmR3aWNoJ1xuICB8ICdQdWJsaWNPYmplY3RzU2hvdmVsJ1xuICB8ICdQdWJsaWNPYmplY3RzU3RlYWsnXG4gIHwgJ1B1YmxpY09iamVjdHNTdW5nbGFzc2VzJ1xuICB8ICdQdWJsaWNPYmplY3RzVHVya2V5J1xuICB8ICdQdWJsaWNPYmplY3RzVXRlbnNpbHMnXG4gIHwgJ1B1YmxpY09iamVjdHNWaWFsJ1xuICB8ICdQdWJsaWNPYmplY3RzV2FsbGV0J1xuICB8ICdQdWJsaWNPYmplY3RzV3JlbmNoJ1xuICB8ICdQdWJsaWNQZW9wbGVCYWJ5J1xuICB8ICdQdWJsaWNQZW9wbGVDaGlsZERyZXNzJ1xuICB8ICdQdWJsaWNQZW9wbGVDaGlsZFJlYWNoaW5nJ1xuICB8ICdQdWJsaWNQZW9wbGVDaGlsZCdcbiAgfCAnUHVibGljUGVvcGxlQ2hpbGRyZW4nXG4gIHwgJ1B1YmxpY1Blb3BsZUNpcmNsZVVzZXInXG4gIHwgJ1B1YmxpY1Blb3BsZUNsaXBib2FyZFVzZXInXG4gIHwgJ1B1YmxpY1Blb3BsZUZhY2VBbmdyeSdcbiAgfCAnUHVibGljUGVvcGxlRmFjZUFuZ3Vpc2hlZCdcbiAgfCAnUHVibGljUGVvcGxlRmFjZUFzdG9uaXNoZWQnXG4gIHwgJ1B1YmxpY1Blb3BsZUZhY2VCZWFtSGFuZE92ZXJNb3V0aCdcbiAgfCAnUHVibGljUGVvcGxlRmFjZUNvbmZvdW5kZWQnXG4gIHwgJ1B1YmxpY1Blb3BsZUZhY2VDb25mdXNlZCdcbiAgfCAnUHVibGljUGVvcGxlRmFjZURpYWdvbmFsTW91dGgnXG4gIHwgJ1B1YmxpY1Blb3BsZUZhY2VEaXNhcHBvaW50ZWQnXG4gIHwgJ1B1YmxpY1Blb3BsZUZhY2VEaXp6eSdcbiAgfCAnUHVibGljUGVvcGxlRmFjZUV4cHJlc3Npb25sZXNzJ1xuICB8ICdQdWJsaWNQZW9wbGVGYWNlRXllc1htYXJrcydcbiAgfCAnUHVibGljUGVvcGxlRmFjZUZlYXJmdWwnXG4gIHwgJ1B1YmxpY1Blb3BsZUZhY2VGcm93blNsaWdodCdcbiAgfCAnUHVibGljUGVvcGxlRmFjZUZyb3duJ1xuICB8ICdQdWJsaWNQZW9wbGVGYWNlR2xhc3NlcydcbiAgfCAnUHVibGljUGVvcGxlRmFjZUdyaW1hY2UnXG4gIHwgJ1B1YmxpY1Blb3BsZUZhY2VHcmluQmVhbVN3ZWF0J1xuICB8ICdQdWJsaWNQZW9wbGVGYWNlR3JpbkJlYW0nXG4gIHwgJ1B1YmxpY1Blb3BsZUZhY2VHcmluSGVhcnRzJ1xuICB8ICdQdWJsaWNQZW9wbGVGYWNlR3JpblNxdWludFRlYXJzJ1xuICB8ICdQdWJsaWNQZW9wbGVGYWNlR3JpblNxdWludCdcbiAgfCAnUHVibGljUGVvcGxlRmFjZUdyaW5TdGFycydcbiAgfCAnUHVibGljUGVvcGxlRmFjZUdyaW5UZWFycydcbiAgfCAnUHVibGljUGVvcGxlRmFjZUdyaW5Ub25ndWVTcXVpbnQnXG4gIHwgJ1B1YmxpY1Blb3BsZUZhY2VHcmluVG9uZ3VlV2luaydcbiAgfCAnUHVibGljUGVvcGxlRmFjZUdyaW5Ub25ndWUnXG4gIHwgJ1B1YmxpY1Blb3BsZUZhY2VHcmluV2lkZSdcbiAgfCAnUHVibGljUGVvcGxlRmFjZUdyaW5XaW5rJ1xuICB8ICdQdWJsaWNQZW9wbGVGYWNlR3JpbidcbiAgfCAnUHVibGljUGVvcGxlRmFjZUhhbmRPdmVyTW91dGgnXG4gIHwgJ1B1YmxpY1Blb3BsZUZhY2VIdXNoZWQnXG4gIHwgJ1B1YmxpY1Blb3BsZUZhY2VJY2ljbGVzJ1xuICB8ICdQdWJsaWNQZW9wbGVGYWNlS2lzcydcbiAgfCAnUHVibGljUGVvcGxlRmFjZUxhdWdoJ1xuICB8ICdQdWJsaWNQZW9wbGVGYWNlTWFzaydcbiAgfCAnUHVibGljUGVvcGxlRmFjZU1laEJsYW5rJ1xuICB8ICdQdWJsaWNQZW9wbGVGYWNlTWVoJ1xuICB8ICdQdWJsaWNQZW9wbGVGYWNlTW9ub2NsZSdcbiAgfCAnUHVibGljUGVvcGxlRmFjZU5hdXNlYXRlZCdcbiAgfCAnUHVibGljUGVvcGxlRmFjZVBhcnR5J1xuICB8ICdQdWJsaWNQZW9wbGVGYWNlUGVuc2l2ZSdcbiAgfCAnUHVibGljUGVvcGxlRmFjZVBlcnNldmVyaW5nJ1xuICB8ICdQdWJsaWNQZW9wbGVGYWNlUGxlYWRpbmcnXG4gIHwgJ1B1YmxpY1Blb3BsZUZhY2VQb3V0aW5nJ1xuICB8ICdQdWJsaWNQZW9wbGVGYWNlUmFpc2VkRXllYnJvdydcbiAgfCAnUHVibGljUGVvcGxlRmFjZVJlbGlldmVkJ1xuICB8ICdQdWJsaWNQZW9wbGVGYWNlUm9sbGluZ0V5ZXMnXG4gIHwgJ1B1YmxpY1Blb3BsZUZhY2VTYWRDcnknXG4gIHwgJ1B1YmxpY1Blb3BsZUZhY2VTYWRTd2VhdCdcbiAgfCAnUHVibGljUGVvcGxlRmFjZVNhZFRlYXInXG4gIHwgJ1B1YmxpY1Blb3BsZUZhY2VTY3JlYW0nXG4gIHwgJ1B1YmxpY1Blb3BsZUZhY2VTbGVlcGluZydcbiAgfCAnUHVibGljUGVvcGxlRmFjZVNsZWVweSdcbiAgfCAnUHVibGljUGVvcGxlRmFjZVNtaWxlQmVhbSdcbiAgfCAnUHVibGljUGVvcGxlRmFjZVNtaWxlSGFsbydcbiAgfCAnUHVibGljUGVvcGxlRmFjZVNtaWxlSGVhcnRzJ1xuICB8ICdQdWJsaWNQZW9wbGVGYWNlU21pbGVSZWxheGVkJ1xuICB8ICdQdWJsaWNQZW9wbGVGYWNlU21pbGVVcHNpZGVEb3duJ1xuICB8ICdQdWJsaWNQZW9wbGVGYWNlU21pbGVXaW5rJ1xuICB8ICdQdWJsaWNQZW9wbGVGYWNlU21pbGUnXG4gIHwgJ1B1YmxpY1Blb3BsZUZhY2VTbWlya2luZydcbiAgfCAnUHVibGljUGVvcGxlRmFjZVNwaXJhbEV5ZXMnXG4gIHwgJ1B1YmxpY1Blb3BsZUZhY2VTdW5nbGFzc2VzJ1xuICB8ICdQdWJsaWNQZW9wbGVGYWNlU3VycHJpc2UnXG4gIHwgJ1B1YmxpY1Blb3BsZUZhY2VUaGVybW9tZXRlcidcbiAgfCAnUHVibGljUGVvcGxlRmFjZVRoaW5raW5nJ1xuICB8ICdQdWJsaWNQZW9wbGVGYWNlVGlyZWQnXG4gIHwgJ1B1YmxpY1Blb3BsZUZhY2VUaXNzdWUnXG4gIHwgJ1B1YmxpY1Blb3BsZUZhY2VVbmFtdXNlZCdcbiAgfCAnUHVibGljUGVvcGxlRmFjZVZvbWl0J1xuICB8ICdQdWJsaWNQZW9wbGVGYWNlV2VhcnknXG4gIHwgJ1B1YmxpY1Blb3BsZUZhY2VXb296eSdcbiAgfCAnUHVibGljUGVvcGxlRmFjZVdvcnJpZWQnXG4gIHwgJ1B1YmxpY1Blb3BsZUZhY2VaaXBwZXInXG4gIHwgJ1B1YmxpY1Blb3BsZUZhbWlseURyZXNzJ1xuICB8ICdQdWJsaWNQZW9wbGVGYW1pbHlQYW50cydcbiAgfCAnUHVibGljUGVvcGxlRmFtaWx5J1xuICB8ICdQdWJsaWNQZW9wbGVGaWxlVXNlcidcbiAgfCAnUHVibGljUGVvcGxlRm9sZGVyVXNlcidcbiAgfCAnUHVibGljUGVvcGxlSGVhZFNpZGVCcmFpbidcbiAgfCAnUHVibGljUGVvcGxlSGVhZFNpZGVDb3VnaFNsYXNoJ1xuICB8ICdQdWJsaWNQZW9wbGVIZWFkU2lkZUNvdWdoJ1xuICB8ICdQdWJsaWNQZW9wbGVIZWFkU2lkZUdvZ2dsZXMnXG4gIHwgJ1B1YmxpY1Blb3BsZUhlYWRTaWRlSGVhZHBob25lcydcbiAgfCAnUHVibGljUGVvcGxlSGVhZFNpZGVIZWFydCdcbiAgfCAnUHVibGljUGVvcGxlSGVhZFNpZGVNYXNrJ1xuICB8ICdQdWJsaWNQZW9wbGVIZWFkU2lkZU1lZGljYWwnXG4gIHwgJ1B1YmxpY1Blb3BsZUhlYWRTaWRlVmlydXMnXG4gIHwgJ1B1YmxpY1Blb3BsZUhlYWRTaWRlJ1xuICB8ICdQdWJsaWNQZW9wbGVQZW9wbGUnXG4gIHwgJ1B1YmxpY1Blb3BsZVBlcnNvbkJpa2luZydcbiAgfCAnUHVibGljUGVvcGxlUGVyc29uQm9vdGgnXG4gIHwgJ1B1YmxpY1Blb3BsZVBlcnNvbkJyZWFzdGZlZWRpbmcnXG4gIHwgJ1B1YmxpY1Blb3BsZVBlcnNvbkNhbmUnXG4gIHwgJ1B1YmxpY1Blb3BsZVBlcnNvbkNhcnJ5Qm94J1xuICB8ICdQdWJsaWNQZW9wbGVQZXJzb25EaWdnaW5nJ1xuICB8ICdQdWJsaWNQZW9wbGVQZXJzb25Eb2xseUVtcHR5J1xuICB8ICdQdWJsaWNQZW9wbGVQZXJzb25Eb2xseSdcbiAgfCAnUHVibGljUGVvcGxlUGVyc29uRHJlc3MnXG4gIHwgJ1B1YmxpY1Blb3BsZVBlcnNvbkRyb3duaW5nJ1xuICB8ICdQdWJsaWNQZW9wbGVQZXJzb25GYWxsaW5nJ1xuICB8ICdQdWJsaWNQZW9wbGVQZXJzb25IYWxmRHJlc3MnXG4gIHwgJ1B1YmxpY1Blb3BsZVBlcnNvbkhpa2luZydcbiAgfCAnUHVibGljUGVvcGxlUGVyc29uTWlsaXRhcnlQb2ludGluZydcbiAgfCAnUHVibGljUGVvcGxlUGVyc29uUGluYmFsbCdcbiAgfCAnUHVibGljUGVvcGxlUGVyc29uUHJheWluZydcbiAgfCAnUHVibGljUGVvcGxlUGVyc29uUHJlZ25hbnQnXG4gIHwgJ1B1YmxpY1Blb3BsZVBlcnNvblJ1bm5pbmcnXG4gIHwgJ1B1YmxpY1Blb3BsZVBlcnNvblNlYXRSZWNsaW5lZCdcbiAgfCAnUHVibGljUGVvcGxlUGVyc29uU2VhdCdcbiAgfCAnUHVibGljUGVvcGxlUGVyc29uU2hlbHRlcidcbiAgfCAnUHVibGljUGVvcGxlUGVyc29uU2thdGluZydcbiAgfCAnUHVibGljUGVvcGxlUGVyc29uU2tpaW5nJ1xuICB8ICdQdWJsaWNQZW9wbGVQZXJzb25Td2ltbWluZydcbiAgfCAnUHVibGljUGVvcGxlUGVyc29uVG9Eb29yJ1xuICB8ICdQdWJsaWNQZW9wbGVQZXJzb25XYWxraW5nTHVnZ2FnZSdcbiAgfCAnUHVibGljUGVvcGxlUGVyc29uV2Fsa2luZ1dpdGhDYW5lJ1xuICB8ICdQdWJsaWNQZW9wbGVQZXJzb25XYWxraW5nJ1xuICB8ICdQdWJsaWNQZW9wbGVQZXJzb24nXG4gIHwgJ1B1YmxpY1Blb3BsZVJlc3Ryb29tJ1xuICB8ICdQdWJsaWNQZW9wbGVTcXVhcmVVc2VyJ1xuICB8ICdQdWJsaWNQZW9wbGVTdHJlZXRWaWV3J1xuICB8ICdQdWJsaWNQZW9wbGVVc2VyQXN0cm9uYXV0J1xuICB8ICdQdWJsaWNQZW9wbGVVc2VyQ2hlY2snXG4gIHwgJ1B1YmxpY1Blb3BsZVVzZXJDaGVmJ1xuICB8ICdQdWJsaWNQZW9wbGVVc2VyQ2xvY2snXG4gIHwgJ1B1YmxpY1Blb3BsZVVzZXJDb3dib3knXG4gIHwgJ1B1YmxpY1Blb3BsZVVzZXJDcm93bidcbiAgfCAnUHVibGljUGVvcGxlVXNlckRvY3RvcidcbiAgfCAnUHVibGljUGVvcGxlVXNlckdlYXInXG4gIHwgJ1B1YmxpY1Blb3BsZVVzZXJHcmFkdWF0ZSdcbiAgfCAnUHVibGljUGVvcGxlVXNlckdyb3VwJ1xuICB8ICdQdWJsaWNQZW9wbGVVc2VySGVhZHNldCdcbiAgfCAnUHVibGljUGVvcGxlVXNlckhlbG1ldFNhZmV0eSdcbiAgfCAnUHVibGljUGVvcGxlVXNlckluanVyZWQnXG4gIHwgJ1B1YmxpY1Blb3BsZVVzZXJMYXJnZSdcbiAgfCAnUHVibGljUGVvcGxlVXNlckxvY2snXG4gIHwgJ1B1YmxpY1Blb3BsZVVzZXJNaW51cydcbiAgfCAnUHVibGljUGVvcGxlVXNlck11c2ljJ1xuICB8ICdQdWJsaWNQZW9wbGVVc2VyTnVyc2UnXG4gIHwgJ1B1YmxpY1Blb3BsZVVzZXJQZW4nXG4gIHwgJ1B1YmxpY1Blb3BsZVVzZXJQaWxvdCdcbiAgfCAnUHVibGljUGVvcGxlVXNlclBsdXMnXG4gIHwgJ1B1YmxpY1Blb3BsZVVzZXJQb2xpY2UnXG4gIHwgJ1B1YmxpY1Blb3BsZVVzZXJTaGllbGQnXG4gIHwgJ1B1YmxpY1Blb3BsZVVzZXJTbGFzaCdcbiAgfCAnUHVibGljUGVvcGxlVXNlclVubG9jaydcbiAgfCAnUHVibGljUGVvcGxlVXNlcidcbiAgfCAnUHVibGljUGVvcGxlVXNlcnMnXG4gIHwgJ1B1YmxpY1Blb3BsZVdoZWVsY2hhaXInXG4gIHwgJ1B1YmxpY1N5bWJvbHNBcnJvd0FsdENpcmNsZURvd24nXG4gIHwgJ1B1YmxpY1N5bWJvbHNBcnJvd0FsdENpcmNsZUxlZnQnXG4gIHwgJ1B1YmxpY1N5bWJvbHNBcnJvd0FsdENpcmNsZVJpZ2h0J1xuICB8ICdQdWJsaWNTeW1ib2xzQXJyb3dBbHRDaXJjbGVVcCdcbiAgfCAnUHVibGljU3ltYm9sc0Fycm93QWx0RG93bidcbiAgfCAnUHVibGljU3ltYm9sc0Fycm93QWx0TGVmdCdcbiAgfCAnUHVibGljU3ltYm9sc0Fycm93QWx0UmlnaHQnXG4gIHwgJ1B1YmxpY1N5bWJvbHNBcnJvd0FsdFVwJ1xuICB8ICdQdWJsaWNTeW1ib2xzQXdhcmQnXG4gIHwgJ1B1YmxpY1N5bWJvbHNCYWRnZUNoZWNrJ1xuICB8ICdQdWJsaWNTeW1ib2xzQmFkZ2VEb2xsYXInXG4gIHwgJ1B1YmxpY1N5bWJvbHNCYWRnZSdcbiAgfCAnUHVibGljU3ltYm9sc0JhbidcbiAgfCAnUHVibGljU3ltYm9sc0JlbGwnXG4gIHwgJ1B1YmxpY1N5bWJvbHNCb2x0U2xhc2gnXG4gIHwgJ1B1YmxpY1N5bWJvbHNCb2x0J1xuICB8ICdQdWJsaWNTeW1ib2xzQm9va21hcmsnXG4gIHwgJ1B1YmxpY1N5bWJvbHNDaGVja0NpcmNsZSdcbiAgfCAnUHVibGljU3ltYm9sc0NoZWNrJ1xuICB8ICdQdWJsaWNTeW1ib2xzQ2lyY2xlJ1xuICB8ICdQdWJsaWNTeW1ib2xzQ2xvY2snXG4gIHwgJ1B1YmxpY1N5bWJvbHNDbHViJ1xuICB8ICdQdWJsaWNTeW1ib2xzQ3ViZSdcbiAgfCAnUHVibGljU3ltYm9sc0N1YmVzJ1xuICB8ICdQdWJsaWNTeW1ib2xzRGVhZidcbiAgfCAnUHVibGljU3ltYm9sc0RpYW1vbmQnXG4gIHwgJ1B1YmxpY1N5bWJvbHNEb2xsYXJTaWduJ1xuICB8ICdQdWJsaWNTeW1ib2xzRXhjbGFtYXRpb25DaXJjbGUnXG4gIHwgJ1B1YmxpY1N5bWJvbHNFeGNsYW1hdGlvblNxdWFyZSdcbiAgfCAnUHVibGljU3ltYm9sc0V4Y2xhbWF0aW9uVHJpYW5nbGUnXG4gIHwgJ1B1YmxpY1N5bWJvbHNFeGNsYW1hdGlvbidcbiAgfCAnUHVibGljU3ltYm9sc0V5ZVNsYXNoJ1xuICB8ICdQdWJsaWNTeW1ib2xzRXllJ1xuICB8ICdQdWJsaWNTeW1ib2xzRmlsZSdcbiAgfCAnUHVibGljU3ltYm9sc0ZpbmdlcnByaW50J1xuICB8ICdQdWJsaWNTeW1ib2xzRmlyZUFsdCdcbiAgfCAnUHVibGljU3ltYm9sc0ZsYWdBbHQnXG4gIHwgJ1B1YmxpY1N5bWJvbHNGb2xkZXInXG4gIHwgJ1B1YmxpY1N5bWJvbHNHZW5kZXJsZXNzJ1xuICB8ICdQdWJsaWNTeW1ib2xzSGVhcnQnXG4gIHwgJ1B1YmxpY1N5bWJvbHNIZXhhZ29uJ1xuICB8ICdQdWJsaWNTeW1ib2xzSG91cmdsYXNzJ1xuICB8ICdQdWJsaWNTeW1ib2xzSW1hZ2UnXG4gIHwgJ1B1YmxpY1N5bWJvbHNJbmZvQ2lyY2xlJ1xuICB8ICdQdWJsaWNTeW1ib2xzSW5mb1NxdWFyZSdcbiAgfCAnUHVibGljU3ltYm9sc0xheWVyR3JvdXAnXG4gIHwgJ1B1YmxpY1N5bWJvbHNMaW5rJ1xuICB8ICdQdWJsaWNTeW1ib2xzTG9jYXRpb25BcnJvdydcbiAgfCAnUHVibGljU3ltYm9sc0xvY2tPcGVuJ1xuICB8ICdQdWJsaWNTeW1ib2xzTG9jaydcbiAgfCAnUHVibGljU3ltYm9sc01hcE1hcmtlckFsdCdcbiAgfCAnUHVibGljU3ltYm9sc01hcE1hcmtlckNoZWNrJ1xuICB8ICdQdWJsaWNTeW1ib2xzTWFwTWFya2VyRXhjbGFtYXRpb24nXG4gIHwgJ1B1YmxpY1N5bWJvbHNNYXBNYXJrZXJNaW51cydcbiAgfCAnUHVibGljU3ltYm9sc01hcE1hcmtlclBsdXMnXG4gIHwgJ1B1YmxpY1N5bWJvbHNNYXBNYXJrZXJRdWVzdGlvbidcbiAgfCAnUHVibGljU3ltYm9sc01hcE1hcmtlclNtaWxlJ1xuICB8ICdQdWJsaWNTeW1ib2xzTWFycydcbiAgfCAnUHVibGljU3ltYm9sc01vb24nXG4gIHwgJ1B1YmxpY1N5bWJvbHNPY3RhZ29uJ1xuICB8ICdQdWJsaWNTeW1ib2xzUGFwZXJjbGlwJ1xuICB8ICdQdWJsaWNTeW1ib2xzUGFya2luZ0NpcmNsZSdcbiAgfCAnUHVibGljU3ltYm9sc1BhcmtpbmcnXG4gIHwgJ1B1YmxpY1N5bWJvbHNQYXVzZSdcbiAgfCAnUHVibGljU3ltYm9sc1BsYXknXG4gIHwgJ1B1YmxpY1N5bWJvbHNRdWVzdGlvbkNpcmNsZSdcbiAgfCAnUHVibGljU3ltYm9sc1F1ZXN0aW9uU3F1YXJlJ1xuICB8ICdQdWJsaWNTeW1ib2xzUXVlc3Rpb24nXG4gIHwgJ1B1YmxpY1N5bWJvbHNSZWN5Y2xlJ1xuICB8ICdQdWJsaWNTeW1ib2xzUmVkbydcbiAgfCAnUHVibGljU3ltYm9sc1NoYXBlcydcbiAgfCAnUHVibGljU3ltYm9sc1NoaWVsZCdcbiAgfCAnUHVibGljU3ltYm9sc1Ntb2tpbmdCYW4nXG4gIHwgJ1B1YmxpY1N5bWJvbHNTbW9raW5nJ1xuICB8ICdQdWJsaWNTeW1ib2xzU3BhZGUnXG4gIHwgJ1B1YmxpY1N5bWJvbHNTcXVhcmUnXG4gIHwgJ1B1YmxpY1N5bWJvbHNTdGFyRmlsbGVkJ1xuICB8ICdQdWJsaWNTeW1ib2xzU3RhcidcbiAgfCAnUHVibGljU3ltYm9sc1RhY2hvbWV0ZXInXG4gIHwgJ1B1YmxpY1N5bWJvbHNUYWcnXG4gIHwgJ1B1YmxpY1N5bWJvbHNUZW1wZXJhdHVyZURvd24nXG4gIHwgJ1B1YmxpY1N5bWJvbHNUZW1wZXJhdHVyZUZyaWdpZCdcbiAgfCAnUHVibGljU3ltYm9sc1RlbXBlcmF0dXJlSGlnaCdcbiAgfCAnUHVibGljU3ltYm9sc1RlbXBlcmF0dXJlSG90J1xuICB8ICdQdWJsaWNTeW1ib2xzVGVtcGVyYXR1cmVMb3cnXG4gIHwgJ1B1YmxpY1N5bWJvbHNUZW1wZXJhdHVyZVVwJ1xuICB8ICdQdWJsaWNTeW1ib2xzVGV4dCdcbiAgfCAnUHVibGljU3ltYm9sc1RoZXJtb21ldGVyRW1wdHknXG4gIHwgJ1B1YmxpY1N5bWJvbHNUaGVybW9tZXRlckZ1bGwnXG4gIHwgJ1B1YmxpY1N5bWJvbHNUaGVybW9tZXRlckhhbGYnXG4gIHwgJ1B1YmxpY1N5bWJvbHNUaGVybW9tZXRlclF1YXJ0ZXInXG4gIHwgJ1B1YmxpY1N5bWJvbHNUaGVybW9tZXRlclRocmVlUXVhcnRlcnMnXG4gIHwgJ1B1YmxpY1N5bWJvbHNUaHVtYnRhY2snXG4gIHwgJ1B1YmxpY1N5bWJvbHNUaW50J1xuICB8ICdQdWJsaWNTeW1ib2xzVHJhbnNnZW5kZXJBbHQnXG4gIHwgJ1B1YmxpY1N5bWJvbHNUcmFuc2dlbmRlcidcbiAgfCAnUHVibGljU3ltYm9sc1RyYXNoQWx0J1xuICB8ICdQdWJsaWNTeW1ib2xzVHJpYW5nbGUnXG4gIHwgJ1B1YmxpY1N5bWJvbHNVc2RDaXJjbGUnXG4gIHwgJ1B1YmxpY1N5bWJvbHNVc2RTcXVhcmUnXG4gIHwgJ1B1YmxpY1N5bWJvbHNWZW51c01hcnMnXG4gIHwgJ1B1YmxpY1N5bWJvbHNWZW51cydcbiAgfCAnUHVibGljU3ltYm9sc1ZpZGVvJ1xuICB8ICdQdWJsaWNTeW1ib2xzVm9sdW1lRG93bidcbiAgfCAnUHVibGljU3ltYm9sc1ZvbHVtZU11dGUnXG4gIHwgJ1B1YmxpY1N5bWJvbHNWb2x1bWVPZmYnXG4gIHwgJ1B1YmxpY1N5bWJvbHNWb2x1bWVTbGFzaCdcbiAgfCAnUHVibGljU3ltYm9sc1ZvbHVtZVVwJ1xuICB8ICdQdWJsaWNTeW1ib2xzVm9sdW1lJ1xuICB8ICdQdWJsaWNTeW1ib2xzV2F0ZXInXG4gIHwgJ1B1YmxpY1N5bWJvbHNXYXZlZm9ybSdcbiAgfCAnUHVibGljU3ltYm9sc1dpZmlTbGFzaCdcbiAgfCAnUHVibGljU3ltYm9sc1dpZmknXG4gIHwgJ1B1YmxpY1N5bWJvbHNZZW5TaWduJ1xuICB8ICdRdWVzdGlvbidcbiAgfCAnUmVvcmRlcidcbiAgfCAnUmVwbHknXG4gIHwgJ1Jlc3RhcnQnXG4gIHwgJ1JldmVydCdcbiAgfCAnUm9vbV8wMDI1OGswbXF1ODc1MGR1MTUxYmU4MDVjJ1xuICB8ICdSb29tXzBhbjJya3kyNGdiOTFmZG5wem1id2FkaWInXG4gIHwgJ1Jvb21fMGdudXVucHd4NjNkbW1xZXE2NGFxZml5ZCdcbiAgfCAnUm9vbV8ybng2bWF4eHBhZXV0N2t4OTZmdWFjZHpjJ1xuICB8ICdSb29tXzRieTJkNzBiNTRzcmJpbjQzdDVtMHloOWMnXG4gIHwgJ1Jvb21fNGdwOHgyMW5pNGk4eTE5cjlwbTRyYjM1YSdcbiAgfCAnUm9vbV80cXE0ZTVoejg0aGN1cjdyeTg3dWh0bXVhJ1xuICB8ICdSb29tXzY2cHNhNHRxZ2F6Ym5mZnI5aHV5MmRucGQnXG4gIHwgJ1Jvb21fOTFuYWExazNoaWltOXo0bWs4MzUyZW50YSdcbiAgfCAnUm9vbUExMWQyZ2k0M2gwZXR3ZWR3MG14OXBnd2QnXG4gIHwgJ1Jvb21BZzV1cGhoYTcyc2FrNjVxYXpnc3AwOXlkJ1xuICB8ICdSb29tQnlwN3B6MnRtdDRmZjQ3bmhmeDB1d3plYydcbiAgfCAnUm9vbUU2bWQyc3BhcWVtYzQ0OHBtYXUzYXpraGQnXG4gIHwgJ1Jvb21FaTNrbXR1bjJ4cHNwYmczZDVmZjN0M3pjJ1xuICB8ICdSb29tR2JhOGNxMHMycmRmZzF6ZGIxZXB3dHk3ZCdcbiAgfCAnUm9vbUdlMHRjYW4zaXp0dGE1bXRnc2Z4OTl4cGInXG4gIHwgJ1Jvb21HcXF3MXphYzFoemcxcDg2MjJkdWNnM3piJ1xuICB8ICdSb29tSXp0MzlneXRjYnltYzBxdGQzN25yYjd4YidcbiAgfCAnUm9vbU11bHRpVXNlJ1xuICB8ICdSb29tTXg2ZTJ5ZmswdGcwemJrYnp1dzVtaGtkYSdcbiAgfCAnUm9vbU4wN2hoczlna3k0Y2dyaDdxNjVzOXJwMGQnXG4gIHwgJ1Jvb21OcXc3NTAwNGRjZzJiY3I0MTA0N3JoZzZjJ1xuICB8ICdSb29tUG5mMHh6cTYxeGNlZ2FjazRpYWk3eHBwZCdcbiAgfCAnUm9vbVByOWg0enk3ZWFrOTFmM2I3dW45N3U0MmMnXG4gIHwgJ1Jvb21RYTIxdHFjc2lubnhkZTlnZG1pcGhhY3phJ1xuICB8ICdSb29tUm11OHBpa2N5ZTBuN245ZnN1NWU0YWNkYSdcbiAgfCAnUm9vbVMxaDBoYjh0cGNjOWkzNWRtdXBrbnNlZ2EnXG4gIHwgJ1Jvb21VYTFtMHU4cG0zeW5ncmh6d2VjMXVlNXpjJ1xuICB8ICdSb29tVzR0ZGdnazVpNXUyenBpcnl1Z2t0Z2hnYidcbiAgfCAnUm9vbVh3aGh6NjNhMGh3NzM1cWY4MWtucDYzaGEnXG4gIHwgJ1Jvb21ZM3h1cHJteXdncnBybm0wMjczdTNwcGhkJ1xuICB8ICdSb29tWWVoMWFhMzJmd2dtNzJiaDBnOTJlYnJ1YydcbiAgfCAnUm9vbVl3dGRkdTloYWdyYXhoem53aW5uOHQ0emInXG4gIHwgJ1Jvb21aZ2gyMzA0dzVhbnUwdDI1aWEwNnl0ZnhkJ1xuICB8ICdSb29tWnAxODl0eDJoZHJyeThrNW5oYXE1eDQ1ZCdcbiAgfCAnUm90YXRlTGVmdCdcbiAgfCAnUm90YXRlUmlnaHQnXG4gIHwgJ1JvdGF0ZSdcbiAgfCAnUm90YXRpb25fM2QnXG4gIHwgJ1NjYWxlXzNkJ1xuICB8ICdTZXR0aW5ncydcbiAgfCAnU2hhcmUnXG4gIHwgJ1NoYXJlMidcbiAgfCAnU2ltcGxlVGFnUGluJ1xuICB8ICdTaW1wbGVUYWdTbWFsbCdcbiAgfCAnU2ltcGxlVGFnJ1xuICB8ICdTbmFwJ1xuICB8ICdTcGFya2xlRmlsbCdcbiAgfCAnU3BhcmtsZSdcbiAgfCAnU3RhcnRMb2NhdGlvbidcbiAgfCAnU3RlbUhlaWdodCdcbiAgfCAnVGFwZU1lYXN1cmUnXG4gIHwgJ1RvZ2dsZVBlbmNpbCdcbiAgfCAnVG9vbGJhcl8zNjBWaWV3J1xuICB8ICdUb29sYmFyRWRpdFZyJ1xuICB8ICdUb29sYmFySGxyJ1xuICB8ICdUb29sYmFyTGFiZWxzJ1xuICB8ICdUb29sYmFyTWF0dGVydGFncydcbiAgfCAnVG9vbGJhck1lYXN1cmVtZW50cydcbiAgfCAnVG9vbGJhck1vcmVIb3JpeidcbiAgfCAnVG9vbGJhclBob3RvcydcbiAgfCAnVG9vbGJhclBsdWdpbkNvbmZpZydcbiAgfCAnVG9vbGJhclNjYW5NZ210J1xuICB8ICdUb29sYmFyU3RhcnRMb2NhdGlvbidcbiAgfCAnVHJhbnNpdGlvbnMnXG4gIHwgJ1RyYXNoJ1xuICB8ICdUcmltS2VlcCdcbiAgfCAnVHJpbVJlbW92ZSdcbiAgfCAnVHdpdHRlcidcbiAgfCAnVW5sb2NrJ1xuICB8ICdVc2VyJ1xuICB8ICdWaXNpYmlsaXR5J1xuICB8ICdWcidcbiAgfCAnV2FsbCdcbiAgfCAnV2luZG93J1xuICB8ICdab29tUmVzZXQnO1xuXG5leHBvcnQgY29uc3QgTVBfRk9OVF9DT0RFUE9JTlRTOiB7IFtrZXkgaW4gTXBGb250SWRdOiBzdHJpbmcgfSA9IHtcbiAgJzM2MCc6ICc2MTY5NycsXG4gICdhZGQtbGluayc6ICc2MTY5OCcsXG4gICdhcnJvdyc6ICc2MTY5OScsXG4gICdhcnJvd3MnOiAnNjE3MDAnLFxuICAnYXR0YWNoJzogJzYxNzAxJyxcbiAgJ2JhY2snOiAnNjE3MDInLFxuICAnYmxvY2tlZCc6ICc2MTcwMycsXG4gICdibHVyLW91dGxpbmUnOiAnNjE3MDQnLFxuICAnYnJ1c2gtb3V0bGluZSc6ICc2MTcwNScsXG4gICdjaGVja21hcmsnOiAnNjE3MDYnLFxuICAnY2hldnJvbi1sZWZ0JzogJzYxNzA3JyxcbiAgJ2NoZXZyb24tcmlnaHQnOiAnNjE3MDgnLFxuICAnY2xvc2UnOiAnNjE3MDknLFxuICAnY29tbWVudC1sYXJnZSc6ICc1NzM0NCcsXG4gICdjb21tZW50LW91dGxpbmUnOiAnNjE3MTAnLFxuICAnY29tbWVudCc6ICc2MTcxMScsXG4gICdkZWxldGUnOiAnNjE3MTInLFxuICAnZG9jayc6ICc2MTcxMycsXG4gICdkb2xsaG91c2UnOiAnNjE3MTQnLFxuICAnZG9vcic6ICc2MTcxNScsXG4gICdkb3dubG9hZCc6ICc2MTcxNicsXG4gICdkcGFkLWRvd24nOiAnNjE3MTcnLFxuICAnZHBhZC1sZWZ0JzogJzYxNzE4JyxcbiAgJ2RwYWQtcmlnaHQnOiAnNjE3MTknLFxuICAnZHBhZC11cCc6ICc2MTcyMCcsXG4gICdkcmFnLWVkaXQnOiAnNjE3MjEnLFxuICAnZHJhdy1saW5lcyc6ICc2MTcyMicsXG4gICdlZGl0LWZsb29ycGxhbic6ICc2MTcyMycsXG4gICdlbWFpbCc6ICc2MTcyNCcsXG4gICdlcnJvcic6ICc2MTcyNScsXG4gICdlc2NhcGUta2V5JzogJzYxNzI2JyxcbiAgJ2V4cGFuZCc6ICc2MTcyNycsXG4gICdleHQtbGluayc6ICc2MTcyOCcsXG4gICdleWUtaGlkZSc6ICc2MTcyOScsXG4gICdleWUtc2hvdyc6ICc2MTczMCcsXG4gICdmYWNlYm9vayc6ICc2MTczMScsXG4gICdmaWxlJzogJzYxNzMyJyxcbiAgJ2ZpbHRlcic6ICc2MTczMycsXG4gICdmaW5nZXItZHJhZyc6ICc2MTczNCcsXG4gICdmbG9vci1jb250cm9scy1hbGwnOiAnNjE3MzUnLFxuICAnZmxvb3ItY29udHJvbHMnOiAnNjE3MzYnLFxuICAnZmxvb3JwbGFuJzogJzYxNzM3JyxcbiAgJ2Z1bGxzY3JlZW4tZXhpdCc6ICc2MTczOCcsXG4gICdmdWxsc2NyZWVuJzogJzYxNzM5JyxcbiAgJ2Z1bGxzY3JlZW4yJzogJzYxNzQwJyxcbiAgJ2Z1cm5pdHVyZS1zbGFzaCc6ICc2MTc0MScsXG4gICdmdXJuaXR1cmUnOiAnNjE3NDInLFxuICAnZ2l6bW8tYWRkJzogJzYxNzQzJyxcbiAgJ2dpem1vLWNsb3NlZCc6ICc2MTc0NCcsXG4gICdnaXptby1leWUtaGlkZSc6ICc2MTc0NScsXG4gICdnaXptby1leWUtc2hvdyc6ICc2MTc0NicsXG4gICdnaXptby1mbG9vcnBsYW4nOiAnNjE3NDcnLFxuICAnZ2l6bW8tZ2Vhcic6ICc2MTc0OCcsXG4gICdnaXptby1sYXllcnMnOiAnNjE3NDknLFxuICAnZ2l6bW8tbWFnbmV0LXdhbGwnOiAnNjE3NTAnLFxuICAnZ2l6bW8tbWFnbmV0JzogJzYxNzUxJyxcbiAgJ2dpem1vLW1vZGVsJzogJzYxNzUyJyxcbiAgJ2dpem1vLW1vdmUnOiAnNjE3NTMnLFxuICAnZ2l6bW8tb3Blbic6ICc2MTc1NCcsXG4gICdnaXptby1vcnRob2dyYXBoaWMnOiAnNjE3NTUnLFxuICAnZ2l6bW8tcGVyc3BlY3RpdmUnOiAnNjE3NTYnLFxuICAnZ2l6bW8tcmVkbyc6ICc2MTc1NycsXG4gICdnaXptby1zbmFwJzogJzYxNzU4JyxcbiAgJ2dpem1vLXVuZG8nOiAnNjE3NTknLFxuICAnaGVscCc6ICc2MTc2MCcsXG4gICdobHItYmFkZ2UnOiAnNjE3NjEnLFxuICAnaGxyJzogJzYxNzYyJyxcbiAgJ2luZm8nOiAnNjE3NjMnLFxuICAnaW52aXNpYmxlLXdhbGwnOiAnNjE3NjQnLFxuICAna2V5Ym9hcmQnOiAnNjE3NjUnLFxuICAnbGF5ZXJzJzogJzYxNzY2JyxcbiAgJ2xpbmsnOiAnNjE3NjcnLFxuICAnbGlua2VkaW4nOiAnNjE3NjgnLFxuICAnbGlzdCc6ICc2MTc2OScsXG4gICdsb2NhdGlvbic6ICc2MTc3MCcsXG4gICdsb2NrJzogJzYxNzcxJyxcbiAgJ2xvZ28nOiAnNjE3NzInLFxuICAnbWFnbmlmeWluZy1nbGFzcyc6ICc2MTc3MycsXG4gICdtZWRpYS1taXgnOiAnNjE3NzQnLFxuICAnbWVudS1pbmRpY2F0b3InOiAnNjE3NzUnLFxuICAnbWVzaC10cmltJzogJzYxNzc2JyxcbiAgJ21lc2gnOiAnNjE3NzcnLFxuICAnbWludXMnOiAnNjE3NzgnLFxuICAnbW9yZS12ZXJ0JzogJzYxNzc5JyxcbiAgJ25vdGVzJzogJzYxNzgwJyxcbiAgJ29iamVjdC1haXItZHVjdHMnOiAnNjE3ODEnLFxuICAnb2JqZWN0LWJhdGh0dWInOiAnNjE3ODInLFxuICAnb2JqZWN0LWJlZCc6ICc2MTc4MycsXG4gICdvYmplY3QtY2FiaW5ldCc6ICc2MTc4NCcsXG4gICdvYmplY3QtY2VpbGluZy1mYW4nOiAnNjE3ODUnLFxuICAnb2JqZWN0LWNoYWlyJzogJzYxNzg2JyxcbiAgJ29iamVjdC1jb3VudGVydG9wJzogJzYxNzg3JyxcbiAgJ29iamVjdC1kaXNod2FzaGVyJzogJzYxNzg4JyxcbiAgJ29iamVjdC1kb29yLWxvY2snOiAnNjE3ODknLFxuICAnb2JqZWN0LWRvb3InOiAnNjE3OTAnLFxuICAnb2JqZWN0LWZhdWNldCc6ICc2MTc5MScsXG4gICdvYmplY3QtZmlyZXBsYWNlJzogJzYxNzkyJyxcbiAgJ29iamVjdC1nYXJhZ2UtZG9vcic6ICc2MTc5MycsXG4gICdvYmplY3Qta2l0Y2hlbi1pc2xhbmQnOiAnNjE3OTQnLFxuICAnb2JqZWN0LWxpZ2h0JzogJzYxNzk1JyxcbiAgJ29iamVjdC1taWNyb3dhdmUnOiAnNjE3OTYnLFxuICAnb2JqZWN0LW1pcnJvcic6ICc2MTc5NycsXG4gICdvYmplY3Qtb3V0bGV0JzogJzYxNzk4JyxcbiAgJ29iamVjdC1vdmVuJzogJzYxNzk5JyxcbiAgJ29iamVjdC1yYW5nZS1ob29kJzogJzYxODAwJyxcbiAgJ29iamVjdC1yYW5nZSc6ICc2MTgwMScsXG4gICdvYmplY3QtcmVmcmlnZXJhdG9yJzogJzYxODAyJyxcbiAgJ29iamVjdC1zaG93ZXInOiAnNjE4MDMnLFxuICAnb2JqZWN0LXNpbmsnOiAnNjE4MDQnLFxuICAnb2JqZWN0LXNreWxpZ2h0JzogJzYxODA1JyxcbiAgJ29iamVjdC1zbW9rZS1kZXRlY3Rvcic6ICc2MTgwNicsXG4gICdvYmplY3Qtc29mYSc6ICc2MTgwNycsXG4gICdvYmplY3QtdGFibGUnOiAnNjE4MDgnLFxuICAnb2JqZWN0LXRlbGV2aXNpb24nOiAnNjE4MDknLFxuICAnb2JqZWN0LXRoZXJtb3N0YXQnOiAnNjE4MTAnLFxuICAnb2JqZWN0LXRvaWxldCc6ICc2MTgxMScsXG4gICdvYmplY3QtdG93ZWwtcmFjayc6ICc2MTgxMicsXG4gICdvYmplY3QtdmFuaXR5JzogJzYxODEzJyxcbiAgJ29iamVjdC13YWxsLXN3aXRjaCc6ICc2MTgxNCcsXG4gICdvYmplY3Qtd2FzaGVyLWRyeWVyJzogJzYxODE1JyxcbiAgJ29iamVjdC13aW5kb3cnOiAnNjE4MTYnLFxuICAnb3BlbmluZyc6ICc2MTgxNycsXG4gICdwYW5vcmFtYS1kaXNhYmxlJzogJzYxODE4JyxcbiAgJ3Bhbm9yYW1hJzogJzYxODE5JyxcbiAgJ3BhcGVyLWNsaXAnOiAnNjE4MjAnLFxuICAncGF1c2Utb3V0bGluZSc6ICc2MTgyMScsXG4gICdwYXVzZSc6ICc2MTgyMicsXG4gICdwaG90by0yZCc6ICc2MTgyMycsXG4gICdwaG90by0zNjAnOiAnNjE4MjQnLFxuICAncGhvdG8tYWRkJzogJzYxODI1JyxcbiAgJ3Bpbic6ICc2MTgyNicsXG4gICdwaW50ZXJlc3QnOiAnNjE4MjcnLFxuICAncGxheS11bmljb2RlJzogJzYxODI4JyxcbiAgJ3BsYXknOiAnNjE4MjknLFxuICAncGx1cyc6ICc2MTgzMCcsXG4gICdwb3NpdGlvbi0zZC1mYXQnOiAnNjE4MzEnLFxuICAncG9zaXRpb24tM2QnOiAnNjE4MzInLFxuICAncHJlc3MtaG9sZCc6ICc2MTgzMycsXG4gICdwdWJsaWNfYnVpbGRpbmdzX2FwYXJ0bWVudCc6ICc2MTgzNCcsXG4gICdwdWJsaWNfYnVpbGRpbmdzX2FyY2h3YXknOiAnNjE4MzUnLFxuICAncHVibGljX2J1aWxkaW5nc19idWlsZGluZy1jaXJjbGUtYXJyb3ctcmlnaHQnOiAnNjE4MzYnLFxuICAncHVibGljX2J1aWxkaW5nc19idWlsZGluZy1jaXJjbGUtY2hlY2snOiAnNjE4MzcnLFxuICAncHVibGljX2J1aWxkaW5nc19idWlsZGluZy1jaXJjbGUtZXhjbGFtYXRpb24nOiAnNjE4MzgnLFxuICAncHVibGljX2J1aWxkaW5nc19idWlsZGluZy1jaXJjbGUteG1hcmsnOiAnNjE4MzknLFxuICAncHVibGljX2J1aWxkaW5nc19idWlsZGluZy1jb2x1bW5zJzogJzYxODQwJyxcbiAgJ3B1YmxpY19idWlsZGluZ3NfYnVpbGRpbmctZmxhZyc6ICc2MTg0MScsXG4gICdwdWJsaWNfYnVpbGRpbmdzX2J1aWxkaW5nLWxvY2snOiAnNjE4NDInLFxuICAncHVibGljX2J1aWxkaW5nc19idWlsZGluZy1zaGllbGQnOiAnNjE4NDMnLFxuICAncHVibGljX2J1aWxkaW5nc19idWlsZGluZy11c2VyJzogJzYxODQ0JyxcbiAgJ3B1YmxpY19idWlsZGluZ3NfYnVpbGRpbmctd2hlYXQnOiAnNjE4NDUnLFxuICAncHVibGljX2J1aWxkaW5nc19idWlsZGluZyc6ICc2MTg0NicsXG4gICdwdWJsaWNfYnVpbGRpbmdzX2J1aWxkaW5ncyc6ICc2MTg0NycsXG4gICdwdWJsaWNfYnVpbGRpbmdzX2NhYmluJzogJzYxODQ4JyxcbiAgJ3B1YmxpY19idWlsZGluZ3NfY2FtcGdyb3VuZCc6ICc2MTg0OScsXG4gICdwdWJsaWNfYnVpbGRpbmdzX2Nhci1idWlsZGluZyc6ICc2MTg1MCcsXG4gICdwdWJsaWNfYnVpbGRpbmdzX2Nhc3RsZSc6ICc2MTg1MScsXG4gICdwdWJsaWNfYnVpbGRpbmdzX2NoaW1uZXknOiAnNjE4NTInLFxuICAncHVibGljX2J1aWxkaW5nc19jaHVyY2gnOiAnNjE4NTMnLFxuICAncHVibGljX2J1aWxkaW5nc19jaXR5JzogJzYxODU0JyxcbiAgJ3B1YmxpY19idWlsZGluZ3NfZmFybSc6ICc2MTg1NScsXG4gICdwdWJsaWNfYnVpbGRpbmdzX2ZlbmNlJzogJzYxODU2JyxcbiAgJ3B1YmxpY19idWlsZGluZ3NfZmVycmlzLXdoZWVsJzogJzYxODU3JyxcbiAgJ3B1YmxpY19idWlsZGluZ3NfZm9ydCc6ICc2MTg1OCcsXG4gICdwdWJsaWNfYnVpbGRpbmdzX2dhcmFnZSc6ICc2MTg1OScsXG4gICdwdWJsaWNfYnVpbGRpbmdzX2hvc3BpdGFsJzogJzYxODYwJyxcbiAgJ3B1YmxpY19idWlsZGluZ3NfaG90ZWwnOiAnNjE4NjEnLFxuICAncHVibGljX2J1aWxkaW5nc19ob3VzZS1idWlsZGluZyc6ICc2MTg2MicsXG4gICdwdWJsaWNfYnVpbGRpbmdzX2hvdXNlLWNyYWNrJzogJzYxODYzJyxcbiAgJ3B1YmxpY19idWlsZGluZ3NfaG91c2UtZGF5JzogJzYxODY0JyxcbiAgJ3B1YmxpY19idWlsZGluZ3NfaG91c2UtZmlyZSc6ICc2MTg2NScsXG4gICdwdWJsaWNfYnVpbGRpbmdzX2hvdXNlLWZsYWcnOiAnNjE4NjYnLFxuICAncHVibGljX2J1aWxkaW5nc19ob3VzZS1mbG9vZC13YXRlcic6ICc2MTg2NycsXG4gICdwdWJsaWNfYnVpbGRpbmdzX2hvdXNlLWhlYXJ0JzogJzYxODY4JyxcbiAgJ3B1YmxpY19idWlsZGluZ3NfaG91c2UtbG9jayc6ICc2MTg2OScsXG4gICdwdWJsaWNfYnVpbGRpbmdzX2hvdXNlLW1lZGljYWwnOiAnNjE4NzAnLFxuICAncHVibGljX2J1aWxkaW5nc19ob3VzZS1uaWdodCc6ICc2MTg3MScsXG4gICdwdWJsaWNfYnVpbGRpbmdzX2hvdXNlJzogJzYxODcyJyxcbiAgJ3B1YmxpY19idWlsZGluZ3NfaW5kdXN0cnknOiAnNjE4NzMnLFxuICAncHVibGljX2J1aWxkaW5nc19sYW5kbWFyayc6ICc2MTg3NCcsXG4gICdwdWJsaWNfYnVpbGRpbmdzX21vbnVtZW50JzogJzYxODc1JyxcbiAgJ3B1YmxpY19idWlsZGluZ3NfbW9zcXVlJzogJzYxODc2JyxcbiAgJ3B1YmxpY19idWlsZGluZ3NfbW91bnRhaW4tY2l0eSc6ICc2MTg3NycsXG4gICdwdWJsaWNfYnVpbGRpbmdzX3BsYWNlLW9mLXdvcnNoaXAnOiAnNjE4NzgnLFxuICAncHVibGljX2J1aWxkaW5nc19yb2xsZXItY29hc3Rlcic6ICc2MTg3OScsXG4gICdwdWJsaWNfYnVpbGRpbmdzX3NjaG9vbCc6ICc2MTg4MCcsXG4gICdwdWJsaWNfYnVpbGRpbmdzX3N0b3JlJzogJzYxODgxJyxcbiAgJ3B1YmxpY19idWlsZGluZ3Nfc3luYWdvZ3VlJzogJzYxODgyJyxcbiAgJ3B1YmxpY19idWlsZGluZ3NfdGVudCc6ICc2MTg4MycsXG4gICdwdWJsaWNfYnVpbGRpbmdzX3RvaWxldCc6ICc2MTg4NCcsXG4gICdwdWJsaWNfYnVpbGRpbmdzX3RvcmlpLWdhdGUnOiAnNjE4ODUnLFxuICAncHVibGljX2J1aWxkaW5nc190b3dlci1vYnNlcnZhdGlvbic6ICc2MTg4NicsXG4gICdwdWJsaWNfYnVpbGRpbmdzX3RyZWUnOiAnNjE4ODcnLFxuICAncHVibGljX2J1aWxkaW5nc193YXJlaG91c2UnOiAnNjE4ODgnLFxuICAncHVibGljX2NoYXJhY3RlcnNfMCc6ICc2MTg4OScsXG4gICdwdWJsaWNfY2hhcmFjdGVyc18xJzogJzYxODkwJyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzXzInOiAnNjE4OTEnLFxuICAncHVibGljX2NoYXJhY3RlcnNfMyc6ICc2MTg5MicsXG4gICdwdWJsaWNfY2hhcmFjdGVyc180JzogJzYxODkzJyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzXzUnOiAnNjE4OTQnLFxuICAncHVibGljX2NoYXJhY3RlcnNfNic6ICc2MTg5NScsXG4gICdwdWJsaWNfY2hhcmFjdGVyc183JzogJzYxODk2JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzXzgnOiAnNjE4OTcnLFxuICAncHVibGljX2NoYXJhY3RlcnNfOSc6ICc2MTg5OCcsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19hJzogJzYxODk5JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX2InOiAnNjE5MDAnLFxuICAncHVibGljX2NoYXJhY3RlcnNfYyc6ICc2MTkwMScsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtMCc6ICc2MTkwMicsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtMSc6ICc2MTkwMycsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtMic6ICc2MTkwNCcsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtMyc6ICc2MTkwNScsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtNCc6ICc2MTkwNicsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtNSc6ICc2MTkwNycsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtNic6ICc2MTkwOCcsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtNyc6ICc2MTkwOScsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtOCc6ICc2MTkxMCcsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtOSc6ICc2MTkxMScsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtYSc6ICc2MTkxMicsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtYic6ICc2MTkxMycsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtYyc6ICc2MTkxNCcsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtZCc6ICc2MTkxNScsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtZSc6ICc2MTkxNicsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtZic6ICc2MTkxNycsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtZyc6ICc2MTkxOCcsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtaCc6ICc2MTkxOScsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtaSc6ICc2MTkyMCcsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtaic6ICc2MTkyMScsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtayc6ICc2MTkyMicsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtbCc6ICc2MTkyMycsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtbSc6ICc2MTkyNCcsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtbic6ICc2MTkyNScsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtbyc6ICc2MTkyNicsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtcCc6ICc2MTkyNycsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtcSc6ICc2MTkyOCcsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtcic6ICc2MTkyOScsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtcyc6ICc2MTkzMCcsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtdCc6ICc2MTkzMScsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtdSc6ICc2MTkzMicsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtdic6ICc2MTkzMycsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUtdyc6ICc2MTkzNCcsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUteCc6ICc2MTkzNScsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUteSc6ICc2MTkzNicsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19jaXJjbGUteic6ICc2MTkzNycsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19kJzogJzYxOTM4JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX2UnOiAnNjE5MzknLFxuICAncHVibGljX2NoYXJhY3RlcnNfZic6ICc2MTk0MCcsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19nJzogJzYxOTQxJyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX2gnOiAnNjE5NDInLFxuICAncHVibGljX2NoYXJhY3RlcnNfaSc6ICc2MTk0MycsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19qJzogJzYxOTQ0JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX2snOiAnNjE5NDUnLFxuICAncHVibGljX2NoYXJhY3RlcnNfbCc6ICc2MTk0NicsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19tJzogJzYxOTQ3JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX24nOiAnNjE5NDgnLFxuICAncHVibGljX2NoYXJhY3RlcnNfbyc6ICc2MTk0OScsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19wJzogJzYxOTUwJyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3EnOiAnNjE5NTEnLFxuICAncHVibGljX2NoYXJhY3RlcnNfcic6ICc2MTk1MicsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19zJzogJzYxOTUzJyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS0wJzogJzYxOTU0JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS0xJzogJzYxOTU1JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS0yJzogJzYxOTU2JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS0zJzogJzYxOTU3JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS00JzogJzYxOTU4JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS01JzogJzYxOTU5JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS02JzogJzYxOTYwJyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS03JzogJzYxOTYxJyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS04JzogJzYxOTYyJyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS05JzogJzYxOTYzJyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS1hJzogJzYxOTY0JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS1iJzogJzYxOTY1JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS1jJzogJzYxOTY2JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS1kJzogJzYxOTY3JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS1lJzogJzYxOTY4JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS1mJzogJzYxOTY5JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS1nJzogJzYxOTcwJyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS1oJzogJzYxOTcxJyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS1pJzogJzYxOTcyJyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS1qJzogJzYxOTczJyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS1rJzogJzYxOTc0JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS1sJzogJzYxOTc1JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS1tJzogJzYxOTc2JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS1uJzogJzYxOTc3JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS1vJzogJzYxOTc4JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS1wJzogJzYxOTc5JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS1xJzogJzYxOTgwJyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS1yJzogJzYxOTgxJyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS1zJzogJzYxOTgyJyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS10JzogJzYxOTgzJyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS11JzogJzYxOTg0JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS12JzogJzYxOTg1JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS13JzogJzYxOTg2JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS14JzogJzYxOTg3JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3NxdWFyZS14bWFyayc6ICc2MTk4OCcsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19zcXVhcmUteSc6ICc2MTk4OScsXG4gICdwdWJsaWNfY2hhcmFjdGVyc19zcXVhcmUteic6ICc2MTk5MCcsXG4gICdwdWJsaWNfY2hhcmFjdGVyc190JzogJzYxOTkxJyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3UnOiAnNjE5OTInLFxuICAncHVibGljX2NoYXJhY3RlcnNfdic6ICc2MTk5MycsXG4gICdwdWJsaWNfY2hhcmFjdGVyc193JzogJzYxOTk0JyxcbiAgJ3B1YmxpY19jaGFyYWN0ZXJzX3gnOiAnNjE5OTUnLFxuICAncHVibGljX2NoYXJhY3RlcnNfeSc6ICc2MTk5NicsXG4gICdwdWJsaWNfY2hhcmFjdGVyc196JzogJzYxOTk3JyxcbiAgJ3B1YmxpY19mdXJuaXR1cmVfYmF0aCc6ICc2MTk5OCcsXG4gICdwdWJsaWNfZnVybml0dXJlX2JlZC1hbHQnOiAnNjE5OTknLFxuICAncHVibGljX2Z1cm5pdHVyZV9iZWQtYnVuayc6ICc2MjAwMCcsXG4gICdwdWJsaWNfZnVybml0dXJlX2JlZC1lbXB0eSc6ICc2MjAwMScsXG4gICdwdWJsaWNfZnVybml0dXJlX2JlZCc6ICc2MjAwMicsXG4gICdwdWJsaWNfZnVybml0dXJlX2JsZW5kZXInOiAnNjIwMDMnLFxuICAncHVibGljX2Z1cm5pdHVyZV9ibGluZHMnOiAnNjIwMDQnLFxuICAncHVibGljX2Z1cm5pdHVyZV9jYWJpbmV0LWZpbGluZyc6ICc2MjAwNScsXG4gICdwdWJsaWNfZnVybml0dXJlX2Nhc2gtcmVnaXN0ZXInOiAnNjIwMDYnLFxuICAncHVibGljX2Z1cm5pdHVyZV9jaGFpci1vZmZpY2UnOiAnNjIwMDcnLFxuICAncHVibGljX2Z1cm5pdHVyZV9jaGFpcic6ICc2MjAwOCcsXG4gICdwdWJsaWNfZnVybml0dXJlX2NoYXJnaW5nLXN0YXRpb24nOiAnNjIwMDknLFxuICAncHVibGljX2Z1cm5pdHVyZV9jb21wdXRlci1jbGFzc2ljJzogJzYyMDEwJyxcbiAgJ3B1YmxpY19mdXJuaXR1cmVfY29tcHV0ZXItc3BlYWtlcic6ICc2MjAxMScsXG4gICdwdWJsaWNfZnVybml0dXJlX2NvdWNoJzogJzYyMDEyJyxcbiAgJ3B1YmxpY19mdXJuaXR1cmVfZHJ5ZXItYWx0JzogJzYyMDEzJyxcbiAgJ3B1YmxpY19mdXJuaXR1cmVfZHJ5ZXInOiAnNjIwMTQnLFxuICAncHVibGljX2Z1cm5pdHVyZV9kdW1iYmVsbCc6ICc2MjAxNScsXG4gICdwdWJsaWNfZnVybml0dXJlX2R1bXBzdGVyJzogJzYyMDE2JyxcbiAgJ3B1YmxpY19mdXJuaXR1cmVfZmF1Y2V0JzogJzYyMDE3JyxcbiAgJ3B1YmxpY19mdXJuaXR1cmVfZmF4JzogJzYyMDE4JyxcbiAgJ3B1YmxpY19mdXJuaXR1cmVfaG90LXR1Yic6ICc2MjAxOScsXG4gICdwdWJsaWNfZnVybml0dXJlX2ludmVudG9yeSc6ICc2MjAyMCcsXG4gICdwdWJsaWNfZnVybml0dXJlX2xhbXAtZGVzayc6ICc2MjAyMScsXG4gICdwdWJsaWNfZnVybml0dXJlX2xhbXAtZmxvb3InOiAnNjIwMjInLFxuICAncHVibGljX2Z1cm5pdHVyZV9sYW1wJzogJzYyMDIzJyxcbiAgJ3B1YmxpY19mdXJuaXR1cmVfbGFwdG9wJzogJzYyMDI0JyxcbiAgJ3B1YmxpY19mdXJuaXR1cmVfbGlnaHQtY2VpbGluZyc6ICc2MjAyNScsXG4gICdwdWJsaWNfZnVybml0dXJlX2xvdmVzZWF0JzogJzYyMDI2JyxcbiAgJ3B1YmxpY19mdXJuaXR1cmVfbWljcm93YXZlJzogJzYyMDI3JyxcbiAgJ3B1YmxpY19mdXJuaXR1cmVfcGlhbm8nOiAnNjIwMjgnLFxuICAncHVibGljX2Z1cm5pdHVyZV9wb2RpdW0nOiAnNjIwMjknLFxuICAncHVibGljX2Z1cm5pdHVyZV9wcmVzZW50YXRpb24nOiAnNjIwMzAnLFxuICAncHVibGljX2Z1cm5pdHVyZV9wcm9qZWN0b3InOiAnNjIwMzEnLFxuICAncHVibGljX2Z1cm5pdHVyZV9yYWRpbyc6ICc2MjAzMicsXG4gICdwdWJsaWNfZnVybml0dXJlX3JlZnJpZ2VyYXRvcic6ICc2MjAzMycsXG4gICdwdWJsaWNfZnVybml0dXJlX3Nob3dlcic6ICc2MjAzNCcsXG4gICdwdWJsaWNfZnVybml0dXJlX3NocmVkZGVyJzogJzYyMDM1JyxcbiAgJ3B1YmxpY19mdXJuaXR1cmVfc2luayc6ICc2MjAzNicsXG4gICdwdWJsaWNfZnVybml0dXJlX3NvbGFyLXBhbmVsJzogJzYyMDM3JyxcbiAgJ3B1YmxpY19mdXJuaXR1cmVfc3BlYWtlcic6ICc2MjAzOCcsXG4gICdwdWJsaWNfZnVybml0dXJlX3NwZWFrZXJzJzogJzYyMDM5JyxcbiAgJ3B1YmxpY19mdXJuaXR1cmVfdG9pbGV0JzogJzYyMDQwJyxcbiAgJ3B1YmxpY19mdXJuaXR1cmVfdHJhc2gtYWx0JzogJzYyMDQxJyxcbiAgJ3B1YmxpY19mdXJuaXR1cmVfdHVybnRhYmxlJzogJzYyMDQyJyxcbiAgJ3B1YmxpY19mdXJuaXR1cmVfdHYtcmV0cm8nOiAnNjIwNDMnLFxuICAncHVibGljX2Z1cm5pdHVyZV90dic6ICc2MjA0NCcsXG4gICdwdWJsaWNfZnVybml0dXJlX3R5cGV3cml0ZXInOiAnNjIwNDUnLFxuICAncHVibGljX29iamVjdHNfYWJhY3VzJzogJzYyMDQ2JyxcbiAgJ3B1YmxpY19vYmplY3RzX2FsYXJtLWNsb2NrJzogJzYyMDQ3JyxcbiAgJ3B1YmxpY19vYmplY3RzX2FsYnVtLWNvbGxlY3Rpb24nOiAnNjIwNDgnLFxuICAncHVibGljX29iamVjdHNfYmFja3BhY2snOiAnNjIwNDknLFxuICAncHVibGljX29iamVjdHNfYmFncy1zaG9wcGluZyc6ICc2MjA1MCcsXG4gICdwdWJsaWNfb2JqZWN0c19iZWxsJzogJzYyMDUxJyxcbiAgJ3B1YmxpY19vYmplY3RzX2JpY3ljbGUnOiAnNjIwNTInLFxuICAncHVibGljX29iamVjdHNfYmlub2N1bGFycyc6ICc2MjA1MycsXG4gICdwdWJsaWNfb2JqZWN0c19ibGFua2V0JzogJzYyMDU0JyxcbiAgJ3B1YmxpY19vYmplY3RzX2Jvb2snOiAnNjIwNTUnLFxuICAncHVibGljX29iamVjdHNfYm9va3MnOiAnNjIwNTYnLFxuICAncHVibGljX29iamVjdHNfYm9vdCc6ICc2MjA1NycsXG4gICdwdWJsaWNfb2JqZWN0c19ib3gnOiAnNjIwNTgnLFxuICAncHVibGljX29iamVjdHNfYnJlYWQtbG9hZic6ICc2MjA1OScsXG4gICdwdWJsaWNfb2JqZWN0c19icmllZmNhc2UtbWVkaWNhbCc6ICc2MjA2MCcsXG4gICdwdWJsaWNfb2JqZWN0c19icmllZmNhc2UnOiAnNjIwNjEnLFxuICAncHVibGljX29iamVjdHNfYnJvb20nOiAnNjIwNjInLFxuICAncHVibGljX29iamVjdHNfYnJ1c2gnOiAnNjIwNjMnLFxuICAncHVibGljX29iamVjdHNfYnVsbGhvcm4nOiAnNjIwNjQnLFxuICAncHVibGljX29iamVjdHNfYnVyZ2VyLXNvZGEnOiAnNjIwNjUnLFxuICAncHVibGljX29iamVjdHNfY2FsY3VsYXRvcic6ICc2MjA2NicsXG4gICdwdWJsaWNfb2JqZWN0c19jYWxlbmRhcic6ICc2MjA2NycsXG4gICdwdWJsaWNfb2JqZWN0c19jYW1lcmEnOiAnNjIwNjgnLFxuICAncHVibGljX29iamVjdHNfY2FyJzogJzYyMDY5JyxcbiAgJ3B1YmxpY19vYmplY3RzX2NhcnJvdCc6ICc2MjA3MCcsXG4gICdwdWJsaWNfb2JqZWN0c19jaGVlc2Utc3dpc3MnOiAnNjIwNzEnLFxuICAncHVibGljX29iamVjdHNfY2hlc3MnOiAnNjIwNzInLFxuICAncHVibGljX29iamVjdHNfY2xpcGJvYXJkLWNoZWNrJzogJzYyMDczJyxcbiAgJ3B1YmxpY19vYmplY3RzX2NsaXBib2FyZC1saXN0JzogJzYyMDc0JyxcbiAgJ3B1YmxpY19vYmplY3RzX2NsaXBib2FyZCc6ICc2MjA3NScsXG4gICdwdWJsaWNfb2JqZWN0c19jb2ZmZWUtcG90JzogJzYyMDc2JyxcbiAgJ3B1YmxpY19vYmplY3RzX2NvbXBhc3MnOiAnNjIwNzcnLFxuICAncHVibGljX29iamVjdHNfY29va2llJzogJzYyMDc4JyxcbiAgJ3B1YmxpY19vYmplY3RzX2Nvcm4nOiAnNjIwNzknLFxuICAncHVibGljX29iamVjdHNfY3JvaXNzYW50JzogJzYyMDgwJyxcbiAgJ3B1YmxpY19vYmplY3RzX2RpY2UnOiAnNjIwODEnLFxuICAncHVibGljX29iamVjdHNfZHJ1bXN0aWNrJzogJzYyMDgyJyxcbiAgJ3B1YmxpY19vYmplY3RzX2VnZyc6ICc2MjA4MycsXG4gICdwdWJsaWNfb2JqZWN0c19maXNoJzogJzYyMDg0JyxcbiAgJ3B1YmxpY19vYmplY3RzX2ZsYXNrJzogJzYyMDg1JyxcbiAgJ3B1YmxpY19vYmplY3RzX2Zsb3dlci10dWxpcCc6ICc2MjA4NicsXG4gICdwdWJsaWNfb2JqZWN0c19nYW1lcGFkJzogJzYyMDg3JyxcbiAgJ3B1YmxpY19vYmplY3RzX2dlbSc6ICc2MjA4OCcsXG4gICdwdWJsaWNfb2JqZWN0c19naWZ0JzogJzYyMDg5JyxcbiAgJ3B1YmxpY19vYmplY3RzX2dpZnRzJzogJzYyMDkwJyxcbiAgJ3B1YmxpY19vYmplY3RzX2dsYXNzLWNpdHJ1cyc6ICc2MjA5MScsXG4gICdwdWJsaWNfb2JqZWN0c19nbGFzcyc6ICc2MjA5MicsXG4gICdwdWJsaWNfb2JqZWN0c19nbGFzc2VzJzogJzYyMDkzJyxcbiAgJ3B1YmxpY19vYmplY3RzX2dsb2JlLXN0YW5kJzogJzYyMDk0JyxcbiAgJ3B1YmxpY19vYmplY3RzX2dyYWR1YXRpb24tY2FwJzogJzYyMDk1JyxcbiAgJ3B1YmxpY19vYmplY3RzX2d1aXRhcic6ICc2MjA5NicsXG4gICdwdWJsaWNfb2JqZWN0c19oYW1tZXInOiAnNjIwOTcnLFxuICAncHVibGljX29iamVjdHNfaGF0LWNoZWYnOiAnNjIwOTgnLFxuICAncHVibGljX29iamVjdHNfaWNlLWNyZWFtJzogJzYyMDk5JyxcbiAgJ3B1YmxpY19vYmplY3RzX2ljZS1za2F0ZSc6ICc2MjEwMCcsXG4gICdwdWJsaWNfb2JqZWN0c19rZXknOiAnNjIxMDEnLFxuICAncHVibGljX29iamVjdHNfa25pZmUta2l0Y2hlbic6ICc2MjEwMicsXG4gICdwdWJsaWNfb2JqZWN0c19saWdodGJ1bGItb24nOiAnNjIxMDMnLFxuICAncHVibGljX29iamVjdHNfbGlnaHRidWxiLXNsYXNoJzogJzYyMTA0JyxcbiAgJ3B1YmxpY19vYmplY3RzX2xpZ2h0YnVsYic6ICc2MjEwNScsXG4gICdwdWJsaWNfb2JqZWN0c19tYWduZXQnOiAnNjIxMDYnLFxuICAncHVibGljX29iamVjdHNfbWFpbGJveCc6ICc2MjEwNycsXG4gICdwdWJsaWNfb2JqZWN0c19tYXAnOiAnNjIxMDgnLFxuICAncHVibGljX29iamVjdHNfbWVhdCc6ICc2MjEwOScsXG4gICdwdWJsaWNfb2JqZWN0c19tZWRhbCc6ICc2MjExMCcsXG4gICdwdWJsaWNfb2JqZWN0c19taWNyb3Bob25lJzogJzYyMTExJyxcbiAgJ3B1YmxpY19vYmplY3RzX21vYmlsZSc6ICc2MjExMicsXG4gICdwdWJsaWNfb2JqZWN0c19tb25leS1iaWxsLXdhdmUnOiAnNjIxMTMnLFxuICAncHVibGljX29iamVjdHNfbXVnLXRlYSc6ICc2MjExNCcsXG4gICdwdWJsaWNfb2JqZWN0c19tdWcnOiAnNjIxMTUnLFxuICAncHVibGljX29iamVjdHNfbmV3c3BhcGVyJzogJzYyMTE2JyxcbiAgJ3B1YmxpY19vYmplY3RzX3BhaW50LXJvbGxlcic6ICc2MjExNycsXG4gICdwdWJsaWNfb2JqZWN0c19wYWxldHRlJzogJzYyMTE4JyxcbiAgJ3B1YmxpY19vYmplY3RzX3Blbic6ICc2MjExOScsXG4gICdwdWJsaWNfb2JqZWN0c19waG9uZSc6ICc2MjEyMCcsXG4gICdwdWJsaWNfb2JqZWN0c19waXp6YS1zbGljZSc6ICc2MjEyMScsXG4gICdwdWJsaWNfb2JqZWN0c19wdW1wLXNvYXAnOiAnNjIxMjInLFxuICAncHVibGljX29iamVjdHNfcnVsZXItdHJpYW5nbGUnOiAnNjIxMjMnLFxuICAncHVibGljX29iamVjdHNfcnVsZXInOiAnNjIxMjQnLFxuICAncHVibGljX29iamVjdHNfc2FsYWQnOiAnNjIxMjUnLFxuICAncHVibGljX29iamVjdHNfc2FuZHdpY2gnOiAnNjIxMjYnLFxuICAncHVibGljX29iamVjdHNfc2hvdmVsJzogJzYyMTI3JyxcbiAgJ3B1YmxpY19vYmplY3RzX3N0ZWFrJzogJzYyMTI4JyxcbiAgJ3B1YmxpY19vYmplY3RzX3N1bmdsYXNzZXMnOiAnNjIxMjknLFxuICAncHVibGljX29iamVjdHNfdHVya2V5JzogJzYyMTMwJyxcbiAgJ3B1YmxpY19vYmplY3RzX3V0ZW5zaWxzJzogJzYyMTMxJyxcbiAgJ3B1YmxpY19vYmplY3RzX3ZpYWwnOiAnNjIxMzInLFxuICAncHVibGljX29iamVjdHNfd2FsbGV0JzogJzYyMTMzJyxcbiAgJ3B1YmxpY19vYmplY3RzX3dyZW5jaCc6ICc2MjEzNCcsXG4gICdwdWJsaWNfcGVvcGxlX2JhYnknOiAnNjIxMzUnLFxuICAncHVibGljX3Blb3BsZV9jaGlsZC1kcmVzcyc6ICc2MjEzNicsXG4gICdwdWJsaWNfcGVvcGxlX2NoaWxkLXJlYWNoaW5nJzogJzYyMTM3JyxcbiAgJ3B1YmxpY19wZW9wbGVfY2hpbGQnOiAnNjIxMzgnLFxuICAncHVibGljX3Blb3BsZV9jaGlsZHJlbic6ICc2MjEzOScsXG4gICdwdWJsaWNfcGVvcGxlX2NpcmNsZS11c2VyJzogJzYyMTQwJyxcbiAgJ3B1YmxpY19wZW9wbGVfY2xpcGJvYXJkLXVzZXInOiAnNjIxNDEnLFxuICAncHVibGljX3Blb3BsZV9mYWNlLWFuZ3J5JzogJzYyMTQyJyxcbiAgJ3B1YmxpY19wZW9wbGVfZmFjZS1hbmd1aXNoZWQnOiAnNjIxNDMnLFxuICAncHVibGljX3Blb3BsZV9mYWNlLWFzdG9uaXNoZWQnOiAnNjIxNDQnLFxuICAncHVibGljX3Blb3BsZV9mYWNlLWJlYW0taGFuZC1vdmVyLW1vdXRoJzogJzYyMTQ1JyxcbiAgJ3B1YmxpY19wZW9wbGVfZmFjZS1jb25mb3VuZGVkJzogJzYyMTQ2JyxcbiAgJ3B1YmxpY19wZW9wbGVfZmFjZS1jb25mdXNlZCc6ICc2MjE0NycsXG4gICdwdWJsaWNfcGVvcGxlX2ZhY2UtZGlhZ29uYWwtbW91dGgnOiAnNjIxNDgnLFxuICAncHVibGljX3Blb3BsZV9mYWNlLWRpc2FwcG9pbnRlZCc6ICc2MjE0OScsXG4gICdwdWJsaWNfcGVvcGxlX2ZhY2UtZGl6enknOiAnNjIxNTAnLFxuICAncHVibGljX3Blb3BsZV9mYWNlLWV4cHJlc3Npb25sZXNzJzogJzYyMTUxJyxcbiAgJ3B1YmxpY19wZW9wbGVfZmFjZS1leWVzLXhtYXJrcyc6ICc2MjE1MicsXG4gICdwdWJsaWNfcGVvcGxlX2ZhY2UtZmVhcmZ1bCc6ICc2MjE1MycsXG4gICdwdWJsaWNfcGVvcGxlX2ZhY2UtZnJvd24tc2xpZ2h0JzogJzYyMTU0JyxcbiAgJ3B1YmxpY19wZW9wbGVfZmFjZS1mcm93bic6ICc2MjE1NScsXG4gICdwdWJsaWNfcGVvcGxlX2ZhY2UtZ2xhc3Nlcyc6ICc2MjE1NicsXG4gICdwdWJsaWNfcGVvcGxlX2ZhY2UtZ3JpbWFjZSc6ICc2MjE1NycsXG4gICdwdWJsaWNfcGVvcGxlX2ZhY2UtZ3Jpbi1iZWFtLXN3ZWF0JzogJzYyMTU4JyxcbiAgJ3B1YmxpY19wZW9wbGVfZmFjZS1ncmluLWJlYW0nOiAnNjIxNTknLFxuICAncHVibGljX3Blb3BsZV9mYWNlLWdyaW4taGVhcnRzJzogJzYyMTYwJyxcbiAgJ3B1YmxpY19wZW9wbGVfZmFjZS1ncmluLXNxdWludC10ZWFycyc6ICc2MjE2MScsXG4gICdwdWJsaWNfcGVvcGxlX2ZhY2UtZ3Jpbi1zcXVpbnQnOiAnNjIxNjInLFxuICAncHVibGljX3Blb3BsZV9mYWNlLWdyaW4tc3RhcnMnOiAnNjIxNjMnLFxuICAncHVibGljX3Blb3BsZV9mYWNlLWdyaW4tdGVhcnMnOiAnNjIxNjQnLFxuICAncHVibGljX3Blb3BsZV9mYWNlLWdyaW4tdG9uZ3VlLXNxdWludCc6ICc2MjE2NScsXG4gICdwdWJsaWNfcGVvcGxlX2ZhY2UtZ3Jpbi10b25ndWUtd2luayc6ICc2MjE2NicsXG4gICdwdWJsaWNfcGVvcGxlX2ZhY2UtZ3Jpbi10b25ndWUnOiAnNjIxNjcnLFxuICAncHVibGljX3Blb3BsZV9mYWNlLWdyaW4td2lkZSc6ICc2MjE2OCcsXG4gICdwdWJsaWNfcGVvcGxlX2ZhY2UtZ3Jpbi13aW5rJzogJzYyMTY5JyxcbiAgJ3B1YmxpY19wZW9wbGVfZmFjZS1ncmluJzogJzYyMTcwJyxcbiAgJ3B1YmxpY19wZW9wbGVfZmFjZS1oYW5kLW92ZXItbW91dGgnOiAnNjIxNzEnLFxuICAncHVibGljX3Blb3BsZV9mYWNlLWh1c2hlZCc6ICc2MjE3MicsXG4gICdwdWJsaWNfcGVvcGxlX2ZhY2UtaWNpY2xlcyc6ICc2MjE3MycsXG4gICdwdWJsaWNfcGVvcGxlX2ZhY2Uta2lzcyc6ICc2MjE3NCcsXG4gICdwdWJsaWNfcGVvcGxlX2ZhY2UtbGF1Z2gnOiAnNjIxNzUnLFxuICAncHVibGljX3Blb3BsZV9mYWNlLW1hc2snOiAnNjIxNzYnLFxuICAncHVibGljX3Blb3BsZV9mYWNlLW1laC1ibGFuayc6ICc2MjE3NycsXG4gICdwdWJsaWNfcGVvcGxlX2ZhY2UtbWVoJzogJzYyMTc4JyxcbiAgJ3B1YmxpY19wZW9wbGVfZmFjZS1tb25vY2xlJzogJzYyMTc5JyxcbiAgJ3B1YmxpY19wZW9wbGVfZmFjZS1uYXVzZWF0ZWQnOiAnNjIxODAnLFxuICAncHVibGljX3Blb3BsZV9mYWNlLXBhcnR5JzogJzYyMTgxJyxcbiAgJ3B1YmxpY19wZW9wbGVfZmFjZS1wZW5zaXZlJzogJzYyMTgyJyxcbiAgJ3B1YmxpY19wZW9wbGVfZmFjZS1wZXJzZXZlcmluZyc6ICc2MjE4MycsXG4gICdwdWJsaWNfcGVvcGxlX2ZhY2UtcGxlYWRpbmcnOiAnNjIxODQnLFxuICAncHVibGljX3Blb3BsZV9mYWNlLXBvdXRpbmcnOiAnNjIxODUnLFxuICAncHVibGljX3Blb3BsZV9mYWNlLXJhaXNlZC1leWVicm93JzogJzYyMTg2JyxcbiAgJ3B1YmxpY19wZW9wbGVfZmFjZS1yZWxpZXZlZCc6ICc2MjE4NycsXG4gICdwdWJsaWNfcGVvcGxlX2ZhY2Utcm9sbGluZy1leWVzJzogJzYyMTg4JyxcbiAgJ3B1YmxpY19wZW9wbGVfZmFjZS1zYWQtY3J5JzogJzYyMTg5JyxcbiAgJ3B1YmxpY19wZW9wbGVfZmFjZS1zYWQtc3dlYXQnOiAnNjIxOTAnLFxuICAncHVibGljX3Blb3BsZV9mYWNlLXNhZC10ZWFyJzogJzYyMTkxJyxcbiAgJ3B1YmxpY19wZW9wbGVfZmFjZS1zY3JlYW0nOiAnNjIxOTInLFxuICAncHVibGljX3Blb3BsZV9mYWNlLXNsZWVwaW5nJzogJzYyMTkzJyxcbiAgJ3B1YmxpY19wZW9wbGVfZmFjZS1zbGVlcHknOiAnNjIxOTQnLFxuICAncHVibGljX3Blb3BsZV9mYWNlLXNtaWxlLWJlYW0nOiAnNjIxOTUnLFxuICAncHVibGljX3Blb3BsZV9mYWNlLXNtaWxlLWhhbG8nOiAnNjIxOTYnLFxuICAncHVibGljX3Blb3BsZV9mYWNlLXNtaWxlLWhlYXJ0cyc6ICc2MjE5NycsXG4gICdwdWJsaWNfcGVvcGxlX2ZhY2Utc21pbGUtcmVsYXhlZCc6ICc2MjE5OCcsXG4gICdwdWJsaWNfcGVvcGxlX2ZhY2Utc21pbGUtdXBzaWRlLWRvd24nOiAnNjIxOTknLFxuICAncHVibGljX3Blb3BsZV9mYWNlLXNtaWxlLXdpbmsnOiAnNjIyMDAnLFxuICAncHVibGljX3Blb3BsZV9mYWNlLXNtaWxlJzogJzYyMjAxJyxcbiAgJ3B1YmxpY19wZW9wbGVfZmFjZS1zbWlya2luZyc6ICc2MjIwMicsXG4gICdwdWJsaWNfcGVvcGxlX2ZhY2Utc3BpcmFsLWV5ZXMnOiAnNjIyMDMnLFxuICAncHVibGljX3Blb3BsZV9mYWNlLXN1bmdsYXNzZXMnOiAnNjIyMDQnLFxuICAncHVibGljX3Blb3BsZV9mYWNlLXN1cnByaXNlJzogJzYyMjA1JyxcbiAgJ3B1YmxpY19wZW9wbGVfZmFjZS10aGVybW9tZXRlcic6ICc2MjIwNicsXG4gICdwdWJsaWNfcGVvcGxlX2ZhY2UtdGhpbmtpbmcnOiAnNjIyMDcnLFxuICAncHVibGljX3Blb3BsZV9mYWNlLXRpcmVkJzogJzYyMjA4JyxcbiAgJ3B1YmxpY19wZW9wbGVfZmFjZS10aXNzdWUnOiAnNjIyMDknLFxuICAncHVibGljX3Blb3BsZV9mYWNlLXVuYW11c2VkJzogJzYyMjEwJyxcbiAgJ3B1YmxpY19wZW9wbGVfZmFjZS12b21pdCc6ICc2MjIxMScsXG4gICdwdWJsaWNfcGVvcGxlX2ZhY2Utd2VhcnknOiAnNjIyMTInLFxuICAncHVibGljX3Blb3BsZV9mYWNlLXdvb3p5JzogJzYyMjEzJyxcbiAgJ3B1YmxpY19wZW9wbGVfZmFjZS13b3JyaWVkJzogJzYyMjE0JyxcbiAgJ3B1YmxpY19wZW9wbGVfZmFjZS16aXBwZXInOiAnNjIyMTUnLFxuICAncHVibGljX3Blb3BsZV9mYW1pbHktZHJlc3MnOiAnNjIyMTYnLFxuICAncHVibGljX3Blb3BsZV9mYW1pbHktcGFudHMnOiAnNjIyMTcnLFxuICAncHVibGljX3Blb3BsZV9mYW1pbHknOiAnNjIyMTgnLFxuICAncHVibGljX3Blb3BsZV9maWxlLXVzZXInOiAnNjIyMTknLFxuICAncHVibGljX3Blb3BsZV9mb2xkZXItdXNlcic6ICc2MjIyMCcsXG4gICdwdWJsaWNfcGVvcGxlX2hlYWQtc2lkZS1icmFpbic6ICc2MjIyMScsXG4gICdwdWJsaWNfcGVvcGxlX2hlYWQtc2lkZS1jb3VnaC1zbGFzaCc6ICc2MjIyMicsXG4gICdwdWJsaWNfcGVvcGxlX2hlYWQtc2lkZS1jb3VnaCc6ICc2MjIyMycsXG4gICdwdWJsaWNfcGVvcGxlX2hlYWQtc2lkZS1nb2dnbGVzJzogJzYyMjI0JyxcbiAgJ3B1YmxpY19wZW9wbGVfaGVhZC1zaWRlLWhlYWRwaG9uZXMnOiAnNjIyMjUnLFxuICAncHVibGljX3Blb3BsZV9oZWFkLXNpZGUtaGVhcnQnOiAnNjIyMjYnLFxuICAncHVibGljX3Blb3BsZV9oZWFkLXNpZGUtbWFzayc6ICc2MjIyNycsXG4gICdwdWJsaWNfcGVvcGxlX2hlYWQtc2lkZS1tZWRpY2FsJzogJzYyMjI4JyxcbiAgJ3B1YmxpY19wZW9wbGVfaGVhZC1zaWRlLXZpcnVzJzogJzYyMjI5JyxcbiAgJ3B1YmxpY19wZW9wbGVfaGVhZC1zaWRlJzogJzYyMjMwJyxcbiAgJ3B1YmxpY19wZW9wbGVfcGVvcGxlJzogJzYyMjMxJyxcbiAgJ3B1YmxpY19wZW9wbGVfcGVyc29uLWJpa2luZyc6ICc2MjIzMicsXG4gICdwdWJsaWNfcGVvcGxlX3BlcnNvbi1ib290aCc6ICc2MjIzMycsXG4gICdwdWJsaWNfcGVvcGxlX3BlcnNvbi1icmVhc3RmZWVkaW5nJzogJzYyMjM0JyxcbiAgJ3B1YmxpY19wZW9wbGVfcGVyc29uLWNhbmUnOiAnNjIyMzUnLFxuICAncHVibGljX3Blb3BsZV9wZXJzb24tY2FycnktYm94JzogJzYyMjM2JyxcbiAgJ3B1YmxpY19wZW9wbGVfcGVyc29uLWRpZ2dpbmcnOiAnNjIyMzcnLFxuICAncHVibGljX3Blb3BsZV9wZXJzb24tZG9sbHktZW1wdHknOiAnNjIyMzgnLFxuICAncHVibGljX3Blb3BsZV9wZXJzb24tZG9sbHknOiAnNjIyMzknLFxuICAncHVibGljX3Blb3BsZV9wZXJzb24tZHJlc3MnOiAnNjIyNDAnLFxuICAncHVibGljX3Blb3BsZV9wZXJzb24tZHJvd25pbmcnOiAnNjIyNDEnLFxuICAncHVibGljX3Blb3BsZV9wZXJzb24tZmFsbGluZyc6ICc2MjI0MicsXG4gICdwdWJsaWNfcGVvcGxlX3BlcnNvbi1oYWxmLWRyZXNzJzogJzYyMjQzJyxcbiAgJ3B1YmxpY19wZW9wbGVfcGVyc29uLWhpa2luZyc6ICc2MjI0NCcsXG4gICdwdWJsaWNfcGVvcGxlX3BlcnNvbi1taWxpdGFyeS1wb2ludGluZyc6ICc2MjI0NScsXG4gICdwdWJsaWNfcGVvcGxlX3BlcnNvbi1waW5iYWxsJzogJzYyMjQ2JyxcbiAgJ3B1YmxpY19wZW9wbGVfcGVyc29uLXByYXlpbmcnOiAnNjIyNDcnLFxuICAncHVibGljX3Blb3BsZV9wZXJzb24tcHJlZ25hbnQnOiAnNjIyNDgnLFxuICAncHVibGljX3Blb3BsZV9wZXJzb24tcnVubmluZyc6ICc2MjI0OScsXG4gICdwdWJsaWNfcGVvcGxlX3BlcnNvbi1zZWF0LXJlY2xpbmVkJzogJzYyMjUwJyxcbiAgJ3B1YmxpY19wZW9wbGVfcGVyc29uLXNlYXQnOiAnNjIyNTEnLFxuICAncHVibGljX3Blb3BsZV9wZXJzb24tc2hlbHRlcic6ICc2MjI1MicsXG4gICdwdWJsaWNfcGVvcGxlX3BlcnNvbi1za2F0aW5nJzogJzYyMjUzJyxcbiAgJ3B1YmxpY19wZW9wbGVfcGVyc29uLXNraWluZyc6ICc2MjI1NCcsXG4gICdwdWJsaWNfcGVvcGxlX3BlcnNvbi1zd2ltbWluZyc6ICc2MjI1NScsXG4gICdwdWJsaWNfcGVvcGxlX3BlcnNvbi10by1kb29yJzogJzYyMjU2JyxcbiAgJ3B1YmxpY19wZW9wbGVfcGVyc29uLXdhbGtpbmctbHVnZ2FnZSc6ICc2MjI1NycsXG4gICdwdWJsaWNfcGVvcGxlX3BlcnNvbi13YWxraW5nLXdpdGgtY2FuZSc6ICc2MjI1OCcsXG4gICdwdWJsaWNfcGVvcGxlX3BlcnNvbi13YWxraW5nJzogJzYyMjU5JyxcbiAgJ3B1YmxpY19wZW9wbGVfcGVyc29uJzogJzYyMjYwJyxcbiAgJ3B1YmxpY19wZW9wbGVfcmVzdHJvb20nOiAnNjIyNjEnLFxuICAncHVibGljX3Blb3BsZV9zcXVhcmUtdXNlcic6ICc2MjI2MicsXG4gICdwdWJsaWNfcGVvcGxlX3N0cmVldC12aWV3JzogJzYyMjYzJyxcbiAgJ3B1YmxpY19wZW9wbGVfdXNlci1hc3Ryb25hdXQnOiAnNjIyNjQnLFxuICAncHVibGljX3Blb3BsZV91c2VyLWNoZWNrJzogJzYyMjY1JyxcbiAgJ3B1YmxpY19wZW9wbGVfdXNlci1jaGVmJzogJzYyMjY2JyxcbiAgJ3B1YmxpY19wZW9wbGVfdXNlci1jbG9jayc6ICc2MjI2NycsXG4gICdwdWJsaWNfcGVvcGxlX3VzZXItY293Ym95JzogJzYyMjY4JyxcbiAgJ3B1YmxpY19wZW9wbGVfdXNlci1jcm93bic6ICc2MjI2OScsXG4gICdwdWJsaWNfcGVvcGxlX3VzZXItZG9jdG9yJzogJzYyMjcwJyxcbiAgJ3B1YmxpY19wZW9wbGVfdXNlci1nZWFyJzogJzYyMjcxJyxcbiAgJ3B1YmxpY19wZW9wbGVfdXNlci1ncmFkdWF0ZSc6ICc2MjI3MicsXG4gICdwdWJsaWNfcGVvcGxlX3VzZXItZ3JvdXAnOiAnNjIyNzMnLFxuICAncHVibGljX3Blb3BsZV91c2VyLWhlYWRzZXQnOiAnNjIyNzQnLFxuICAncHVibGljX3Blb3BsZV91c2VyLWhlbG1ldC1zYWZldHknOiAnNjIyNzUnLFxuICAncHVibGljX3Blb3BsZV91c2VyLWluanVyZWQnOiAnNjIyNzYnLFxuICAncHVibGljX3Blb3BsZV91c2VyLWxhcmdlJzogJzYyMjc3JyxcbiAgJ3B1YmxpY19wZW9wbGVfdXNlci1sb2NrJzogJzYyMjc4JyxcbiAgJ3B1YmxpY19wZW9wbGVfdXNlci1taW51cyc6ICc2MjI3OScsXG4gICdwdWJsaWNfcGVvcGxlX3VzZXItbXVzaWMnOiAnNjIyODAnLFxuICAncHVibGljX3Blb3BsZV91c2VyLW51cnNlJzogJzYyMjgxJyxcbiAgJ3B1YmxpY19wZW9wbGVfdXNlci1wZW4nOiAnNjIyODInLFxuICAncHVibGljX3Blb3BsZV91c2VyLXBpbG90JzogJzYyMjgzJyxcbiAgJ3B1YmxpY19wZW9wbGVfdXNlci1wbHVzJzogJzYyMjg0JyxcbiAgJ3B1YmxpY19wZW9wbGVfdXNlci1wb2xpY2UnOiAnNjIyODUnLFxuICAncHVibGljX3Blb3BsZV91c2VyLXNoaWVsZCc6ICc2MjI4NicsXG4gICdwdWJsaWNfcGVvcGxlX3VzZXItc2xhc2gnOiAnNjIyODcnLFxuICAncHVibGljX3Blb3BsZV91c2VyLXVubG9jayc6ICc2MjI4OCcsXG4gICdwdWJsaWNfcGVvcGxlX3VzZXInOiAnNjIyODknLFxuICAncHVibGljX3Blb3BsZV91c2Vycyc6ICc2MjI5MCcsXG4gICdwdWJsaWNfcGVvcGxlX3doZWVsY2hhaXInOiAnNjIyOTEnLFxuICAncHVibGljX3N5bWJvbHNfYXJyb3ctYWx0LWNpcmNsZS1kb3duJzogJzYyMjkyJyxcbiAgJ3B1YmxpY19zeW1ib2xzX2Fycm93LWFsdC1jaXJjbGUtbGVmdCc6ICc2MjI5MycsXG4gICdwdWJsaWNfc3ltYm9sc19hcnJvdy1hbHQtY2lyY2xlLXJpZ2h0JzogJzYyMjk0JyxcbiAgJ3B1YmxpY19zeW1ib2xzX2Fycm93LWFsdC1jaXJjbGUtdXAnOiAnNjIyOTUnLFxuICAncHVibGljX3N5bWJvbHNfYXJyb3ctYWx0LWRvd24nOiAnNjIyOTYnLFxuICAncHVibGljX3N5bWJvbHNfYXJyb3ctYWx0LWxlZnQnOiAnNjIyOTcnLFxuICAncHVibGljX3N5bWJvbHNfYXJyb3ctYWx0LXJpZ2h0JzogJzYyMjk4JyxcbiAgJ3B1YmxpY19zeW1ib2xzX2Fycm93LWFsdC11cCc6ICc2MjI5OScsXG4gICdwdWJsaWNfc3ltYm9sc19hd2FyZCc6ICc2MjMwMCcsXG4gICdwdWJsaWNfc3ltYm9sc19iYWRnZS1jaGVjayc6ICc2MjMwMScsXG4gICdwdWJsaWNfc3ltYm9sc19iYWRnZS1kb2xsYXInOiAnNjIzMDInLFxuICAncHVibGljX3N5bWJvbHNfYmFkZ2UnOiAnNjIzMDMnLFxuICAncHVibGljX3N5bWJvbHNfYmFuJzogJzYyMzA0JyxcbiAgJ3B1YmxpY19zeW1ib2xzX2JlbGwnOiAnNjIzMDUnLFxuICAncHVibGljX3N5bWJvbHNfYm9sdC1zbGFzaCc6ICc2MjMwNicsXG4gICdwdWJsaWNfc3ltYm9sc19ib2x0JzogJzYyMzA3JyxcbiAgJ3B1YmxpY19zeW1ib2xzX2Jvb2ttYXJrJzogJzYyMzA4JyxcbiAgJ3B1YmxpY19zeW1ib2xzX2NoZWNrLWNpcmNsZSc6ICc2MjMwOScsXG4gICdwdWJsaWNfc3ltYm9sc19jaGVjayc6ICc2MjMxMCcsXG4gICdwdWJsaWNfc3ltYm9sc19jaXJjbGUnOiAnNjIzMTEnLFxuICAncHVibGljX3N5bWJvbHNfY2xvY2snOiAnNjIzMTInLFxuICAncHVibGljX3N5bWJvbHNfY2x1Yic6ICc2MjMxMycsXG4gICdwdWJsaWNfc3ltYm9sc19jdWJlJzogJzYyMzE0JyxcbiAgJ3B1YmxpY19zeW1ib2xzX2N1YmVzJzogJzYyMzE1JyxcbiAgJ3B1YmxpY19zeW1ib2xzX2RlYWYnOiAnNjIzMTYnLFxuICAncHVibGljX3N5bWJvbHNfZGlhbW9uZCc6ICc2MjMxNycsXG4gICdwdWJsaWNfc3ltYm9sc19kb2xsYXItc2lnbic6ICc2MjMxOCcsXG4gICdwdWJsaWNfc3ltYm9sc19leGNsYW1hdGlvbi1jaXJjbGUnOiAnNjIzMTknLFxuICAncHVibGljX3N5bWJvbHNfZXhjbGFtYXRpb24tc3F1YXJlJzogJzYyMzIwJyxcbiAgJ3B1YmxpY19zeW1ib2xzX2V4Y2xhbWF0aW9uLXRyaWFuZ2xlJzogJzYyMzIxJyxcbiAgJ3B1YmxpY19zeW1ib2xzX2V4Y2xhbWF0aW9uJzogJzYyMzIyJyxcbiAgJ3B1YmxpY19zeW1ib2xzX2V5ZS1zbGFzaCc6ICc2MjMyMycsXG4gICdwdWJsaWNfc3ltYm9sc19leWUnOiAnNjIzMjQnLFxuICAncHVibGljX3N5bWJvbHNfZmlsZSc6ICc2MjMyNScsXG4gICdwdWJsaWNfc3ltYm9sc19maW5nZXJwcmludCc6ICc2MjMyNicsXG4gICdwdWJsaWNfc3ltYm9sc19maXJlLWFsdCc6ICc2MjMyNycsXG4gICdwdWJsaWNfc3ltYm9sc19mbGFnLWFsdCc6ICc2MjMyOCcsXG4gICdwdWJsaWNfc3ltYm9sc19mb2xkZXInOiAnNjIzMjknLFxuICAncHVibGljX3N5bWJvbHNfZ2VuZGVybGVzcyc6ICc2MjMzMCcsXG4gICdwdWJsaWNfc3ltYm9sc19oZWFydCc6ICc2MjMzMScsXG4gICdwdWJsaWNfc3ltYm9sc19oZXhhZ29uJzogJzYyMzMyJyxcbiAgJ3B1YmxpY19zeW1ib2xzX2hvdXJnbGFzcyc6ICc2MjMzMycsXG4gICdwdWJsaWNfc3ltYm9sc19pbWFnZSc6ICc2MjMzNCcsXG4gICdwdWJsaWNfc3ltYm9sc19pbmZvLWNpcmNsZSc6ICc2MjMzNScsXG4gICdwdWJsaWNfc3ltYm9sc19pbmZvLXNxdWFyZSc6ICc2MjMzNicsXG4gICdwdWJsaWNfc3ltYm9sc19sYXllci1ncm91cCc6ICc2MjMzNycsXG4gICdwdWJsaWNfc3ltYm9sc19saW5rJzogJzYyMzM4JyxcbiAgJ3B1YmxpY19zeW1ib2xzX2xvY2F0aW9uLWFycm93JzogJzYyMzM5JyxcbiAgJ3B1YmxpY19zeW1ib2xzX2xvY2stb3Blbic6ICc2MjM0MCcsXG4gICdwdWJsaWNfc3ltYm9sc19sb2NrJzogJzYyMzQxJyxcbiAgJ3B1YmxpY19zeW1ib2xzX21hcC1tYXJrZXItYWx0JzogJzYyMzQyJyxcbiAgJ3B1YmxpY19zeW1ib2xzX21hcC1tYXJrZXItY2hlY2snOiAnNjIzNDMnLFxuICAncHVibGljX3N5bWJvbHNfbWFwLW1hcmtlci1leGNsYW1hdGlvbic6ICc2MjM0NCcsXG4gICdwdWJsaWNfc3ltYm9sc19tYXAtbWFya2VyLW1pbnVzJzogJzYyMzQ1JyxcbiAgJ3B1YmxpY19zeW1ib2xzX21hcC1tYXJrZXItcGx1cyc6ICc2MjM0NicsXG4gICdwdWJsaWNfc3ltYm9sc19tYXAtbWFya2VyLXF1ZXN0aW9uJzogJzYyMzQ3JyxcbiAgJ3B1YmxpY19zeW1ib2xzX21hcC1tYXJrZXItc21pbGUnOiAnNjIzNDgnLFxuICAncHVibGljX3N5bWJvbHNfbWFycyc6ICc2MjM0OScsXG4gICdwdWJsaWNfc3ltYm9sc19tb29uJzogJzYyMzUwJyxcbiAgJ3B1YmxpY19zeW1ib2xzX29jdGFnb24nOiAnNjIzNTEnLFxuICAncHVibGljX3N5bWJvbHNfcGFwZXJjbGlwJzogJzYyMzUyJyxcbiAgJ3B1YmxpY19zeW1ib2xzX3BhcmtpbmctY2lyY2xlJzogJzYyMzUzJyxcbiAgJ3B1YmxpY19zeW1ib2xzX3BhcmtpbmcnOiAnNjIzNTQnLFxuICAncHVibGljX3N5bWJvbHNfcGF1c2UnOiAnNjIzNTUnLFxuICAncHVibGljX3N5bWJvbHNfcGxheSc6ICc2MjM1NicsXG4gICdwdWJsaWNfc3ltYm9sc19xdWVzdGlvbi1jaXJjbGUnOiAnNjIzNTcnLFxuICAncHVibGljX3N5bWJvbHNfcXVlc3Rpb24tc3F1YXJlJzogJzYyMzU4JyxcbiAgJ3B1YmxpY19zeW1ib2xzX3F1ZXN0aW9uJzogJzYyMzU5JyxcbiAgJ3B1YmxpY19zeW1ib2xzX3JlY3ljbGUnOiAnNjIzNjAnLFxuICAncHVibGljX3N5bWJvbHNfcmVkbyc6ICc2MjM2MScsXG4gICdwdWJsaWNfc3ltYm9sc19zaGFwZXMnOiAnNjIzNjInLFxuICAncHVibGljX3N5bWJvbHNfc2hpZWxkJzogJzYyMzYzJyxcbiAgJ3B1YmxpY19zeW1ib2xzX3Ntb2tpbmctYmFuJzogJzYyMzY0JyxcbiAgJ3B1YmxpY19zeW1ib2xzX3Ntb2tpbmcnOiAnNjIzNjUnLFxuICAncHVibGljX3N5bWJvbHNfc3BhZGUnOiAnNjIzNjYnLFxuICAncHVibGljX3N5bWJvbHNfc3F1YXJlJzogJzYyMzY3JyxcbiAgJ3B1YmxpY19zeW1ib2xzX3N0YXItZmlsbGVkJzogJzYyMzY4JyxcbiAgJ3B1YmxpY19zeW1ib2xzX3N0YXInOiAnNjIzNjknLFxuICAncHVibGljX3N5bWJvbHNfdGFjaG9tZXRlcic6ICc2MjM3MCcsXG4gICdwdWJsaWNfc3ltYm9sc190YWcnOiAnNjIzNzEnLFxuICAncHVibGljX3N5bWJvbHNfdGVtcGVyYXR1cmUtZG93bic6ICc2MjM3MicsXG4gICdwdWJsaWNfc3ltYm9sc190ZW1wZXJhdHVyZS1mcmlnaWQnOiAnNjIzNzMnLFxuICAncHVibGljX3N5bWJvbHNfdGVtcGVyYXR1cmUtaGlnaCc6ICc2MjM3NCcsXG4gICdwdWJsaWNfc3ltYm9sc190ZW1wZXJhdHVyZS1ob3QnOiAnNjIzNzUnLFxuICAncHVibGljX3N5bWJvbHNfdGVtcGVyYXR1cmUtbG93JzogJzYyMzc2JyxcbiAgJ3B1YmxpY19zeW1ib2xzX3RlbXBlcmF0dXJlLXVwJzogJzYyMzc3JyxcbiAgJ3B1YmxpY19zeW1ib2xzX3RleHQnOiAnNjIzNzgnLFxuICAncHVibGljX3N5bWJvbHNfdGhlcm1vbWV0ZXItZW1wdHknOiAnNjIzNzknLFxuICAncHVibGljX3N5bWJvbHNfdGhlcm1vbWV0ZXItZnVsbCc6ICc2MjM4MCcsXG4gICdwdWJsaWNfc3ltYm9sc190aGVybW9tZXRlci1oYWxmJzogJzYyMzgxJyxcbiAgJ3B1YmxpY19zeW1ib2xzX3RoZXJtb21ldGVyLXF1YXJ0ZXInOiAnNjIzODInLFxuICAncHVibGljX3N5bWJvbHNfdGhlcm1vbWV0ZXItdGhyZWUtcXVhcnRlcnMnOiAnNjIzODMnLFxuICAncHVibGljX3N5bWJvbHNfdGh1bWJ0YWNrJzogJzYyMzg0JyxcbiAgJ3B1YmxpY19zeW1ib2xzX3RpbnQnOiAnNjIzODUnLFxuICAncHVibGljX3N5bWJvbHNfdHJhbnNnZW5kZXItYWx0JzogJzYyMzg2JyxcbiAgJ3B1YmxpY19zeW1ib2xzX3RyYW5zZ2VuZGVyJzogJzYyMzg3JyxcbiAgJ3B1YmxpY19zeW1ib2xzX3RyYXNoLWFsdCc6ICc2MjM4OCcsXG4gICdwdWJsaWNfc3ltYm9sc190cmlhbmdsZSc6ICc2MjM4OScsXG4gICdwdWJsaWNfc3ltYm9sc191c2QtY2lyY2xlJzogJzYyMzkwJyxcbiAgJ3B1YmxpY19zeW1ib2xzX3VzZC1zcXVhcmUnOiAnNjIzOTEnLFxuICAncHVibGljX3N5bWJvbHNfdmVudXMtbWFycyc6ICc2MjM5MicsXG4gICdwdWJsaWNfc3ltYm9sc192ZW51cyc6ICc2MjM5MycsXG4gICdwdWJsaWNfc3ltYm9sc192aWRlbyc6ICc2MjM5NCcsXG4gICdwdWJsaWNfc3ltYm9sc192b2x1bWUtZG93bic6ICc2MjM5NScsXG4gICdwdWJsaWNfc3ltYm9sc192b2x1bWUtbXV0ZSc6ICc2MjM5NicsXG4gICdwdWJsaWNfc3ltYm9sc192b2x1bWUtb2ZmJzogJzYyMzk3JyxcbiAgJ3B1YmxpY19zeW1ib2xzX3ZvbHVtZS1zbGFzaCc6ICc2MjM5OCcsXG4gICdwdWJsaWNfc3ltYm9sc192b2x1bWUtdXAnOiAnNjIzOTknLFxuICAncHVibGljX3N5bWJvbHNfdm9sdW1lJzogJzYyNDAwJyxcbiAgJ3B1YmxpY19zeW1ib2xzX3dhdGVyJzogJzYyNDAxJyxcbiAgJ3B1YmxpY19zeW1ib2xzX3dhdmVmb3JtJzogJzYyNDAyJyxcbiAgJ3B1YmxpY19zeW1ib2xzX3dpZmktc2xhc2gnOiAnNjI0MDMnLFxuICAncHVibGljX3N5bWJvbHNfd2lmaSc6ICc2MjQwNCcsXG4gICdwdWJsaWNfc3ltYm9sc195ZW4tc2lnbic6ICc2MjQwNScsXG4gICdxdWVzdGlvbic6ICc2MjQwNicsXG4gICdyZW9yZGVyJzogJzYyNDA3JyxcbiAgJ3JlcGx5JzogJzYyNDA4JyxcbiAgJ3Jlc3RhcnQnOiAnNjI0MDknLFxuICAncmV2ZXJ0JzogJzYyNDEwJyxcbiAgJ3Jvb20tMDAyNThrMG1xdTg3NTBkdTE1MWJlODA1Yyc6ICc2MjQxMScsXG4gICdyb29tLTBhbjJya3kyNGdiOTFmZG5wem1id2FkaWInOiAnNjI0MTInLFxuICAncm9vbS0wZ251dW5wd3g2M2RtbXFlcTY0YXFmaXlkJzogJzYyNDEzJyxcbiAgJ3Jvb20tMm54Nm1heHhwYWV1dDdreDk2ZnVhY2R6Yyc6ICc2MjQxNCcsXG4gICdyb29tLTRieTJkNzBiNTRzcmJpbjQzdDVtMHloOWMnOiAnNjI0MTUnLFxuICAncm9vbS00Z3A4eDIxbmk0aTh5MTlyOXBtNHJiMzVhJzogJzYyNDE2JyxcbiAgJ3Jvb20tNHFxNGU1aHo4NGhjdXI3cnk4N3VodG11YSc6ICc2MjQxNycsXG4gICdyb29tLTY2cHNhNHRxZ2F6Ym5mZnI5aHV5MmRucGQnOiAnNjI0MTgnLFxuICAncm9vbS05MW5hYTFrM2hpaW05ejRtazgzNTJlbnRhJzogJzYyNDE5JyxcbiAgJ3Jvb20tYTExZDJnaTQzaDBldHdlZHcwbXg5cGd3ZCc6ICc2MjQyMCcsXG4gICdyb29tLWFnNXVwaGhhNzJzYWs2NXFhemdzcDA5eWQnOiAnNjI0MjEnLFxuICAncm9vbS1ieXA3cHoydG10NGZmNDduaGZ4MHV3emVjJzogJzYyNDIyJyxcbiAgJ3Jvb20tZTZtZDJzcGFxZW1jNDQ4cG1hdTNhemtoZCc6ICc2MjQyMycsXG4gICdyb29tLWVpM2ttdHVuMnhwc3BiZzNkNWZmM3QzemMnOiAnNjI0MjQnLFxuICAncm9vbS1nYmE4Y3EwczJyZGZnMXpkYjFlcHd0eTdkJzogJzYyNDI1JyxcbiAgJ3Jvb20tZ2UwdGNhbjNpenR0YTVtdGdzZng5OXhwYic6ICc2MjQyNicsXG4gICdyb29tLWdxcXcxemFjMWh6ZzFwODYyMmR1Y2czemInOiAnNjI0MjcnLFxuICAncm9vbS1penQzOWd5dGNieW1jMHF0ZDM3bnJiN3hiJzogJzYyNDI4JyxcbiAgJ3Jvb20tbXVsdGktdXNlJzogJzYyNDI5JyxcbiAgJ3Jvb20tbXg2ZTJ5ZmswdGcwemJrYnp1dzVtaGtkYSc6ICc2MjQzMCcsXG4gICdyb29tLW4wN2hoczlna3k0Y2dyaDdxNjVzOXJwMGQnOiAnNjI0MzEnLFxuICAncm9vbS1ucXc3NTAwNGRjZzJiY3I0MTA0N3JoZzZjJzogJzYyNDMyJyxcbiAgJ3Jvb20tcG5mMHh6cTYxeGNlZ2FjazRpYWk3eHBwZCc6ICc2MjQzMycsXG4gICdyb29tLXByOWg0enk3ZWFrOTFmM2I3dW45N3U0MmMnOiAnNjI0MzQnLFxuICAncm9vbS1xYTIxdHFjc2lubnhkZTlnZG1pcGhhY3phJzogJzYyNDM1JyxcbiAgJ3Jvb20tcm11OHBpa2N5ZTBuN245ZnN1NWU0YWNkYSc6ICc2MjQzNicsXG4gICdyb29tLXMxaDBoYjh0cGNjOWkzNWRtdXBrbnNlZ2EnOiAnNjI0MzcnLFxuICAncm9vbS11YTFtMHU4cG0zeW5ncmh6d2VjMXVlNXpjJzogJzYyNDM4JyxcbiAgJ3Jvb20tdzR0ZGdnazVpNXUyenBpcnl1Z2t0Z2hnYic6ICc2MjQzOScsXG4gICdyb29tLXh3aGh6NjNhMGh3NzM1cWY4MWtucDYzaGEnOiAnNjI0NDAnLFxuICAncm9vbS15M3h1cHJteXdncnBybm0wMjczdTNwcGhkJzogJzYyNDQxJyxcbiAgJ3Jvb20teWVoMWFhMzJmd2dtNzJiaDBnOTJlYnJ1Yyc6ICc2MjQ0MicsXG4gICdyb29tLXl3dGRkdTloYWdyYXhoem53aW5uOHQ0emInOiAnNjI0NDMnLFxuICAncm9vbS16Z2gyMzA0dzVhbnUwdDI1aWEwNnl0ZnhkJzogJzYyNDQ0JyxcbiAgJ3Jvb20tenAxODl0eDJoZHJyeThrNW5oYXE1eDQ1ZCc6ICc2MjQ0NScsXG4gICdyb3RhdGUtbGVmdCc6ICc2MjQ0NicsXG4gICdyb3RhdGUtcmlnaHQnOiAnNjI0NDcnLFxuICAncm90YXRlJzogJzYyNDQ4JyxcbiAgJ3JvdGF0aW9uLTNkJzogJzYyNDQ5JyxcbiAgJ3NjYWxlLTNkJzogJzYyNDUwJyxcbiAgJ3NldHRpbmdzJzogJzYyNDUxJyxcbiAgJ3NoYXJlJzogJzYyNDUyJyxcbiAgJ3NoYXJlMic6ICc2MjQ1MycsXG4gICdzaW1wbGUtdGFnLXBpbic6ICc2MjQ1NCcsXG4gICdzaW1wbGUtdGFnLXNtYWxsJzogJzYyNDU1JyxcbiAgJ3NpbXBsZS10YWcnOiAnNjI0NTYnLFxuICAnc25hcCc6ICc2MjQ1NycsXG4gICdzcGFya2xlLWZpbGwnOiAnNjI0NTgnLFxuICAnc3BhcmtsZSc6ICc2MjQ1OScsXG4gICdzdGFydC1sb2NhdGlvbic6ICc2MjQ2MCcsXG4gICdzdGVtLWhlaWdodCc6ICc2MjQ2MScsXG4gICd0YXBlLW1lYXN1cmUnOiAnNjI0NjInLFxuICAndG9nZ2xlLXBlbmNpbCc6ICc2MjQ2MycsXG4gICd0b29sYmFyLTM2MC12aWV3JzogJzYyNDY0JyxcbiAgJ3Rvb2xiYXItZWRpdC12cic6ICc2MjQ2NScsXG4gICd0b29sYmFyLWhscic6ICc2MjQ2NicsXG4gICd0b29sYmFyLWxhYmVscyc6ICc2MjQ2NycsXG4gICd0b29sYmFyLW1hdHRlcnRhZ3MnOiAnNjI0NjgnLFxuICAndG9vbGJhci1tZWFzdXJlbWVudHMnOiAnNjI0NjknLFxuICAndG9vbGJhci1tb3JlLWhvcml6JzogJzYyNDcwJyxcbiAgJ3Rvb2xiYXItcGhvdG9zJzogJzYyNDcxJyxcbiAgJ3Rvb2xiYXItcGx1Z2luLWNvbmZpZyc6ICc2MjQ3MicsXG4gICd0b29sYmFyLXNjYW4tbWdtdCc6ICc2MjQ3MycsXG4gICd0b29sYmFyLXN0YXJ0LWxvY2F0aW9uJzogJzYyNDc0JyxcbiAgJ3RyYW5zaXRpb25zJzogJzYyNDc1JyxcbiAgJ3RyYXNoJzogJzYyNDc2JyxcbiAgJ3RyaW0ta2VlcCc6ICc2MjQ3NycsXG4gICd0cmltLXJlbW92ZSc6ICc2MjQ3OCcsXG4gICd0d2l0dGVyJzogJzYyNDc5JyxcbiAgJ3VubG9jayc6ICc2MjQ4MCcsXG4gICd1c2VyJzogJzYyNDgxJyxcbiAgJ3Zpc2liaWxpdHknOiAnNjI0ODInLFxuICAndnInOiAnNjI0ODMnLFxuICAnd2FsbCc6ICc2MjQ4NCcsXG4gICd3aW5kb3cnOiAnNjI0ODUnLFxuICAnem9vbS1yZXNldCc6ICc2MjQ4NicsXG59O1xuIiwiaW1wb3J0IHsgTVBfRk9OVF9DT0RFUE9JTlRTIH0gZnJvbSAnLi9kaXN0L2ZvbnRzL21wLWZvbnQnO1xuaW1wb3J0IHR5cGUgeyBNcEZvbnRJZCBhcyBJY29uTmFtZSB9IGZyb20gJy4vZGlzdC9mb250cy9tcC1mb250JztcblxuY29uc3QgYWxwaGFiZXRpemUgPSAoYTogSWNvbk5hbWUsIGI6IEljb25OYW1lKSA9PiBhLmxvY2FsZUNvbXBhcmUoYik7XG5cbmV4cG9ydCB0eXBlIHsgTXBGb250SWQgYXMgSWNvbk5hbWUgfSBmcm9tICcuL2Rpc3QvZm9udHMvbXAtZm9udCc7XG5leHBvcnQgY29uc3QgSUNPTl9OQU1FUyA9IE9iamVjdC5rZXlzKE1QX0ZPTlRfQ09ERVBPSU5UUykuc29ydChhbHBoYWJldGl6ZSkgYXMgSWNvbk5hbWVbXTtcbiIsImltcG9ydCB0eXBlIHsgTXBTZGsgfSBmcm9tICdAc2RrL3R5cGVzJztcbmltcG9ydCB7IElDT05fTkFNRVMgfSBmcm9tICdtcC1mb250JztcbmltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VTdGF0ZSwgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgJy4vU2F2ZVRvTGF5ZXIuY3NzJztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2RrOiBNcFNkaztcbn1cblxuLy8gR2VuZXJpYyBtb2RhbCBjb21wb25lbnQgZm9yIHRhZyBzZWxlY3Rpb25cbmNvbnN0IFRhZ1NlbGVjdGlvbk1vZGFsID0gKHtcbiAgaXNPcGVuLFxuICBvbkNsb3NlLFxuICB0YWdzLFxuICBzZWxlY3RlZFRhZ3MsXG4gIHNldFNlbGVjdGVkVGFncyxcbiAgdGl0bGUsXG4gIGNvbmZpcm1CdXR0b25UZXh0LFxuICBvbkNvbmZpcm0sXG59OiB7XG4gIGlzT3BlbjogYm9vbGVhbjtcbiAgb25DbG9zZTogKCkgPT4gdm9pZDtcbiAgdGFnczogTXBTZGsuVGFnLlRhZ0RhdGFbXSB8IHVuZGVmaW5lZDtcbiAgc2VsZWN0ZWRUYWdzOiBzdHJpbmdbXTtcbiAgc2V0U2VsZWN0ZWRUYWdzOiBSZWFjdC5EaXNwYXRjaDxSZWFjdC5TZXRTdGF0ZUFjdGlvbjxzdHJpbmdbXT4+O1xuICB0aXRsZTogc3RyaW5nO1xuICBjb25maXJtQnV0dG9uVGV4dDogc3RyaW5nO1xuICBvbkNvbmZpcm06ICgpID0+IHZvaWQ7XG59KSA9PiB7XG4gIGlmICghaXNPcGVuKSByZXR1cm4gbnVsbDtcblxuICAvLyBUb2dnbGUgdGFnIHNlbGVjdGlvblxuICBjb25zdCB0b2dnbGVUYWcgPSAodGFnSWQ6IHN0cmluZykgPT4ge1xuICAgIHNldFNlbGVjdGVkVGFncygocHJldlNlbGVjdGVkKSA9PiB7XG4gICAgICBpZiAocHJldlNlbGVjdGVkLmluY2x1ZGVzKHRhZ0lkKSkge1xuICAgICAgICByZXR1cm4gcHJldlNlbGVjdGVkLmZpbHRlcigoaWQpID0+IGlkICE9PSB0YWdJZCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gWy4uLnByZXZTZWxlY3RlZCwgdGFnSWRdO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIC8vIFNlbGVjdCBvciBkZXNlbGVjdCBhbGwgdGFnc1xuICBjb25zdCB0b2dnbGVTZWxlY3RBbGwgPSAoKSA9PiB7XG4gICAgaWYgKCF0YWdzKSByZXR1cm47XG4gICAgaWYgKHNlbGVjdGVkVGFncy5sZW5ndGggPT09IHRhZ3MubGVuZ3RoKSB7XG4gICAgICBzZXRTZWxlY3RlZFRhZ3MoW10pO1xuICAgIH0gZWxzZSB7XG4gICAgICBzZXRTZWxlY3RlZFRhZ3ModGFncy5tYXAoKHRhZykgPT4gdGFnLmlkKSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC13cmFwcGVyXCI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1vZGFsLXdpbmRvd1wiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1vZGFsLWhlYWRlclwiPlxuICAgICAgICAgIDxoMyBjbGFzc05hbWU9XCJtb2RhbC10aXRsZVwiPnt0aXRsZX08L2gzPlxuICAgICAgICAgIDxidXR0b24gb25DbGljaz17dG9nZ2xlU2VsZWN0QWxsfT5cbiAgICAgICAgICAgIHtzZWxlY3RlZFRhZ3MubGVuZ3RoID09PSB0YWdzPy5sZW5ndGggPyAnRGVzZWxlY3QgQWxsJyA6ICdTZWxlY3QgQWxsJ31cbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC10YWctY29udGFpbmVyXCI+XG4gICAgICAgICAge3RhZ3MgJiYgdGFncy5tYXAoKHRhZykgPT4gKFxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBrZXk9e3RhZy5pZH1cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwibW9kYWwtdGFnLXJvd1wiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgIGlkPXtgbW9kYWwtdGFnLSR7dGFnLmlkfWB9XG4gICAgICAgICAgICAgICAgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgICAgICAgICBjaGVja2VkPXtzZWxlY3RlZFRhZ3MuaW5jbHVkZXModGFnLmlkKX1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17KCkgPT4gdG9nZ2xlVGFnKHRhZy5pZCl9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgIGh0bWxGb3I9e2Btb2RhbC10YWctJHt0YWcuaWR9YH1cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJtb2RhbC10YWctbGFiZWxcIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge3RhZy5pZCArICcgLSAnICsgdGFnLmxhYmVsfVxuICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKSl9XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtYWN0aW9uc1wiPlxuICAgICAgICAgIDxidXR0b24gb25DbGljaz17b25DbG9zZX0+Q2FuY2VsPC9idXR0b24+XG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICBvbkNvbmZpcm0oKTtcbiAgICAgICAgICAgICAgb25DbG9zZSgpO1xuICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIGRpc2FibGVkPXtzZWxlY3RlZFRhZ3MubGVuZ3RoID09PSAwfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHtjb25maXJtQnV0dG9uVGV4dH1cbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBTYXZlVG9MYXllcihwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IFt0ZXh0LCBzZXRUZXh0XSA9IHVzZVN0YXRlPHN0cmluZz4oJycpO1xuICBjb25zdCBbdGFnc1RvVXBkYXRlLCBzZXRUYWdzVG9VcGRhdGVdID0gdXNlU3RhdGU8c3RyaW5nW10+KFtdKTtcbiAgY29uc3QgW3RhZ3NUb0lnbm9yZSwgc2V0VGFnc1RvSWdub3JlXSA9IHVzZVN0YXRlPHN0cmluZ1tdPihbXSk7XG4gIGNvbnN0IHByb2dyZXNzID0gdXNlUmVmPEhUTUxQcm9ncmVzc0VsZW1lbnQ+KG51bGwpO1xuICBjb25zdCBbdGFncywgc2V0VGFnc10gPSB1c2VTdGF0ZTxNcFNkay5UYWcuVGFnRGF0YVtdPigpO1xuICBjb25zdCB0cmFuc2llbnRUYWdzID0gdXNlUmVmPE1wU2RrLlRhZy5UYWdEYXRhW10+KFtdKTtcbiAgY29uc3QgW2lzVXBkYXRlTW9kYWxPcGVuLCBzZXRJc1VwZGF0ZU1vZGFsT3Blbl0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtpc0lnbm9yZU1vZGFsT3Blbiwgc2V0SXNJZ25vcmVNb2RhbE9wZW5dID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbc2hvd1Byb2dyZXNzLCBzZXRTaG93UHJvZ3Jlc3NdID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIC8vIEdldCB0aGUgaW5pdGlhbCB0YWdzIGFzIHNvb24gYXMgU0RLIFRlc3RlciBsb2Fkc1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGdldFRhZ3MgPSBhc3luYyAoKSA9PiB7XG4gICAgICBjb25zdCBpbml0aWFsVGFncyA9IGF3YWl0IHByb3BzLnNkay5UYWcuZGF0YS53YWl0VW50aWwoKCkgPT4gdHJ1ZSk7XG4gICAgICBjb25zdCB0YWdWYWx1ZXMgPSBPYmplY3QudmFsdWVzKGluaXRpYWxUYWdzKTtcbiAgICAgIHNldFRhZ3ModGFnVmFsdWVzKTtcbiAgICB9O1xuICAgIGdldFRhZ3MoKTtcbiAgfSwgW3Byb3BzLnNkay5UYWddKTtcblxuICAvLyBNYWludGFpbiBhIGxpc3Qgb2YgdHJhbnNpZW50IHRhZ3MgdG8gdXNlIHdpdGggaWdub3JlVGFnc1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghdGFncyB8fCB0YWdzLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgIGNvbnN0IHRhZ1N1YiA9IHByb3BzLnNkay5UYWcuZGF0YS5zdWJzY3JpYmUoe1xuICAgICAgb25BZGRlZDogKHRhZ1NpZCwgdGFnKSA9PiB7XG4gICAgICAgIGlmICh0YWdzLnNvbWUoKHQpID0+IHQuaWQgPT09IHRhZy5pZCkpIHJldHVybjsgLy8gSWdub3JlIGlmIGFscmVhZHkgaW4gdGFnc1xuICAgICAgICB0cmFuc2llbnRUYWdzLmN1cnJlbnQucHVzaCh0YWcpO1xuICAgICAgfSxcbiAgICB9KTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgdGFnU3ViLmNhbmNlbCgpO1xuICAgIH07XG4gIH0sIFt0YWdzLCBwcm9wcy5zZGsuVGFnXSk7XG5cbiAgY29uc3Qgc2F2ZVRvTGF5ZXIgPSB1c2VDYWxsYmFjayhhc3luYyAoKSA9PiB7XG4gICAgLy8gUmFuZG9taXplIGljb25zIGZvciBzZWxlY3RlZCB0YWdzXG4gICAgaWYgKHRhZ3NUb1VwZGF0ZS5sZW5ndGggPiAwKSB7XG4gICAgICBjb25zdCBudW1JY29ucyA9IElDT05fTkFNRVMubGVuZ3RoO1xuICAgICAgZm9yIChjb25zdCB0YWdJZCBvZiB0YWdzVG9VcGRhdGUpIHtcbiAgICAgICAgY29uc3QgcmFuZG9tSWNvbiA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChudW1JY29ucyAtIDEpKTtcbiAgICAgICAgYXdhaXQgcHJvcHMuc2RrLlRhZy5lZGl0SWNvbih0YWdJZCwgSUNPTl9OQU1FU1tyYW5kb21JY29uXSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgY29uc29sZS5sb2coe1xuICAgICAgdXBkYXRlZFRhZ3M6IHRhZ3NUb1VwZGF0ZSxcbiAgICAgIGlnbm9yZWRUYWdzOiB0YWdzVG9JZ25vcmUsXG4gICAgfSk7XG5cbiAgICAvLyBCdWlsZCBvcHRpb25zIG9iamVjdCBmb3Igc2F2ZVRvTGF5ZXJcbiAgICBjb25zdCBvcHRpb25zOiBNcFNkay5UYWcuU2F2ZVRvTGF5ZXJPcHRpb25zID0ge1xuICAgICAgdGFnc1RvVXBkYXRlLFxuICAgICAgdGFnc1RvSWdub3JlLFxuICAgIH07XG5cbiAgICBpZiAoc2hvd1Byb2dyZXNzKSB7XG4gICAgICBvcHRpb25zLnByb2dyZXNzID0gKHBlcmNlbnRDb21wbGV0ZTogbnVtYmVyKSA9PiB7XG4gICAgICAgIGlmIChwcm9ncmVzcy5jdXJyZW50KSB7XG4gICAgICAgICAgcHJvZ3Jlc3MuY3VycmVudC52YWx1ZSA9IHBlcmNlbnRDb21wbGV0ZSAqIDEwMDsgLy8gQ29udmVydCB0byBwZXJjZW50YWdlXG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcHJvcHMuc2RrLlRhZy5zYXZlVG9MYXllcihvcHRpb25zKTtcblxuICAgIHNldFRleHQoYFske3Jlc3VsdC5qb2luKCcsJyl9XWApO1xuICB9LCBbcHJvcHMuc2RrLlRhZywgdGFnc1RvVXBkYXRlLCB0YWdzVG9JZ25vcmUsIHNob3dQcm9ncmVzc10pO1xuXG4gIC8vIEZvciBkaXNwbGF5IHB1cnBvc2VzIC0gdGhlIGNvbW1hIHNlcGFyYXRlZCBsaXN0c1xuICBjb25zdCB1cGRhdGVUYWdzU3RyaW5nID0gdGFnc1RvVXBkYXRlLmxlbmd0aCA+IDBcbiAgICA/IHRhZ3NUb1VwZGF0ZS5qb2luKCcsICcpXG4gICAgOiAnTm8gdGFncyBzZWxlY3RlZCc7XG5cbiAgY29uc3QgaWdub3JlVGFnc1N0cmluZyA9IHRhZ3NUb0lnbm9yZS5sZW5ndGggPiAwXG4gICAgPyB0YWdzVG9JZ25vcmUuam9pbignLCAnKVxuICAgIDogJ05vIHRhZ3Mgc2VsZWN0ZWQnO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2F2ZS10by1sYXllci1jb250YWluZXJcIj5cbiAgICAgICAgey8qIFVwZGF0ZSBUYWdzIFNlY3Rpb24gKi99XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGFnLXNlY3Rpb25cIj5cbiAgICAgICAgICA8bGFiZWwgaHRtbEZvcj1cInVwZGF0ZVRhZ3NJbnB1dFwiPnVwZGF0ZVRhZ3M6PC9sYWJlbD5cbiAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNldElzVXBkYXRlTW9kYWxPcGVuKHRydWUpfVxuICAgICAgICAgICAgaWQ9XCJ1cGRhdGVUYWdzSW5wdXRcIlxuICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgdmFsdWU9e3VwZGF0ZVRhZ3NTdHJpbmd9XG4gICAgICAgICAgICByZWFkT25seVxuICAgICAgICAgICAgY2xhc3NOYW1lPVwidGFnLWlucHV0XCJcbiAgICAgICAgICAvPlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICB7LyogSWdub3JlIFRhZ3MgU2VjdGlvbiAqL31cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0YWctc2VjdGlvblwiPlxuICAgICAgICAgIDxsYWJlbCBodG1sRm9yPVwiaWdub3JlVGFnc0lucHV0XCI+aWdub3JlVGFnczo8L2xhYmVsPlxuICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0SXNJZ25vcmVNb2RhbE9wZW4odHJ1ZSl9XG4gICAgICAgICAgICBpZD1cImlnbm9yZVRhZ3NJbnB1dFwiXG4gICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICB2YWx1ZT17aWdub3JlVGFnc1N0cmluZ31cbiAgICAgICAgICAgIHJlYWRPbmx5XG4gICAgICAgICAgICBjbGFzc05hbWU9XCJ0YWctaW5wdXRcIlxuICAgICAgICAgIC8+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYWN0aW9uLXJvd1wiPlxuICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgIGNsYXNzTmFtZT1cInNhdmUtYnV0dG9uXCJcbiAgICAgICAgICAgIGlkPVwic2F2ZVRvTGF5ZXJcIlxuICAgICAgICAgICAgb25DbGljaz17c2F2ZVRvTGF5ZXJ9XG4gICAgICAgICAgICBkaXNhYmxlZD17dGFnc1RvVXBkYXRlLmxlbmd0aCA9PT0gMCAmJiB0YWdzVG9JZ25vcmUubGVuZ3RoID09PSAwfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIFNhdmVcbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICA8bGFiZWwgc3R5bGU9e3sgbWFyZ2luTGVmdDogMTYgfX0+XG4gICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgICAgICAgY2hlY2tlZD17c2hvd1Byb2dyZXNzfVxuICAgICAgICAgICAgICBvbkNoYW5nZT17ZSA9PiBzZXRTaG93UHJvZ3Jlc3MoZS50YXJnZXQuY2hlY2tlZCl9XG4gICAgICAgICAgICAgIHN0eWxlPXt7IG1hcmdpblJpZ2h0OiA0IH19XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgU2hvdyBQcm9ncmVzcyBCYXJcbiAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAge3Nob3dQcm9ncmVzcyAmJiAoXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2FjdGlvbi1yb3cnPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwicHJvZ3Jlc3MtbGFiZWxcIj5Qcm9ncmVzczo8L3NwYW4+XG4gICAgICAgICAgICA8cHJvZ3Jlc3MgY2xhc3NOYW1lPVwicHJvZ3Jlc3MtYmFyXCIgdmFsdWU9XCIwXCIgbWF4PVwiMTAwXCIgcmVmPXtwcm9ncmVzc30gLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKX1cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8dGV4dGFyZWEgY2xhc3NOYW1lPVwicmVzdWx0LWFyZWFcIiByZWFkT25seSBwbGFjZWhvbGRlcj1cIlJlc3VsdFwiIHZhbHVlPXt0ZXh0fSAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICB7LyogVXBkYXRlIFRhZ3MgTW9kYWwgKi99XG4gICAgICA8VGFnU2VsZWN0aW9uTW9kYWxcbiAgICAgICAgaXNPcGVuPXtpc1VwZGF0ZU1vZGFsT3Blbn1cbiAgICAgICAgb25DbG9zZT17KCkgPT4gc2V0SXNVcGRhdGVNb2RhbE9wZW4oZmFsc2UpfVxuICAgICAgICB0YWdzPXt0YWdzfVxuICAgICAgICBzZWxlY3RlZFRhZ3M9e3RhZ3NUb1VwZGF0ZX1cbiAgICAgICAgc2V0U2VsZWN0ZWRUYWdzPXtzZXRUYWdzVG9VcGRhdGV9XG4gICAgICAgIHRpdGxlPVwiU2VsZWN0IE5vbi1UcmFuc2llbnQgVGFncyB0byBVcGRhdGVcIlxuICAgICAgICBjb25maXJtQnV0dG9uVGV4dD1cIk9LXCJcbiAgICAgICAgb25Db25maXJtPXsoKSA9PiB7fX1cbiAgICAgIC8+XG5cbiAgICAgIHsvKiBJZ25vcmUgVGFncyBNb2RhbCAqL31cbiAgICAgIDxUYWdTZWxlY3Rpb25Nb2RhbFxuICAgICAgICBpc09wZW49e2lzSWdub3JlTW9kYWxPcGVufVxuICAgICAgICBvbkNsb3NlPXsoKSA9PiBzZXRJc0lnbm9yZU1vZGFsT3BlbihmYWxzZSl9XG4gICAgICAgIHRhZ3M9e3RyYW5zaWVudFRhZ3MuY3VycmVudH1cbiAgICAgICAgc2VsZWN0ZWRUYWdzPXt0YWdzVG9JZ25vcmV9XG4gICAgICAgIHNldFNlbGVjdGVkVGFncz17c2V0VGFnc1RvSWdub3JlfVxuICAgICAgICB0aXRsZT1cIlNlbGVjdCBUcmFuc2llbnQgVGFncyB0byBJZ25vcmVcIlxuICAgICAgICBjb25maXJtQnV0dG9uVGV4dD1cIk9LXCJcbiAgICAgICAgb25Db25maXJtPXsoKSA9PiB7fX1cbiAgICAgIC8+XG4gICAgPC8+XG4gICk7XG59XG4iLCJpbXBvcnQgeyBGcmFnbWVudCwgdXNlQ2FsbGJhY2ssIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdHlwZSBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuaW1wb3J0IHsgQ29sbGVjdGlvbkluc3BlY3RvciB9IGZyb20gJy4uL0NvbGxlY3Rpb25JbnNwZWN0b3InO1xuaW1wb3J0IHsgTGF5ZXJTdXBwb3J0IH0gZnJvbSAnLi9MYXllclN1cHBvcnQnO1xuaW1wb3J0IHsgQWRkIH0gZnJvbSAnLi9BZGQnO1xuaW1wb3J0IHsgQWxsb3dBY3Rpb24gfSBmcm9tICcuL0FsbG93QWN0aW9uJztcbmltcG9ydCB7IEF0dGFjaCB9IGZyb20gJy4vQXR0YWNoJztcbmltcG9ydCB7IEVkaXRCaWxsYm9hcmQgfSBmcm9tICcuL0VkaXRCaWxsYm9hcmQnO1xuaW1wb3J0IHsgRWRpdEVuYWJsZWQgfSBmcm9tICcuL0VkaXRFbmFibGVkJztcbmltcG9ydCB7IEVkaXRDb2xvciB9IGZyb20gJy4vRWRpdENvbG9yJztcbmltcG9ydCB7IEVkaXRTdGVtIH0gZnJvbSAnLi9FZGl0U3RlbSc7XG5pbXBvcnQgeyBFZGl0SWNvbiB9IGZyb20gJy4vRWRpdEljb24nO1xuaW1wb3J0IHsgRWRpdE9wYWNpdHkgfSBmcm9tICcuL0VkaXRPcGFjaXR5JztcbmltcG9ydCB7IEtleXdvcmRzIH0gZnJvbSAnLi9LZXl3b3Jkcyc7XG5pbXBvcnQgeyBNb3ZlIH0gZnJvbSAnLi9Nb3ZlJztcbmltcG9ydCB7IE9wZW4gfSBmcm9tICcuL09wZW4nO1xuaW1wb3J0IHsgUmVnaXN0ZXJBdHRhY2htZW50IH0gZnJvbSAnLi9SZWdpc3RlckF0dGFjaG1lbnQnO1xuaW1wb3J0IHsgUmVnaXN0ZXJTYW5kYm94IH0gZnJvbSAnLi9SZWdpc3RlclNhbmRib3gnO1xuaW1wb3J0IHsgUmVtb3ZlIH0gZnJvbSAnLi9SZW1vdmUnO1xuaW1wb3J0IHsgVG9nZ2xlU2V0dGluZyB9IGZyb20gJy4vVG9nZ2xlU2V0dGluZyc7XG5pbXBvcnQgeyBDb250cm9sUGFuZWwgfSBmcm9tICcuLi9Db250cm9sUGFuZWwnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZUNvbGxlY3Rpb24gfSBmcm9tICcuLi9PYnNlcnZhYmxlQ29sbGVjdGlvbic7XG5pbXBvcnQgeyBsYWJlbEFscGhhU29ydCB9IGZyb20gJy4vdGFnU29ydCc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAnLi4vT2JzZXJ2YWJsZSc7XG5pbXBvcnQgeyBJbXBvcnRUYWdzIH0gZnJvbSAnLi9JbXBvcnRUYWdzJztcbmltcG9ydCB7IFNhdmVUb0xheWVyIH0gZnJvbSAnLi9TYXZlVG9MYXllcic7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHNkazogTXBTZGs7XG4gIHNlbGVjdGVkQXNzZXQ6IHN0cmluZztcbiAgc2VsZWN0ZWRMYXllcjogTXBTZGsuVmlldy5MYXllciB8IHVuZGVmaW5lZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFRhZyh7IHNkaywgc2VsZWN0ZWRBc3NldCwgc2VsZWN0ZWRMYXllciB9OiBQcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgY29uc3QgW3NlbGVjdGVkVGFnLCBzZWxlY3RUYWddID0gdXNlU3RhdGU8TXBTZGsuVGFnLlRhZ0RhdGE+KCk7XG4gIGNvbnN0IFtzZWxlY3RlZFRhZ0tleXdvcmRzLCBzZXRTZWxlY3RlZFRhZ0tleXdvcmRzXSA9IHVzZVN0YXRlPHN0cmluZ1tdPihbXSk7XG4gIGNvbnN0IFtzZWxlY3RlZEF0dGFjaG1lbnQsIHNlbGVjdEF0dGFjaG1lbnRdID0gdXNlU3RhdGUoJycpO1xuXG4gIGNvbnN0IHRhZ09wdGlvbkxhYmVsID0gdXNlQ2FsbGJhY2soZnVuY3Rpb24gKGl0ZW06IE1wU2RrLlRhZy5UYWdEYXRhKTogc3RyaW5nIHtcbiAgICByZXR1cm4gaXRlbS5sYWJlbCB8fCAnKG5vIGxhYmVsKSc7XG4gIH0sIFtdKTtcblxuICBjb25zdCBhdHRhY2htZW50SG92ZXJMYWJlbCA9IHVzZUNhbGxiYWNrKGZ1bmN0aW9uIChpdGVtOiBNcFNkay5UYWcuQXR0YWNobWVudCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGl0ZW0uc3JjO1xuICB9LCBbXSk7XG4gIGNvbnN0IGF0dGFjaG1lbnRPcHRpb25MYWJlbCA9IHVzZUNhbGxiYWNrKGZ1bmN0aW9uIChpdGVtOiBNcFNkay5UYWcuQXR0YWNobWVudCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGl0ZW0uc3JjLnNsaWNlKDAsIDMwKTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPEZyYWdtZW50PlxuICAgICAgPENvbnRyb2xQYW5lbCBoZWFkZXI9eydUYWcgLSBTYXZlVG9MYXllciAoRGlyZWN0TWVzc2FnZSknfT5cbiAgICAgICAgPFNhdmVUb0xheWVyIHNkaz17c2RrfS8+XG4gICAgICA8L0NvbnRyb2xQYW5lbD5cblxuICAgICAgPENvbnRyb2xQYW5lbCBoZWFkZXI9eydUYWcgLSBDb2xsZWN0aW9uJ30+XG4gICAgICAgIDxPYnNlcnZhYmxlQ29sbGVjdGlvblxuICAgICAgICAgIGNvbGxlY3Rpb249e3Nkay5UYWcuZGF0YX1cbiAgICAgICAgICBuYW1lPXsnVGFncyd9XG4gICAgICAgIC8+XG4gICAgICA8L0NvbnRyb2xQYW5lbD5cblxuICAgICAgPENvbnRyb2xQYW5lbCBoZWFkZXI9eydUYWcuYXR0YWNobWVudHMgLSBDb2xsZWN0aW9uJ30+XG4gICAgICAgIDxPYnNlcnZhYmxlQ29sbGVjdGlvblxuICAgICAgICAgIGNvbGxlY3Rpb249e3Nkay5UYWcuYXR0YWNobWVudHN9XG4gICAgICAgICAgbmFtZT17J0F0dGFjaG1lbnRzJ31cbiAgICAgICAgLz5cbiAgICAgIDwvQ29udHJvbFBhbmVsPlxuXG4gICAgICA8Q29sbGVjdGlvbkluc3BlY3RvclxuICAgICAgICBsYWJlbD17J1RhZyd9XG4gICAgICAgIGNvbGxlY3Rpb249e3Nkay5UYWcuZGF0YX1cbiAgICAgICAgb25DaGFuZ2VkPXsodGFnSWQsIHRhZykgPT4ge1xuICAgICAgICAgIHNlbGVjdFRhZyh0YWcpO1xuICAgICAgICAgIHNldFNlbGVjdGVkVGFnS2V5d29yZHModGFnID8gWy4uLnRhZy5rZXl3b3Jkc10gOiBbXSk7XG4gICAgICAgIH19XG4gICAgICAgIG9wdGlvbkxhYmVsPXt0YWdPcHRpb25MYWJlbH1cbiAgICAgICAgc29ydD17bGFiZWxBbHBoYVNvcnR9XG4gICAgICAgIGFkZGl0aW9uYWxQcm9wZXJ0aWVzPXtbJ3N0ZW1IZWlnaHQnLCAnZGlzY1Bvc2l0aW9uJywgJ2tleXdvcmRzJywgJ2VuYWJsZWQnXX1cbiAgICAgICAgcHJvcGVydHlUcmFuc2Zvcm1zPXt7XG4gICAgICAgICAga2V5d29yZHMoa2V5d29yZHMpIHtcbiAgICAgICAgICAgIHJldHVybiBbLi4ua2V5d29yZHNdO1xuICAgICAgICAgIH0sXG4gICAgICAgIH19XG4gICAgICAvPlxuXG4gICAgICA8Q29sbGVjdGlvbkluc3BlY3RvclxuICAgICAgICBsYWJlbD17J0F0dGFjaG1lbnQnfVxuICAgICAgICBjb2xsZWN0aW9uPXtzZGsuVGFnLmF0dGFjaG1lbnRzfVxuICAgICAgICBvbkNoYW5nZWQ9e3NlbGVjdEF0dGFjaG1lbnR9XG4gICAgICAgIG9wdGlvbkxhYmVsPXthdHRhY2htZW50T3B0aW9uTGFiZWx9XG4gICAgICAgIGhvdmVyTGFiZWw9e2F0dGFjaG1lbnRIb3ZlckxhYmVsfVxuICAgICAgLz5cblxuICAgICAgPENvbnRyb2xQYW5lbCBoZWFkZXI9eydUYWcgLSBLZXl3b3Jkcyd9PlxuICAgICAgICA8S2V5d29yZHMgc2VsZWN0ZWRUYWc9e3NlbGVjdGVkVGFnfSBzZWxlY3RlZFRhZ0tleXdvcmRzPXtzZWxlY3RlZFRhZ0tleXdvcmRzfSAvPlxuICAgICAgPC9Db250cm9sUGFuZWw+XG5cbiAgICAgIDxDb250cm9sUGFuZWwgaGVhZGVyPXsnVGFnIC0gQWRkJ30+XG4gICAgICAgIDxMYXllclN1cHBvcnQgc2RrPXtzZGt9IHNlbGVjdGVkTGF5ZXI9e3NlbGVjdGVkTGF5ZXJ9PlxuICAgICAgICAgIDxBZGQgc2RrPXtzZGt9IHNlbGVjdGVkQXNzZXQ9e3NlbGVjdGVkQXNzZXR9IC8+XG4gICAgICAgIDwvTGF5ZXJTdXBwb3J0PlxuICAgICAgPC9Db250cm9sUGFuZWw+XG5cbiAgICAgIDxDb250cm9sUGFuZWwgaGVhZGVyPXsnVGFnIC0gUmVtb3ZlJ30+XG4gICAgICAgIDxMYXllclN1cHBvcnQgc2RrPXtzZGt9IHNlbGVjdGVkTGF5ZXI9e3NlbGVjdGVkTGF5ZXJ9PlxuICAgICAgICAgIDxSZW1vdmUgc2RrPXtzZGt9IHNlbGVjdGVkVGFnPXtzZWxlY3RlZFRhZz8uaWQgPz8gJyd9IC8+XG4gICAgICAgIDwvTGF5ZXJTdXBwb3J0PlxuICAgICAgPC9Db250cm9sUGFuZWw+XG5cbiAgICAgIDxDb250cm9sUGFuZWwgaGVhZGVyPXsnVGFnIC0gT3Blbid9PlxuICAgICAgICA8T3BlbiBzZGs9e3Nka30gc2VsZWN0ZWRUYWc9e3NlbGVjdGVkVGFnfSAvPlxuICAgICAgPC9Db250cm9sUGFuZWw+XG5cbiAgICAgIDxDb250cm9sUGFuZWwgaGVhZGVyPXsnVGFnIC0gXCJPcGVuIFRhZ3NcIid9PlxuICAgICAgICA8T2JzZXJ2YWJsZVxuICAgICAgICAgIG9ic2VydmFibGU9e3Nkay5UYWcub3BlblRhZ3N9XG4gICAgICAgICAgbmFtZT17J09wZW4gVGFncyd9XG4gICAgICAgIC8+XG4gICAgICA8L0NvbnRyb2xQYW5lbD5cblxuICAgICAgPENvbnRyb2xQYW5lbCBoZWFkZXI9eydUYWcgLSBFZGl0J30+XG4gICAgICAgIDxMYXllclN1cHBvcnQgc2RrPXtzZGt9IHNlbGVjdGVkTGF5ZXI9e3NlbGVjdGVkTGF5ZXJ9PlxuICAgICAgICAgIDxFZGl0QmlsbGJvYXJkIHNkaz17c2RrfSBzZWxlY3RlZFRhZz17c2VsZWN0ZWRUYWc/LmlkID8/ICcnfSAvPlxuICAgICAgICA8L0xheWVyU3VwcG9ydD5cbiAgICAgIDwvQ29udHJvbFBhbmVsPlxuXG4gICAgICA8Q29udHJvbFBhbmVsIGhlYWRlcj17J1RhZyAtIEVuYWJsZWQnfT5cbiAgICAgICAgPExheWVyU3VwcG9ydCBzZGs9e3Nka30gc2VsZWN0ZWRMYXllcj17c2VsZWN0ZWRMYXllcn0+XG4gICAgICAgICAgPEVkaXRFbmFibGVkIHNkaz17c2RrfSBzZWxlY3RlZFRhZz17c2VsZWN0ZWRUYWd9IC8+XG4gICAgICAgIDwvTGF5ZXJTdXBwb3J0PlxuICAgICAgPC9Db250cm9sUGFuZWw+XG5cbiAgICAgIDxDb250cm9sUGFuZWwgaGVhZGVyPXsnVGFnIC0gQ29sb3InfT5cbiAgICAgICAgPExheWVyU3VwcG9ydCBzZGs9e3Nka30gc2VsZWN0ZWRMYXllcj17c2VsZWN0ZWRMYXllcn0+XG4gICAgICAgICAgPEVkaXRDb2xvciBzZGs9e3Nka30gc2VsZWN0ZWRUYWc9e3NlbGVjdGVkVGFnPy5pZCA/PyAnJ30gLz5cbiAgICAgICAgPC9MYXllclN1cHBvcnQ+XG4gICAgICA8L0NvbnRyb2xQYW5lbD5cblxuICAgICAgPENvbnRyb2xQYW5lbCBoZWFkZXI9eydUYWcgLSBFZGl0IEljb24nfT5cbiAgICAgICAgPExheWVyU3VwcG9ydCBzZGs9e3Nka30gc2VsZWN0ZWRMYXllcj17c2VsZWN0ZWRMYXllcn0+XG4gICAgICAgICAgPEVkaXRJY29uIHNkaz17c2RrfSBzZWxlY3RlZFRhZz17c2VsZWN0ZWRUYWc/LmlkID8/ICcnfSBzZWxlY3RlZEFzc2V0PXtzZWxlY3RlZEFzc2V0fSAvPlxuICAgICAgICA8L0xheWVyU3VwcG9ydD5cbiAgICAgIDwvQ29udHJvbFBhbmVsPlxuXG4gICAgICA8Q29udHJvbFBhbmVsIGhlYWRlcj17J1RhZyAtIE9wYWNpdHknfT5cbiAgICAgICAgPExheWVyU3VwcG9ydCBzZGs9e3Nka30gc2VsZWN0ZWRMYXllcj17c2VsZWN0ZWRMYXllcn0+XG4gICAgICAgICAgPEVkaXRPcGFjaXR5IHNkaz17c2RrfSBzZWxlY3RlZFRhZz17c2VsZWN0ZWRUYWc/LmlkID8/ICcnfSAvPlxuICAgICAgICA8L0xheWVyU3VwcG9ydD5cbiAgICAgIDwvQ29udHJvbFBhbmVsPlxuXG4gICAgICA8Q29udHJvbFBhbmVsIGhlYWRlcj17J1RhZyAtIFN0ZW0nfT5cbiAgICAgICAgPExheWVyU3VwcG9ydCBzZGs9e3Nka30gc2VsZWN0ZWRMYXllcj17c2VsZWN0ZWRMYXllcn0+XG4gICAgICAgICAgPEVkaXRTdGVtIHNkaz17c2RrfSBzZWxlY3RlZFRhZz17c2VsZWN0ZWRUYWc/LmlkID8/ICcnfSAvPlxuICAgICAgICA8L0xheWVyU3VwcG9ydD5cbiAgICAgIDwvQ29udHJvbFBhbmVsPlxuXG4gICAgICA8Q29udHJvbFBhbmVsIGhlYWRlcj17J1RhZyAtIE1vdmUnfT5cbiAgICAgICAgPExheWVyU3VwcG9ydCBzZGs9e3Nka30gc2VsZWN0ZWRMYXllcj17c2VsZWN0ZWRMYXllcn0+XG4gICAgICAgICAgPE1vdmUgc2RrPXtzZGt9IHNlbGVjdGVkVGFnPXtzZWxlY3RlZFRhZz8uaWQgPz8gJyd9IC8+XG4gICAgICAgIDwvTGF5ZXJTdXBwb3J0PlxuICAgICAgPC9Db250cm9sUGFuZWw+XG5cbiAgICAgIDxDb250cm9sUGFuZWwgaGVhZGVyPXsnVGFnIC0gQWxsb3cgQWN0aW9ucyd9PlxuICAgICAgICA8TGF5ZXJTdXBwb3J0IHNkaz17c2RrfSBzZWxlY3RlZExheWVyPXtzZWxlY3RlZExheWVyfT5cbiAgICAgICAgICA8QWxsb3dBY3Rpb24gc2RrPXtzZGt9IHNlbGVjdGVkVGFnPXtzZWxlY3RlZFRhZz8uaWQgPz8gJyd9IC8+XG4gICAgICAgIDwvTGF5ZXJTdXBwb3J0PlxuICAgICAgPC9Db250cm9sUGFuZWw+XG5cbiAgICAgIDxDb250cm9sUGFuZWwgaGVhZGVyPXsnVGFnIC0gQXR0YWNoJ30+XG4gICAgICAgIDxMYXllclN1cHBvcnQgc2RrPXtzZGt9IHNlbGVjdGVkTGF5ZXI9e3NlbGVjdGVkTGF5ZXJ9PlxuICAgICAgICAgIDxBdHRhY2ggc2RrPXtzZGt9IHNlbGVjdGVkVGFnPXtzZWxlY3RlZFRhZz8uaWQgPz8gJyd9IHNlbGVjdGVkQXR0YWNobWVudD17c2VsZWN0ZWRBdHRhY2htZW50fSAvPlxuICAgICAgICA8L0xheWVyU3VwcG9ydD5cbiAgICAgIDwvQ29udHJvbFBhbmVsPlxuXG4gICAgICA8Q29udHJvbFBhbmVsIGhlYWRlcj17J1RhZyAtIFJlZ2lzdGVyIEF0dGFjaG1lbnQnfT5cbiAgICAgICAgPFJlZ2lzdGVyQXR0YWNobWVudCBzZGs9e3Nka30gLz5cbiAgICAgIDwvQ29udHJvbFBhbmVsPlxuXG4gICAgICA8Q29udHJvbFBhbmVsIGhlYWRlcj17J1RhZyAtIFJlZ2lzdGVyIFNhbmRib3gnfT5cbiAgICAgICAgPFJlZ2lzdGVyU2FuZGJveCBzZGs9e3Nka30gLz5cbiAgICAgIDwvQ29udHJvbFBhbmVsPlxuXG4gICAgICA8Q29udHJvbFBhbmVsIGhlYWRlcj17J1RhZyAtIERvY2tpbmcgQ29udHJvbHMnfT5cbiAgICAgICAgPFRvZ2dsZVNldHRpbmcgdG9nZ2xlU2V0dGluZz17c2RrLlRhZy50b2dnbGVEb2NraW5nfSAvPlxuICAgICAgPC9Db250cm9sUGFuZWw+XG5cbiAgICAgIDxDb250cm9sUGFuZWwgaGVhZGVyPXsnVGFnIC0gTmF2aWdhdGlvbiBDb250cm9scyd9PlxuICAgICAgICA8VG9nZ2xlU2V0dGluZyB0b2dnbGVTZXR0aW5nPXtzZGsuVGFnLnRvZ2dsZU5hdkNvbnRyb2xzfSAvPlxuICAgICAgPC9Db250cm9sUGFuZWw+XG5cbiAgICAgIDxDb250cm9sUGFuZWwgaGVhZGVyPXsnVGFnIC0gU2hhcmluZyBDb250cm9scyd9PlxuICAgICAgICA8VG9nZ2xlU2V0dGluZyB0b2dnbGVTZXR0aW5nPXtzZGsuVGFnLnRvZ2dsZVNoYXJpbmd9IC8+XG4gICAgICA8L0NvbnRyb2xQYW5lbD5cblxuICAgICAgPENvbnRyb2xQYW5lbCBoZWFkZXI9eydUYWcgLSBJbXBvcnQgVGFncyd9PlxuICAgICAgICA8SW1wb3J0VGFncyBzZGs9e3Nka30vPlxuICAgICAgPC9Db250cm9sUGFuZWw+XG4gICAgPC9GcmFnbWVudD5cbiAgKTtcbn1cbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB0eXBlIHsgQ1NTUHJvcGVydGllcyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB0eXBlIHsgTXBTZGssIFRvdXIgfSBmcm9tICdAc2RrL3R5cGVzJztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2RrOiBNcFNkaztcbn1cblxuY29uc3QgdGV4dEFyZWFTdHlsZTogQ1NTUHJvcGVydGllcyA9IHtcbiAgaGVpZ2h0OiA1MCxcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBUb3VyR2V0RGF0YShwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IFt0b3VyU25hcHNob3RzLCBzZXRUb3VyU25hcHNob3RzXSA9IHVzZVN0YXRlPFRvdXIuU25hcHNob3RbXT4oW10pO1xuXG4gIGNvbnN0IGdldERhdGEgPSB1c2VDYWxsYmFjayhhc3luYyAoKSA9PiB7XG4gICAgY29uc3Qgc2RrVG91clNuYXBzaG90cyA9IGF3YWl0IHByb3BzLnNkay5Ub3VyLmdldERhdGEoKSBhcyBUb3VyLlNuYXBzaG90W107XG4gICAgc2V0VG91clNuYXBzaG90cyhzZGtUb3VyU25hcHNob3RzKTtcbiAgfSwgW3Byb3BzLnNkay5Ub3VyXSk7XG5cbiAgbGV0IHNlcmlhbGl6ZWQgPSAnJztcblxuICBpZiAodG91clNuYXBzaG90cy5sZW5ndGggPiAwKSB7XG4gICAgc2VyaWFsaXplZCA9IEpTT04uc3RyaW5naWZ5KHRvdXJTbmFwc2hvdHMsIG51bGwsIDIpO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtnZXREYXRhfT5nZXREYXRhPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIDx0ZXh0YXJlYSByb3dzPXszfSBzdHlsZT17dGV4dEFyZWFTdHlsZX0gZGVmYXVsdFZhbHVlPXtzZXJpYWxpemVkfS8+XG4gICAgICA8L2Rpdj5cbiAgICA8Lz5cbiAgKTtcbn1cbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBzZGs6IE1wU2RrO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gVG91ckNvbnRyb2xzKHsgc2RrIH0gOiBQcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgY29uc3QgW3NlbGVjdGVkU3RlcCwgc2V0U2VsZWN0ZWRTdGVwXSA9IHVzZVN0YXRlKCcxJyk7XG4gIGNvbnN0IFt0b3VyTGVuZ3RoLCBzZXRUb3VyTGVuZ3RoXSA9IHVzZVN0YXRlKDApO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2RrLlRvdXIuZ2V0RGF0YSgpLnRoZW4odG91ckRhdGEgPT4ge1xuICAgICAgc2V0VG91ckxlbmd0aCh0b3VyRGF0YS5sZW5ndGgpO1xuICAgIH0pO1xuICB9LCBbc2RrLlRvdXJdKTtcbiAgY29uc3Qgc3RhcnRUb3VyID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHNkay5Ub3VyLnN0YXJ0KCkudGhlbigoKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygnVG91ciBzdGFydGVkLicpO1xuICAgIH0pO1xuICB9LCBbc2RrLlRvdXJdKTtcbiAgY29uc3Qgc3RvcFRvdXIgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgc2RrLlRvdXIuc3RvcCgpLnRoZW4oKCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ1RvdXIgc3RvcHBlZC4nKTtcbiAgICB9KTtcbiAgfSwgW3Nkay5Ub3VyXSk7XG4gIGNvbnN0IHByZXZUb3VyID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHNkay5Ub3VyLnByZXYoKS50aGVuKCgpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKCdUb3VyIC0gUHJldmlvdXMnKTtcbiAgICB9KTtcbiAgfSwgW3Nkay5Ub3VyXSk7XG4gIGNvbnN0IG5leHRUb3VyID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHNkay5Ub3VyLm5leHQoKS50aGVuKCgpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKCdUb3VyIC0gTmV4dCcpO1xuICAgIH0pO1xuICB9LCBbc2RrLlRvdXJdKTtcbiAgY29uc3Qgc3RlcFRvdXIgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgY29uc3QgdmFsdWUgPSBOdW1iZXIoc2VsZWN0ZWRTdGVwKTtcbiAgICBpZiAoIWlzTmFOKHZhbHVlKSkge1xuICAgICAgc2RrLlRvdXIuc3RlcCh2YWx1ZSkudGhlbigoKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygnVG91ciAtIFN0ZXBwZWQnKTtcbiAgICB9KTtcbiAgICB9XG4gIH0sIFtzZGsuVG91ciwgc2VsZWN0ZWRTdGVwXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4Um93XCI+XG4gICAgICAgIDxidXR0b24gb25DbGljaz17c3RhcnRUb3VyfT5TdGFydCBUb3VyPC9idXR0b24+XG4gICAgICAgIDxidXR0b24gb25DbGljaz17c3RvcFRvdXJ9PlN0b3AgVG91cjwvYnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXhSb3dcIj5cbiAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtwcmV2VG91cn0+UHJldmlvdXM8L2J1dHRvbj5cbiAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtuZXh0VG91cn0+TmV4dDwvYnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXhSb3dcIj5cbiAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtzdGVwVG91cn0+U3RlcDwvYnV0dG9uPlxuICAgICAgICA8c2VsZWN0XG4gICAgICAgICAgdmFsdWU9e3NlbGVjdGVkU3RlcH1cbiAgICAgICAgICBvbkNoYW5nZT17ZSA9PiBzZXRTZWxlY3RlZFN0ZXAoZS50YXJnZXQudmFsdWUpfVxuICAgICAgICA+XG4gICAgICAgICAge0FycmF5LmZyb20oeyBsZW5ndGg6IHRvdXJMZW5ndGggfSwgKF8sIG4pID0+IChcbiAgICAgICAgICAgIDxvcHRpb24ga2V5PXtufSB2YWx1ZT17bn0+e259PC9vcHRpb24+XG4gICAgICAgICAgKSl9XG4gICAgICAgIDwvc2VsZWN0PlxuICAgICAgPC9kaXY+XG4gICAgPC8+XG4gICk7XG59XG4iLCJpbXBvcnQgdHlwZSB7IE1wU2RrIH0gZnJvbSAnQHNkay90eXBlcyc7XG5pbXBvcnQgeyBUb3VyR2V0RGF0YSB9IGZyb20gJy4vVG91ckdldERhdGEnO1xuaW1wb3J0IHsgVG91ckNvbnRyb2xzIH0gZnJvbSAnLi9Ub3VyQ29udHJvbHMnO1xuaW1wb3J0IHsgRXZlbnQgfSBmcm9tICcuLi9FdmVudCc7XG5pbXBvcnQgeyBDb250cm9sUGFuZWwgfSBmcm9tICcuLi9Db250cm9sUGFuZWwnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJy4uL09ic2VydmFibGUnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBzZGs6IE1wU2RrO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gVG91cihwcm9wczogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxDb250cm9sUGFuZWwgaGVhZGVyPXsnVG91ciAtIGdldERhdGEnfT5cbiAgICAgICAgPFRvdXJHZXREYXRhIHNkaz17cHJvcHMuc2RrfS8+XG4gICAgICA8L0NvbnRyb2xQYW5lbD5cbiAgICAgIDxDb250cm9sUGFuZWwgaGVhZGVyPXsnVG91ciBDb250cm9scyd9PlxuICAgICAgICA8VG91ckNvbnRyb2xzIHNkaz17cHJvcHMuc2RrfSAvPlxuICAgICAgPC9Db250cm9sUGFuZWw+XG4gICAgICA8Q29udHJvbFBhbmVsIGhlYWRlcj0nVG91ciAtIEV2ZW50cyc+XG4gICAgICAgIDxFdmVudCBzZGs9e3Byb3BzLnNka30gZXZlbnRzPXtwcm9wcy5zZGsuVG91ci5FdmVudH0vPlxuICAgICAgPC9Db250cm9sUGFuZWw+XG4gICAgICA8Q29udHJvbFBhbmVsIGhlYWRlcj17J1RvdXIgLSBTdGF0ZSd9PlxuICAgICAgICA8T2JzZXJ2YWJsZSBuYW1lPSdjdXJyZW50IHN0ZXAnIG9ic2VydmFibGU9e3Byb3BzLnNkay5Ub3VyLmN1cnJlbnRTdGVwfSAvPlxuICAgICAgICA8T2JzZXJ2YWJsZSBuYW1lPSdwbGF5IHN0YXRlJyBvYnNlcnZhYmxlPXtwcm9wcy5zZGsuVG91ci5zdGF0ZX0gLz5cbiAgICAgICAgPE9ic2VydmFibGUgbmFtZT0ndHJhbnNpdGlvbicgb2JzZXJ2YWJsZT17cHJvcHMuc2RrLlRvdXIudHJhbnNpdGlvbn0gLz5cbiAgICAgIDwvQ29udHJvbFBhbmVsPlxuICAgIDwvPlxuICApO1xufVxuXG4iLCJpbXBvcnQgeyB0eXBlIE1wU2RrIH0gZnJvbSAnQHNkay90eXBlcyc7XG5pbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IGZ1bmN0aW9uIENyZWF0ZUxheWVyKHtzZGt9OiB7c2RrOiBNcFNka30pOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IG5hbWVJbnB1dFJlZiA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcbiAgY29uc3QgY29tbW9uSW5wdXRSZWYgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG4gIGNvbnN0IFtjcmVhdGVEaXNhYmxlZCwgc2V0Q3JlYXRlRGlzYWJsZWRdID0gdXNlU3RhdGUodHJ1ZSk7XG4gIGNvbnN0IFttZXNzYWdlLCBzZXRNZXNzYWdlXSA9IHVzZVN0YXRlKCcnKTtcblxuICBjb25zdCBpbnB1dENoYW5nZWQgPSB1c2VDYWxsYmFjaygoZXZlbnQ6IFJlYWN0LkZvcm1FdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4ge1xuICAgIHNldENyZWF0ZURpc2FibGVkKCFldmVudC5jdXJyZW50VGFyZ2V0LnZhbHVlKTtcbiAgfSwgW10pO1xuXG4gIGNvbnN0IGNyZWF0ZUxheWVyID0gdXNlQ2FsbGJhY2soYXN5bmMgKCkgPT4ge1xuICAgIGlmIChuYW1lSW5wdXRSZWYuY3VycmVudCAmJiBjb21tb25JbnB1dFJlZi5jdXJyZW50KSB7XG4gICAgICBjb25zdCBsYXllciA9IGF3YWl0IHNkay5WaWV3LmNyZWF0ZUxheWVyKG5hbWVJbnB1dFJlZi5jdXJyZW50LnZhbHVlLCB7XG4gICAgICAgIGNvbW1vbjogY29tbW9uSW5wdXRSZWYuY3VycmVudC5jaGVja2VkLFxuICAgICAgfSk7XG4gICAgICBzZXRNZXNzYWdlKCdjcmVhdGVkOiAnICsgbGF5ZXIuaWQpO1xuICAgIH1cbiAgfSwgW3Nkay5WaWV3XSk7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGlucHV0IHJlZj17bmFtZUlucHV0UmVmfSB0eXBlPSd0ZXh0JyBvbklucHV0PXtpbnB1dENoYW5nZWR9Lz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGxhYmVsPmNvbW1vbjo8L2xhYmVsPlxuICAgICAgICA8aW5wdXQgcmVmPXtjb21tb25JbnB1dFJlZn0gdHlwZT0nY2hlY2tib3gnLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtjcmVhdGVMYXllcn0gZGlzYWJsZWQ9e2NyZWF0ZURpc2FibGVkfT5DcmVhdGU8L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPHRleHRhcmVhIHN0eWxlPXt7IGhlaWdodDogJzZlbSd9fSByZWFkT25seSB2YWx1ZT17bWVzc2FnZX0vPlxuICAgICAgPC9kaXY+XG4gICAgPC8+XG4gICk7XG59XG4iLCJpbXBvcnQgeyB0eXBlIE1wU2RrLCB0eXBlIFZpZXcgfSBmcm9tICdAc2RrL3R5cGVzJztcbmltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxudHlwZSBQcm9wcyA9IHtcbiAgc2RrOiBNcFNkaztcbiAgc2VsZWN0ZWRMYXllcjogVmlldy5MYXllciB8IHVuZGVmaW5lZDtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBEZWxldGVMYXllcih7c2RrLCBzZWxlY3RlZExheWVyfTogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IFttZXNzYWdlLCBzZXRNZXNzYWdlXSA9IHVzZVN0YXRlKCcnKTtcblxuICBjb25zdCBkZWxldGVMYXllciA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICBpZiAoc2VsZWN0ZWRMYXllcikge1xuICAgICAgdHJ5IHtcbiAgICAgICAgYXdhaXQgc2RrLlZpZXcuZGVsZXRlTGF5ZXIoc2VsZWN0ZWRMYXllcik7XG4gICAgICAgIHNldE1lc3NhZ2UoJ09LJyk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHNldE1lc3NhZ2UoZSk7XG4gICAgICB9XG4gICAgfVxuICB9LCBbc2RrLlZpZXcsIHNlbGVjdGVkTGF5ZXJdKTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8ZGl2PlxuICAgICAgICBzZWxlY3RlZDogPGlucHV0IHR5cGU9J3RleHQnIHZhbHVlPXtzZWxlY3RlZExheWVyPy5pZCA/PyAnTm9uZSd9IGRpc2FibGVkLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtkZWxldGVMYXllcn0+RGVsZXRlPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIDx0ZXh0YXJlYSBzdHlsZT17eyBoZWlnaHQ6ICc2ZW0nfX0gcmVhZE9ubHkgdmFsdWU9e21lc3NhZ2V9Lz5cbiAgICAgIDwvZGl2PlxuICAgIDwvPlxuICApO1xufVxuIiwiaW1wb3J0IHsgdHlwZSBWaWV3IH0gZnJvbSAnQHNkay90eXBlcyc7XG5pbXBvcnQgeyBGcmFnbWVudCwgdXNlQ2FsbGJhY2ssIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcblxudHlwZSBQcm9wcyA9IHtcbiAgc2VsZWN0ZWRWaWV3OiBWaWV3LlZpZXcgfCB1bmRlZmluZWQ7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gQWN0aXZhdGVWaWV3KHtzZWxlY3RlZFZpZXd9OiBQcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgY29uc3QgcmV0dXJuVG9TdGFydCA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcbiAgY29uc3QgYWN0aXZhdGVWaWV3ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGlmIChzZWxlY3RlZFZpZXcpIHtcbiAgICAgIHNlbGVjdGVkVmlldy5zZXRBY3RpdmUocmV0dXJuVG9TdGFydC5jdXJyZW50Py5jaGVja2VkID8/IGZhbHNlKTtcbiAgICB9XG4gIH0sIFtzZWxlY3RlZFZpZXddKTtcblxuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDxkaXY+XG4gICAgICAgIHNlbGVjdGVkOiA8aW5wdXQgdHlwZT0ndGV4dCcgdmFsdWU9e3NlbGVjdGVkVmlldz8uaWQgPz8gJ05vbmUnfSBkaXNhYmxlZC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxsYWJlbCBodG1sRm9yPSd2aWV3LXN0YXJ0LXJldHVybic+UmV0dXJuIHRvIFN0YXJ0PzwvbGFiZWw+XG4gICAgICAgIDxpbnB1dCByZWY9e3JldHVyblRvU3RhcnR9IGlkPSd2aWV3LXN0YXJ0LXJldHVybicgdHlwZT0nY2hlY2tib3gnIC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxidXR0b24gb25DbGljaz17YWN0aXZhdGVWaWV3fT5BY3RpdmF0ZTwvYnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9GcmFnbWVudD5cbiAgKTtcbn1cbiIsImltcG9ydCB7IHR5cGUgVmlldyB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuaW1wb3J0IHsgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIHNlbGVjdGVkTGF5ZXI6IFZpZXcuTGF5ZXIgfCB1bmRlZmluZWQ7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gVG9nZ2xlTGF5ZXIoe3NlbGVjdGVkTGF5ZXJ9OiBQcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgY29uc3QgdG9nZ2xlTGF5ZXIgPSB1c2VDYWxsYmFjaygoYWN0aXZhdGU6IGJvb2xlYW4pID0+IHtcbiAgICBpZiAoc2VsZWN0ZWRMYXllcikge1xuICAgICAgc2VsZWN0ZWRMYXllci50b2dnbGUoYWN0aXZhdGUpO1xuICAgIH1cbiAgfSwgW3NlbGVjdGVkTGF5ZXJdKTtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPGRpdj5cbiAgICAgICAgc2VsZWN0ZWQ6IDxpbnB1dCB0eXBlPSd0ZXh0JyB2YWx1ZT17c2VsZWN0ZWRMYXllcj8uaWQgPz8gJ05vbmUnfSBkaXNhYmxlZCAvPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2PlxuICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9eygpID0+IHRvZ2dsZUxheWVyKHRydWUpfT5Ub2dnbGUgT248L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXsoKSA9PiB0b2dnbGVMYXllcihmYWxzZSl9PlRvZ2dsZSBPZmY8L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvPlxuICApO1xufVxuIiwiaW1wb3J0IHsgdHlwZSBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZVN0YXRlLCB0eXBlIENTU1Byb3BlcnRpZXMgfSBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IHNwYW5TdHlsZTogQ1NTUHJvcGVydGllcyA9IHtcbiAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gIHdpZHRoOiAnNTBweCcsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gTGF5ZXJDb250cm9scyh7XG4gIHNlbGVjdGVkVmlldyxcbiAgc2VsZWN0ZWRMYXllcixcbn06IHtzZWxlY3RlZFZpZXc/OiBNcFNkay5WaWV3LlZpZXc7IHNlbGVjdGVkTGF5ZXI/OiBNcFNkay5WaWV3LkxheWVyfSk6IEpTWC5FbGVtZW50IHtcbiAgY29uc3QgW21lc3NhZ2UsIHNldE1lc3NhZ2VdID0gdXNlU3RhdGUoJycpO1xuXG4gIGNvbnN0IGFkZExheWVyID0gdXNlQ2FsbGJhY2soYXN5bmMoKSA9PiB7XG4gICAgc2V0TWVzc2FnZSgnJyk7XG4gICAgaWYgKCFzZWxlY3RlZFZpZXcgfHwgIXNlbGVjdGVkTGF5ZXIpIHtcbiAgICAgIHNldE1lc3NhZ2UoJ25vdCByZWFkeScpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgYXdhaXQgc2VsZWN0ZWRWaWV3LmFkZExheWVyKHNlbGVjdGVkTGF5ZXIpO1xuICAgICAgc2V0TWVzc2FnZSgnT0snKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBzZXRNZXNzYWdlKCdbYWRkTGF5ZXJdIEVycm9yOicgKyBlKTtcbiAgICB9XG4gIH0sIFtzZWxlY3RlZExheWVyLCBzZWxlY3RlZFZpZXddKTtcbiAgY29uc3QgcmVtb3ZlTGF5ZXIgPSB1c2VDYWxsYmFjayhhc3luYyAoKSA9PiB7XG4gICAgc2V0TWVzc2FnZSgnJyk7XG4gICAgaWYgKCFzZWxlY3RlZFZpZXcgfHwgIXNlbGVjdGVkTGF5ZXIpIHtcbiAgICAgIHNldE1lc3NhZ2UoJ25vdCByZWFkeScpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgYXdhaXQgc2VsZWN0ZWRWaWV3LnJlbW92ZUxheWVyKHNlbGVjdGVkTGF5ZXIpO1xuICAgICAgc2V0TWVzc2FnZSgnT0snKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBzZXRNZXNzYWdlKCdbcmVtb3ZlTGF5ZXJdIEVycm9yOicgKyBlKTtcbiAgICB9XG4gIH0sIFtzZWxlY3RlZExheWVyLCBzZWxlY3RlZFZpZXddKTtcbiAgY29uc3QgaGFzTGF5ZXIgPSB1c2VDYWxsYmFjayhhc3luYyAoKSA9PiB7XG4gICAgaWYgKCFzZWxlY3RlZFZpZXcgfHwgIXNlbGVjdGVkTGF5ZXIpIHtcbiAgICAgIHNldE1lc3NhZ2UoJ25vdCByZWFkeScpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBzZXRNZXNzYWdlKHNlbGVjdGVkVmlldy5oYXNMYXllcihzZWxlY3RlZExheWVyKS50b1N0cmluZygpKTtcbiAgfSwgW3NlbGVjdGVkTGF5ZXIsIHNlbGVjdGVkVmlld10pO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxzcGFuIHN0eWxlPXtzcGFuU3R5bGV9PlZpZXc6PC9zcGFuPjxpbnB1dCB0eXBlPSd0ZXh0JyB2YWx1ZT17c2VsZWN0ZWRWaWV3Py5pZCA/PyAnTm9uZSd9IGRpc2FibGVkLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPHNwYW4gc3R5bGU9e3NwYW5TdHlsZX0+TGF5ZXI6PC9zcGFuPjxpbnB1dCB0eXBlPSd0ZXh0JyB2YWx1ZT17c2VsZWN0ZWRMYXllcj8uaWQgPz8gJ05vbmUnfSBkaXNhYmxlZC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxidXR0b24gc3R5bGU9e3t3aWR0aDogJzcwcHgnfX0gb25DbGljaz17YWRkTGF5ZXJ9PkFkZDwvYnV0dG9uPlxuICAgICAgICA8YnV0dG9uIHN0eWxlPXt7d2lkdGg6ICc3MHB4J319IG9uQ2xpY2s9e3JlbW92ZUxheWVyfT5SZW1vdmU8L2J1dHRvbj5cbiAgICAgICAgPGJ1dHRvbiBzdHlsZT17e3dpZHRoOiAnNzBweCd9fSBvbkNsaWNrPXtoYXNMYXllcn0+SGFzPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIDx0ZXh0YXJlYSBzdHlsZT17e3dpZHRoOiAnMTAwJScsIGhlaWdodDogJzZlbSd9fSB2YWx1ZT17bWVzc2FnZX0gZGlzYWJsZWQvPlxuICAgICAgPC9kaXY+XG4gICAgPC8+XG4gICk7XG59XG4iLCJpbXBvcnQgdHlwZSB7IE1wU2RrLCBWaWV3IGFzIFZpZXdUIH0gZnJvbSAnQHNkay90eXBlcyc7XG5pbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IENvbGxlY3Rpb25JbnNwZWN0b3IgfSBmcm9tICcuLi9Db2xsZWN0aW9uSW5zcGVjdG9yJztcbmltcG9ydCB7IENvbnRyb2xQYW5lbCB9IGZyb20gJy4uL0NvbnRyb2xQYW5lbCc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAnLi4vT2JzZXJ2YWJsZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlQ29sbGVjdGlvbiB9IGZyb20gJy4uL09ic2VydmFibGVDb2xsZWN0aW9uJztcbmltcG9ydCB7IENyZWF0ZUxheWVyIH0gZnJvbSAnLi9DcmVhdGVMYXllcic7XG5pbXBvcnQgeyBEZWxldGVMYXllciB9IGZyb20gJy4vRGVsZXRlTGF5ZXInO1xuaW1wb3J0IHsgQWN0aXZhdGVWaWV3IH0gZnJvbSAnLi9BY3RpdmF0ZVZpZXcnO1xuaW1wb3J0IHsgVG9nZ2xlTGF5ZXIgfSBmcm9tICcuL1RvZ2dsZUxheWVyJztcbmltcG9ydCB7IExheWVyQ29udHJvbHMgfSBmcm9tICcuL0xheWVyQ29udHJvbHMnO1xuXG50eXBlIFByb3BzID0ge1xuICBzZGs6IE1wU2RrO1xuICBzZWxlY3RlZExheWVyOiBWaWV3VC5MYXllciB8IHVuZGVmaW5lZDtcbiAgc2VsZWN0TGF5ZXIobGF5ZXI6IFZpZXdULkxheWVyIHwgdW5kZWZpbmVkKTogdm9pZDtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBWaWV3KHtzZGssIHNlbGVjdGVkTGF5ZXIsIHNlbGVjdExheWVyfTogUHJvcHMpOiBKU1guRWxlbWVudCB7XG4gIGNvbnN0IFtzZWxlY3RlZFZpZXcsIHNlbGVjdFZpZXddID0gdXNlU3RhdGU8Vmlld1QuVmlldz4oKTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8Q29udHJvbFBhbmVsIGhlYWRlcj17J1ZpZXcudmlld3MgLSBDb2xsZWN0aW9uJ30+XG4gICAgICAgIDxPYnNlcnZhYmxlQ29sbGVjdGlvblxuICAgICAgICAgIG5hbWU9eyd2aWV3cyd9XG4gICAgICAgICAgY29sbGVjdGlvbj17c2RrLlZpZXcudmlld3N9XG4gICAgICAgIC8+XG4gICAgICA8L0NvbnRyb2xQYW5lbD5cbiAgICAgIDxDb2xsZWN0aW9uSW5zcGVjdG9yXG4gICAgICAgIGxhYmVsPXsnVmlld3MnfVxuICAgICAgICBjb2xsZWN0aW9uPXtzZGsuVmlldy52aWV3c31cbiAgICAgICAgYWRkaXRpb25hbFByb3BlcnRpZXM9e1snaWQnLCAnbmFtZScsICd0eXBlJywgJ2xheWVycyddfVxuICAgICAgICBwcm9wZXJ0eVRyYW5zZm9ybXM9e3tcbiAgICAgICAgICBsYXllcnM6IChsYXllcnMpID0+IFsuLi5sYXllcnNdLm1hcChsYXllciA9PiBsYXllci5pZCksXG4gICAgICAgIH19XG4gICAgICAgIG9uQ2hhbmdlZD17KF8sIHZpZXcpID0+IHNlbGVjdFZpZXcodmlldyl9XG4gICAgICAvPlxuICAgICAgPENvbnRyb2xQYW5lbCBoZWFkZXI9eydWaWV3LmxheWVycyAtIENvbGxlY3Rpb24nfT5cbiAgICAgICAgPE9ic2VydmFibGVDb2xsZWN0aW9uXG4gICAgICAgICAgbmFtZT17J2xheWVycyd9XG4gICAgICAgICAgY29sbGVjdGlvbj17c2RrLlZpZXcubGF5ZXJzfVxuICAgICAgICAvPlxuICAgICAgPC9Db250cm9sUGFuZWw+XG4gICAgICA8Q29sbGVjdGlvbkluc3BlY3RvclxuICAgICAgICBsYWJlbD17J0xheWVycyd9XG4gICAgICAgIGNvbGxlY3Rpb249e3Nkay5WaWV3LmxheWVyc31cbiAgICAgICAgYWRkaXRpb25hbFByb3BlcnRpZXM9e1snaWQnLCAnbmFtZScsICd0eXBlJywgJ3RvZ2dsZWQnLCAnY29tbW9uJ119XG4gICAgICAgIG9uQ2hhbmdlZD17KF8sIGxheWVyKSA9PiBzZWxlY3RMYXllcihsYXllcil9XG4gICAgICAvPlxuICAgICAgPENvbnRyb2xQYW5lbCBoZWFkZXI9eydWaWV3IC0gQ3VycmVudCd9PlxuICAgICAgICA8T2JzZXJ2YWJsZVxuICAgICAgICAgIG5hbWU9eydjdXJyZW50J31cbiAgICAgICAgICBvYnNlcnZhYmxlPXtzZGsuVmlldy5jdXJyZW50fVxuICAgICAgICAvPlxuICAgICAgPC9Db250cm9sUGFuZWw+XG4gICAgICA8Q29udHJvbFBhbmVsIGhlYWRlcj17J1ZpZXcgLSBDcmVhdGUgTGF5ZXInfT5cbiAgICAgICAgPENyZWF0ZUxheWVyIHNkaz17c2RrfSAvPlxuICAgICAgPC9Db250cm9sUGFuZWw+XG4gICAgICA8Q29udHJvbFBhbmVsIGhlYWRlcj17J1ZpZXcgLSBEZWxldGUgTGF5ZXInfT5cbiAgICAgICAgPERlbGV0ZUxheWVyIHNkaz17c2RrfSBzZWxlY3RlZExheWVyPXtzZWxlY3RlZExheWVyfSAvPlxuICAgICAgPC9Db250cm9sUGFuZWw+XG4gICAgICA8Q29udHJvbFBhbmVsIGhlYWRlcj17J1ZpZXcgLSBBY3RpdmF0ZSd9PlxuICAgICAgICA8QWN0aXZhdGVWaWV3IHNlbGVjdGVkVmlldz17c2VsZWN0ZWRWaWV3fSAvPlxuICAgICAgPC9Db250cm9sUGFuZWw+XG4gICAgICA8Q29udHJvbFBhbmVsIGhlYWRlcj17J0xheWVyIC0gVG9nZ2xlJ30+XG4gICAgICAgIDxUb2dnbGVMYXllciBzZWxlY3RlZExheWVyPXtzZWxlY3RlZExheWVyfSAvPlxuICAgICAgPC9Db250cm9sUGFuZWw+XG4gICAgICA8Q29udHJvbFBhbmVsIGhlYWRlcj17J1ZpZXcubGF5ZXJzIGNvbnRyb2xzJ30+XG4gICAgICAgIDxMYXllckNvbnRyb2xzXG4gICAgICAgICAgc2VsZWN0ZWRWaWV3PXtzZWxlY3RlZFZpZXd9XG4gICAgICAgICAgc2VsZWN0ZWRMYXllcj17c2VsZWN0ZWRMYXllcn1cbiAgICAgICAgLz5cbiAgICAgIDwvQ29udHJvbFBhbmVsPlxuICAgIDwvPlxuICApO1xufVxuIiwiaW1wb3J0IHR5cGUgeyBNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuaW1wb3J0IHsgQ29udHJvbFBhbmVsIH0gZnJvbSAnLi4vQ29udHJvbFBhbmVsJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICcuLi9PYnNlcnZhYmxlJztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2RrOiBNcFNkaztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFZpZXdtb2RlKHByb3BzOiBQcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPENvbnRyb2xQYW5lbCBoZWFkZXI9eydWaWV3bW9kZSAtIFRyYW5zaXRpb24nfT5cbiAgICAgICAgPE9ic2VydmFibGUgbmFtZT1cInZpZXdtb2RlIGN1cnJlbnRcIiBvYnNlcnZhYmxlPXtwcm9wcy5zZGsuTW9kZS5jdXJyZW50fSAvPlxuICAgICAgICA8T2JzZXJ2YWJsZSBuYW1lPVwidmlld21vZGUgdHJhbnNpdGlvblwiIG9ic2VydmFibGU9e3Byb3BzLnNkay5Nb2RlLnRyYW5zaXRpb259IC8+XG4gICAgICA8L0NvbnRyb2xQYW5lbD5cbiAgICA8Lz5cbiAgKTtcbn1cbiIsImltcG9ydCB7IHR5cGUgUm9vdCB9IGZyb20gJ3JlYWN0LWRvbS9jbGllbnQnO1xuaW1wb3J0IHsgQVBJIH0gZnJvbSAnLi9BUEknO1xuaW1wb3J0IHsgQXBwIH0gZnJvbSAnLi9BcHAnO1xuaW1wb3J0IHsgQXBwTG9jYWxlIH0gZnJvbSAnLi9BcHAuTG9jYWxlJztcbmltcG9ydCB7IEFzc2V0IH0gZnJvbSAnLi9Bc3NldCc7XG5pbXBvcnQgeyBDYW1lcmEgfSBmcm9tICcuL0NhbWVyYSc7XG5pbXBvcnQgeyBDb252ZXJzaW9uIH0gZnJvbSAnLi9Db252ZXJzaW9uJztcbmltcG9ydCB7IEZsb29yIH0gZnJvbSAnLi9GbG9vcic7XG5pbXBvcnQgeyBMYWJlbCB9IGZyb20gJy4vTGFiZWwnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJy4vTGluayc7XG5pbXBvcnQgeyBNYXR0ZXJ0YWcgfSBmcm9tICcuL01hdHRlcnRhZyc7XG5pbXBvcnQgeyBNZWFzdXJlbWVudHMgfSBmcm9tICcuL01lYXN1cmVtZW50cyc7XG5pbXBvcnQgeyBNb2RlbCB9IGZyb20gJy4vTW9kZWwnO1xuaW1wb3J0IHsgUGx1Z2luIH0gZnJvbSAnLi9QbHVnaW4nO1xuaW1wb3J0IHsgUG9pbnRlciB9IGZyb20gJy4vUG9pbnRlcic7XG5pbXBvcnQgeyBSZW5kZXJlciB9IGZyb20gJy4vUmVuZGVyZXInO1xuaW1wb3J0IHsgUm9vbSB9IGZyb20gJy4vUm9vbSc7XG5pbXBvcnQgeyBTY2VuZSB9IGZyb20gJy4vU2NlbmUnO1xuaW1wb3J0IHsgU2Vuc29yIH0gZnJvbSAnLi9TZW5zb3InO1xuaW1wb3J0IHsgU2V0dGluZ3MgfSBmcm9tICcuL1NldHRpbmdzJztcbmltcG9ydCB7IFN3ZWVwIH0gZnJvbSAnLi9Td2VlcCc7XG5pbXBvcnQgeyBTd2VlcEdyYXBoIH0gZnJvbSAnLi9Td2VlcC9Td2VlcEdyYXBoJztcbmltcG9ydCB7IFRhZyB9IGZyb20gJy4vVGFnJztcbmltcG9ydCB7IFRvdXIgfSBmcm9tICcuL1RvdXInO1xuaW1wb3J0IHsgVmlldyB9IGZyb20gJy4vVmlldyc7XG5pbXBvcnQgeyBWaWV3bW9kZSB9IGZyb20gJy4vTW9kZS9WaWV3bW9kZSc7XG5pbXBvcnQgdHlwZSB7IEJ1bmRsZSwgSW50ZXJuYWxNcFNkayB9IGZyb20gJ0BzZGsvdHlwZXMnO1xuaW1wb3J0IHsgRnJhZ21lbnQsIHVzZUNhbGxiYWNrLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IGNvbnN0IHN0YXJ0UmVhY3QgPSBmdW5jdGlvbihyb290OiBSb290LCBzZGs6IEJ1bmRsZS5NcFNkayk6IHZvaWQge1xuICByb290LnJlbmRlcihcbiAgICA8ZGl2PlxuICAgICAgPENvbnRyb2xzIHNkaz17c2RrfSAvPlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZnVuY3Rpb24gQ29udHJvbHMoeyBzZGsgfTogeyBzZGs6IEJ1bmRsZS5NcFNkazsgfSkge1xuICBjb25zdCBbc2VsZWN0ZWRBc3NldCwgc2VsZWN0QXNzZXRdID0gdXNlU3RhdGUoJycpO1xuICBjb25zdCBbc2VsZWN0ZWRMYXllciwgc2VsZWN0TGF5ZXJdID0gdXNlU3RhdGU8QnVuZGxlLk1wU2RrLlZpZXcuTGF5ZXI+KCk7XG4gIC8vIGEgbWFwIGJldHdlZW4gYW4gYXNzZXQgaWQgYW5kIHRoZSBhc3NldCBzcmNcbiAgY29uc3QgW2Fzc2V0cywgc2V0QXNzZXRzXSA9IHVzZVN0YXRlPFJlY29yZDxzdHJpbmcsIHN0cmluZz4+KHt9KTtcblxuICBjb25zdCBhZGRBc3NldCA9IHVzZUNhbGxiYWNrKChpZDogc3RyaW5nLCBzcmM6IHN0cmluZykgPT4ge1xuICAgIHNldEFzc2V0cygoY3VycmVudEFzc2V0cykgPT4gKHtcbiAgICAgIC4uLmN1cnJlbnRBc3NldHMsXG4gICAgICBbaWRdOiBzcmMsXG4gICAgfSkpO1xuICB9LCBbXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8RnJhZ21lbnQ+XG4gICAgICA8QVBJIHNkaz17c2RrfS8+XG4gICAgICA8QXBwIHNkaz17c2RrfS8+XG4gICAgICA8QXBwTG9jYWxlIHNkaz17c2RrfS8+XG4gICAgICA8QXNzZXQgc2RrPXtzZGt9IGFzc2V0cz17YXNzZXRzfSBzZXRBc3NldHM9e3NldEFzc2V0c30gc2V0U2VsZWN0ZWRBc3NldD17c2VsZWN0QXNzZXR9IC8+XG4gICAgICA8Q2FtZXJhIHNkaz17c2RrfS8+XG4gICAgICA8Q29udmVyc2lvbiBzZGs9e3Nka30vPlxuICAgICAgPEZsb29yIHNkaz17c2RrfS8+XG4gICAgICA8TGFiZWwgc2RrPXtzZGt9Lz5cbiAgICAgIDxMaW5rIHNkaz17c2RrfS8+XG4gICAgICA8TWF0dGVydGFnIHNkaz17c2RrfSBzZWxlY3RlZEFzc2V0PXtzZWxlY3RlZEFzc2V0fSBhZGRBc3NldD17YWRkQXNzZXR9IC8+XG4gICAgICA8TWVhc3VyZW1lbnRzIHNkaz17c2RrfS8+XG4gICAgICA8TW9kZWwgc2RrPXtzZGt9Lz5cbiAgICAgIHsgJ1BsdWdpbicgaW4gc2RrICYmIDxQbHVnaW4gc2RrPXtzZGsgYXMgYW55IGFzIEludGVybmFsTXBTZGsuTXBTZGt9Lz4gfVxuICAgICAgPFBvaW50ZXIgc2RrPXtzZGt9IHNlbGVjdGVkQXNzZXQ9e3NlbGVjdGVkQXNzZXR9IGFkZEFzc2V0PXthZGRBc3NldH0gLz5cbiAgICAgIDxSZW5kZXJlciBzZGs9e3Nka30vPlxuICAgICAgPFJvb20gc2RrPXtzZGt9Lz5cbiAgICAgIDxTY2VuZSBzZGs9e3Nka30vPlxuICAgICAgPFNlbnNvciBzZGs9e3Nka30vPlxuICAgICAgPFNldHRpbmdzIHNkaz17c2RrfS8+XG4gICAgICA8U3dlZXAgc2RrPXtzZGt9Lz5cbiAgICAgIDxTd2VlcEdyYXBoIHNkaz17c2RrfS8+XG4gICAgICB7ICdUYWcnIGluIHNkayAmJiA8VGFnIHNkaz17c2RrfSBzZWxlY3RlZEFzc2V0PXtzZWxlY3RlZEFzc2V0fSBzZWxlY3RlZExheWVyPXtzZWxlY3RlZExheWVyfSAvPiB9XG4gICAgICA8VG91ciBzZGs9e3Nka30vPlxuICAgICAgeyAnVmlldycgaW4gc2RrICYmIDxWaWV3IHNkaz17c2RrfSBzZWxlY3RlZExheWVyPXtzZWxlY3RlZExheWVyfSBzZWxlY3RMYXllcj17c2VsZWN0TGF5ZXJ9IC8+IH1cbiAgICAgIDxWaWV3bW9kZSBzZGs9e3Nka30vPlxuICAgIDwvRnJhZ21lbnQ+XG4gICk7XG59XG4iLCJpbXBvcnQgeyBEeW5hbWljTGliTG9hZGVyIH0gZnJvbSAnZHluYW1pYy1saWItbG9hZGVyJztcbmltcG9ydCB7IHR5cGUgTVBfU0RLIH0gZnJvbSAnQHNkay90eXBlcy9lbWJlZC50eXBlcyc7XG5cbmV4cG9ydCB0eXBlIENvbmZpZyA9IHtcbiAgLyoqIFRoZSBtb2RlbCB0byBsb2FkIGludG8gU2hvd2Nhc2UgKi9cbiAgbW9kZWw6IHN0cmluZztcbiAgLyoqIFRoZSBhcHBsaWNhdGlvbiB0byB1c2Ugd2hlbiBjb25uZWN0aW5nIHRoZSBTREsgKi9cbiAgYXBwbGljYXRpb25LZXk6IHN0cmluZztcbiAgLyoqIFRoZSBBUEkgaG9zdCB0byB1c2UgdG8gbG9hZCBtb2RlbHMgYW5kIGFzc2V0cyBmcm9tIChlLmcuIGh0dHBzOi8vbXkubWF0dGVycG9ydC5jb20pICovXG4gIGFwaUhvc3Q6IHN0cmluZztcbiAgLyoqIERlbGF5IHRoZSBjb25uZWN0aW9uIG9mIHRoZSBTREsgYnkgc29tZSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzICovXG4gIGNvbm5lY3Rpb25EZWxheTogbnVtYmVyO1xuICAvKiogU3BlY2lmeSBhIHByb3ZpZGVyIHRvIHVzZSBpbiB0aGUgU0RLJ3MgY29ubmVjdCBjYWxsIGUuZy4gaW90LXR3aW5tYWtlciAqL1xuICBwcm92aWRlcjogc3RyaW5nO1xuICAvKiogV2hpY2ggdmVyc2lvbiBvZiBTaG93Y2FzZSB0byBsb2FkIGluIHRoZSBpZnJhbWUgKi9cbiAgdmVyc2lvbjogc3RyaW5nO1xuICAvKiogTG9hZCB0aGUgU2hvd2Nhc2UgQnVuZGxlIGluc3RlYWQgb2YgYXMgYSBzdGFuZGFyZCBFbWJlZD8gRm9yY2VzIERpcmVjdCBNZXNzYWdpbmcgKi9cbiAgbG9hZEJ1bmRsZTogYm9vbGVhbjtcbiAgLyoqIENvbm5lY3QgYW5kIHVzZSB0aGUgXCJidW5kbGUnc1wiIGRpcmVjdGlvbiBjb25uZWN0aW9uIChhcyBvcHBvc2VkIHRvIHBvc3RtZXNzYWdlKS4gQ2FuIGJlIGJsb2NrZWQgYnkgQ09SUyAqL1xuICB1c2VEaXJlY3RNZXNzYWdlczogYm9vbGVhbjtcbiAgLyoqIFRoZSB2ZXJzaW9uIG9mIHRoZSBib290c3RyYXAgKHRoZSB0aGluZyB0aGF0IGRvZXMgaW5pdGlhbCBjb25uZWN0KSB0byBsb2FkLiBVc2UgXCJsb2NhbFwiIHRvIGxvYWQgbG9jYWwgYm9vdHN0cmFwIHBhY2thZ2VzICovXG4gIGJvb3RzdHJhcFZlcnNpb246IHN0cmluZztcbiAgLyoqIExvYWQgd29ya3Nob3AgaW5zdGVhZCBvZiBTaG93Y2FzZSAqL1xuICB3b3Jrc2hvcDogYm9vbGVhbjtcbn07XG5cbmV4cG9ydCBlbnVtIFBhcmFtS2V5cyB7XG4gIE1PREVMID0gJ20nLFxuICBBUFBMSUNBVElPTl9LRVkgPSAnYXBwbGljYXRpb25LZXknLFxuICBBUElfSE9TVCA9ICdhcGlIb3N0JyxcbiAgQ09OTkVDVF9ERUxBWSA9ICdkZWxheScsXG4gIFBST1ZJREVSID0gJ3Byb3ZpZGVyJyxcbiAgVkVSU0lPTiA9ICd2ZXJzaW9uJyxcbiAgTE9BRF9CVU5ETEUgPSAnYnVuZGxlJyxcbiAgRElSRUNUX01FU1NBR0UgPSAnZG0nLFxuICBCT09UU1RSQVBfVkVSU0lPTiA9ICdib290c3RyYXBWZXJzaW9uJyxcbiAgTE9BRF9XT1JLU0hPUCA9ICd3b3Jrc2hvcCcsXG59XG5cbmV4cG9ydCB0eXBlIFBhcmFtRGVzY3JpcHRvciA9IHtcbiAgLyoqIFRoZSBzdHJpbmcgdG8gdXNlIGFzIGxvb2t1cCBpbnRvIHRoZSBjb25maWd1cmVkIHBhcmFtcyAqL1xuICBjb25maWdLZXk6IGtleW9mIENvbmZpZztcbiAgLyoqIFRoZSBzdHJpbmcgdXNlIGZvciB0aGUgc2VhcmNoIHBhcmFtICovXG4gIHBhcmFtS2V5OiBQYXJhbUtleXM7XG4gIC8qKiBBIGh1bWFuIHJlYWRhYmxlIG5hbWUgZm9yIHRoZSBwYXJhbSAqL1xuICBuYW1lOiBzdHJpbmc7XG4gIC8qKiBBIHNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSBwYXJhbSAqL1xuICBkZXNjcmlwdGlvbjogc3RyaW5nO1xuICAvKiogVGhlIHR5cGUgb2YgdGhlIHBhcmFtICovXG4gIHR5cGU6ICd0ZXh0JyB8ICdudW0nIHwgJ2Jvb2wnO1xufVxuXG5leHBvcnQgY29uc3Qgc3VwcG9ydGVkUGFyYW1zOiBQYXJhbURlc2NyaXB0b3JbXSA9IFt7XG4gIGNvbmZpZ0tleTogJ21vZGVsJyxcbiAgcGFyYW1LZXk6IFBhcmFtS2V5cy5NT0RFTCxcbiAgbmFtZTogJ01vZGVsJyxcbiAgZGVzY3JpcHRpb246ICdUaGUgbW9kZWwgdG8gbG9hZCBpbnRvIFNob3djYXNlJyxcbiAgdHlwZTogJ3RleHQnLFxufSwge1xuICBjb25maWdLZXk6ICdhcHBsaWNhdGlvbktleScsXG4gIHBhcmFtS2V5OiBQYXJhbUtleXMuQVBQTElDQVRJT05fS0VZLFxuICBuYW1lOiAnQXBwbGljYXRpb24gS2V5JyxcbiAgZGVzY3JpcHRpb246ICdUaGUgYXBwbGljYXRpb24gdG8gdXNlIHdoZW4gY29ubmVjdGluZyB0aGUgU0RLJyxcbiAgdHlwZTogJ3RleHQnLFxufSwge1xuICBjb25maWdLZXk6ICdhcGlIb3N0JyxcbiAgcGFyYW1LZXk6IFBhcmFtS2V5cy5BUElfSE9TVCxcbiAgbmFtZTogJ0FwaSBIb3N0JyxcbiAgZGVzY3JpcHRpb246ICdUaGUgQVBJIGhvc3QgdG8gdXNlIHRvIGxvYWQgbW9kZWxzIGFuZCBhc3NldHMgZnJvbSAoZS5nLiBodHRwczovL215Lm1hdHRlcnBvcnQuY29tKScsXG4gIHR5cGU6ICd0ZXh0Jyxcbn0sIHtcbiAgY29uZmlnS2V5OiAnY29ubmVjdGlvbkRlbGF5JyxcbiAgcGFyYW1LZXk6IFBhcmFtS2V5cy5DT05ORUNUX0RFTEFZLFxuICBuYW1lOiAnQ29ubmVjdGlvbiBEZWxheScsXG4gIGRlc2NyaXB0aW9uOiAnRGVsYXkgdGhlIGNvbm5lY3Rpb24gb2YgdGhlIFNESyBieSBzb21lIG51bWJlciBvZiBtaWxsaXNlY29uZHMnLFxuICB0eXBlOiAnbnVtJyxcbn0sIHtcbiAgY29uZmlnS2V5OiAncHJvdmlkZXInLFxuICBwYXJhbUtleTogUGFyYW1LZXlzLlBST1ZJREVSLFxuICBuYW1lOiAnUHJvdmlkZXInLFxuICBkZXNjcmlwdGlvbjogJ0Nvbm5lY3QgdGhlIFNESyBhcyBhIHByb3ZpZGVyJyxcbiAgdHlwZTogJ3RleHQnLFxufSwge1xuICBjb25maWdLZXk6ICd2ZXJzaW9uJyxcbiAgcGFyYW1LZXk6IFBhcmFtS2V5cy5WRVJTSU9OLFxuICBuYW1lOiAnU2hvd2Nhc2UgVmVyc2lvbicsXG4gIGRlc2NyaXB0aW9uOiAnV2hpY2ggdmVyc2lvbiBvZiBTaG93Y2FzZSB0byBsb2FkIGluIHRoZSBpZnJhbWUnLFxuICB0eXBlOiAndGV4dCcsXG59LCB7XG4gIGNvbmZpZ0tleTogJ2xvYWRCdW5kbGUnLFxuICBwYXJhbUtleTogUGFyYW1LZXlzLkxPQURfQlVORExFLFxuICBuYW1lOiAnTG9hZCBhcyBCdW5kbGU/JyxcbiAgZGVzY3JpcHRpb246ICdMb2FkIHRoZSBTaG93Y2FzZSBCdW5kbGUgaW5zdGVhZCBvZiBhcyBhIHN0YW5kYXJkIEVtYmVkPyBGb3JjZXMgZGlyZWN0IG1lc3NhZ2luZycsXG4gIHR5cGU6ICdib29sJyxcbn0sIHtcbiAgY29uZmlnS2V5OiAndXNlRGlyZWN0TWVzc2FnZXMnLFxuICBwYXJhbUtleTogUGFyYW1LZXlzLkRJUkVDVF9NRVNTQUdFLFxuICBuYW1lOiAnRGlyZWN0IE1lc3NhZ2U/JyxcbiAgZGVzY3JpcHRpb246ICdDb25uZWN0IGFuZCB1c2UgdGhlIFwiYnVuZGxlXFwnc1wiIGRpcmVjdGlvbiBjb25uZWN0aW9uIChhcyBvcHBvc2VkIHRvIHBvc3RtZXNzYWdlKS4gQ2FuIGJlIGJsb2NrZWQgYnkgQ09SUycsXG4gIHR5cGU6ICdib29sJyxcbn0sIHtcbiAgY29uZmlnS2V5OiAnYm9vdHN0cmFwVmVyc2lvbicsXG4gIHBhcmFtS2V5OiBQYXJhbUtleXMuQk9PVFNUUkFQX1ZFUlNJT04sXG4gIG5hbWU6ICdCb290c3RyYXAgVmVyc2lvbicsXG4gIGRlc2NyaXB0aW9uOiAnVGhlIHZlcnNpb24gb2YgdGhlIGJvb3RzdHJhcCAodGhlIHRoaW5nIHRoYXQgZG9lcyBpbml0aWFsIGNvbm5lY3QpIHRvIGxvYWQuIFVzZSBcImxvY2FsXCIgdG8gbG9hZCBsb2NhbCBib290c3RyYXAgcGFja2FnZXMnLFxuICB0eXBlOiAndGV4dCcsXG59LCB7XG4gIGNvbmZpZ0tleTogJ3dvcmtzaG9wJyxcbiAgcGFyYW1LZXk6IFBhcmFtS2V5cy5MT0FEX1dPUktTSE9QLFxuICBuYW1lOiAnTG9hZCBXb3Jrc2hvcD8nLFxuICBkZXNjcmlwdGlvbjogJ0xvYWQgV29ya3Nob3AgaW4gcGxhY2Ugb2YgU2hvd2Nhc2UnLFxuICB0eXBlOiAnYm9vbCcsXG59XTtcblxuZXhwb3J0IGZ1bmN0aW9uIGxvYWRTaG93Y2FzZShzaG93Y2FzZUVsZW1lbnQ6IEhUTUxJRnJhbWVFbGVtZW50LCBjb25maWc6IENvbmZpZyk6IHZvaWQge1xuICBjb25zdCBzaG93Y2FzZVVybCA9IGNvbmZpZy5sb2FkQnVuZGxlID9cbiAgICBnZXRCdW5kbGVVcmwoY29uZmlnKSA6XG4gICAgZ2V0RW1iZWRVcmwoY29uZmlnKTtcblxuICAvLyBzZXQgaW5pdGlhbCBwYXJhbXNcbiAgc2hvd2Nhc2VVcmwuc2VhcmNoID0gd2luZG93LmxvY2F0aW9uLnNlYXJjaDtcbiAgLy8gYXBwZW5kIG5lY2Vzc2FyeSBwYXJhbXMgZm9yIFNob3djYXNlIHRvIHJ1blxuICBzaG93Y2FzZVVybC5zZWFyY2hQYXJhbXMuc2V0KCdtJywgY29uZmlnLm1vZGVsKTtcbiAgc2hvd2Nhc2VVcmwuc2VhcmNoUGFyYW1zLnNldCgnYXBwbGljYXRpb25LZXknLCBkZWNvZGVVUklDb21wb25lbnQoY29uZmlnLmFwcGxpY2F0aW9uS2V5KSk7XG4gIHNob3djYXNlVXJsLnNlYXJjaFBhcmFtcy5zZXQoJ2FwaUhvc3QnLCBjb25maWcuYXBpSG9zdCk7XG4gIC8vIGlmIGEgU2h3b2Nhc2UgdmVyc2lvbiBvdmVycmlkZSB3YXMgc3BlY2lmaWVkLCB1c2UgdGhhdCBvdGhlcndpc2UsIGRlbGV0ZSBpdFxuICBpZiAoY29uZmlnLnZlcnNpb24pIHtcbiAgICBzaG93Y2FzZVVybC5zZWFyY2hQYXJhbXMuc2V0KCd2ZXJzaW9uJywgY29uZmlnLnZlcnNpb24pO1xuICB9IGVsc2Uge1xuICAgIHNob3djYXNlVXJsLnNlYXJjaFBhcmFtcy5kZWxldGUoJ3ZlcnNpb24nKTtcbiAgfVxuICBzaG93Y2FzZUVsZW1lbnQuc3JjID0gc2hvd2Nhc2VVcmwudG9TdHJpbmcoKTtcbn1cblxuZnVuY3Rpb24gZ2V0RW1iZWRVcmwoY29uZmlnOiBDb25maWcpOiBVUkwge1xuICBjb25zdCBwbGF5ZXJQYXRoID0gY29uZmlnLndvcmtzaG9wID8gJy93b3JrLycgOiAnL3Nob3cvJztcbiAgY29uc3Qgc2hvd2Nhc2VVcmwgPSBuZXcgVVJMKGNvbmZpZy5hcGlIb3N0ICsgcGxheWVyUGF0aCk7XG4gIHJldHVybiBzaG93Y2FzZVVybDtcbn1cblxuZnVuY3Rpb24gZ2V0QnVuZGxlVXJsKGNvbmZpZzogQ29uZmlnKTogVVJMIHtcbiAgY29uc3QgYnVuZGxlVmVyc2lvbk9yUGF0aCA9IGNvbmZpZy52ZXJzaW9uO1xuICBjb25zdCBpc0Z1bGxQYXRoID0gYnVuZGxlVmVyc2lvbk9yUGF0aC5zdGFydHNXaXRoKCdodHRwcycpO1xuICAvLyBzZXQgdGhlIGlmcmFtZSBzcmMgdG8gdGhlIHBhdGggcHJvdmlkZWQgb3IgZGVmYXVsdCB0byBzdGF0aWMubWF0dGVycG9ydC5jb21cbiAgY29uc3Qgc2hvd2Nhc2VVcmwgPSBuZXcgVVJMKGlzRnVsbFBhdGggP1xuICAgIGJ1bmRsZVZlcnNpb25PclBhdGggKycvc2hvd2Nhc2UuaHRtbCcgOlxuICAgICdodHRwczovL3N0YXRpYy5tYXR0ZXJwb3J0LmNvbS9zaG93Y2FzZS1zZGsvYnVuZGxlLycgKyBidW5kbGVWZXJzaW9uT3JQYXRoICsgJy9zaG93Y2FzZS5odG1sJyk7XG5cbiAgcmV0dXJuIHNob3djYXNlVXJsO1xufVxuXG5jb25zdCBsaWJMb2FkZXIgPSBuZXcgRHluYW1pY0xpYkxvYWRlcigpO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGxvYWRTZGtCb290c3RyYXAoYm9vdHN0cmFwVmVyc2lvbjogc3RyaW5nKTogUHJvbWlzZTxNUF9TREs+IHtcbiAgY29uc29sZS5sb2coJ0xvYWRpbmcgU0RLIGJvb3RzdHJhcCB2ZXJzaW9uOicsIGJvb3RzdHJhcFZlcnNpb24pO1xuXG4gIGZ1bmN0aW9uIGJ1aWxkQm9vdHN0cmFwUGF0aCgpIHtcbiAgICB0cnkge1xuICAgICAgLy8gd2lsbCB0aHJvdyBpZiBgYm9vdHN0cmFwVmVyc2lvbmAgaXMgbm90IGEgZnVsbHkgcXVhbGlmaWVkIFVSTFxuICAgICAgbmV3IFVSTChib290c3RyYXBWZXJzaW9uKTtcbiAgICAgIC8vIG90aGVyd2lzZSwgd2UgY2FuIGxvYWQgaXQgZGlyZWN0bHkgZnJvbSBzb3VyY2VcbiAgICAgIHJldHVybiBib290c3RyYXBWZXJzaW9uO1xuICAgIH0gY2F0Y2gge1xuICAgICAgcmV0dXJuICdodHRwczovL3N0YXRpYy5tYXR0ZXJwb3J0LmNvbS9zaG93Y2FzZS1zZGsvJyArIGJvb3RzdHJhcFZlcnNpb24gKyAnL3Nkay5qcyc7XG4gICAgfVxuICB9XG5cbiAgY29uc3QgbXBTZGsgPSBhd2FpdCBsaWJMb2FkZXIubG9hZDxNUF9TREs+KGJ1aWxkQm9vdHN0cmFwUGF0aCgpKTtcbiAgY29uc3QgYm9vdHN0cmFwID0gd2luZG93Lk1QX1NESyB8fCBtcFNkaztcbiAgLy8gY2xlYXIgb3V0IGFueSBNUF9TREsgb2JqZWN0c1xuICBkZWxldGUgKHdpbmRvdyBhcyBhbnkpLk1QX1NESztcblxuICByZXR1cm4gYm9vdHN0cmFwO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYnVpbGRIYXNoRnJvbUNvbmZpZyhjb25maWc6IENvbmZpZyk6IFVSTFNlYXJjaFBhcmFtcyB7XG4gIGNvbnN0IHBhcmFtcyA9IFtdO1xuICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhjb25maWcpKSB7XG4gICAgcGFyYW1zLnB1c2goYCR7a2V5fT0ke3ZhbHVlfWApO1xuICB9XG5cbiAgY29uc3QgaGFzaFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMocGFyYW1zLmpvaW4oJyYnKSk7XG4gIGNvbnN0IGtleXNUb0RlbGV0ZTogc3RyaW5nW10gPSBbXTtcbiAgZm9yIChjb25zdCBba2V5LCB2YWxdIG9mIGhhc2hQYXJhbXMpIHtcbiAgICBjb25zdCBwYXJhbURlc2NyaXB0b3IgPSBzdXBwb3J0ZWRQYXJhbXMuZmluZChkZXNjcmlwdG9yID0+IGRlc2NyaXB0b3IucGFyYW1LZXkgPT09IGtleSk7XG4gICAgaWYgKHBhcmFtRGVzY3JpcHRvcj8udHlwZSA9PT0gJ3RleHQnKSB7XG4gICAgICBpZiAodmFsID09PSAnJykge1xuICAgICAgICBrZXlzVG9EZWxldGUucHVzaChrZXkpO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAocGFyYW1EZXNjcmlwdG9yPy50eXBlID09PSAnYm9vbCcpIHtcbiAgICAgIGlmICh2YWwgPT09ICd0cnVlJykge1xuICAgICAgICBoYXNoUGFyYW1zLnNldChrZXksICcxJyk7XG4gICAgICB9XG4gICAgICBpZiAodmFsID09PSAnZmFsc2UnKSB7XG4gICAgICAgIGtleXNUb0RlbGV0ZS5wdXNoKGtleSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGZvciAoY29uc3QgdG9EZWxldGUgb2Yga2V5c1RvRGVsZXRlKSB7XG4gICAgaGFzaFBhcmFtcy5kZWxldGUodG9EZWxldGUpO1xuICB9XG5cbiAgLy8gc3BlY2lhbCBoYW5kbGVycyBmb3JcbiAgaWYgKGhhc2hQYXJhbXMuZ2V0KCdib290c3RyYXBWZXJzaW9uJykgPT09ICdsb2NhbCcpe1xuICAgIGhhc2hQYXJhbXMuZGVsZXRlKCdib290c3RyYXBWZXJzaW9uJyk7XG4gIH1cbiAgaWYgKGhhc2hQYXJhbXMuZ2V0KCd2ZXJzaW9uJykgPT09ICdsb2NhbCcpIHtcbiAgICBoYXNoUGFyYW1zLmRlbGV0ZSgndmVyc2lvbicpO1xuICB9XG4gIGlmIChoYXNoUGFyYW1zLmdldCgnZGVsYXknKSA9PT0gJzAnKSB7XG4gICAgaGFzaFBhcmFtcy5kZWxldGUoJ2RlbGF5Jyk7XG4gIH1cblxuICByZXR1cm4gaGFzaFBhcmFtcztcbn1cbiIsImV4cG9ydCB0eXBlIHsgRGltZW5zaW9ucyB9IGZyb20gJy4vRGltZW5zaW9ucyc7XG5pbXBvcnQgT3V0T2ZSYW5nZUV4Y2VwdGlvbiBmcm9tICdjd2YvZXhjZXB0aW9uL091dE9mUmFuZ2VFeGNlcHRpb24nO1xuXG5pbXBvcnQgTG9nZ2VyIGZyb20gJy4vbG9nZ2VyJztcbmV4cG9ydCB7IExvZ2dlciB9O1xuZXhwb3J0IHsgTG9nTGV2ZWwgfSBmcm9tICcuL2xvZ2dlcic7XG5cbmltcG9ydCBPcmRlcmVkTWFwIGZyb20gJy4vT3JkZXJlZE1hcCc7XG5leHBvcnQgeyBPcmRlcmVkTWFwIH07XG5cbmV4cG9ydCB7IEFuaW1hdGVkTnVtYmVyIH0gZnJvbSAnLi9hbmltYXRpb24nO1xuZXhwb3J0IHtcbiAgaXNCb3QsXG4gIGluSWZyYW1lLFxuICBpc01vYmlsZSxcbiAgZ2V0RnJvbUxvY2FsU3RvcmFnZSxcbiAgc2F2ZVRvTG9jYWxTdG9yYWdlLFxufSBmcm9tICcuL2Jyb3dzZXInO1xuZXhwb3J0IHsgcmFuZG9tVmVjdG9yNCB9IGZyb20gJy4vY29sb3InO1xuZXhwb3J0IHsgY29weU9yQ2xvbmVUaHJlZU9iaiB9IGZyb20gJy4vY29weU9yQ2xvbmVUaHJlZU9iaic7XG5leHBvcnQgKiBmcm9tICcuL2Vhc2luZyc7XG5leHBvcnQgeyBFeHBpcmluZ1Jlc291cmNlIH0gZnJvbSAnLi9FeHBpcmluZ1Jlc291cmNlJztcbmV4cG9ydCB7IHRyYWNrUmVzcG9uc2VQcm9ncmVzcyB9IGZyb20gJy4vZmV0Y2hQcm9ncmVzcyc7XG5leHBvcnQgKiBmcm9tICcuL2ZpbHRlcnMnO1xuZXhwb3J0IHsgbWVyZ2VCdWZmZXJHZW9tZXRyaWVzLCBnZXRCb3VuZGluZ0JveCB9IGZyb20gJy4vZ2VvbWV0cnknO1xuZXhwb3J0IHsgdHlwZSBTbmFwRmVhdHVyZUZpbHRlciB9IGZyb20gJy4vTGluZU9jdHJlZSc7XG5leHBvcnQgeyBoYXNoQ29kZSB9IGZyb20gJy4vcmFuZG9tJztcbmV4cG9ydCB7IGxvYWRJbWFnZSB9IGZyb20gJy4vdGV4dHVyZSc7XG5leHBvcnQgeyB0aHJvdHRsZSB9IGZyb20gJy4vdGhyb3R0bGUnO1xuZXhwb3J0IHtcbiAgbWFrZVVybCxcbiAgcGFyc2VTaWRVcmwsXG4gIHNhbml0aXplQXBpSG9zdFVybCxcbn0gZnJvbSAnLi91cmwnO1xuXG5leHBvcnQgeyBjbGFtcCB9IGZyb20gJy4vTWF0aC9jbGFtcCc7XG5leHBvcnQgeyByZW1hcEluUmFuZ2UgfSBmcm9tICcuL01hdGgvbWF0aCc7XG5cbmV4cG9ydCBjb25zdCBkZWxheSA9IGZ1bmN0aW9uKHRpbWU6IG51bWJlcik6IFByb21pc2U8dm9pZD4ge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICBzZXRUaW1lb3V0KHJlc29sdmUsIHRpbWUpO1xuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBjYW5jZWxsYWJsZURlbGF5ID0gKHRpbWU6IG51bWJlcik6IHsgcmVzb2x2ZUVhcmx5OiAoKSA9PiB2b2lkLCBjYW5jZWw6ICgpID0+IHZvaWQsIHByb21pc2U6IFByb21pc2U8YW55PiB9ID0+IHtcbiAgbGV0IHRpbWVvdXRJbmRleCA9IC0xO1xuICBsZXQgcmVzb2x2ZVByb21pc2U6ICgpID0+IHZvaWQ7XG4gIGNvbnN0IHByb21pc2UgPSBuZXcgUHJvbWlzZTx2b2lkPigocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgcmVzb2x2ZVByb21pc2UgPSByZXNvbHZlO1xuICAgIHRpbWVvdXRJbmRleCA9IHdpbmRvdy5zZXRUaW1lb3V0KHJlc29sdmUsIHRpbWUpO1xuICB9KS50aGVuKCgpID0+IHtcbiAgICB0aW1lb3V0SW5kZXggPSAtMTtcbiAgfSk7XG5cbiAgY29uc3QgZW5kID0gKHJlc29sdmU6IGJvb2xlYW4pID0+IHtcbiAgICBpZiAodGltZW91dEluZGV4ICE9PSAtMSkge1xuICAgICAgd2luZG93LmNsZWFyVGltZW91dCh0aW1lb3V0SW5kZXgpO1xuICAgICAgaWYgKHJlc29sdmUpIHJlc29sdmVQcm9taXNlKCk7XG4gICAgICB0aW1lb3V0SW5kZXggPSAtMTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBwcm9taXNlLFxuICAgIHJlc29sdmVFYXJseTogKCkgPT4ge1xuICAgICAgZW5kKHRydWUpO1xuICAgIH0sXG4gICAgY2FuY2VsOiAoKSA9PiB7XG4gICAgICBlbmQoZmFsc2UpO1xuICAgIH0sXG4gIH07XG59O1xuXG5leHBvcnQgY29uc3Qgbm9ybWFsaXplVXJsID0gZnVuY3Rpb24gKHVybDogc3RyaW5nKTogc3RyaW5nIHtcbiAgcmV0dXJuIHVybC5yZXBsYWNlKCdodHRwczovLycsICdodHRwOi8vJyk7XG59O1xuXG5leHBvcnQgY29uc3QgZG9tYWluRnJvbVVybCA9IGZ1bmN0aW9uICh1cmw6IHN0cmluZyk6IHN0cmluZyB7XG4gIGNvbnN0IG1hdGNoID0gL14oW146XSo6XFwvXFwvKT8od3d3XFwuKT8oW14vXSspLy5leGVjKHVybCk7XG4gIGlmIChtYXRjaCkge1xuICAgIHJldHVybiBtYXRjaFszXTtcbiAgfVxuICByZXR1cm4gdXJsO1xufTtcblxuZXhwb3J0IGNvbnN0IGF2ZXJhZ2UgPSBmdW5jdGlvbihpdGVyYWJsZTogYW55W10sIGF0dHJpYnV0ZT86IHN0cmluZyk6IG51bWJlciB8IG51bGwge1xuXG4gIGlmIChpdGVyYWJsZS5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGxldCBzdW0gPSAwO1xuICBsZXQgY291bnQgPSAwO1xuXG4gIGZvciAobGV0IGl0ZW0gb2YgaXRlcmFibGUpIHtcbiAgICBpdGVtID0gYXR0cmlidXRlID8gaXRlbVthdHRyaWJ1dGVdIDogaXRlbTtcbiAgICBzdW0gKz0gaXRlbTtcbiAgICBjb3VudCsrO1xuICB9XG5cbiAgcmV0dXJuIHN1bSAvIGNvdW50O1xuXG59O1xuXG5leHBvcnQgY29uc3QgdW5pcXVlS2V5cyA9IGZ1bmN0aW9uIChhcnI6IGFueVtdKTogYW55W10ge1xuICBjb25zdCB1bmlxdWU6IGFueSA9IHt9O1xuICBmb3IgKGNvbnN0IGl0ZW0gb2YgYXJyKSB7XG4gICAgdW5pcXVlW2l0ZW1dID0gaXRlbTtcbiAgfVxuICByZXR1cm4gdW5pcXVlO1xufTtcblxuZXhwb3J0IGNvbnN0IGNvdW50VW5pcXVlID0gZnVuY3Rpb24gKGFycjogYW55W10pOiBudW1iZXIge1xuICByZXR1cm4gT2JqZWN0LmtleXModW5pcXVlS2V5cyhhcnIpKS5sZW5ndGg7XG59O1xuXG4vLyBDb25zaWRlcnMgYSBzdHJpbmcgd2l0aCBvbmx5IHNwYWNlcyBhbmQvb3IgbmV3bGluZXMgYXMgZW1wdHlcbmV4cG9ydCBjb25zdCBlbXB0eVN0cmluZ1ZhbHVlID0gZnVuY3Rpb24oc3RyOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgcmV0dXJuICEoc3RyLnJlcGxhY2UoL1xcbi9nLCAnJykudHJpbSgpLmxlbmd0aCk7XG59O1xuXG5leHBvcnQgY29uc3QgZXF1YWxMaXN0cyA9IGZ1bmN0aW9uKGE6IGFueVtdLCBiOiBhbnlbXSk6IGJvb2xlYW4ge1xuICBpZiAoYS5sZW5ndGggIT09IGIubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBhLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGFbaV0gIT09IGJbaV0pIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59O1xuXG5leHBvcnQgY29uc3QgZXF1YWxTZXRzID0gZnVuY3Rpb248VCA9IGFueT4oYTogU2V0PFQ+LCBiOiBTZXQ8VD4pOiBib29sZWFuIHtcbiAgaWYgKGEuc2l6ZSAhPT0gYi5zaXplKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgZm9yIChjb25zdCB2YWwgb2YgYSkge1xuICAgIGlmICghYi5oYXModmFsKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufTtcblxuLyoqXG4gKiBQaWNrIHRoZSBpdGVtIGF0IHRoZSBudGggcGVyY2VudGlsZVxuICpcbiAqIEBwYXJhbSBsaXN0XG4gKiBAcGFyYW0gbiAwLTk5LCA1MCBiZWluZyBtZWRpYW5cbiAqIEBwYXJhbSBzb3J0ICh0cnVlKSBTZXQgdG8gZmFsc2UgdG8gc2tpcCB0aGUgc29ydGluZyxcbiAqICAgICAgICAgICAgICBpZiB5b3Uga25vdyB0aGUgbGlzdCBpcyBzb3J0ZWRcbiAqL1xuZXhwb3J0IGNvbnN0IHBlcmNlbnRpbGUgPSBmdW5jdGlvbiAoXG4gIGxpc3Q6IG51bWJlcltdLCBuOiBudW1iZXIsIHNvcnQ6IGJvb2xlYW4gPSB0cnVlKTogbnVtYmVyIHwgbnVsbCB7XG4gIGlmIChsaXN0Lmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGlmIChzb3J0KSB7XG4gICAgbGlzdC5zb3J0KGZ1bmN0aW9uKGEsIGIpIHtcbiAgICAgIHJldHVybiBhIC0gYjsgLy8gT3RoZXJ3aXNlIGl0IGRvZXMgYW4gYXNjaWkgY29tcGFyaXNvbi4gWWVzLCByZWFsbHkhXG4gICAgfSk7XG4gIH1cbiAgY29uc3QgZmFjdG9yID0gbiAvIDEwMC4wO1xuICBjb25zdCBpID0gTWF0aC5mbG9vcihsaXN0Lmxlbmd0aCAqIGZhY3Rvcik7XG4gIHJldHVybiBsaXN0W2ldO1xufTtcblxuLy8gQXJyYXkuc29ydCBpcyBub3Qgc3RhYmxlLCB0aGlzIG9uZSBpc1xuZXhwb3J0IGNvbnN0IHN0YWJsZVNvcnQgPSBmdW5jdGlvbihsaXN0OiBhbnlbXSwgY21wOiAodmFsdWVBOiBhbnksIHZhbHVlQjogYW55KSA9PiBhbnkpOiBhbnlbXSB7XG4gIHJldHVybiBsaXN0Lm1hcChmdW5jdGlvbih2YWx1ZSwgaW5kZXgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdmFsdWUsXG4gICAgICBpbmRleCxcbiAgICB9O1xuICB9KS5zb3J0KGZ1bmN0aW9uKGEsIGIpIHtcbiAgICBjb25zdCByZXMgPSBjbXAoYS52YWx1ZSwgYi52YWx1ZSk7XG4gICAgaWYgKHJlcyAhPT0gMCkge1xuICAgICAgcmV0dXJuIHJlcztcbiAgICB9XG4gICAgLy8gVGhpcyBpcyB0aGUgc3RhYmxlIHBhcnQgLSBpZiB0aGUgY21wIGlzIDAsIHdlIHNvcnRcbiAgICAvLyBvbiB0aGUgaW5kZXgsIHdoaWNoIHdpbGwga2VlcCBpdCBpbiB0aGUgbm9ybWFsIG9yZGVyXG4gICAgcmV0dXJuIGEuaW5kZXggLSBiLmluZGV4O1xuICB9KS5tYXAoZnVuY3Rpb24oaXRlbSkge1xuICAgIHJldHVybiBpdGVtLnZhbHVlO1xuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBmb3JtYXREYXRlID0gZnVuY3Rpb24gKGRhdGU6IERhdGUpOiBzdHJpbmcge1xuICByZXR1cm4gW1xuICAgIGRhdGUuZ2V0RnVsbFllYXIoKSxcbiAgICBkYXRlLmdldE1vbnRoKCkgKyAxLCAvLyBaZXJvIGluZGV4ZWQgbW9udGhzXG4gICAgZGF0ZS5nZXREYXRlKCksXG4gIF0uam9pbignLScpO1xufTtcblxuLyoqIFJldHVybnMgdGhlIHNwZWNpZmljIGZvcm1hdCB1c2VkIGFzIHRoZSBkZWZhdWx0IG5hbWUgZm9yIHNuYXBzaG90cyAqL1xuZXhwb3J0IGNvbnN0IGZvcm1hdERhdGV0aW1lID0gZnVuY3Rpb24gKGRhdGV0aW1lOiBEYXRlKTogc3RyaW5nIHtcbiAgcmV0dXJuIFtcbiAgICBwYWRMZWZ0KGRhdGV0aW1lLmdldE1vbnRoKCkgKyAxKSwgJy4nLCAvLyBaZXJvIGluZGV4ZWQgbW9udGhzXG4gICAgcGFkTGVmdChkYXRldGltZS5nZXREYXRlKCkpLCAnLicsXG4gICAgZGF0ZXRpbWUuZ2V0RnVsbFllYXIoKSwgJ18nLFxuICAgIHBhZExlZnQoZGF0ZXRpbWUuZ2V0SG91cnMoKSksICcuJyxcbiAgICBwYWRMZWZ0KGRhdGV0aW1lLmdldE1pbnV0ZXMoKSksICcuJyxcbiAgICBwYWRMZWZ0KGRhdGV0aW1lLmdldFNlY29uZHMoKSksXG4gIF0uam9pbignJyk7XG59O1xuXG5leHBvcnQgY29uc3QgcGFkTGVmdCA9IGZ1bmN0aW9uKG51bWJlclRvUGFkOiBudW1iZXIsIGRpZ2l0czogbnVtYmVyID0gMiwgY2hyOiBzdHJpbmcgPSAnMCcsIHJhZGl4OiBudW1iZXIgPSAxMCk6IHN0cmluZyB7XG4gIGNvbnN0IHBhcnNlZE51bWJlciA9IG51bWJlclRvUGFkLnRvU3RyaW5nKHJhZGl4KTtcbiAgY29uc3QgbGVuID0gKGRpZ2l0cyAtIHBhcnNlZE51bWJlci5sZW5ndGgpICsgMTtcbiAgcmV0dXJuIGxlbiA+IDAgPyBuZXcgQXJyYXkobGVuKS5qb2luKGNocikgKyBwYXJzZWROdW1iZXIgOiBwYXJzZWROdW1iZXI7XG59O1xuXG5leHBvcnQgY29uc3QgbnRoID0gZnVuY3Rpb24gKG46IG51bWJlcik6IHN0cmluZyB7XG4gIG4gPSBuICUgMTA7XG4gIHN3aXRjaCAobikge1xuICAgIGNhc2UgMTogcmV0dXJuIG4gKyAnc3QnO1xuICAgIGNhc2UgMjogcmV0dXJuIG4gKyAnbmQnO1xuICAgIGNhc2UgMzogcmV0dXJuIG4gKyAncmQnO1xuICB9XG4gIHJldHVybiBuICsgJ3RoJztcbn07XG5cbmV4cG9ydCBjb25zdCB3YWl0ID0gKHRpbWU6IG51bWJlcik6IFByb21pc2U8dm9pZD4gPT4ge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIF9yZWplY3QpID0+IHtcbiAgICBzZXRUaW1lb3V0KHJlc29sdmUsIHRpbWUpO1xuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBib29sZWFuTWFwRnJvbUxpc3QgPSAoZXhjbHVkZTogc3RyaW5nW10gPSBbXSk6IHsgW2tleTogc3RyaW5nXTogYm9vbGVhbiB9ID0+IHtcbiAgY29uc3QgZXhjbHVkZU1hcDogeyBba2V5OiBzdHJpbmddOiBib29sZWFuIH0gPSB7fTtcbiAgZm9yIChjb25zdCBzd2VlcElkIG9mIGV4Y2x1ZGUpIHtcbiAgICBleGNsdWRlTWFwW3N3ZWVwSWRdID0gdHJ1ZTtcbiAgfVxuICByZXR1cm4gZXhjbHVkZU1hcDtcbn07XG5cbi8qKlxuICogV3JhcHMgT2JqZWN0Lmhhc093blByb3BlcnR5IHRvIHJlcXVpcmUgdGhlIHByb3BlcnR5IHRvIGJlIG9uIFQgaW4gdGhlIGZpcnN0IHBsYWNlXG4gKiBAcGFyYW0ge1R9IG9ialxuICogQHBhcmFtIHtrZXlvZiBUfSBrZXlcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5leHBvcnQgZnVuY3Rpb24gaGFzT3duUHJvcGVydHk8VCBleHRlbmRzIFJlY29yZDxzdHJpbmcsIGFueT4+KG9iajogVCwga2V5OiBrZXlvZiBUKTogYm9vbGVhbiB7XG4gIHJldHVybiBvYmouaGFzT3duUHJvcGVydHkoa2V5KTtcbn1cblxuZXhwb3J0IGNvbnN0IHRydW5jYXRlU3RyaW5nID0gKHN0cjogc3RyaW5nLCBtYXhMZW50aDogbnVtYmVyLCBwb3N0Zml4OiBzdHJpbmcgPSAnLi4uJyk6IHN0cmluZyA9PiB7XG4gIGlmIChzdHIubGVuZ3RoIDw9IG1heExlbnRoKSB7XG4gICAgcmV0dXJuIHN0cjtcbiAgfVxuICByZXR1cm4gYCR7c3RyLnN1YnN0cigwLCBtYXhMZW50aCl9JHtwb3N0Zml4fWA7XG59O1xuXG4vKipcbiAqIFN3YXAgdHdvIGJpdHMgd2l0aGluIGEgMzItYml0IG51bWJlciAoZHVlIHRvIEpTIGxpbWl0YXRpb25zKVxuICogVGhlIGlucHV0IGFuZCBvdXRwdXQgc2hvdWxkIGJlIHRyZWF0ZWQgYXMgdW5zaWduZWQgdmFsdWVzXG4gKiBAcGFyYW0ge251bWJlcn0gdmFsdWVcbiAqIEBwYXJhbSB7bnVtYmVyfSBiaXQxXG4gKiBAcGFyYW0ge251bWJlcn0gYml0MlxuICogQHJldHVybnMge251bWJlcn0gVGhlIHVuc2lnbmVkIHJlc3VsdCBhZnRlciBzd2FwcGluZyBgYml0MWAgYW5kIGBiaXQyYCBpbiBgdmFsdWVgXG4gKi9cbmV4cG9ydCBjb25zdCBzd2FwQml0cyA9ICh2YWx1ZTogbnVtYmVyLCBiaXQxOiBudW1iZXIsIGJpdDI6IG51bWJlcik6IG51bWJlciA9PiB7XG4gIGNvbnN0IHZhbHVlSW5SYW5nZSA9IE1hdGguYWJzKHZhbHVlKSA8ICgweGZmZmZmZmZmID4+PiAwKTtcbiAgY29uc3QgYml0MUluUmFuZ2UgPSBiaXQxIDwgMzI7XG4gIGNvbnN0IGJpdDJJblJhbmdlID0gYml0MiA8IDMyO1xuICBpZiAoIXZhbHVlSW5SYW5nZSB8fCAhYml0MUluUmFuZ2UgfHwgIWJpdDJJblJhbmdlKSB7XG4gICAgdGhyb3cgbmV3IE91dE9mUmFuZ2VFeGNlcHRpb24oJ2FyZ3VtZW50IG91dCBvZiByYW5nZScpO1xuICB9XG4gIGNvbnN0IHN3YXBwZWRCaXRzID0gKHZhbHVlID4+PiBiaXQxIF4gdmFsdWUgPj4+IGJpdDIpICYgMTtcbiAgdmFsdWUgPSB2YWx1ZSBeIChzd2FwcGVkQml0cyA8PCBiaXQxIHwgc3dhcHBlZEJpdHMgPDwgYml0Mik7XG5cbiAgcmV0dXJuIHZhbHVlID4+PiAwO1xufTtcblxuLyoqIENvdW50cyB0aGUgbnVtYmVyIG9mIGJpdHMgaW4gdmFsdWUgKi9cbmV4cG9ydCBmdW5jdGlvbiBjb3VudEJpdHModmFsdWU6IG51bWJlcik6IG51bWJlciB7XG4gIGxldCBjb3VudCA9IDA7XG4gIHdoaWxlICh2YWx1ZSkge1xuICAgIGNvdW50ICs9IHZhbHVlICYgMTtcbiAgICB2YWx1ZSA+Pj0gMTtcbiAgfVxuICByZXR1cm4gY291bnQ7XG59XG5cbmV4cG9ydCBjb25zdCBoYXNoID0gKCgpID0+IHtcbiAgY29uc3QgbWFwOiBEaWN0PG51bWJlcj4gPSB7fTtcbiAgcmV0dXJuIChmcm9tOiBzdHJpbmcpOiBudW1iZXIgPT4ge1xuICAgIGlmIChtYXBbZnJvbV0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgY29uc3QgaCA9IGZyb20uc3BsaXQoJycpLnJlZHVjZSgoYSwgYikgPT4geyBhID0gKChhIDw8IDUpIC0gYSkgKyBiLmNoYXJDb2RlQXQoMCk7IHJldHVybiBhICYgYTsgfSwgMCk7XG4gICAgICBtYXBbZnJvbV0gPSBoO1xuICAgIH1cbiAgICByZXR1cm4gbWFwW2Zyb21dO1xuICB9O1xufSkoKTtcbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3JlYXRlUm9vdCB9IGZyb20gJ3JlYWN0LWRvbS9jbGllbnQnO1xuaW1wb3J0IHsgdHlwZSBQYXJhbURlc2NyaXB0b3IsIHR5cGUgQ29uZmlnLCBzdXBwb3J0ZWRQYXJhbXMgfSBmcm9tICcuL3V0aWxzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbmZpZ3VyYXRvcihjb250YWluZXI6IEhUTUxFbGVtZW50LCBjb25maWc6IENvbmZpZywgb25Db25maWdDaGFuZ2U6IChoYXNoOiBDb25maWcpID0+IHZvaWQpOiAoKSA9PiB2b2lkIHtcbiAgY29uc3Qgcm9vdCA9IGNyZWF0ZVJvb3QoY29udGFpbmVyKTtcbiAgcm9vdC5yZW5kZXIoXG4gICAgPENvbmZpZ3VyYXRvciBjb25maWc9e2NvbmZpZ30gb25Db25maWdDaGFuZ2U9e29uQ29uZmlnQ2hhbmdlfSAvPlxuICApO1xuXG4gIHJldHVybiAoKSA9PiByb290LnVubW91bnQoKTtcbn1cblxudHlwZSBDb25maWdFbnRyeSA9IHtcbiAgdmFsdWU6IENvbmZpZ1trZXlvZiBDb25maWddO1xuICBtb2RpZmllZFZhbHVlOiBDb25maWdba2V5b2YgQ29uZmlnXTtcbn07XG5cbmZ1bmN0aW9uIENvbmZpZ3VyYXRvcih7IGNvbmZpZywgb25Db25maWdDaGFuZ2UgfTogeyBjb25maWc6IENvbmZpZzsgb25Db25maWdDaGFuZ2U6IChoYXNoOiBDb25maWcpID0+IHZvaWQgfSk6IEpTWC5FbGVtZW50IHtcbiAgY29uc3Qgb3ZlcmxheVJlZiA9IHVzZVJlZjxIVE1MRGl2RWxlbWVudD4obnVsbCk7XG4gIGNvbnN0IFtzaG93UGFuZWwsIHNldFNob3dQYW5lbF0gPSB1c2VTdGF0ZShmYWxzZSk7XG5cbiAgY29uc3Qgc3RhdGU6IEFycmF5PFtzdHJpbmcsIENvbmZpZ0VudHJ5XT4gPSBPYmplY3QuZW50cmllcyhjb25maWcpLm1hcCgoW2tleSwgdmFsdWVdKSA9PiBbXG4gICAga2V5LCB7XG4gICAgICB2YWx1ZSxcbiAgICAgIG1vZGlmaWVkVmFsdWU6IHZhbHVlLFxuICAgIH0sXG4gIF0pO1xuICBjb25zdCBbY29uZmlnU3RhdGUsIHNldENvbmZpZ10gPSB1c2VTdGF0ZShPYmplY3QuZnJvbUVudHJpZXMoc3RhdGUpIGFzIFJlY29yZDxrZXlvZiBDb25maWcsIENvbmZpZ0VudHJ5Pik7XG5cbiAgY29uc3QgaGlkZVNldHRpbmdzID0gdXNlQ2FsbGJhY2soKGV2ZW50OiBSZWFjdC5Nb3VzZUV2ZW50PEhUTUxEaXZFbGVtZW50PikgPT4ge1xuICAgIGlmIChldmVudC50YXJnZXQgPT09IG92ZXJsYXlSZWYuY3VycmVudCkge1xuICAgICAgc2V0U2hvd1BhbmVsKGZhbHNlKTtcbiAgICB9XG4gIH0sIFtdKTtcbiAgY29uc3QgdG9nZ2xlU2V0dGluZ3NQYW5lbCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBzZXRTaG93UGFuZWwoIXNob3dQYW5lbCk7XG4gIH0sIFtzaG93UGFuZWxdKTtcbiAgY29uc3QgdXBkYXRlQ29uZmlnID0gdXNlQ2FsbGJhY2soKGtleToga2V5b2YgQ29uZmlnLCB2YWx1ZTogQ29uZmlnW2tleW9mIENvbmZpZ10pID0+IHtcbiAgICBjb25zdCBjdXJyZW50VmFsdWVzID0gY29uZmlnU3RhdGVba2V5XTtcbiAgICBjdXJyZW50VmFsdWVzLm1vZGlmaWVkVmFsdWUgPSB2YWx1ZTtcbiAgICBzZXRDb25maWcoeyAuLi5jb25maWdTdGF0ZSB9KTtcbiAgfSwgW2NvbmZpZ1N0YXRlXSk7XG4gIGNvbnN0IGFwcGx5Q29uZmlnID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGNvbnN0IHN0YXRlQ2hhbmdlZCA9ICFPYmplY3QudmFsdWVzKGNvbmZpZ1N0YXRlKS5yZWR1Y2UoKGVxdWFsLCBlbnRyeSkgPT4gZXF1YWwgJiYgZW50cnkudmFsdWUgPT09IGVudHJ5Lm1vZGlmaWVkVmFsdWUsIHRydWUpO1xuICAgIGlmIChzdGF0ZUNoYW5nZWQpIHtcbiAgICAgIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKGNvbmZpZ1N0YXRlKSkge1xuICAgICAgICBjb25zdCBjb25maWdFbnRyeSA9IGNvbmZpZ1N0YXRlW2tleSBhcyBrZXlvZiBDb25maWddO1xuICAgICAgICBjb25maWdFbnRyeS52YWx1ZSA9IGNvbmZpZ0VudHJ5Lm1vZGlmaWVkVmFsdWU7XG4gICAgICB9XG4gICAgICBvbkNvbmZpZ0NoYW5nZShidWlsZENvbmZpZyhjb25maWdTdGF0ZSkpO1xuICAgICAgc2V0Q29uZmlnKHsuLi5jb25maWdTdGF0ZSB9KTtcbiAgICB9XG4gIH0sIFtjb25maWdTdGF0ZSwgb25Db25maWdDaGFuZ2VdKTtcbiAgY29uc3QgcmVzZXRDb25maWcgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXMoY29uZmlnU3RhdGUpKSB7XG4gICAgICBjb25zdCBjb25maWdFbnRyeSA9IGNvbmZpZ1N0YXRlW2tleSBhcyBrZXlvZiBDb25maWddO1xuICAgICAgY29uZmlnRW50cnkubW9kaWZpZWRWYWx1ZSA9IGNvbmZpZ0VudHJ5LnZhbHVlO1xuICAgIH1cbiAgICBzZXRDb25maWcoeyAuLi5jb25maWdTdGF0ZSB9KTtcbiAgfSwgW2NvbmZpZ1N0YXRlXSk7XG5cbiAgY29uc3Qgc2V0dGluZ3NPdmVybGF5U3R5bGU6IFJlYWN0LkNTU1Byb3BlcnRpZXMgPSB7XG4gICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgd2lkdGg6ICcxMDAlJyxcbiAgICBwb2ludGVyRXZlbnRzOiBzaG93UGFuZWwgPyAnYWxsJyA6ICdub25lJyxcbiAgfTtcbiAgY29uc3QgdG9nZ2xlU3R5bGU6IFJlYWN0LkNTU1Byb3BlcnRpZXMgPSB7XG4gICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgdG9wOiAwLFxuICAgIHJpZ2h0OiAwLFxuICAgIGhlaWdodDogNjAsXG4gICAgd2lkdGg6IDYwLFxuICAgIGZvbnRTaXplOiAnNjBweCcsXG4gICAgbGluZUhlaWdodDogJzYwcHgnLFxuICAgIGNvbG9yOiAnd2hpdGUnLFxuICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXG4gIH07XG4gIGNvbnN0IHRvZ2dsZUNvb2tpZUN1dHRlclN0eWxlOiBSZWFjdC5DU1NQcm9wZXJ0aWVzID0ge1xuICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgIHRvcDogMCxcbiAgICBoZWlnaHQ6IDYwLFxuICAgIHdpZHRoOiA2MCxcbiAgICBmb250U2l6ZTogJzUwcHgnLFxuICAgIGxpbmVIZWlnaHQ6ICc2MHB4JyxcbiAgICBjb2xvcjogJ2JsYWNrJyxcbiAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgIHBvaW50ZXJFdmVudHM6ICdub25lJyxcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8ZGl2IHJlZj17b3ZlcmxheVJlZn0gc3R5bGU9e3NldHRpbmdzT3ZlcmxheVN0eWxlfSBvbkNsaWNrPXtoaWRlU2V0dGluZ3N9IC8+XG4gICAgICA8ZGl2IHN0eWxlPXt0b2dnbGVTdHlsZX0gb25DbGljaz17dG9nZ2xlU2V0dGluZ3NQYW5lbH0+JiM5ODgxO1xuICAgICAgICA8ZGl2IHN0eWxlPXt0b2dnbGVDb29raWVDdXR0ZXJTdHlsZX0+JiM5ODgxOzwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgICB7c2hvd1BhbmVsICYmXG4gICAgICAgIDxTZXR0aW5nc1BhbmVsIGNvbmZpZz17Y29uZmlnU3RhdGV9IHVwZGF0ZUNvbmZpZz17dXBkYXRlQ29uZmlnfSBhcHBseUNvbmZpZz17YXBwbHlDb25maWd9IHJlc2V0Q29uZmlnPXtyZXNldENvbmZpZ30gLz5cbiAgICAgIH1cbiAgICA8Lz5cbiAgKTtcbn1cblxudHlwZSBTZXR0aW5nc1BhbmVsUHJvcHMgPSB7XG4gIGNvbmZpZzogUmVjb3JkPGtleW9mIENvbmZpZywgQ29uZmlnRW50cnk+O1xuICB1cGRhdGVDb25maWc6IChrZXk6IHN0cmluZywgdmFsdWU6IENvbmZpZ1trZXlvZiBDb25maWddKSA9PiB2b2lkO1xuICBhcHBseUNvbmZpZzogKCkgPT4gdm9pZDtcbiAgcmVzZXRDb25maWc6ICgpID0+IHZvaWQ7XG59XG5mdW5jdGlvbiBTZXR0aW5nc1BhbmVsKHsgY29uZmlnLCB1cGRhdGVDb25maWcsIGFwcGx5Q29uZmlnLCByZXNldENvbmZpZyB9OiBTZXR0aW5nc1BhbmVsUHJvcHMpIHtcbiAgY29uc3QgcGFuZWxTdHlsZTogUmVhY3QuQ1NTUHJvcGVydGllcyA9IHtcbiAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICB0b3A6IDEwLFxuICAgIHJpZ2h0OiAxMCxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICd3aGl0ZScsXG4gICAgYm9yZGVyOiAnMXB4IHNvbGlkIGJsYWNrJyxcbiAgICB3aWR0aDogMzAwLFxuICAgIHBhZGRpbmc6IDgsXG4gIH07XG4gIGNvbnN0IGJ1dHRvblN0eWxlOiBSZWFjdC5DU1NQcm9wZXJ0aWVzID0ge1xuICAgIG1hcmdpbjogJzAgNCcsXG4gIH07XG4gIGNvbnN0IG1vZGlmaWVkSW5wdXRTdHlsZTogUmVhY3QuQ1NTUHJvcGVydGllcyA9IHtcbiAgICBvdXRsaW5lOiAnMXB4IHNvbGlkIHJlZCcsXG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IHN0eWxlPXtwYW5lbFN0eWxlfT5cbiAgICAgIHtzdXBwb3J0ZWRQYXJhbXMubWFwKCh7Y29uZmlnS2V5LCBwYXJhbUtleSwgbmFtZSwgdHlwZSwgZGVzY3JpcHRpb259KSA9PiB7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRWYWx1ZSA9IGNvbmZpZ1tjb25maWdLZXldLnZhbHVlO1xuICAgICAgICBjb25zdCBtb2RpZmllZFZhbHVlID0gY29uZmlnW2NvbmZpZ0tleV0ubW9kaWZpZWRWYWx1ZTtcbiAgICAgICAgY29uc3QgZGlzcGxheWVkVmFsdWUgPSBtb2RpZmllZFZhbHVlICE9PSB1bmRlZmluZWQgPyBtb2RpZmllZFZhbHVlIDogY3VycmVudFZhbHVlO1xuICAgICAgICBjb25zdCBpbnB1dFN0eWxlID0gbW9kaWZpZWRWYWx1ZSAhPT0gY3VycmVudFZhbHVlID8gbW9kaWZpZWRJbnB1dFN0eWxlIDoge307XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgPFBhcmFtIGtleT17cGFyYW1LZXl9IG5hbWU9e25hbWV9IGRlc2NyaXB0aW9uPXtkZXNjcmlwdGlvbn0+XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIHR5cGUgPT09ICd0ZXh0JyA/XG4gICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICBzdHlsZT17aW5wdXRTdHlsZX1cbiAgICAgICAgICAgICAgICAgIHR5cGU9J3RleHQnXG4gICAgICAgICAgICAgICAgICB2YWx1ZT17ZGlzcGxheWVkVmFsdWUgYXMgc3RyaW5nfVxuICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e2UgPT4gdXBkYXRlQ29uZmlnKGNvbmZpZ0tleSwgZS50YXJnZXQudmFsdWUpfVxuICAgICAgICAgICAgICAgIC8+IDpcbiAgICAgICAgICAgICAgICB0eXBlID09PSAnbnVtJyA/XG4gICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgdHlwZT0nbnVtYmVyJ1xuICAgICAgICAgICAgICAgICAgICBzdHlsZT17aW5wdXRTdHlsZX1cbiAgICAgICAgICAgICAgICAgICAgc3RlcD17MX1cbiAgICAgICAgICAgICAgICAgICAgdmFsdWU9e2Rpc3BsYXllZFZhbHVlIGFzIG51bWJlcn1cbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e2UgPT4gdXBkYXRlQ29uZmlnKGNvbmZpZ0tleSwgcGFyc2VJbnQoZS50YXJnZXQudmFsdWUsIDEwKSl9XG4gICAgICAgICAgICAgICAgICAvPiA6XG4gICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgdHlwZT0nY2hlY2tib3gnXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlPXtpbnB1dFN0eWxlfVxuICAgICAgICAgICAgICAgICAgICBjaGVja2VkPXtkaXNwbGF5ZWRWYWx1ZSBhcyBib29sZWFufVxuICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17ZSA9PiB1cGRhdGVDb25maWcoY29uZmlnS2V5LCBlLnRhcmdldC5jaGVja2VkKX1cbiAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICB9XG4gICAgICAgICAgPC9QYXJhbT5cbiAgICAgICAgKTtcbiAgICAgIH0pfVxuICAgICAgPGRpdiBzdHlsZT17eyBkaXNwbGF5OiAnZmxleCcsIGZsZXhEaXJlY3Rpb246ICdyb3cnIH19PlxuICAgICAgICA8c3BhbiBzdHlsZT17e2ZsZXhHcm93OiAxfX0gLz5cbiAgICAgICAgPGJ1dHRvbiBzdHlsZT17YnV0dG9uU3R5bGV9IG9uQ2xpY2s9e2FwcGx5Q29uZmlnfT5BcHBseTwvYnV0dG9uPlxuICAgICAgICA8YnV0dG9uIHN0eWxlPXtidXR0b25TdHlsZX0gb25DbGljaz17cmVzZXRDb25maWd9PlJlc2V0PC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cblxuZnVuY3Rpb24gUGFyYW0oe1xuICBuYW1lLFxuICBjaGlsZHJlbixcbiAgZGVzY3JpcHRpb24sXG59OiBSZWFjdC5Qcm9wc1dpdGhDaGlsZHJlbjx7bmFtZTogUGFyYW1EZXNjcmlwdG9yWyduYW1lJ107IGRlc2NyaXB0aW9uOiBQYXJhbURlc2NyaXB0b3JbJ2Rlc2NyaXB0aW9uJ119Pik6IEpTWC5FbGVtZW50IHtcbiAgY29uc3Qgc3R5bGU6IFJlYWN0LkNTU1Byb3BlcnRpZXMgPSB7XG4gICAgcGFkZGluZzogOCxcbiAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gIH07XG4gIGNvbnN0IGxhYmVsU3R5bGU6IFJlYWN0LkNTU1Byb3BlcnRpZXMgPSB7XG4gICAgdGV4dEFsaWduOiAncmlnaHQnLFxuICAgIG1hcmdpblJpZ2h0OiA4LFxuICAgIGZsZXhHcm93OiAxLFxuICB9O1xuICBjb25zdCBpbnB1dFN0eWxlOiBSZWFjdC5DU1NQcm9wZXJ0aWVzID0ge1xuICAgIHdpZHRoOiAxNTAsXG4gICAgZmxleDogJzAgMSBhdXRvJyxcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgc3R5bGU9e3N0eWxlfT5cbiAgICAgIDxkaXYgc3R5bGU9e2xhYmVsU3R5bGV9PlxuICAgICAgICA8c3BhbiB0aXRsZT17ZGVzY3JpcHRpb259PntuYW1lfTwvc3Bhbj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBzdHlsZT17aW5wdXRTdHlsZX0+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xuXG59XG5cbmZ1bmN0aW9uIGJ1aWxkQ29uZmlnKGNvbmZpZzogUmVjb3JkPGtleW9mIENvbmZpZywgQ29uZmlnRW50cnk+KTogQ29uZmlnICB7XG4gIGNvbnN0IHBhcmFtczogUmVjb3JkPHN0cmluZywgdW5rbm93bj4gPSB7fTtcbiAgZm9yIChjb25zdCBba2V5LCB7dmFsdWV9XSBvZiBPYmplY3QuZW50cmllcyhjb25maWcpKSB7XG4gICAgY29uc3Qgc3VwcG9ydGVkUGFyYW0gPSBzdXBwb3J0ZWRQYXJhbXMuZmluZChlbCA9PiBlbC5jb25maWdLZXkgPT09IGtleSk7XG4gICAgaWYgKHN1cHBvcnRlZFBhcmFtKSB7XG4gICAgICBwYXJhbXNbc3VwcG9ydGVkUGFyYW0ucGFyYW1LZXldID0gdmFsdWU7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHBhcmFtcyBhcyBDb25maWc7XG59XG4iLCJpbXBvcnQgeyBvbkNvbm5lY3QgfSBmcm9tICcuL2NvbnRyb2xzJztcbmltcG9ydCB7IHN0YXJ0UmVhY3QgfSBmcm9tICcuL2NvbXBvbmVudHMvUmVhY3RSb290JztcbmltcG9ydCAnLi9zdHlsZS5jc3MnO1xuXG5pbXBvcnQgeyBidWlsZEhhc2hGcm9tQ29uZmlnLCBsb2FkU2RrQm9vdHN0cmFwLCBsb2FkU2hvd2Nhc2UsIFBhcmFtS2V5cywgdHlwZSBDb25maWcgfSBmcm9tICcuL3V0aWxzJztcbmltcG9ydCBjb250cm9scyBmcm9tICcuL2NvbnRyb2xzLmh0bWwnO1xuXG5pbXBvcnQgdHlwZSB7IEJ1bmRsZSwgRW1iZWQgfSBmcm9tICdAc2RrL3R5cGVzJztcbmltcG9ydCB7IGRlbGF5IH0gZnJvbSAnY3dmL3V0aWwnO1xuaW1wb3J0IHsgY3JlYXRlQ29uZmlndXJhdG9yIH0gZnJvbSAnLi9Db25maWd1cmF0b3InO1xuaW1wb3J0IHsgY3JlYXRlUm9vdCB9IGZyb20gJ3JlYWN0LWRvbS9jbGllbnQnO1xuXG5kZWNsYXJlIGdsb2JhbCB7XG4gIGludGVyZmFjZSBXaW5kb3cge1xuICAgIFNES19JTlNUQU5DRTogQnVuZGxlLk1wU2RrIHwgRW1iZWQuTXBTZGs7XG4gIH1cbn1cblxuLy8gYWRkIHRoZSBjb250cm9scyB0byB0aGUgcGFnZVxuY29uc3QgY29udHJvbFJvb3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udHJvbC1yb290JykgYXMgSFRNTEVsZW1lbnQ7XG5jb250cm9sUm9vdC5pbm5lckhUTUwgPSBjb250cm9scztcblxuY29uc3Qgc2hvd2Nhc2VFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Nob3djYXNlJykgYXMgSFRNTElGcmFtZUVsZW1lbnQ7XG5jb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVhY3Qtcm9vdCcpO1xuY29uc3QgcmVhY3RDb250cm9sc1Jvb3QgPSBjb250YWluZXIgPyBjcmVhdGVSb290KGNvbnRhaW5lcikgOiB1bmRlZmluZWQ7XG5cbmNvbnN0IHBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMod2luZG93LmxvY2F0aW9uLnNlYXJjaCk7XG5cbmNvbnN0IGNvbmZpZzogQ29uZmlnID0ge1xuICBtb2RlbDogcGFyYW1zLmdldChQYXJhbUtleXMuTU9ERUwpIHx8IHBhcmFtcy5nZXQoJ21vZGVsJykgfHwgJ05LQU5ZcHdiMlNuJyxcbiAgYXBwbGljYXRpb25LZXk6IHBhcmFtcy5nZXQoUGFyYW1LZXlzLkFQUExJQ0FUSU9OX0tFWSkgfHwgcGFyYW1zLmdldCgnc2RrS2V5Jyl8fCAndTJtdzl3MXFlMXNhc3Iwc2JpdWNyZ2NlYicsXG4gIGFwaUhvc3Q6IHBhcmFtcy5nZXQoUGFyYW1LZXlzLkFQSV9IT1NUKSB8fCBwYXJhbXMuZ2V0KCdob3N0JykgfHwgd2luZG93LmxvY2F0aW9uLm9yaWdpbixcbiAgY29ubmVjdGlvbkRlbGF5OiBwYXJzZUludChwYXJhbXMuZ2V0KFBhcmFtS2V5cy5DT05ORUNUX0RFTEFZKSB8fCAnMCcsIDEwKSxcbiAgcHJvdmlkZXI6IHBhcmFtcy5nZXQoUGFyYW1LZXlzLlBST1ZJREVSKSB8fCAnJyxcbiAgdmVyc2lvbjogcGFyYW1zLmdldChQYXJhbUtleXMuVkVSU0lPTikgfHwgJycsXG4gIGxvYWRCdW5kbGU6IHBhcmFtcy5nZXQoUGFyYW1LZXlzLkxPQURfQlVORExFKSA9PT0gJzEnLFxuICB1c2VEaXJlY3RNZXNzYWdlczogISEocGFyYW1zLmdldChQYXJhbUtleXMuTE9BRF9CVU5ETEUpIHx8IHBhcmFtcy5nZXQoUGFyYW1LZXlzLkRJUkVDVF9NRVNTQUdFKSA9PT0gJzEnKSxcbiAgYm9vdHN0cmFwVmVyc2lvbjogcGFyYW1zLmdldChQYXJhbUtleXMuQk9PVFNUUkFQX1ZFUlNJT04pIHx8IHBhcmFtcy5nZXQoJ3Nka1ZlcnNpb24nKSB8fCAnbG9jYWwnLFxuICB3b3Jrc2hvcDogcGFyYW1zLmdldChQYXJhbUtleXMuTE9BRF9XT1JLU0hPUCkgPT09ICcxJyxcbn07XG5cbi8vIElmIGFwaUhvc3Qgd2FzIG5vdCBzZXQgYW5kIGRlZmF1bHRlZCB0byBzdGF0aWMsIHN3YXAgdG8gUUEzXG5pZiAoY29uZmlnLmFwaUhvc3QgPT09ICdodHRwczovL3N0YXRpYy5tYXR0ZXJwb3J0LmNvbScpIHtcbiAgY29uZmlnLmFwaUhvc3QgPSAnaHR0cHM6Ly9xYTMtYXBwLm1hdHRlcnBvcnQuY29tJztcbn1cblxudXBkYXRlQ29uZmlnRnJvbUhhc2goKTtcblxuLyoqXG4gKiBjb25uZWN0IHRoZSBzZGsgdXNpbmcgdGhlIGNvcnJlY3QgbWV0aG9kIGRlcGVuZGluZyBvbiBpZiB3ZSdyZSBjb25uZWN0aW5nIG92ZXIgcG9zdG1lc3NhZ2Ugb3IgZGlyZWN0bHlcbiAqL1xuYXN5bmMgZnVuY3Rpb24gY29ubmVjdFNkaygpOiBQcm9taXNlPEJ1bmRsZS5NcFNkayB8IEVtYmVkLk1wU2RrPiB7XG4gIGlmIChjb25maWcudXNlRGlyZWN0TWVzc2FnZXMpIHtcbiAgICBpZiAoY29uZmlnLmNvbm5lY3Rpb25EZWxheSA+IDApIHtcbiAgICAgIGF3YWl0IGRlbGF5KGNvbmZpZy5jb25uZWN0aW9uRGVsYXkpO1xuICAgIH1cbiAgICByZXR1cm4gY29ubmVjdEJ1bmRsZSgpO1xuICB9XG5cbiAgaWYgKGNvbmZpZy5jb25uZWN0aW9uRGVsYXkgPiAwKSB7XG4gICAgYXdhaXQgZGVsYXkoY29uZmlnLmNvbm5lY3Rpb25EZWxheSk7XG4gIH1cblxuICBjb25zdCBib290c3RyYXAgPSBhd2FpdCAoY29uZmlnLmJvb3RzdHJhcFZlcnNpb24gPT09ICdsb2NhbCcgPyBpbXBvcnQoJ0BzZGsvYm9vdHN0cmFwJykgOiBsb2FkU2RrQm9vdHN0cmFwKGNvbmZpZy5ib290c3RyYXBWZXJzaW9uKSk7XG4gIHJldHVybiBjb25uZWN0RW1iZWQoYm9vdHN0cmFwKTtcbn1cblxuZnVuY3Rpb24gY29ubmVjdEVtYmVkKGJvb3RzdHJhcDogRW1iZWQuTVBfU0RLKTogUHJvbWlzZTxFbWJlZC5NcFNkaz4ge1xuICAvLyB0byBmb3JjZSBsb2FkIHVzaW5nIGxlZ2FjeSBzdHlsZSBjb25uZWN0LCB1c2UgYCZ1c2VMZWdhY3lDb25uZWN0PTFgXG4gIGlmIChwYXJhbXMuZ2V0KCd1c2VMZWdhY3lDb25uZWN0JykgPT09ICcxJykge1xuICAgIHJldHVybiBib290c3RyYXAuY29ubmVjdChzaG93Y2FzZUVsZW1lbnQsIGNvbmZpZy5hcHBsaWNhdGlvbktleSwgJycpO1xuICB9XG5cbiAgdHJ5IHtcbiAgICAvLyBjb25uZWN0IEVtYmVkIGJvb3RzdGFwIDMueFxuICAgIHJldHVybiBib290c3RyYXAuY29ubmVjdChzaG93Y2FzZUVsZW1lbnQsIHtcbiAgICAgIHByb3ZpZGVyOiBjb25maWcucHJvdmlkZXIsXG4gICAgfSk7XG4gIH0gY2F0Y2gge1xuICAgIC8vIGZhbGxiYWNrIHRvIEVtYmVkIGJvb3RzdHJhcCAyLnhcbiAgICByZXR1cm4gYm9vdHN0cmFwLmNvbm5lY3Qoc2hvd2Nhc2VFbGVtZW50LCBjb25maWcuYXBwbGljYXRpb25LZXksICcnKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjb25uZWN0QnVuZGxlKCk6IFByb21pc2U8QnVuZGxlLk1wU2RrPiB7XG4gIGNvbnN0IHNob3djYXNlV2luZG93ID0gc2hvd2Nhc2VFbGVtZW50LmNvbnRlbnRXaW5kb3cgYXMgQnVuZGxlLlNob3djYXNlQnVuZGxlV2luZG93O1xuICBjb25zdCBidW5kbGVDb25uZWN0b3IgPSBzaG93Y2FzZVdpbmRvdy5NUF9TREs7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGJ1bmRsZUNvbm5lY3Rvci5jb25uZWN0KHNob3djYXNlV2luZG93LCB7XG4gICAgICBwcm92aWRlcjogY29uZmlnLnByb3ZpZGVyLFxuICAgIH0pO1xuICB9IGNhdGNoIHtcbiAgICAvLyBmYWxsYmFjayB0byBsZWdhY3kgc3R5bGUgY29ubmVjdCBmdW5jdGlvbiBmb3Igb2xkIGJ1bmRsZSB2ZXJzaW9uc1xuICAgIHJldHVybiAoYnVuZGxlQ29ubmVjdG9yIGFzIGFueSkuY29ubmVjdChzaG93Y2FzZVdpbmRvdywgY29uZmlnLmFwcGxpY2F0aW9uS2V5KTtcbiAgfVxufVxuXG4vKipcbiAqIHN0YXJ0IHRoZSBzZGsgYXBwbGljYXRpb25cbiAqIGlmICZkbT0xLCBkaXJlY3QgbWVzc2FnaW5nIHdpbGwgYmUgdXNlZC4gRGlyZWN0IG1lc3NhZ2luZyBpcyBzdWJqZWN0IHRvIFgtaWZyYW1lIGxpbWl0YXRpb25zLlxuICovXG5hc3luYyBmdW5jdGlvbiBzdGFydCgpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBzaG93Y2FzZVNkayA9IGF3YWl0IGNvbm5lY3RTZGsoKTtcbiAgICB3aW5kb3cuU0RLX0lOU1RBTkNFID0gc2hvd2Nhc2VTZGs7XG4gICAgb25Db25uZWN0KHNob3djYXNlU2RrLCBzaG93Y2FzZUVsZW1lbnQpO1xuICAgIGlmIChyZWFjdENvbnRyb2xzUm9vdCkge1xuICAgICAgc3RhcnRSZWFjdChyZWFjdENvbnRyb2xzUm9vdCwgc2hvd2Nhc2VTZGsgYXMgQnVuZGxlLk1wU2RrKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS53YXJuKCdVbmFibGUgdG8gY3JlYXRlIGNvbnRyb2xzLiBDb250aW51aW5nIHdpdGhvdXQnKTtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gIH1cbiAgKHdpbmRvdyBhcyBhbnkpLlRIUkVFID0gKHNob3djYXNlRWxlbWVudC5jb250ZW50V2luZG93IGFzIGFueSk/LlRIUkVFO1xufVxuXG4vKipcbiAqIHBvcHVsYXRlIHRoZSBpZnJhbWUgd2l0aCBub3JtYWwgU2hvd2Nhc2UgKGBidW5kbGVWZXJzaW9uYCB1bnNwZWNpZmllZClcbiAqIG9yIHRoZSBidW5kbGUgU0RLIHZlcnNpb24gb2YgU2hvd2Nhc2UgKGBidW5kbGVWZXJzaW9uYCB3YXMgcHJvdmlkZWQpXG4gKi9cbmZ1bmN0aW9uIGxvYWQoKSB7XG4gIGlmICghY29uZmlnLm1vZGVsKSB7XG4gICAgY29uc3QgZXJyb3JNZXNzYWdlID0gJ05vIG1vZGVsIHNwZWNpZmllZC4gU3BlY2lmeSBhIG1vZGVsIHVzaW5nID9tPVttb2RlbFNpZF0gb3IgI209W21vZGVsU2lkXSc7XG4gICAgY29uc3Qgc3RhdHVzQmFyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N0YXR1cycpIGFzIEhUTUxFbGVtZW50O1xuICAgIHN0YXR1c0Jhci5jbGFzc0xpc3QuYWRkKCdlcnJvcicpO1xuICAgIHN0YXR1c0Jhci5pbm5lclRleHQgPSBlcnJvck1lc3NhZ2U7XG5cbiAgICB0aHJvdyBFcnJvcihlcnJvck1lc3NhZ2UpO1xuICB9XG5cbiAgc2hvd2Nhc2VFbGVtZW50Lm9ubG9hZCA9IHN0YXJ0O1xuICBsb2FkU2hvd2Nhc2Uoc2hvd2Nhc2VFbGVtZW50LCBjb25maWcpO1xufVxubG9hZCgpO1xuXG4oZnVuY3Rpb24gaW5pdElmcmFtZVNldHRpbmdzKCkge1xuICBjb25zdCBzZXR0aW5nc0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3I8SFRNTEVsZW1lbnQ+KCcjc2V0dGluZ3MtY29udGFpbmVyJyk7XG4gIGlmICghc2V0dGluZ3NDb250YWluZXIpIHtcbiAgICBjb25zb2xlLndhcm4oJ1VuYWJsZSB0byBjcmVhdGUgc2V0dGluZ3MgcGFuZWwuIENvbnRpbnVpbmcgd2l0aG91dC4nKTtcbiAgfSBlbHNlIHtcbiAgICBjcmVhdGVDb25maWd1cmF0b3Ioc2V0dGluZ3NDb250YWluZXIsIGNvbmZpZywgKG5ld0NvbmZpZykgPT4ge1xuICAgICAgY29uc3QgbmV3SGFzaFBhcmFtcyA9IGJ1aWxkSGFzaEZyb21Db25maWcobmV3Q29uZmlnKTtcbiAgICAgIGNvbnN0IGN1cnJlbnRIYXNoUGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyh3aW5kb3cubG9jYXRpb24uaGFzaC5zdWJzdHJpbmcoMSkpO1xuICAgICAgY29uc3QgaGVpZ2h0ID0gY3VycmVudEhhc2hQYXJhbXMuZ2V0KCdoZWlnaHQnKTtcbiAgICAgIGNvbnN0IHdpZHRoID0gY3VycmVudEhhc2hQYXJhbXMuZ2V0KCd3aWR0aCcpO1xuICAgICAgY29uc3QgZmlsdGVyID0gY3VycmVudEhhc2hQYXJhbXMuZ2V0KCdmaWx0ZXInKTtcbiAgICAgIGlmIChoZWlnaHQgIT09IG51bGwpIHtcbiAgICAgICAgbmV3SGFzaFBhcmFtcy5zZXQoJ2hlaWdodCcsIGhlaWdodCk7XG4gICAgICB9XG4gICAgICBpZiAod2lkdGggIT09IG51bGwpIHtcbiAgICAgICAgbmV3SGFzaFBhcmFtcy5zZXQoJ3dpZHRoJywgd2lkdGgpO1xuICAgICAgfVxuICAgICAgaWYgKGZpbHRlciAhPT0gbnVsbCkge1xuICAgICAgICBuZXdIYXNoUGFyYW1zLnNldCgnZmlsdGVyJywgZmlsdGVyKTtcbiAgICAgIH1cbiAgICAgIGNvbW1pdEhhc2gobmV3SGFzaFBhcmFtcyk7XG4gICAgICB1cGRhdGVDb25maWdGcm9tSGFzaCgpO1xuICAgICAgbG9hZCgpO1xuICAgIH0pO1xuICB9XG59KSgpO1xuXG4oZnVuY3Rpb24gaW5pdFBhZ2VTZXR0aW5ncygpIHtcbiAgY29uc3Qgd2lkdGhDb250cm9sID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcjxIVE1MSW5wdXRFbGVtZW50PignI3dpZHRoJyk7XG4gIGNvbnN0IGhlaWdodENvbnRyb2wgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yPEhUTUxJbnB1dEVsZW1lbnQ+KCcjaGVpZ2h0Jyk7XG4gIGNvbnN0IGZpbHRlckVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yPEhUTUxJbnB1dEVsZW1lbnQ+KCcjZmlsdGVyLXBhbmVscycpO1xuICBjb25zdCBoYXNoUGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyh3aW5kb3cubG9jYXRpb24uaGFzaC5zdWJzdHJpbmcoMSkpO1xuXG4gIGlmICghd2lkdGhDb250cm9sIHx8ICFoZWlnaHRDb250cm9sIHx8ICFmaWx0ZXJFbGVtZW50KSB7XG4gICAgY29uc29sZS53YXJuKCdVbmFibGUgdG8gc2V0IHVwIHBhZ2UgY29udHJvbHMuIENvbnRpbnVpbmcgd2l0aG91dC4nKTtcbiAgICByZXR1cm47XG4gIH1cblxuICB3aWR0aENvbnRyb2wudmFsdWUgPSBTdHJpbmcoc2hvd2Nhc2VFbGVtZW50LmNsaWVudFdpZHRoKTtcbiAgaGVpZ2h0Q29udHJvbC52YWx1ZSA9IFN0cmluZyhzaG93Y2FzZUVsZW1lbnQuY2xpZW50SGVpZ2h0KTtcblxuICAvLyBsaXN0ZW4gZm9yIGNoYW5nZXMgaW4gdGhlIGlucHV0cyBhbmQgdXBkYXRlIHRoZSBVUkwgaGFzaFxuICB3aWR0aENvbnRyb2wuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKCkgPT4ge1xuICAgIHNob3djYXNlRWxlbWVudC53aWR0aCA9IHdpZHRoQ29udHJvbC52YWx1ZTtcbiAgICBjb25zdCBuZXdIYXNoUGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyh3aW5kb3cubG9jYXRpb24uaGFzaC5zdWJzdHJpbmcoMSkpO1xuICAgIG5ld0hhc2hQYXJhbXMuc2V0KCd3aWR0aCcsIHdpZHRoQ29udHJvbC52YWx1ZSk7XG4gICAgY29tbWl0SGFzaChuZXdIYXNoUGFyYW1zKTtcbiAgfSk7XG4gIGhlaWdodENvbnRyb2wuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKCkgPT4ge1xuICAgIHNob3djYXNlRWxlbWVudC5oZWlnaHQgPSBoZWlnaHRDb250cm9sLnZhbHVlO1xuICAgIGNvbnN0IG5ld0hhc2hQYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHdpbmRvdy5sb2NhdGlvbi5oYXNoLnN1YnN0cmluZygxKSk7XG4gICAgbmV3SGFzaFBhcmFtcy5zZXQoJ2hlaWdodCcsIGhlaWdodENvbnRyb2wudmFsdWUpO1xuICAgIGNvbW1pdEhhc2gobmV3SGFzaFBhcmFtcyk7XG4gIH0pO1xuICB3aWR0aENvbnRyb2wuYWRkRXZlbnRMaXN0ZW5lcignd2hlZWwnLCBlID0+IGUuc3RvcFByb3BhZ2F0aW9uKCkpO1xuICBoZWlnaHRDb250cm9sLmFkZEV2ZW50TGlzdGVuZXIoJ3doZWVsJywgZSA9PiBlLnN0b3BQcm9wYWdhdGlvbigpKTtcblxuICAvLyBzZXQgaW5pdGlhbCBpZnJhbWUgc2l6ZSBhbmQgdXBkYXRlIHRoZSBpbnB1dHMgY29udHJvbHNcbiAgY29uc3QgaW5pdGlhbFdpZHRoID0gaGFzaFBhcmFtcy5nZXQoJ3dpZHRoJyk7XG4gIGNvbnN0IGluaXRpYWxIZWlnaHQgPSBoYXNoUGFyYW1zLmdldCgnaGVpZ2h0Jyk7XG4gIGlmIChpbml0aWFsV2lkdGgpIHtcbiAgICB3aWR0aENvbnRyb2wudmFsdWUgPSBpbml0aWFsV2lkdGg7XG4gICAgd2lkdGhDb250cm9sLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdjaGFuZ2UnKSk7XG4gIH1cbiAgaWYgKGluaXRpYWxIZWlnaHQpIHtcbiAgICBoZWlnaHRDb250cm9sLnZhbHVlID0gaW5pdGlhbEhlaWdodDtcbiAgICBoZWlnaHRDb250cm9sLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdjaGFuZ2UnKSk7XG4gIH1cblxuICAvLyBmaWx0ZXIgZWxlbWVudHMgYW5kIHVwZGF0ZSBVUkwgaGFzaFxuICBjb25zdCBmaWx0ZXJDb250cm9scyA9ICgpID0+IHtcbiAgICBjb25zdCBlbHRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNvbnRyb2xQYW5lbEhlYWRlcicpO1xuICAgIGZvciAoY29uc3QgZWx0IG9mIGVsdHMpIHtcbiAgICAgIGlmIChlbHQucGFyZW50RWxlbWVudCkge1xuICAgICAgICBpZiAoIWZpbHRlckVsZW1lbnQudmFsdWUgfHwgZWx0LnRleHRDb250ZW50Py5tYXRjaChcbiAgICAgICAgICBuZXcgUmVnRXhwKGAke2ZpbHRlckVsZW1lbnQudmFsdWV9YCwgJ2knKSlcbiAgICAgICAgKSB7XG4gICAgICAgICAgZWx0LnBhcmVudEVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZWx0LnBhcmVudEVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBuZXdIYXNoUGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyh3aW5kb3cubG9jYXRpb24uaGFzaC5zdWJzdHJpbmcoMSkpO1xuICAgIGlmIChmaWx0ZXJFbGVtZW50LnZhbHVlKSB7XG4gICAgICBuZXdIYXNoUGFyYW1zLnNldCgnZmlsdGVyJywgZmlsdGVyRWxlbWVudC52YWx1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG5ld0hhc2hQYXJhbXMuZGVsZXRlKCdmaWx0ZXInKTtcbiAgICB9XG4gICAgY29tbWl0SGFzaChuZXdIYXNoUGFyYW1zKTtcbiAgfTtcbiAgZmlsdGVyRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIGZpbHRlckNvbnRyb2xzKTtcblxuICAvLyBvYnNlcnZlIHRoZSBET00gYW5kIHJlLXJ1biB0aGUgVUkgZmlsdGVyaW5nIG9uIGNvbnRyb2xzIHdoZW4gbmV3IGNoaWxkIGNvbnRyb2xzIGFyZSBhZGRlZFxuICBjb25zdCBzZGtDb250cm9scyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNtYWluLXNjcm9sbCcpO1xuICBpZiAoc2RrQ29udHJvbHMpIHtcbiAgICBjb25zdCBjb250cm9sc09ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIoZmlsdGVyQ29udHJvbHMpO1xuICAgIGNvbnRyb2xzT2JzZXJ2ZXIub2JzZXJ2ZShzZGtDb250cm9scywge1xuICAgICAgY2hpbGRMaXN0OiB0cnVlLFxuICAgICAgc3VidHJlZTogdHJ1ZSxcbiAgICB9KTtcbiAgfVxuXG4gIC8vIHNldCBpbml0aWFsIGNvbnRyb2wgZmlsdGVyIGFuZCB1cGRhdGUgdGhlIGlucHV0IGVsZW1lbnRcbiAgY29uc3QgaW5pdGlhbEZpbHRlciA9IGhhc2hQYXJhbXMuZ2V0KCdmaWx0ZXInKTtcbiAgaWYgKGluaXRpYWxGaWx0ZXIpIHtcbiAgICBmaWx0ZXJFbGVtZW50LnZhbHVlID0gaW5pdGlhbEZpbHRlcjtcbiAgICBmaWx0ZXJFbGVtZW50LmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdrZXl1cCcpKTtcbiAgfVxufSkoKTtcblxuZnVuY3Rpb24gdXBkYXRlQ29uZmlnRnJvbUhhc2goKSB7XG4gIGNvbnN0IGhhc2hQYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHdpbmRvdy5sb2NhdGlvbi5oYXNoLnN1YnN0cmluZygxKSk7XG4gIGNvbmZpZy5tb2RlbCA9IGhhc2hQYXJhbXMuZ2V0KFBhcmFtS2V5cy5NT0RFTCkgfHwgY29uZmlnLm1vZGVsO1xuICBjb25maWcuYXBwbGljYXRpb25LZXkgPSBoYXNoUGFyYW1zLmdldChQYXJhbUtleXMuQVBQTElDQVRJT05fS0VZKSB8fCBjb25maWcuYXBwbGljYXRpb25LZXk7XG4gIGNvbmZpZy5hcGlIb3N0ID0gaGFzaFBhcmFtcy5nZXQoUGFyYW1LZXlzLkFQSV9IT1NUKSB8fCBjb25maWcuYXBpSG9zdDtcbiAgY29uZmlnLmNvbm5lY3Rpb25EZWxheSA9IHBhcnNlSW50KGhhc2hQYXJhbXMuZ2V0KFBhcmFtS2V5cy5DT05ORUNUX0RFTEFZKSB8fCAnMCcsIDEwKTtcbiAgY29uZmlnLnByb3ZpZGVyID0gaGFzaFBhcmFtcy5nZXQoUGFyYW1LZXlzLlBST1ZJREVSKSB8fCBjb25maWcucHJvdmlkZXI7XG4gIGNvbmZpZy52ZXJzaW9uID0gaGFzaFBhcmFtcy5nZXQoUGFyYW1LZXlzLlZFUlNJT04pIHx8IGNvbmZpZy52ZXJzaW9uO1xuICBjb25maWcubG9hZEJ1bmRsZSA9IGhhc2hQYXJhbXMuZ2V0KFBhcmFtS2V5cy5MT0FEX0JVTkRMRSkgPT09ICcxJztcbiAgY29uZmlnLnVzZURpcmVjdE1lc3NhZ2VzID0gISEoY29uZmlnLmxvYWRCdW5kbGUgfHwgaGFzaFBhcmFtcy5nZXQoUGFyYW1LZXlzLkRJUkVDVF9NRVNTQUdFKSA9PT0gJzEnKTtcbiAgY29uZmlnLmJvb3RzdHJhcFZlcnNpb24gPSBoYXNoUGFyYW1zLmdldChQYXJhbUtleXMuQk9PVFNUUkFQX1ZFUlNJT04pIHx8IGNvbmZpZy5ib290c3RyYXBWZXJzaW9uO1xuICBjb25maWcud29ya3Nob3AgPSBoYXNoUGFyYW1zLmdldChQYXJhbUtleXMuTE9BRF9XT1JLU0hPUCkgPT09ICcxJztcbn1cblxuZnVuY3Rpb24gY29tbWl0SGFzaChuZXdIYXNoUGFyYW1zOiBVUkxTZWFyY2hQYXJhbXMpIHtcbiAgLy8gbm90IGEgc2VjdXJlIG1lc3NhZ2Ugc28gcG9zdCB0byB3aG9tZXZlciBpcyBlbWJlZGRpbmcgdXNcbiAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBuZXdIYXNoUGFyYW1zLnRvU3RyaW5nKCk7XG4gIHdpbmRvdy5wYXJlbnQ/LnBvc3RNZXNzYWdlKHtcbiAgICB0eXBlOiAndXBkYXRlLWhhc2gnLFxuICAgIGhhc2g6IGRlY29kZVVSSUNvbXBvbmVudChuZXdIYXNoUGFyYW1zLnRvU3RyaW5nKCkpLFxuICB9LCAnKicpO1xufVxuIl0sIm5hbWVzIjpbImluUHJvZ3Jlc3MiLCJkYXRhV2VicGFja1ByZWZpeCIsImFhIiwiYmEiLCJwIiwiYSIsImIiLCJjIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiY2EiLCJTZXQiLCJkYSIsImVhIiwiZmEiLCJhZGQiLCJoYSIsIndpbmRvdyIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImlhIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJqYSIsImthIiwibGEiLCJxIiwiZCIsImUiLCJmIiwiZyIsInRoaXMiLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwidHlwZSIsInNhbml0aXplVVJMIiwicmVtb3ZlRW1wdHlTdHJpbmciLCJ6Iiwic3BsaXQiLCJmb3JFYWNoIiwidG9Mb3dlckNhc2UiLCJwYSIsInFhIiwidG9VcHBlckNhc2UiLCJyYSIsInNsaWNlIiwibmEiLCJpc05hTiIsIm9hIiwiY2FsbCIsInRlc3QiLCJtYSIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZU5TIiwicmVwbGFjZSIsInhsaW5rSHJlZiIsInNhIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJ0YSIsIlN5bWJvbCIsImZvciIsInVhIiwidmEiLCJ3YSIsInhhIiwieWEiLCJBYSIsIkJhIiwiQ2EiLCJEYSIsIkVhIiwiRmEiLCJHYSIsIkhhIiwiaXRlcmF0b3IiLCJJYSIsIkphIiwiQSIsImFzc2lnbiIsIkthIiwiRXJyb3IiLCJzdGFjayIsInRyaW0iLCJtYXRjaCIsIkxhIiwiTWEiLCJwcmVwYXJlU3RhY2tUcmFjZSIsImRlZmluZVByb3BlcnR5Iiwic2V0IiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsImwiLCJoIiwiayIsImRpc3BsYXlOYW1lIiwiaW5jbHVkZXMiLCJuYW1lIiwiTmEiLCJ0YWciLCJyZW5kZXIiLCJPYSIsIiQkdHlwZW9mIiwiX2NvbnRleHQiLCJfcGF5bG9hZCIsIl9pbml0IiwiUGEiLCJRYSIsIlJhIiwibm9kZU5hbWUiLCJUYSIsIl92YWx1ZVRyYWNrZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJjb25zdHJ1Y3RvciIsImdldCIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwiU2EiLCJVYSIsImNoZWNrZWQiLCJ2YWx1ZSIsIlZhIiwiYWN0aXZlRWxlbWVudCIsImJvZHkiLCJXYSIsImRlZmF1bHRDaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiWGEiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiWWEiLCJaYSIsIiRhIiwiYWIiLCJvd25lckRvY3VtZW50IiwiYmIiLCJBcnJheSIsImlzQXJyYXkiLCJjYiIsIm9wdGlvbnMiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsImRpc2FibGVkIiwiZGIiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsImNoaWxkcmVuIiwiZWIiLCJmYiIsImdiIiwidGV4dENvbnRlbnQiLCJoYiIsImliIiwiamIiLCJrYiIsIm5hbWVzcGFjZVVSSSIsImlubmVySFRNTCIsInZhbHVlT2YiLCJ0b1N0cmluZyIsImZpcnN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsImFwcGVuZENoaWxkIiwiTVNBcHAiLCJleGVjVW5zYWZlTG9jYWxGdW5jdGlvbiIsImxiIiwibGFzdENoaWxkIiwibm9kZVR5cGUiLCJub2RlVmFsdWUiLCJtYiIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYXNwZWN0UmF0aW8iLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkQXJlYSIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwiZm9udFdlaWdodCIsImxpbmVDbGFtcCIsImxpbmVIZWlnaHQiLCJvcGFjaXR5Iiwib3JkZXIiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJmaWxsT3BhY2l0eSIsImZsb29kT3BhY2l0eSIsInN0b3BPcGFjaXR5Iiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJzdHJva2VPcGFjaXR5Iiwic3Ryb2tlV2lkdGgiLCJuYiIsIm9iIiwicGIiLCJzdHlsZSIsImluZGV4T2YiLCJzZXRQcm9wZXJ0eSIsImtleXMiLCJjaGFyQXQiLCJzdWJzdHJpbmciLCJxYiIsIm1lbnVpdGVtIiwiYXJlYSIsImJhc2UiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsImxpbmsiLCJtZXRhIiwicGFyYW0iLCJzb3VyY2UiLCJ0cmFjayIsIndiciIsInJiIiwic2IiLCJpcyIsInRiIiwidWIiLCJ0YXJnZXQiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwidmIiLCJ3YiIsInhiIiwieWIiLCJ6YiIsInN0YXRlTm9kZSIsIkFiIiwiQmIiLCJwdXNoIiwiQ2IiLCJEYiIsIkViIiwiRmIiLCJHYiIsIkhiIiwiSWIiLCJKYiIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiS2IiLCJhcHBseSIsIm0iLCJvbkVycm9yIiwiTGIiLCJNYiIsIk5iIiwiT2IiLCJQYiIsIlFiIiwiU2IiLCJhbHRlcm5hdGUiLCJyZXR1cm4iLCJmbGFncyIsIlRiIiwibWVtb2l6ZWRTdGF0ZSIsImRlaHlkcmF0ZWQiLCJVYiIsIldiIiwiY2hpbGQiLCJzaWJsaW5nIiwiY3VycmVudCIsIlZiIiwiWGIiLCJZYiIsInVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2siLCJaYiIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwiJGIiLCJ1bnN0YWJsZV9zaG91bGRZaWVsZCIsImFjIiwidW5zdGFibGVfcmVxdWVzdFBhaW50IiwiRCIsInVuc3RhYmxlX25vdyIsImJjIiwidW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwiLCJjYyIsInVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5IiwiZGMiLCJ1bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSIsImVjIiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJmYyIsInVuc3RhYmxlX0xvd1ByaW9yaXR5IiwiZ2MiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJoYyIsImljIiwibGMiLCJNYXRoIiwiY2x6MzIiLCJtYyIsIm5jIiwibG9nIiwiTE4yIiwib2MiLCJwYyIsInFjIiwicmMiLCJwZW5kaW5nTGFuZXMiLCJzdXNwZW5kZWRMYW5lcyIsInBpbmdlZExhbmVzIiwiZW50YW5nbGVkTGFuZXMiLCJlbnRhbmdsZW1lbnRzIiwic2MiLCJ1YyIsInZjIiwid2MiLCJldmVudFRpbWVzIiwieWMiLCJFIiwiemMiLCJBYyIsIkJjIiwiQ2MiLCJEYyIsIkVjIiwiRmMiLCJHYyIsIkhjIiwiSWMiLCJKYyIsIktjIiwiTWFwIiwiTGMiLCJNYyIsIk5jIiwiT2MiLCJkZWxldGUiLCJwb2ludGVySWQiLCJQYyIsIm5hdGl2ZUV2ZW50IiwiYmxvY2tlZE9uIiwiZG9tRXZlbnROYW1lIiwiZXZlbnRTeXN0ZW1GbGFncyIsInRhcmdldENvbnRhaW5lcnMiLCJSYyIsIlNjIiwicHJpb3JpdHkiLCJpc0RlaHlkcmF0ZWQiLCJjb250YWluZXJJbmZvIiwiVGMiLCJVYyIsImRpc3BhdGNoRXZlbnQiLCJzaGlmdCIsIlZjIiwiV2MiLCJYYyIsIlljIiwiWmMiLCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZyIsIiRjIiwidHJhbnNpdGlvbiIsImFkIiwiYmQiLCJjZCIsImRkIiwiUWMiLCJzdG9wUHJvcGFnYXRpb24iLCJlZCIsImZkIiwiZ2QiLCJoZCIsImlkIiwiamQiLCJrZXlDb2RlIiwiY2hhckNvZGUiLCJrZCIsImxkIiwibWQiLCJfcmVhY3ROYW1lIiwiX3RhcmdldEluc3QiLCJjdXJyZW50VGFyZ2V0IiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJwcmV2ZW50RGVmYXVsdCIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJpc1BlcnNpc3RlbnQiLCJyZCIsInNkIiwidGQiLCJuZCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsIkRhdGUiLCJub3ciLCJpc1RydXN0ZWQiLCJvZCIsInBkIiwidmlldyIsImRldGFpbCIsInFkIiwidmQiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsImN0cmxLZXkiLCJzaGlmdEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJnZXRNb2RpZmllclN0YXRlIiwidWQiLCJidXR0b24iLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwid2QiLCJ5ZCIsImRhdGFUcmFuc2ZlciIsIkFkIiwiQ2QiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwiRGQiLCJjbGlwYm9hcmREYXRhIiwiRWQiLCJHZCIsImRhdGEiLCJIZCIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJJZCIsIkpkIiwiQWx0IiwiQ29udHJvbCIsIk1ldGEiLCJTaGlmdCIsIktkIiwiTGQiLCJrZXkiLCJTdHJpbmciLCJmcm9tQ2hhckNvZGUiLCJjb2RlIiwibG9jYXRpb24iLCJyZXBlYXQiLCJsb2NhbGUiLCJ3aGljaCIsIk1kIiwiT2QiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJRZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJTZCIsIlRkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCJVZCIsIlZkIiwiV2QiLCJYZCIsImRvY3VtZW50TW9kZSIsIllkIiwiWmQiLCIkZCIsImFlIiwiYmUiLCJjZSIsImRlIiwiZ2UiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJudW1iZXIiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGV4dCIsInRpbWUiLCJ1cmwiLCJ3ZWVrIiwiaGUiLCJpZSIsImplIiwiZXZlbnQiLCJsaXN0ZW5lcnMiLCJrZSIsImxlIiwibWUiLCJuZSIsIm9lIiwicGUiLCJxZSIsInJlIiwic2UiLCJ0ZSIsInVlIiwib25pbnB1dCIsInZlIiwiZGV0YWNoRXZlbnQiLCJ3ZSIsInhlIiwiYXR0YWNoRXZlbnQiLCJ5ZSIsInplIiwiQWUiLCJDZSIsIkRlIiwiRWUiLCJGZSIsIm5vZGUiLCJvZmZzZXQiLCJuZXh0U2libGluZyIsIkdlIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsIkhlIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50V2luZG93IiwiaHJlZiIsIkllIiwiY29udGVudEVkaXRhYmxlIiwiSmUiLCJmb2N1c2VkRWxlbSIsInNlbGVjdGlvblJhbmdlIiwiZG9jdW1lbnRFbGVtZW50Iiwic3RhcnQiLCJlbmQiLCJzZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvbkVuZCIsIm1pbiIsImRlZmF1bHRWaWV3IiwiZ2V0U2VsZWN0aW9uIiwiZXh0ZW5kIiwicmFuZ2VDb3VudCIsImFuY2hvck5vZGUiLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsInNldEVuZCIsImVsZW1lbnQiLCJsZWZ0Iiwic2Nyb2xsTGVmdCIsInRvcCIsInNjcm9sbFRvcCIsImZvY3VzIiwiS2UiLCJMZSIsIk1lIiwiTmUiLCJPZSIsIlBlIiwiUWUiLCJSZSIsImFuaW1hdGlvbmVuZCIsImFuaW1hdGlvbml0ZXJhdGlvbiIsImFuaW1hdGlvbnN0YXJ0IiwidHJhbnNpdGlvbmVuZCIsIlNlIiwiVGUiLCJVZSIsImFuaW1hdGlvbiIsIlZlIiwiV2UiLCJYZSIsIlllIiwiWmUiLCIkZSIsImFmIiwiYmYiLCJjZiIsImZmIiwiZ2YiLCJjb25jYXQiLCJoZiIsIlJiIiwiaW5zdGFuY2UiLCJsaXN0ZW5lciIsIkYiLCJqZiIsImhhcyIsImtmIiwibGYiLCJtZiIsInJhbmRvbSIsIm5mIiwiYmluZCIsImNhcHR1cmUiLCJwYXNzaXZlIiwibiIsInYiLCJDIiwidCIsIngiLCJyIiwiQiIsIm9mIiwicGYiLCJwYXJlbnRXaW5kb3ciLCJxZiIsInJmIiwiTyIsIlQiLCJ6YSIsIkwiLCJlZSIsImNoYXIiLCJmZSIsInVuc2hpZnQiLCJzZiIsInRmIiwidWYiLCJ2ZiIsIndmIiwieGYiLCJ5ZiIsIl9faHRtbCIsInpmIiwic2V0VGltZW91dCIsIkFmIiwiY2xlYXJUaW1lb3V0IiwiQmYiLCJQcm9taXNlIiwiRGYiLCJxdWV1ZU1pY3JvdGFzayIsInJlc29sdmUiLCJ0aGVuIiwiY2F0Y2giLCJDZiIsIkVmIiwiRmYiLCJHZiIsInByZXZpb3VzU2libGluZyIsIkhmIiwiSWYiLCJKZiIsIktmIiwiTGYiLCJNZiIsIk5mIiwiT2YiLCJHIiwiSCIsIlBmIiwiSSIsIlFmIiwiUmYiLCJTZiIsImNvbnRleHRUeXBlcyIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsIlRmIiwiY2hpbGRDb250ZXh0VHlwZXMiLCJVZiIsIlZmIiwiV2YiLCJnZXRDaGlsZENvbnRleHQiLCJYZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiWWYiLCJaZiIsIiRmIiwiYWciLCJiZyIsImRnIiwiZWciLCJmZyIsImRlZmF1bHRQcm9wcyIsImdnIiwiaGciLCJpZyIsImpnIiwia2ciLCJsZyIsIl9jdXJyZW50VmFsdWUiLCJtZyIsImNoaWxkTGFuZXMiLCJuZyIsImRlcGVuZGVuY2llcyIsImZpcnN0Q29udGV4dCIsImxhbmVzIiwib2ciLCJwZyIsImNvbnRleHQiLCJtZW1vaXplZFZhbHVlIiwibmV4dCIsInFnIiwicmciLCJzZyIsInVwZGF0ZVF1ZXVlIiwiYmFzZVN0YXRlIiwiZmlyc3RCYXNlVXBkYXRlIiwibGFzdEJhc2VVcGRhdGUiLCJzaGFyZWQiLCJwZW5kaW5nIiwiaW50ZXJsZWF2ZWQiLCJlZmZlY3RzIiwidGciLCJ1ZyIsImV2ZW50VGltZSIsImxhbmUiLCJwYXlsb2FkIiwiY2FsbGJhY2siLCJ2ZyIsIkoiLCJtb2RlIiwiSyIsIndnIiwieGciLCJ5ZyIsInciLCJ1IiwieSIsInpnIiwiQWciLCJCZyIsIkNvbXBvbmVudCIsInJlZnMiLCJDZyIsIkZnIiwiaXNNb3VudGVkIiwiX3JlYWN0SW50ZXJuYWxzIiwiZW5xdWV1ZVNldFN0YXRlIiwiTSIsIkRnIiwiRWciLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiR2ciLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsIkhnIiwiY29udGV4dFR5cGUiLCJzdGF0ZSIsInVwZGF0ZXIiLCJJZyIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIkpnIiwicHJvcHMiLCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnREaWRNb3VudCIsIktnIiwiTGciLCJNZyIsIk5nIiwiT2ciLCJQZyIsIlFnIiwiUmciLCJTZyIsIlRnIiwiVWciLCJWZyIsIldnIiwiWGciLCJZZyIsIk4iLCJaZyIsIiRnIiwiYWgiLCJlbGVtZW50VHlwZSIsImRlbGV0aW9ucyIsImJoIiwicGVuZGluZ1Byb3BzIiwib3ZlcmZsb3ciLCJ0cmVlQ29udGV4dCIsInJldHJ5TGFuZSIsImNoIiwiZGgiLCJlaCIsImZoIiwibWVtb2l6ZWRQcm9wcyIsImdoIiwiaGgiLCJpaCIsInJlZiIsIl9vd25lciIsIl9zdHJpbmdSZWYiLCJqaCIsImpvaW4iLCJraCIsImxoIiwiaW5kZXgiLCJtaCIsIm5oIiwib2giLCJpbXBsZW1lbnRhdGlvbiIsInBoIiwicWgiLCJkb25lIiwicmgiLCJzaCIsInRoIiwidWgiLCJ2aCIsIndoIiwieGgiLCJ5aCIsInRhZ05hbWUiLCJ6aCIsIkFoIiwiQmgiLCJQIiwiQ2giLCJyZXZlYWxPcmRlciIsIkRoIiwiRWgiLCJfd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeSIsIkZoIiwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlciIsIkdoIiwiSGgiLCJRIiwiUiIsIlMiLCJJaCIsIkpoIiwiS2giLCJMaCIsIlUiLCJNaCIsIk5oIiwiT2giLCJQaCIsIlFoIiwiUmgiLCJTaCIsIlRoIiwiYmFzZVF1ZXVlIiwicXVldWUiLCJVaCIsIlZoIiwiV2giLCJsYXN0UmVuZGVyZWRSZWR1Y2VyIiwiYWN0aW9uIiwiaGFzRWFnZXJTdGF0ZSIsImVhZ2VyU3RhdGUiLCJsYXN0UmVuZGVyZWRTdGF0ZSIsImRpc3BhdGNoIiwiWGgiLCJZaCIsIlpoIiwiJGgiLCJhaSIsImdldFNuYXBzaG90IiwiYmkiLCJjaSIsImRpIiwibGFzdEVmZmVjdCIsInN0b3JlcyIsImVpIiwiZmkiLCJnaSIsImNyZWF0ZSIsImRlc3Ryb3kiLCJkZXBzIiwiaGkiLCJpaSIsImppIiwia2kiLCJsaSIsIm1pIiwibmkiLCJvaSIsInBpIiwicWkiLCJyaSIsInNpIiwidGkiLCJ1aSIsInZpIiwid2kiLCJ4aSIsInlpIiwicmVhZENvbnRleHQiLCJ1c2VDYWxsYmFjayIsInVzZUNvbnRleHQiLCJ1c2VFZmZlY3QiLCJ1c2VJbXBlcmF0aXZlSGFuZGxlIiwidXNlSW5zZXJ0aW9uRWZmZWN0IiwidXNlTGF5b3V0RWZmZWN0IiwidXNlTWVtbyIsInVzZVJlZHVjZXIiLCJ1c2VSZWYiLCJ1c2VTdGF0ZSIsInVzZURlYnVnVmFsdWUiLCJ1c2VEZWZlcnJlZFZhbHVlIiwidXNlVHJhbnNpdGlvbiIsInVzZU11dGFibGVTb3VyY2UiLCJ1c2VTeW5jRXh0ZXJuYWxTdG9yZSIsInVzZUlkIiwidW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyIiwiaWRlbnRpZmllclByZWZpeCIsInppIiwibWVzc2FnZSIsIkFpIiwiY29uc29sZSIsImVycm9yIiwiTGkiLCJNaSIsIk5pIiwiT2kiLCJCaSIsIldlYWtNYXAiLCJDaSIsIkRpIiwiRWkiLCJGaSIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsImNvbXBvbmVudERpZENhdGNoIiwiR2kiLCJjb21wb25lbnRTdGFjayIsIkhpIiwicGluZ0NhY2hlIiwiSWkiLCJKaSIsIktpIiwiUGkiLCJ0YWlsTW9kZSIsInRhaWwiLCJWIiwic3VidHJlZUZsYWdzIiwiUWkiLCJwZW5kaW5nQ29udGV4dCIsIlJpIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsIm9uQ2xpY2siLCJvbmNsaWNrIiwic2l6ZSIsImNyZWF0ZUVsZW1lbnROUyIsImF1dG9Gb2N1cyIsImNyZWF0ZVRleHROb2RlIiwiVyIsIlNpIiwicmVuZGVyaW5nIiwiVGkiLCJyZW5kZXJpbmdTdGFydFRpbWUiLCJpc0JhY2t3YXJkcyIsImxhc3QiLCJVaSIsIlZpIiwiV2kiLCJSZWFjdEN1cnJlbnRPd25lciIsIlhpIiwiWWkiLCJaaSIsIiRpIiwiYWoiLCJjb21wYXJlIiwiYmoiLCJjaiIsImRqIiwiYmFzZUxhbmVzIiwiY2FjaGVQb29sIiwiZWoiLCJmaiIsImdqIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwiaGoiLCJpaiIsImpqIiwia2oiLCJsaiIsIm1qIiwiZmFsbGJhY2siLCJuaiIsIm9qIiwicGoiLCJxaiIsIl9yZWFjdFJldHJ5IiwicmoiLCJzaiIsInRqIiwidWoiLCJ2aiIsInhqIiwieWoiLCJ6aiIsIkFqIiwiV2Vha1NldCIsIlgiLCJCaiIsIkNqIiwiRGoiLCJFaiIsIkdqIiwiSGoiLCJJaiIsIkpqIiwib25Db21taXRGaWJlclVubW91bnQiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsIktqIiwiTGoiLCJNaiIsIk5qIiwiT2oiLCJQaiIsIlFqIiwiaW5zZXJ0QmVmb3JlIiwiX3JlYWN0Um9vdENvbnRhaW5lciIsIlJqIiwiU2oiLCJUaiIsIlhqIiwiWWoiLCJaaiIsImFrIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJzcmMiLCJXaiIsIkxrIiwiYmsiLCJjZWlsIiwiY2siLCJkayIsImVrIiwiWSIsIloiLCJmayIsImdrIiwiaGsiLCJpayIsImprIiwiVmoiLCJJbmZpbml0eSIsImtrIiwibGsiLCJtayIsIm5rIiwib2siLCJwayIsInFrIiwicmsiLCJzayIsInRrIiwiY2FsbGJhY2tOb2RlIiwiZXhwaXJhdGlvblRpbWVzIiwiZXhwaXJlZExhbmVzIiwidGMiLCJjYWxsYmFja1ByaW9yaXR5IiwiY2ciLCJ1ayIsInZrIiwid2siLCJ4ayIsInlrIiwiemsiLCJBayIsIkJrIiwiQ2siLCJEayIsIkVrIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRMYW5lcyIsIkZrIiwidGltZW91dEhhbmRsZSIsIkdrIiwiSGsiLCJJayIsIkprIiwiS2siLCJtdXRhYmxlUmVhZExhbmVzIiwieGMiLCJGaiIsImRpc3BsYXkiLCJVaiIsIm9uQ29tbWl0RmliZXJSb290IiwiamMiLCJvblJlY292ZXJhYmxlRXJyb3IiLCJNayIsIm9uUG9zdENvbW1pdEZpYmVyUm9vdCIsIk5rIiwiT2siLCJRayIsImlzUmVhY3RDb21wb25lbnQiLCJwZW5kaW5nQ2hpbGRyZW4iLCJSayIsIm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGEiLCJTayIsImNhY2hlIiwidHJhbnNpdGlvbnMiLCJVayIsIlZrIiwiV2siLCJYayIsIllrIiwiWmsiLCJ3aiIsIlBrIiwiYWwiLCJyZXBvcnRFcnJvciIsImJsIiwiX2ludGVybmFsUm9vdCIsImNsIiwiZGwiLCJlbCIsImZsIiwiaGwiLCJnbCIsInVubW91bnQiLCJ1bnN0YWJsZV9zY2hlZHVsZUh5ZHJhdGlvbiIsInNwbGljZSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJKU09OIiwic3RyaW5naWZ5IiwiZm9ybSIsImlsIiwidXNpbmdDbGllbnRFbnRyeVBvaW50IiwiRXZlbnRzIiwiamwiLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsImJ1bmRsZVR5cGUiLCJ2ZXJzaW9uIiwicmVuZGVyZXJQYWNrYWdlTmFtZSIsImtsIiwicmVuZGVyZXJDb25maWciLCJvdmVycmlkZUhvb2tTdGF0ZSIsIm92ZXJyaWRlSG9va1N0YXRlRGVsZXRlUGF0aCIsIm92ZXJyaWRlSG9va1N0YXRlUmVuYW1lUGF0aCIsIm92ZXJyaWRlUHJvcHMiLCJvdmVycmlkZVByb3BzRGVsZXRlUGF0aCIsIm92ZXJyaWRlUHJvcHNSZW5hbWVQYXRoIiwic2V0RXJyb3JIYW5kbGVyIiwic2V0U3VzcGVuc2VIYW5kbGVyIiwic2NoZWR1bGVVcGRhdGUiLCJjdXJyZW50RGlzcGF0Y2hlclJlZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoIiwic2NoZWR1bGVSZWZyZXNoIiwic2NoZWR1bGVSb290Iiwic2V0UmVmcmVzaEhhbmRsZXIiLCJnZXRDdXJyZW50RmliZXIiLCJyZWNvbmNpbGVyVmVyc2lvbiIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsImxsIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJleHBvcnRzIiwiY3JlYXRlUG9ydGFsIiwiVGsiLCJjcmVhdGVSb290IiwidW5zdGFibGVfc3RyaWN0TW9kZSIsImZpbmRET01Ob2RlIiwiZmx1c2hTeW5jIiwiaHlkcmF0ZSIsImh5ZHJhdGVSb290IiwiaHlkcmF0ZWRTb3VyY2VzIiwiX2dldFZlcnNpb24iLCJfc291cmNlIiwidW5tb3VudENvbXBvbmVudEF0Tm9kZSIsInVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJjaGVja0RDRSIsImVyciIsIm1vZHVsZSIsIl9fc2VsZiIsIl9fc291cmNlIiwiRnJhZ21lbnQiLCJqc3giLCJqc3hzIiwic2V0U3RhdGUiLCJmb3JjZVVwZGF0ZSIsImVzY2FwZSIsIl9zdGF0dXMiLCJfcmVzdWx0IiwiZGVmYXVsdCIsIkNoaWxkcmVuIiwibWFwIiwiY291bnQiLCJ0b0FycmF5Iiwib25seSIsIlByb2ZpbGVyIiwiUHVyZUNvbXBvbmVudCIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsImNsb25lRWxlbWVudCIsImNyZWF0ZUNvbnRleHQiLCJfY3VycmVudFZhbHVlMiIsIl90aHJlYWRDb3VudCIsIlByb3ZpZGVyIiwiQ29uc3VtZXIiLCJfZGVmYXVsdFZhbHVlIiwiX2dsb2JhbE5hbWUiLCJjcmVhdGVGYWN0b3J5IiwiY3JlYXRlUmVmIiwiZm9yd2FyZFJlZiIsImlzVmFsaWRFbGVtZW50IiwibGF6eSIsIm1lbW8iLCJzdGFydFRyYW5zaXRpb24iLCJ1bnN0YWJsZV9hY3QiLCJwb3AiLCJzb3J0SW5kZXgiLCJwZXJmb3JtYW5jZSIsInNldEltbWVkaWF0ZSIsInN0YXJ0VGltZSIsImV4cGlyYXRpb25UaW1lIiwicHJpb3JpdHlMZXZlbCIsIm5hdmlnYXRvciIsInNjaGVkdWxpbmciLCJpc0lucHV0UGVuZGluZyIsIk1lc3NhZ2VDaGFubmVsIiwicG9ydDIiLCJwb3J0MSIsIm9ubWVzc2FnZSIsInBvc3RNZXNzYWdlIiwidW5zdGFibGVfUHJvZmlsaW5nIiwidW5zdGFibGVfY29udGludWVFeGVjdXRpb24iLCJ1bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZSIsImZsb29yIiwidW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGUiLCJ1bnN0YWJsZV9uZXh0IiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJ1bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkiLCJkZWxheSIsInVuc3RhYmxlX3dyYXBDYWxsYmFjayIsIkR5bmFtaWNMaWJMb2FkZXIiLCJsaWJyYXJ5Q2FjaGUiLCJsb2FkIiwicGF0aCIsIndpbmRvd0tleSIsInNjcmlwdEZldGNoZXIiLCJTY3JpcHRGZXRjaGVyIiwibGlicmFyeSIsIl9saWJyYXJ5UHJvbWlzZSIsInJlcyIsInJlaiIsImxpYnJhcnlSZXNvbHZlciIsImxpYnJhcnlSZWplY3RlciIsImZldGNoIiwiaW1wb3J0IiwibGliIiwibGliT2JqZWN0IiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwidW5kZWZpbmVkIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImRlZmluaXRpb24iLCJvIiwiY2h1bmtJZCIsImFsbCIsInJlZHVjZSIsInByb21pc2VzIiwibWluaUNzc0YiLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJvYmoiLCJwcm9wIiwic2NyaXB0IiwibmVlZEF0dGFjaCIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImkiLCJzIiwiZ2V0QXR0cmlidXRlIiwiY2hhcnNldCIsInRpbWVvdXQiLCJvblNjcmlwdENvbXBsZXRlIiwicHJldiIsIm9uZXJyb3IiLCJvbmxvYWQiLCJkb25lRm5zIiwiZm4iLCJoZWFkIiwidG9TdHJpbmdUYWciLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwiY3VycmVudFNjcmlwdCIsImluc3RhbGxlZENodW5rcyIsImoiLCJpbnN0YWxsZWRDaHVua0RhdGEiLCJwcm9taXNlIiwicmVqZWN0IiwiZXJyb3JUeXBlIiwicmVhbFNyYyIsInJlcXVlc3QiLCJ3ZWJwYWNrSnNvbnBDYWxsYmFjayIsInBhcmVudENodW5rTG9hZGluZ0Z1bmN0aW9uIiwiY2h1bmtJZHMiLCJtb3JlTW9kdWxlcyIsInJ1bnRpbWUiLCJzb21lIiwiY2h1bmtMb2FkaW5nR2xvYmFsIiwic2VsZiIsInN0YXR1c0VsZW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInJlcG9ydCIsInByZWZpeCIsIm1zZyIsImNsYXNzTmFtZSIsInF1ZXJ5U2VsZWN0b3IiLCJ3YXJuIiwicmVwb3J0Q29tcGxldGlvbiIsInJlcG9ydEJ1c3kiLCJjbGVhclNlbGVjdG9yIiwic2VsZWN0b3IiLCJvbkNvbm5lY3QiLCJzaG93Y2FzZSIsInNob3djYXNlRWxlbWVudCIsInNlbGVjdGVkVGFnIiwiY3VycmVudExvY2tzIiwibG9ja0JpbGxib2FyZCIsImxvY2tOYXZpZ2F0aW9uIiwiZ2V0TG9ja3MiLCJjdXJyZW50TG9jayIsImJpbGxib2FyZCIsIm5hdmlnYXRpb24iLCJvbkxvY2tzQ2hhbmdlIiwiTWF0dGVydGFnIiwicHJldmVudEFjdGlvbiIsIm9wZW5pbmciLCJuYXZpZ2F0aW5nIiwic2V0dXBNYXR0ZXJ0YWdQcmV2ZW50IiwidGl0bGUiLCJkZXNjIiwicG9zWCIsInBvc1kiLCJwb3NaIiwibm9ybVgiLCJub3JtWSIsIm5vcm1aIiwibWVkaWFUeXBlIiwibWVkaWFTcmMiLCJsYWJlbCIsImRlc2NyaXB0aW9uIiwiYW5jaG9yUG9zaXRpb24iLCJwYXJzZUZsb2F0Iiwic3RlbVZlY3RvciIsIm1lZGlhIiwiZWRpdFBvc2l0aW9uIiwicmVtb3ZlIiwidGFnTWVkaWF0eXBlU2VsZWN0b3JzIiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsImRlZmF1bHRPcHRpb24iLCJNZWRpYVR5cGUiLCJvcHRpb24iLCJ0YWdFZGl0VGl0bGUiLCJ0YWdFZGl0TWVkaWEiLCJ0YWdFZGl0RGVzYyIsInRhZ01lZGlhdHlwZVNlbGVjdG9yIiwiZWRpdEJpbGxib2FyZCIsInNlbGVjdGVkSW5kZXgiLCJpbm5lclRleHQiLCJlZGl0Q29sb3IiLCJzdGVtSGVpZ2h0RWx0Iiwic3RlbVZpc2libGVFbHQiLCJzdGVtSGVpZ2h0Iiwic3RlbVZpc2libGUiLCJlZGl0U3RlbSIsInRhZ0VkaXRPcGFjaXR5IiwiZWRpdE9wYWNpdHkiLCJ3aWRnZXRXIiwid2lkZ2V0SCIsIndpZGdldFNvdXJjZSIsImluamVjdEhUTUwiLCJnbG9iYWxWYXJpYWJsZU1hcCIsIm9uIiwib2ZmIiwic2VuZCIsInBtIiwiZ2VuQ29sb3IiLCJyZ2IiLCJuZXdDb2xvciIsIm5hdmlnYXRpb25UeXBlU2VsZWN0b3IiLCJmb3JjZU5hdmlnYXRpb24iLCJuYXZpZ2F0ZVRvVGFnIiwiVHJhbnNpdGlvbiIsImluZm8iLCJzZXR1cE1hdHRlcnRhZ0NvbnRyb2xzIiwic3dlZXBDb2xsZWN0aW9uIiwic3dlZXBTZWxlY3RvcnMiLCJjYW1lcmFQb3NlIiwiU3dlZXAiLCJzdWJzY3JpYmUiLCJvbkFkZGVkIiwiaXRlbSIsIm9uUmVtb3ZlZCIsIm9uQ29sbGVjdGlvblVwZGF0ZWQiLCJjb2xsZWN0aW9uIiwiaGFzQ2hpbGROb2RlcyIsInN3ZWVwSWQiLCJwb3NpdGlvblgiLCJwb3NpdGlvbloiLCJyb3RhdGlvblgiLCJyb3RhdGlvblkiLCJyb3RhdGlvblNwZWVkIiwiZmx5U3R5bGUiLCJzd2VlcFJvdGF0aW9uWCIsInN3ZWVwUm90YXRpb25ZIiwic3dlZXBUcmFuc2l0aW9uVGltZSIsInByZXZpZXciLCJ0YWdzIiwiTW9kZWwiLCJFdmVudCIsIk1PREVMX0xPQURFRCIsIm1vZGVsRGF0YSIsIk1vZGUiLCJDSEFOR0VfU1RBUlQiLCJvbGRNb2RlIiwibmV3TW9kZSIsIkNhbWVyYSIsIk1PVkUiLCJwb3NlIiwiQ0xJQ0siLCJ0YWdJZCIsImNsaWNrZWRUYWciLCJkaXNjV29ybGRQb3NpdGlvbiIsInNjcmVlblBvc2l0aW9uIiwiZ2V0RGlzY1Bvc2l0aW9uIiwiQ29udmVyc2lvbiIsIndvcmxkVG9TY3JlZW4iLCJjbGllbnRXaWR0aCIsImNsaWVudEhlaWdodCIsIm1vdmVJbkRpcmVjdGlvbiIsIkRpcmVjdGlvbiIsInBhbiIsImFuZ2xlIiwiZGlyZWN0aW9uIiwicm90YXRlSW5EaXJlY3Rpb24iLCJyb3RhdGUiLCJzcGVlZCIsInNldFJvdGF0aW9uIiwiVHJhbnNpdGlvblR5cGUiLCJtb3ZlVG8iLCJzd2VlcCIsInJvdGF0aW9uIiwidHJhbnNpdGlvblRpbWUiLCJSZW5kZXJlciIsInRha2VTY3JlZW5TaG90IiwibWF0dGVydGFncyIsInNzVXJsIiwidGFrZUVxdWlyZWN0YW5ndWxhciIsImN1cnJlbnRTd2VlcCIsInNpZCIsInRhZ1NlbGVjdG9ycyIsInRhZ1NlbGVjdG9yT3B0aW9uc01hcCIsImNyZWF0ZU9wdGlvbiIsIm5leHRDaGlsZCIsImxvY2FsZUNvbXBhcmUiLCJwYXJlbnRFbGVtZW50Iiwib25VcGRhdGVkIiwicG9wdWxhdGVNYXR0ZXJ0YWdTZWxlY3RvcnMiLCJsZXZlbCIsImRlbHRhIiwicG9pbnRlclN1YnNjcmlwdGlvbiIsInBvaW50ZXJPdXRwdXQiLCJjYW5jZWwiLCJQb2ludGVyIiwiaW50ZXJzZWN0aW9uIiwibW91c2UiLCJ0b0ZpeGVkIiwiem9vbUJ5IiwibmV3Wm9vbSIsInpvb21UbyIsInpvb21SZXNldCIsInN3ZWVwU2VsZWN0b3IiLCJjdXJyZW50RW5hYmxlbWVudE1hcCIsImVuYWJsZVN3ZWVwIiwib25FbmFibGVkQ2hhbmdlIiwiZW5hYmxlIiwiZGlzYWJsZSIsImN1cnJlbnRFbmFibGVtZW50IiwiZW5hYmxlZCIsImFkZFN3ZWVwVG9nZ2xlIiwib3ZlcmZsb3dZIiwiaGVhZGVyIiwic3BhY2VJZElucHV0Iiwic2V0VGV4dCIsInZpZXdzIiwic2RrIiwiQVBJIiwiZ2V0Vmlld3MiLCJodG1sRm9yIiwicmVhZE9ubHkiLCJpc1N1YnNjcmliZWQiLCJzdWIiLCJkb1N1YnNjcmlwdGlvbiIsImNoZWNrYm94Iiwib2JzZXJ2YWJsZSIsIm9uQ2hhbmdlZCIsIm5ld1ZhbHVlIiwicHJvcFZhbHVlIiwidmFsdWVzIiwic2VyaWFsaXplZCIsIm9uQ2hhbmdlIiwicm93cyIsInRleHRBcmVhIiwiZXZlbnRUeXBlSW5wdXQiLCJ2ZXJzaW9uSW5wdXQiLCJhbHdheXNUcmFjayIsInNldE1lc3NhZ2UiLCJqc29uIiwicGFyc2UiLCJBcHAiLCJ2YWx1ZUFzTnVtYmVyIiwicmVjb3JkcyIsInN0ZXAiLCJmZWF0dXJlcyIsInNldExvY2FsZSIsImdldExvY2FsZSIsIkxvY2FsZSIsImdldExhbmd1YWdlQ29kZSIsInRyYW5zbGF0aW9uIiwic2V0VHJhbnNsYXRpb24iLCJpbnB1dFZhbHVlIiwiZ2V0VCIsImVmZmVjdCIsImZpbHRlciIsInNvcnQiLCJvcHRpb25MYWJlbCIsImhvdmVyTGFiZWwiLCJhdmFpbGFibGVPcHRpb25zIiwic2V0QXZhaWxhYmxlT3B0aW9ucyIsInNldFNlbGVjdGVkIiwic2VsZWN0UmVmIiwib25TZWxlY3RlZENoYW5nZWQiLCJzdWJzY3JpcHRpb24iLCJpZHgiLCJzb3J0ZWRFbnRyaWVzIiwiZW50cmllcyIsIml0ZW0xIiwiaXRlbTIiLCJzZWxlY3RlZEl0ZW0iLCJzZWxlY3RJdGVtIiwib3V0cHV0IiwiYWRkaXRpb25hbFByb3BlcnRpZXMiLCJwcm9wZXJ0eVRyYW5zZm9ybXMiLCJ0cmFuc2Zvcm1SZWNvcmQiLCJ0cmFuc2Zvcm0iLCJzZXJpYWxpemVPdXRwdXQiLCJpZElucHV0Iiwic3JjSW5wdXQiLCJyZWdpc3RlciIsIkFzc2V0IiwicmVnaXN0ZXJUZXh0dXJlIiwib25SZWdpc3RlciIsImluaXRpYWxJY29ucyIsIkNocm9tZSIsIkZpcmVmb3giLCJFZGdlIiwiUmVkS2V5U1ZHIiwiUmVkUGluUE5HIiwiVVZHcmlkSlBHIiwib2JzZXJ2ZXJzIiwiYXNzZXRzIiwib2JzZXJ2ZXIiLCJ3YWl0VW50aWwiLCJjb25kaXRpb24iLCJhc3NldCIsInNldEFzc2V0cyIsImN1cnJlbnRBc3NldHMiLCJzZXRTZWxlY3RlZEFzc2V0IiwiS2V5cyIsIktleVN0YXRlIiwiUG9pbnRlckJ1dHRvbiIsIlBvaW50ZXJCdXR0b25NYXNrIiwieElucHV0RWxlbWVudCIsInlJbnB1dEVsZW1lbnQiLCJ6SW5wdXRFbGVtZW50IiwiZXhlY3V0ZSIsInBvc2VDYWxsYmFjayIsInNob3djYXNlU2l6ZSIsInJlc3VsdCIsInRydW5jIiwiY29tcHV0ZVZhbHVlIiwicGxhY2Vob2xkZXIiLCJjb2xTcGFuIiwib3BlcmF0b3IiLCJzZXRPcGVyYXRvciIsImZ1biIsInNldEZ1biIsIndJbnB1dEVsZW1lbnQiLCJiYXNpc0NoYW5nZUZ1bmN0aW9uIiwiVHJhbnNmb3JtVHlwZSIsInF1YXRlcm5pb24iLCJOdW1iZXIiLCJiYXNpc0NoYW5nZSIsInBvaW50IiwiaGFuZGxlU2V0RnVuIiwiUGhhc2UiLCJBcHBsaWNhdGlvbiIsIkZlYXR1cmUiLCJBdHRhY2htZW50Q2F0ZWdvcnkiLCJQYXJlbnRUeXBlIiwiQ29vcmRpbmF0ZXMiLCJTd2VlcFJvdGF0aW9uIiwiQ2FtZXJhUm90YXRpb24iLCJGbG9vciIsIkdyYXBoIiwiQVN0YXJTdGF0dXMiLCJMYWJlbCIsIkxpbmsiLCJDcmVhdGlvblBvbGljeSIsIk9wZW5Qb2xpY3kiLCJEZXN0aW5hdGlvblBvbGljeSIsIkxpbmtUeXBlIiwiRGVzY3JpcHRpb25DaHVua1R5cGUiLCJDb2xsaWRlcnMiLCJTZW5zb3IiLCJTZW5zb3JUeXBlIiwiU291cmNlVHlwZSIsIkFsaWdubWVudCIsIlBsYWNlbWVudCIsIlRhZyIsIkF0dGFjaG1lbnRUeXBlIiwiVG91ciIsIlBsYXlTdGF0ZSIsIlZpZXciLCJWaWV3VHlwZSIsIkxheWVyVHlwZSIsIlNjZW5lIiwiSW50ZXJhY3Rpb25UeXBlIiwiUGF0aFR5cGUiLCJQbHVnaW4iLCJWaXNpYmlsaXR5IiwiZmxvb3JzIiwic2V0Rmxvb3JzIiwic2RrRmxvb3JzIiwiZ2V0RGF0YSIsIm1vdmVDYW1lcmFPcHRpb25DaGFuZ2VkIiwic2V0TW92ZUNhbWVyYU9wdGlvbkNoYW5nZWQiLCJpbnB1dEVsZW1lbnQiLCJjaGVja2JveEVsZW1lbnQiLCJmbG9vckluZGV4IiwicGFyc2VJbnQiLCJuZXdGbG9vciIsInN1cHByZXNzQ2FtZXJhIiwidG9nZ2xlTW92ZUNhbWVyYU9wdGlvbiIsIm1vdmVDYW1lcmFEZXNjIiwic2hvd0FsbCIsImJvcmRlcldpZHRoIiwiYm9yZGVyU3R5bGUiLCJib3JkZXJDb2xvciIsIm1heFdpZHRoIiwicGFkZGluZyIsImJhY2tncm91bmRDb2xvciIsImV2ZW50TGlzdCIsInNldEV2ZW50TGlzdCIsImNsZWFyRXZlbnRMaXN0Iiwic3ViVG9Db2xsZWN0aW9uIiwiaGFuZGxlciIsIm5ld0V2ZW50IiwiY3VycmVudEV2ZW50cyIsIm9uQ2hlY2tib3hDaGFuZ2VkIiwibmV3QXJyYXkiLCJmbG9hdCIsInNob3ciLCJzdWJUb0V2ZW50IiwiY3JlYXRlRXZlbnRIYW5kbGVyIiwiZXZlbnRUeXBlIiwiYXJncyIsImFyZyIsImhhbmRsZXJzIiwiZXZlbnRzIiwiZXZUeXBlIiwibGFiZWxzIiwic2V0TGFiZWxzIiwiY3VycmVudExhYmVsU2lkIiwic2V0Q3VycmVudExhYmVsU2lkIiwic2RrTGFiZWxzIiwibGFiZWxPcHRpb25zIiwiZmluZEluZGV4IiwibGFiZWxJdGVtIiwib25TZWxlY3RlZCIsInZhbCIsImZsZXhEaXJlY3Rpb24iLCJzZXRMaW5rIiwibmV3TGluayIsImNyZWF0ZUxpbmsiLCJzZXRQb2xpY3kiLCJwb2xpY3kiLCJNQVRURVJQT1JUIiwiaW5jbHVkZVBhcmFtcyIsIlJFRkVSUkVSIiwidGVtcGxhdGVIcmVmIiwib3JpZ2luIiwicGF0aG5hbWUiLCJuZXdXaW5kb3dQb2xpY3kiLCJzZXRTaGFyZUxpbmtQb2xpY3kiLCJjcmVhdGVEZWVwTGluayIsInNldE1vZGVsTGlua1BvbGljeSIsInNldE5hdmlnYXRpb25MaW5rUG9saWN5Iiwic2V0U2FtZU9yaWdpbkxpbmtQb2xpY3kiLCJzZXRFeHRlcm5hbExpbmtQb2xpY3kiLCJlZGl0SWNvbiIsInNlbGVjdGVkTWF0dGVydGFnIiwic2VsZWN0ZWRBc3NldCIsInJlc2V0SWNvbiIsInJlZ2lzdGVySWNvbiIsImFkZEFzc2V0Iiwic2VsZWN0TWF0dGVydGFnIiwibWF0dGVydGFnT3B0aW9uTGFiZWwiLCJtYXR0ZXJ0YWdPcHRpb25Tb3J0IiwibWVhc3VyZW1lbnRzRGF0YSIsIk1lYXN1cmVtZW50cyIsImFjdGl2ZSIsInNldEFjdGl2ZSIsInRvZ2dsZU1vZGUiLCJtb2RlbERldGFpbHMiLCJnZXREZXRhaWxzIiwidXJsSW5wdXRFbGVtZW50IiwiYXBwS2V5SW5wdXRFbGVtZW50IiwicGx1Z2luSWRJbnB1dEVsZW1lbnQiLCJsb2FkUGx1Z2luIiwiYXBwbGljYXRpb25LZXkiLCJwbHVnaW5JZCIsInBsdWdpbiIsIlVSTCIsInVubG9hZFBsdWdpbiIsInVubG9hZCIsImVkaXRUZXh0dXJlIiwicmVzZXRUZXh0dXJlIiwiZ2V0U2NyZWVuUG9zaXRpb24iLCJnZXRXb3JsZFBvc2l0aW9uRGF0YSIsIlJvb20iLCJpbnB1dFJlZiIsInNjZW5lT2JqZWN0SW5mbyIsInNldFNjZW5lT2JqZWN0SW5mbyIsImNsZWFyU2NlbmUiLCJvYmplY3QiLCJzdG9wIiwib2JqZWN0cyIsInByb2Nlc3NUZXh0RnJvbUZpbGVMb2FkZWQiLCJ0ZXh0RnJvbUZpbGVMb2FkZWQiLCJkZXNlcmlhbGl6ZWQiLCJkZXNlcmlhbGl6ZSIsInBhdGhzIiwibmV3UGF0aHMiLCJmaWxlcyIsImZpbGVSZWFkZXIiLCJGaWxlUmVhZGVyIiwiZmlsZUxvYWRlZEV2ZW50IiwicmVhZEFzVGV4dCIsImNsZWFyQ2FsbGJhY2siLCJhY2NlcHQiLCJpbnB1dFBhdGhzIiwicGF0aEl0ZXJhdG9yIiwiSU5QVVQiLCJyZW5kZXJQYXRocyIsImdldFNldHRpbmciLCJuZXdLZXkiLCJTZXR0aW5ncyIsImtleUlucHV0RWxlbWVudCIsInZhbHVlSW5wdXRFbGVtZW50IiwidXBkYXRlU2V0dGluZyIsInVwZGF0ZSIsInN3ZWVwSW5wdXRFbGVtZW50IiwidXBkYXRlU3dlZXAiLCJsYWJlbE1hcCIsInNldExhYmVsTWFwIiwiYWxsU3dlZXBzIiwic2V0QWxsU3dlZXBzIiwiYWxsU3dlZXBJZHMiLCJzZXRBbGxTd2VlcElkcyIsImFjdGl2ZVN3ZWVwTmVpZ2hib3JzIiwic2V0QWN0aXZlU3dlZXBOZWlnaGJvcnMiLCJjdXJyZW50U3dlZXBJZCIsInNldEN1cnJlbnRTd2VlcElkIiwiYWN0aXZlU3dlZXBJZCIsInNldEFjdGl2ZVN3ZWVwSWQiLCJpbml0aWFsaXplZCIsImFjdGl2ZVN3ZWVwSWRSZWYiLCJhY3RpdmF0ZVN3ZWVwIiwibmVpZ2hib3JzIiwibWFwSWRzVG9MYWJlbHMiLCJuZXdMYWJlbE1hcCIsImdldExhYmVsRnJvbUlkIiwic3VicyIsInBoYXNlIiwiUExBWUlORyIsImNyZWF0ZUlkTWFwIiwic3dlZXBEYXRhIiwiaWREaWN0IiwiYWxsU3dlZXBEaWN0IiwibmV3QWxsU3dlZXBJZHMiLCJhY3RpdmVJZCIsInVwZGF0ZUFsbFN3ZWVwc0RpY3QiLCJydW5Vc2VFZmZlY3QiLCJhbGxTd2VlcE9wdGlvbnMiLCJyZW1vdmVJZCIsInJlbW92ZU5laWdoYm9ycyIsImFkZElkIiwiYWRkTmVpZ2hib3JzIiwicGF0aERpcnR5Iiwic2V0UGF0aERpcnR5IiwiZ3JhcGgiLCJwYXRoRW5kUG9pbnRzIiwiYVN0YXJTdWIiLCJydW5uZXIiLCJvblN0YXJ0Q2hhbmdlZCIsInVwZGF0ZVBhdGgiLCJvbkVuZENoYW5nZWQiLCJ2ZXJ0ZXgiLCJjcmVhdGVBU3RhclJ1bm5lciIsImNyZWF0ZUdyYXBoIiwic3dlZXBHcmFwaCIsInJlc3VsdFJlZiIsInJlY2FsY1BhdGgiLCJleGVjIiwic3RhdHVzIiwiU1VDQ0VTUyIsIndoaXRlU3BhY2UiLCJzZWxlY3RlZExheWVyIiwidXNlTGF5ZXIiLCJzZXRVc2VMYXllciIsIm9uQ2hlY2tDaGFuZ2VkIiwibGFiZWxJbnB1dCIsImRlc2NJbnB1dCIsInhJbnB1dCIsInlJbnB1dCIsInpJbnB1dCIsInhOb3JtSW5wdXQiLCJ5Tm9ybUlucHV0Iiwiek5vcm1JbnB1dCIsIm9wYWNpdHlJbnB1dCIsInN1Ym1pdEljb24iLCJhZGRUYWciLCJpY29uSWQiLCJhbGxvd0RvY2tpbmciLCJhbGxvd09wZW5pbmciLCJhbGxvd05hdmlnYXRpb24iLCJhbGxvd1NoYXJpbmciLCJhbGxvd2VkQWN0aW9ucyIsInNldEFsbG93ZWRBY3Rpb25zIiwiYWxsb3dBY3Rpb25zIiwiYWxsb3dBY3Rpb24iLCJkb2NraW5nIiwic2hhcmluZyIsImNoYW5nZUFsbG93ZWRBY3Rpb25zIiwiY3VycmVudEFjdGlvbnMiLCJzZWxlY3RlZFRhZ0FjdGlvbnMiLCJzZWxlY3RlZEF0dGFjaG1lbnQiLCJhdHRhY2giLCJkZXRhY2giLCJ0aXRsZUlucHV0IiwiZWRpdFRhZyIsImVuYWJsZWRJbnB1dCIsImVkaXRFbmFibGVkIiwicklucHV0IiwiZ0lucHV0IiwiYklucHV0IiwibWF4Iiwic3VibWl0SGVpZ2h0Iiwic2V0U3VibWl0SGVpZ2h0Iiwic3VibWl0VmlzaWJpbGl0eSIsInNldFN1Ym1pdFZpc2liaWxpdHkiLCJoZWlnaHRJbnB1dCIsInZpc2libGVJbnB1dCIsInN1Ym1pdEhlaWdodENoYW5nZWQiLCJzdWJtaXRWaXNpYmlsaXR5Q2hhbmdlZCIsInVzZVNlbGVjdGVkQXNzZXQiLCJzZXRVc2VTZWxlY3RlZEFzc2V0Iiwic2VsZWN0ZWRUYWdLZXl3b3JkcyIsImtleXdvcmRJbnB1dCIsImFkZEtleXdvcmQiLCJrZXl3b3JkcyIsInJlbW92ZUtleXdvcmQiLCJzdWJtaXRQb3MiLCJzZXRTdWJtaXRQb3MiLCJzdWJtaXROb3JtIiwic2V0U3VibWl0Tm9ybSIsInN1Ym1pdFBvc0NoYW5nZWQiLCJzdWJtaXROb3JtQ2hhbmdlZCIsIm1vdmVUYWciLCJmb3JjZU9wZW4iLCJmb3JjZURvY2siLCJvcGVuIiwiZm9yY2UiLCJkb2NrIiwiY2xvc2UiLCJtYXJnaW5MZWZ0IiwicmVnaXN0ZXJBdHRhY2htZW50IiwiaHRtbElucHV0IiwibmFtZUlucHV0Iiwid0lucHV0IiwiaElucHV0IiwicmVnaXN0ZXJTYW5kYm94IiwicmVtb3ZlVGFnIiwidG9nZ2xlU2V0dGluZyIsInRvZ2dsZSIsImhpZGUiLCJpbXBvcnRUYWdzIiwiaXNPcGVuIiwib25DbG9zZSIsInNlbGVjdGVkVGFncyIsInNldFNlbGVjdGVkVGFncyIsImNvbmZpcm1CdXR0b25UZXh0Iiwib25Db25maXJtIiwidG9nZ2xlVGFnIiwicHJldlNlbGVjdGVkIiwidGFnc1RvVXBkYXRlIiwic2V0VGFnc1RvVXBkYXRlIiwidGFnc1RvSWdub3JlIiwic2V0VGFnc1RvSWdub3JlIiwicHJvZ3Jlc3MiLCJzZXRUYWdzIiwidHJhbnNpZW50VGFncyIsImlzVXBkYXRlTW9kYWxPcGVuIiwic2V0SXNVcGRhdGVNb2RhbE9wZW4iLCJpc0lnbm9yZU1vZGFsT3BlbiIsInNldElzSWdub3JlTW9kYWxPcGVuIiwic2hvd1Byb2dyZXNzIiwic2V0U2hvd1Byb2dyZXNzIiwiaW5pdGlhbFRhZ3MiLCJ0YWdWYWx1ZXMiLCJnZXRUYWdzIiwidGFnU3ViIiwidGFnU2lkIiwic2F2ZVRvTGF5ZXIiLCJudW1JY29ucyIsInJhbmRvbUljb24iLCJ1cGRhdGVkVGFncyIsImlnbm9yZWRUYWdzIiwicGVyY2VudENvbXBsZXRlIiwidXBkYXRlVGFnc1N0cmluZyIsImlnbm9yZVRhZ3NTdHJpbmciLCJtYXJnaW5SaWdodCIsInNlbGVjdFRhZyIsInNldFNlbGVjdGVkVGFnS2V5d29yZHMiLCJzZWxlY3RBdHRhY2htZW50IiwidGFnT3B0aW9uTGFiZWwiLCJhdHRhY2htZW50SG92ZXJMYWJlbCIsImF0dGFjaG1lbnRPcHRpb25MYWJlbCIsImF0dGFjaG1lbnRzIiwib3BlblRhZ3MiLCJ0b2dnbGVEb2NraW5nIiwidG9nZ2xlTmF2Q29udHJvbHMiLCJ0b2dnbGVTaGFyaW5nIiwidG91clNuYXBzaG90cyIsInNldFRvdXJTbmFwc2hvdHMiLCJzZGtUb3VyU25hcHNob3RzIiwic2VsZWN0ZWRTdGVwIiwic2V0U2VsZWN0ZWRTdGVwIiwidG91ckxlbmd0aCIsInNldFRvdXJMZW5ndGgiLCJ0b3VyRGF0YSIsInN0YXJ0VG91ciIsInN0b3BUb3VyIiwicHJldlRvdXIiLCJuZXh0VG91ciIsInN0ZXBUb3VyIiwiZnJvbSIsIl8iLCJjdXJyZW50U3RlcCIsIm5hbWVJbnB1dFJlZiIsImNvbW1vbklucHV0UmVmIiwiY3JlYXRlRGlzYWJsZWQiLCJzZXRDcmVhdGVEaXNhYmxlZCIsImlucHV0Q2hhbmdlZCIsImNyZWF0ZUxheWVyIiwibGF5ZXIiLCJjb21tb24iLCJvbklucHV0IiwiZGVsZXRlTGF5ZXIiLCJzZWxlY3RlZFZpZXciLCJyZXR1cm5Ub1N0YXJ0IiwiYWN0aXZhdGVWaWV3IiwidG9nZ2xlTGF5ZXIiLCJhY3RpdmF0ZSIsImFkZExheWVyIiwicmVtb3ZlTGF5ZXIiLCJoYXNMYXllciIsInNlbGVjdExheWVyIiwic2VsZWN0VmlldyIsImxheWVycyIsInNlbGVjdEFzc2V0IiwiUGFyYW1LZXlzIiwiY29uZmlnS2V5IiwicGFyYW1LZXkiLCJNT0RFTCIsIkFQUExJQ0FUSU9OX0tFWSIsIkFQSV9IT1NUIiwiQ09OTkVDVF9ERUxBWSIsIlBST1ZJREVSIiwiVkVSU0lPTiIsIkxPQURfQlVORExFIiwiRElSRUNUX01FU1NBR0UiLCJCT09UU1RSQVBfVkVSU0lPTiIsIkxPQURfV09SS1NIT1AiLCJjb25maWciLCJzaG93Y2FzZVVybCIsImxvYWRCdW5kbGUiLCJidW5kbGVWZXJzaW9uT3JQYXRoIiwiaXNGdWxsUGF0aCIsInN0YXJ0c1dpdGgiLCJwbGF5ZXJQYXRoIiwid29ya3Nob3AiLCJhcGlIb3N0Iiwic2VhcmNoUGFyYW1zIiwibW9kZWwiLCJkZWNvZGVVUklDb21wb25lbnQiLCJvbkNvbmZpZ0NoYW5nZSIsIm92ZXJsYXlSZWYiLCJzaG93UGFuZWwiLCJzZXRTaG93UGFuZWwiLCJtb2RpZmllZFZhbHVlIiwiY29uZmlnU3RhdGUiLCJzZXRDb25maWciLCJmcm9tRW50cmllcyIsImhpZGVTZXR0aW5ncyIsInRvZ2dsZVNldHRpbmdzUGFuZWwiLCJ1cGRhdGVDb25maWciLCJhcHBseUNvbmZpZyIsImVxdWFsIiwiZW50cnkiLCJjb25maWdFbnRyeSIsInBhcmFtcyIsInN1cHBvcnRlZFBhcmFtIiwiZmluZCIsInJlc2V0Q29uZmlnIiwic2V0dGluZ3NPdmVybGF5U3R5bGUiLCJwb2ludGVyRXZlbnRzIiwicG9zaXRpb24iLCJyaWdodCIsImZvbnRTaXplIiwidGV4dEFsaWduIiwiYnV0dG9uU3R5bGUiLCJtYXJnaW4iLCJtb2RpZmllZElucHV0U3R5bGUiLCJvdXRsaW5lIiwiYm9yZGVyIiwiY3VycmVudFZhbHVlIiwiZGlzcGxheWVkVmFsdWUiLCJpbnB1dFN0eWxlIiwiVVJMU2VhcmNoUGFyYW1zIiwiY29ubmVjdGlvbkRlbGF5IiwicHJvdmlkZXIiLCJ1c2VEaXJlY3RNZXNzYWdlcyIsImJvb3RzdHJhcFZlcnNpb24iLCJzaG93Y2FzZVdpbmRvdyIsImJ1bmRsZUNvbm5lY3RvciIsIk1QX1NESyIsImNvbm5lY3QiLCJib290c3RyYXAiLCJtcFNkayIsImJ1aWxkQm9vdHN0cmFwUGF0aCIsInNob3djYXNlU2RrIiwiU0RLX0lOU1RBTkNFIiwiVEhSRUUiLCJlcnJvck1lc3NhZ2UiLCJzdGF0dXNCYXIiLCJjbGFzc0xpc3QiLCJoYXNoUGFyYW1zIiwiaGFzaCIsIm5ld0hhc2hQYXJhbXMiLCJwYXJlbnQiLCJzZXR0aW5nc0NvbnRhaW5lciIsImNvbnRhaW5lciIsInJvb3QiLCJuZXdDb25maWciLCJrZXlzVG9EZWxldGUiLCJwYXJhbURlc2NyaXB0b3IiLCJkZXNjcmlwdG9yIiwidG9EZWxldGUiLCJjdXJyZW50SGFzaFBhcmFtcyIsIndpZHRoQ29udHJvbCIsImhlaWdodENvbnRyb2wiLCJmaWx0ZXJFbGVtZW50IiwiaW5pdGlhbFdpZHRoIiwiaW5pdGlhbEhlaWdodCIsImZpbHRlckNvbnRyb2xzIiwiZWx0cyIsImVsdCIsIlJlZ0V4cCIsInNka0NvbnRyb2xzIiwiTXV0YXRpb25PYnNlcnZlciIsIm9ic2VydmUiLCJjaGlsZExpc3QiLCJzdWJ0cmVlIiwiaW5pdGlhbEZpbHRlciJdLCJzb3VyY2VSb290IjoiIn0=